    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c038_1.json out/1599249770/results/c038_1_best.csv out/1599249770/results/c038_1_predictions.csv out/1599249770/results/c038_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c038,0,1,1,985568,985570,910330,600.000526224,603.053513307
c038,0,1,2,231395,233325,227238,1200.0017974060002,1203.718382461
c038,0,1,3,159565,160752,158961,1800.0034746830001,1804.213677994
c038,0,1,4,128679,129496,128234,2400.0070861410004,2404.571559493
c038,0,1,5,93616,94414,93325,3000.0120402630005,3004.871010258
c038,0,1,6,56807,57499,57001,3600.0165849420005,3605.191776234
c038,0,1,7,41838,42608,42303,4200.028928366,4205.581804544
c038,0,1,8,38495,39231,38993,4800.044115953,4805.894415736
c038,0,1,9,32281,32971,32739,5400.059063796,5406.174914566
c038,0,1,10,24308,25006,24852,6000.095119840001,6006.498315404
c038,0,1,11,19813,20414,20235,6600.095861308001,6606.729579784
# search time: 6600.096s
# total time: 6607.147s
c038,1,1,1,1036265,1036267,934277,600.000419056,600.558135653
c038,1,1,2,269650,271533,264531,1200.000978524,1200.899587468
c038,1,1,3,182950,184124,182235,1800.002998964,1801.140421491
c038,1,1,4,144604,145344,144285,2400.008708795,2401.355963219
c038,1,1,5,105281,105977,105026,3000.012908756,3001.546969637
c038,1,1,6,60597,61278,60776,3600.014165276,3601.710952335
c038,1,1,7,48251,48902,48511,4200.016250638,4201.921175293
c038,1,1,8,44308,44943,44668,4800.021859813,4802.053916568
c038,1,1,9,36599,37431,37164,5400.025014566,5402.192916851
c038,1,1,10,27007,27750,27603,6000.033085458001,6002.320732608
c038,1,1,11,21203,21875,21724,6600.042031569001,6602.470598142
# search time: 6600.042s
# total time: 13210.099s
c038,2,1,1,1044855,1044857,988970,600.004893132,600.493844481
c038,2,1,2,268678,270668,263421,1200.005664005,1200.741094921
c038,2,1,3,172563,173708,171929,1800.007384253,1800.949986277
c038,2,1,4,140709,141469,140425,2400.008654204,2401.110036135
c038,2,1,5,104450,105247,104300,3000.012785258,3001.250537859
c038,2,1,6,61618,62332,61809,3600.024373254,3601.377690602
c038,2,1,7,48787,49431,48999,4200.026872468,4201.523911101
c038,2,1,8,44935,45623,45341,4800.034981582,4801.632388578
c038,2,1,9,37214,37944,37736,5400.038423603,5401.724540191
c038,2,1,10,27839,28602,28420,6000.040677704001,6001.846531209
c038,2,1,11,21769,22520,22353,6600.044239866001,6601.960446989
# search time: 6600.044s
# total time: 19812.577s
c038,3,1,1,1059874,1059876,974120,600.000217112,600.403230159
c038,3,1,2,267175,268158,261013,1200.000518938,1200.600207199
c038,3,1,3,177667,178864,176930,1800.001525166,1800.754014034
c038,3,1,4,141478,142186,141250,2400.003541239,2400.895484934
c038,3,1,5,103773,104538,103537,3000.006582573,3001.009162822
c038,3,1,6,61849,62574,62081,3600.013389613,3601.137143889
c038,3,1,7,49032,49693,49326,4200.014008157,4201.259789895
c038,3,1,8,45290,45937,45649,4800.032029424,4801.350616088
c038,3,1,9,37616,38357,38097,5400.049747763,5401.459848678
c038,3,1,10,27065,27795,27668,6000.066853281,6001.544042141
c038,3,1,11,21629,22340,22174,6600.0721486639995,6601.653741554
# search time: 6600.072s
# total time: 26414.736s
c038,4,1,1,1048890,1048892,967307,600.000232178,600.375824992
c038,4,1,2,272722,273701,266154,1200.003517998,1200.537644892
c038,4,1,3,185084,186187,183951,1800.0042883410001,1800.656726178
c038,4,1,4,150708,151495,150010,2400.015083737,2400.776873546
c038,4,1,5,109402,110183,108829,3000.016522416,3000.880376583
c038,4,1,6,65801,66570,65903,3600.020803273,3600.968937863
c038,4,1,7,49074,49785,49442,4200.022907939,4201.053865082
c038,4,1,8,44976,45659,45357,4800.028520208,4801.124304317
c038,4,1,9,36506,37234,36954,5400.030609638,5401.194519184
c038,4,1,10,27632,28346,28158,6000.043023113,6001.270839308
c038,4,1,11,22063,22563,22399,6600.0438452,6601.344638846
# search time: 6600.044s
# total time: 33016.740s
