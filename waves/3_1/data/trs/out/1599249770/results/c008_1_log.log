    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.56s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c008_1.json out/1599249770/results/c008_1_best.csv out/1599249770/results/c008_1_predictions.csv out/1599249770/results/c008_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 3, 9, 8, 1, 6, 7]), o: IntList([1, 3, 9, 8, 1, 6]) }
#   Datum { i: IntList([9, 2, 2, 6, 9, 9, 2, 9]), o: IntList([9, 2, 2, 6, 9, 9]) }
#   Datum { i: IntList([3, 7, 7, 0, 3, 8, 5]), o: IntList([3, 7, 7, 0, 3, 8]) }
#   Datum { i: IntList([0, 4, 4, 0, 9, 0, 4]), o: IntList([0, 4, 4, 0, 9, 0]) }
#   Datum { i: IntList([4, 0, 5, 6, 5, 0, 5]), o: IntList([4, 0, 5, 6, 5, 0]) }
#   Datum { i: IntList([4, 4, 5, 8, 3, 5, 0, 0, 0]), o: IntList([4, 4, 5, 8, 3, 5]) }
#   Datum { i: IntList([9, 0, 9, 0, 0, 9, 0]), o: IntList([9, 0, 9, 0, 0, 9]) }
#   Datum { i: IntList([3, 5, 5, 8, 9, 6, 4, 0]), o: IntList([3, 5, 5, 8, 9, 6]) }
#   Datum { i: IntList([8, 7, 9, 0, 1, 9, 3, 4, 6]), o: IntList([8, 7, 9, 0, 1, 9]) }
#   Datum { i: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([0, 7, 0, 2, 3, 6, 7, 9]), o: IntList([0, 7, 0, 2, 3, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c008,0,1,1,899551,899553,849398,600.000247944,603.224956812
c008,0,1,2,170313,172268,167152,1200.0008522580001,1203.978862571
c008,0,1,3,96539,97555,93978,1800.0089263610002,1804.47799675
c008,0,1,4,65827,66884,65201,2400.009086548,2405.018889344
c008,0,1,5,57252,57954,56197,3000.012759218,3005.519393435
c008,0,1,6,50269,51005,49492,3600.013505883,3606.024024601
c008,0,1,7,35845,36633,35673,4200.028615398,4206.919822227
c008,0,1,8,31469,32238,31361,4800.048014737,4807.772465228
c008,0,1,9,27937,28684,27873,5400.0628290469995,5408.775851386
c008,0,1,10,24255,24932,24186,6000.091154397,6009.627349114
c008,0,1,11,21089,21714,21072,6600.100818540999,6610.656809581
# search time: 6600.101s
# total time: 6610.886s
c008,1,1,1,843475,843477,780962,600.000039541,600.390569345
c008,1,1,2,166761,167657,162564,1200.003169371,1200.755194587
c008,1,1,3,93427,94419,90737,1800.0040974429999,1800.970042256
c008,1,1,4,65680,66634,65010,2400.015800456,2401.248571168
c008,1,1,5,59479,60243,58558,3000.035432635,3001.581168189
c008,1,1,6,48039,48912,47179,3600.0624671759997,3601.8599886
c008,1,1,7,35648,36405,35486,4200.070876092999,4202.237340425
c008,1,1,8,31165,31913,31124,4800.071599800999,4802.71311637
c008,1,1,9,27423,28157,27437,5400.081356605999,5403.20658262
c008,1,1,10,24554,25249,24536,6000.089213135999,6003.662818402
c008,1,1,11,21666,22281,21576,6600.105534435998,6604.335358616
# search time: 6600.106s
# total time: 13215.526s
c008,2,1,1,830771,830773,788991,600.000385244,600.311730906
c008,2,1,2,171867,173891,168905,1200.0055345790001,1200.520846642
c008,2,1,3,94112,95165,91798,1800.006306077,1800.686717818
c008,2,1,4,64201,65176,63562,2400.006390979,2400.877803694
c008,2,1,5,57076,57851,55869,3000.015954887,3001.05894797
c008,2,1,6,48361,49101,47770,3600.028056118,3601.253481667
c008,2,1,7,36140,36987,36054,4200.028991964,4201.514875024
c008,2,1,8,30864,31498,30610,4800.032284304,4801.81443814
c008,2,1,9,26957,27659,26862,5400.050492518,5402.187052702
c008,2,1,10,23857,24630,23864,6000.074209992001,6002.454522615
c008,2,1,11,21565,22175,21493,6600.106771458,6602.844755292
# search time: 6600.107s
# total time: 19818.671s
c008,3,1,1,816183,816185,763396,600.000003101,600.234627298
c008,3,1,2,170482,171289,166135,1200.0051352629998,1200.402069464
c008,3,1,3,93627,94576,91017,1800.0184004109997,1800.546792792
c008,3,1,4,65446,66420,64729,2400.0313290709996,2400.711343298
c008,3,1,5,55764,56466,54812,3000.040541479,3000.862840968
c008,3,1,6,45734,46666,44280,3600.0417698789997,3601.039893122
c008,3,1,7,36308,37054,36058,4200.05618987,4201.312368647
c008,3,1,8,30857,31542,30622,4800.079130566,4801.531250029
c008,3,1,9,27414,28137,27316,5400.099795906999,5401.843630303
c008,3,1,10,23295,24021,23284,6000.119153136999,6002.10962978
c008,3,1,11,20382,20768,20256,6600.135940742999,6602.364016943
# search time: 6600.136s
# total time: 26421.328s
c008,4,1,1,846318,846320,778054,600.002489657,600.21880017
c008,4,1,2,171813,174059,169076,1200.006218931,1200.356099283
c008,4,1,3,94024,94920,91697,1800.007554783,1800.465546478
c008,4,1,4,59319,60221,59097,2400.0101787959998,2400.609622156
c008,4,1,5,56682,57356,54237,3000.0123704629996,3000.738080036
c008,4,1,6,47103,47850,46542,3600.021464398,3600.862112903
c008,4,1,7,34901,35675,34846,4200.028447039,4201.007913238
c008,4,1,8,30451,31176,30336,4800.045947566,4801.222320809
c008,4,1,9,28116,28799,27954,5400.0592722559995,5401.460786282
c008,4,1,10,23640,24378,23600,6000.092982827,6001.736812449
c008,4,1,11,21004,21642,21029,6600.093495163,6601.938058782
# search time: 6600.093s
# total time: 33023.536s
