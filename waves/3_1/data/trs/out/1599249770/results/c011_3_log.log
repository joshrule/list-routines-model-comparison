    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.58s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c011_3.json out/1599249770/results/c011_3_best.csv out/1599249770/results/c011_3_predictions.csv out/1599249770/results/c011_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 1, 3, 0, 4, 9]), o: IntList([1, 3, 0]) }
#   Datum { i: IntList([7, 2, 4, 2, 4, 7, 2, 2, 4]), o: IntList([2, 4, 2]) }
#   Datum { i: IntList([6, 8, 6, 9, 9, 8, 8, 6]), o: IntList([8, 6, 9]) }
#   Datum { i: IntList([1, 1, 4, 0, 3, 1, 3, 5, 0]), o: IntList([1, 4, 0]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 8, 7, 3, 7]), o: IntList([8, 5, 8]) }
#   Datum { i: IntList([1, 9, 3, 0, 2, 8, 5]), o: IntList([9, 3, 0]) }
#   Datum { i: IntList([5, 1, 1, 8, 1, 6, 7, 2, 7]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([0, 0, 3, 3, 7]), o: IntList([0, 3, 3]) }
#   Datum { i: IntList([9, 2, 6, 4, 6, 2, 0]), o: IntList([2, 6, 4]) }
#   Datum { i: IntList([3, 3, 6, 0]), o: IntList([3, 6, 0]) }
#   Datum { i: IntList([5, 7, 5, 9, 7, 6, 8, 5, 6, 8]), o: IntList([7, 5, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c011,0,3,1,927349,927351,872871,600.002003108,603.182669439
c011,0,3,2,257895,259514,252000,1200.012817063,1203.924346321
c011,0,3,3,131391,132435,128728,1800.0147340180001,1804.41155549
c011,0,3,4,88760,89569,86744,2400.0185355390004,2405.192937524
c011,0,3,5,69293,70203,67831,3000.0326980470004,3005.96873559
c011,0,3,6,56661,57589,55619,3600.04088097,3606.72786802
c011,0,3,7,49349,50212,48140,4200.045339485,4207.73871431
c011,0,3,8,35365,36274,34516,4800.053555626,4808.695625796
c011,0,3,9,38092,38745,37042,5400.071078993,5409.92114851
c011,0,3,10,36191,36917,34843,6000.091207732,6010.713974928
c011,0,3,11,32025,32705,31090,6600.103198821,6611.717908823
# search time: 6600.103s
# total time: 6611.864s
c011,1,3,1,858725,858727,793487,600.000252562,600.57347076
c011,1,3,2,249361,251770,244664,1200.002136645,1200.887418272
c011,1,3,3,130938,131966,128246,1800.0057076570001,1801.117211669
c011,1,3,4,85995,86827,84157,2400.006488864,2401.450662444
c011,1,3,5,68845,69850,67707,3000.010457496,3001.861475234
c011,1,3,6,57156,58086,56323,3600.013044504,3602.31111682
c011,1,3,7,48714,49507,47477,4200.020106924,4202.920551538
c011,1,3,8,36806,37622,35921,4800.022156271,4803.221839242
c011,1,3,9,41021,41828,40006,5400.023332603,5403.722228615
c011,1,3,10,37053,37845,35693,6000.042658703,6004.077240525
c011,1,3,11,31329,32066,30549,6600.064752433,6604.595422077
# search time: 6600.065s
# total time: 13216.756s
c011,2,3,1,863874,863876,815461,600.003010265,600.276089736
c011,2,3,2,252855,253615,246224,1200.003713343,1200.544425939
c011,2,3,3,131733,132715,128972,1800.003894683,1800.708463335
c011,2,3,4,83208,83990,81382,2400.007314644,2400.956786226
c011,2,3,5,67557,68364,65917,3000.016420505,3001.293322466
c011,2,3,6,55665,56587,54826,3600.020048893,3601.591059895
c011,2,3,7,47571,48363,46363,4200.029545281,4201.911219794
c011,2,3,8,35826,36619,34898,4800.039433610999,4802.140353694
c011,2,3,9,39519,40266,38432,5400.040646451,5402.594095884
c011,2,3,10,35174,35943,33933,6000.047797067999,6002.880171148
c011,2,3,11,32105,32757,31215,6600.060994689,6603.152510818
# search time: 6600.061s
# total time: 19820.282s
c011,3,3,1,882570,882572,822129,600.000382703,600.250915275
c011,3,3,2,246524,248870,241645,1200.004563098,1200.435368413
c011,3,3,3,132309,133317,129263,1800.010985161,1800.60959382
c011,3,3,4,84610,85381,82669,2400.012866964,2400.792129253
c011,3,3,5,67498,68454,66171,3000.014692238,3001.012113986
c011,3,3,6,55450,56381,54589,3600.015435903,3601.200768889
c011,3,3,7,46873,47640,45692,4200.02430071,4201.515368474
c011,3,3,8,36213,36971,35241,4800.037217693,4801.677415305
c011,3,3,9,38418,39088,37288,5400.051250687,5401.997766738
c011,3,3,10,34806,35573,33632,6000.058422189,6002.285702498
c011,3,3,11,32373,33052,31379,6600.062493994001,6602.504107712
# search time: 6600.062s
# total time: 26423.149s
c011,4,3,1,875272,875274,813912,600.001630123,600.226155945
c011,4,3,2,247577,249744,242226,1200.00208617,1200.390040223
c011,4,3,3,130311,131315,127371,1800.003070984,1800.503715734
c011,4,3,4,85488,86259,83749,2400.005469492,2400.674923076
c011,4,3,5,68671,69590,67446,3000.009543013,3000.811694975
c011,4,3,6,56009,56911,55223,3600.018619642,3601.033018468
c011,4,3,7,47132,47955,45949,4200.021669352,4201.199835133
c011,4,3,8,35057,35773,34123,4800.024230286999,4801.363658329
c011,4,3,9,36958,37687,36170,5400.034089478999,5401.610685125
c011,4,3,10,34349,35103,33170,6000.036762673999,6001.784959593
c011,4,3,11,31247,32006,30419,6600.042931810999,6601.980789716
# search time: 6600.043s
# total time: 33025.424s
