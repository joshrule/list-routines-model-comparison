    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.75s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c022_1.json out/1599249770/results/c022_1_best.csv out/1599249770/results/c022_1_predictions.csv out/1599249770/results/c022_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 5, 3, 3]), o: IntList([6, 5, 5, 3, 3]) }
#   Datum { i: IntList([8, 4, 4, 4, 8, 4]), o: IntList([8, 5, 4, 4, 4, 8, 4]) }
#   Datum { i: IntList([1, 1]), o: IntList([1, 5, 1]) }
#   Datum { i: IntList([0, 2, 6]), o: IntList([0, 5, 2, 6]) }
#   Datum { i: IntList([1, 9, 0, 9, 1]), o: IntList([1, 5, 9, 0, 9, 1]) }
#   Datum { i: IntList([1, 7, 3, 0, 1, 2, 1, 3, 0, 3]), o: IntList([1, 5, 7, 3, 0, 1, 2, 1, 3, 0, 3]) }
#   Datum { i: IntList([7, 6, 1, 9, 6, 8, 3, 6]), o: IntList([7, 5, 6, 1, 9, 6, 8, 3, 6]) }
#   Datum { i: IntList([7, 4, 3, 1, 2, 1, 8]), o: IntList([7, 5, 4, 3, 1, 2, 1, 8]) }
#   Datum { i: IntList([6, 4, 9, 5, 2, 7, 8, 2, 4]), o: IntList([6, 5, 4, 9, 5, 2, 7, 8, 2, 4]) }
#   Datum { i: IntList([6, 0, 2, 0, 4, 8, 1, 7, 5, 3]), o: IntList([6, 5, 0, 2, 0, 4, 8, 1, 7, 5, 3]) }
#   Datum { i: IntList([9, 8, 6, 1, 5, 1, 4, 4, 3, 2]), o: IntList([9, 5, 8, 6, 1, 5, 1, 4, 4, 3, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c022,0,1,1,942410,942412,884044,600.000400402,603.364665977
c022,0,1,2,215494,217567,211852,1200.000591493,1204.055498666
c022,0,1,3,113579,114674,111494,1800.0014953740001,1804.575150119
c022,0,1,4,114649,115393,111053,2400.005187011,2404.904711818
c022,0,1,5,97628,98654,94543,3000.0092060260004,3005.21225102
c022,0,1,6,67722,68548,66082,3600.0194424680003,3605.623681201
c022,0,1,7,42836,43726,42159,4200.024494542,4206.007554706
c022,0,1,8,37490,38201,37124,4800.025509872,4806.44882594
c022,0,1,9,32002,32816,31777,5400.027603969,5406.951268769
c022,0,1,10,26562,27322,26470,6000.047350041999,6007.362709539
c022,0,1,11,21763,22399,21777,6600.068291807,6607.872122138
# search time: 6600.068s
# total time: 6608.400s
c022,1,1,1,908521,908523,843482,600.000286096,600.516867974
c022,1,1,2,216934,219313,213752,1200.0013284,1200.847397882
c022,1,1,3,113004,114215,110881,1800.004051502,1801.104898018
c022,1,1,4,115677,116374,112239,2400.0106295630003,2401.317371546
c022,1,1,5,97607,98529,94894,3000.0156149380005,3001.530713537
c022,1,1,6,68259,68689,66181,3600.0181893370004,3601.759549131
c022,1,1,7,43642,44599,43300,4200.025548761,4201.95387497
c022,1,1,8,37510,38311,37129,4800.041242409,4802.23250848
c022,1,1,9,31621,32419,31476,5400.055039488,5402.47220513
c022,1,1,10,26188,26947,26186,6000.059165926,6002.655133491
c022,1,1,11,21885,22561,21871,6600.085429191,6602.965821726
# search time: 6600.085s
# total time: 13211.757s
c022,2,1,1,888303,888305,818648,600.000236986,600.382068904
c022,2,1,2,217035,219405,213785,1200.0015856969999,1200.630323052
c022,2,1,3,110331,111422,108373,1800.001860102,1800.79770341
c022,2,1,4,117486,118247,114132,2400.0024836989996,2400.954374579
c022,2,1,5,98795,99671,95925,3000.01251806,3001.126226583
c022,2,1,6,67299,68165,65967,3600.021806665,3601.301598138
c022,2,1,7,43713,44471,43187,4200.033279398,4201.453157685
c022,2,1,8,36673,37429,36435,4800.045607262,4801.67284032
c022,2,1,9,31563,32300,31420,5400.053726985,5401.912951399
c022,2,1,10,25716,26382,25634,6000.056102842,6002.052095705
c022,2,1,11,21796,22475,21732,6600.097510646,6602.28498562
# search time: 6600.098s
# total time: 19814.407s
c022,3,1,1,874524,874526,828970,600.001216074,600.336009641
c022,3,1,2,213667,215760,210029,1200.002469473,1200.55592729
c022,3,1,3,115959,116977,113494,1800.0056841189999,1800.684270144
c022,3,1,4,114065,114783,110625,2400.006630735,2400.808784744
c022,3,1,5,97105,98053,94407,3000.008460538,3000.912574137
c022,3,1,6,65684,66386,64283,3600.0127013029996,3601.035801371
c022,3,1,7,42803,43663,42608,4200.014041562,4201.17227694
c022,3,1,8,36751,37439,36382,4800.016984149,4801.271446749
c022,3,1,9,31824,32489,31472,5400.017794236999,5401.39328376
c022,3,1,10,26120,26920,26101,6000.022166203999,6001.521936597
c022,3,1,11,21222,21879,21230,6600.029162268,6601.649279177
# search time: 6600.029s
# total time: 26416.465s
c022,4,1,1,916815,916817,847013,600.000712951,600.283673759
c022,4,1,2,214895,215784,209878,1200.000834574,1200.479950389
c022,4,1,3,123173,124335,120314,1800.008358426,1800.639047626
c022,4,1,4,114744,115600,111848,2400.0122300410003,2400.738745005
c022,4,1,5,93371,94187,89996,3000.0177384930003,3000.845123735
c022,4,1,6,67787,68718,66240,3600.0261277970003,3600.968420853
c022,4,1,7,42303,43157,41908,4200.026423514,4201.102919935
c022,4,1,8,36895,37735,36681,4800.027452106,4801.20312162
c022,4,1,9,31145,31841,30908,5400.034985941,5401.309521882
c022,4,1,10,25634,26408,25633,6000.036485549,6001.461385004
c022,4,1,11,21380,22016,21361,6600.049175069,6601.557681865
# search time: 6600.049s
# total time: 33018.259s
