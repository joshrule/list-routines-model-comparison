    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.81s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c028_1.json out/1599249770/results/c028_1_best.csv out/1599249770/results/c028_1_predictions.csv out/1599249770/results/c028_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 2, 0, 6]), o: IntList([1, 2, 6]) }
#   Datum { i: IntList([3, 2, 5, 8, 0, 9, 5]), o: IntList([3, 5, 8, 0, 9, 5]) }
#   Datum { i: IntList([5, 7, 1, 9, 0, 6, 2, 8, 4, 7]), o: IntList([5, 7, 9, 0, 6, 2, 8, 4, 7]) }
#   Datum { i: IntList([3, 1, 4]), o: IntList([3, 4]) }
#   Datum { i: IntList([3, 0, 7, 6, 9, 4]), o: IntList([3, 7, 6, 9, 4]) }
#   Datum { i: IntList([5, 0, 6, 1, 2]), o: IntList([5, 6, 1, 2]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 3, 6, 8, 1]), o: IntList([2, 4, 9, 5, 3, 6, 8, 1]) }
#   Datum { i: IntList([7, 8, 0, 1, 0, 3]), o: IntList([7, 8, 1, 0, 3]) }
#   Datum { i: IntList([4, 2, 9, 1, 8, 7, 6]), o: IntList([4, 9, 1, 8, 7, 6]) }
#   Datum { i: IntList([3, 5, 0, 7, 9, 2, 8, 4]), o: IntList([3, 5, 7, 9, 2, 8, 4]) }
#   Datum { i: IntList([5, 2, 7, 9, 6, 4, 1, 0, 8, 3]), o: IntList([5, 7, 9, 6, 4, 1, 0, 8, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c028,0,1,1,961091,961093,888439,600.001388864,603.229928717
c028,0,1,2,279517,280618,272840,1200.003418931,1203.925075486
c028,0,1,3,113262,114291,113372,1800.006172575,1804.397308218
c028,0,1,4,59600,60398,59904,2400.009633446,2404.800933913
c028,0,1,5,69462,70131,68357,3000.010754771,3005.176703034
c028,0,1,6,51050,51850,50720,3600.016892187,3605.500690903
c028,0,1,7,34977,35724,35462,4200.029983842,4205.907176477
c028,0,1,8,28253,29011,28744,4800.034716612,4806.267095999
c028,0,1,9,24444,25085,24858,5400.03619507,5406.682045497
c028,0,1,10,21680,22395,22182,6000.037671863,6007.018863906
c028,0,1,11,18042,18673,18503,6600.041957887,6607.473288709
# search time: 6600.042s
# total time: 6607.951s
c028,1,1,1,907186,907188,858963,600.000031645,600.504978371
c028,1,1,2,272178,272788,265113,1200.000408349,1200.819682834
c028,1,1,3,110569,111570,110692,1800.0077512060002,1801.045052364
c028,1,1,4,58939,59762,59319,2400.01695077,2401.227697496
c028,1,1,5,66974,67758,66039,3000.035448773,3001.400839475
c028,1,1,6,50509,51357,50347,3600.039592345,3601.586924181
c028,1,1,7,36237,36934,36635,4200.047942259,4201.7877754
c028,1,1,8,27980,28776,28538,4800.061110172999,4801.979801196
c028,1,1,9,24342,25093,24833,5400.064466179999,5402.19205475
c028,1,1,10,21304,22026,21842,6000.087089057999,6002.382433233
c028,1,1,11,17606,18325,18162,6600.101406403999,6602.625278958
# search time: 6600.101s
# total time: 13211.024s
c028,2,1,1,887444,887446,823512,600.004526102,600.580012783
c028,2,1,2,268591,269473,262098,1200.005603455,1200.810315335
c028,2,1,3,108816,109926,109090,1800.006542233,1801.005339862
c028,2,1,4,59488,60265,59860,2400.007139295,2401.178366883
c028,2,1,5,68780,69462,67514,3000.014117676,3001.31461045
c028,2,1,6,50608,51513,50457,3600.0204251269997,3601.491846692
c028,2,1,7,35680,36516,36205,4200.02250472,4201.67274926
c028,2,1,8,27329,27975,27715,4800.029365122,4801.830367123
c028,2,1,9,23727,24328,24072,5400.057920028,5402.033809481
c028,2,1,10,21614,22533,22287,6000.076014727,6002.168283193
c028,2,1,11,17831,18623,18444,6600.106161686001,6602.35491808
# search time: 6600.106s
# total time: 19813.794s
c028,3,1,1,873394,873396,826321,600.002204114,600.31431638
c028,3,1,2,269598,271834,264200,1200.002946802,1200.5754726
c028,3,1,3,112410,113421,112509,1800.012805922,1800.711788265
c028,3,1,4,59626,60325,59929,2400.0130609020002,2400.824364519
c028,3,1,5,67992,68734,66964,3000.01339468,3000.964862027
c028,3,1,6,50639,51449,50416,3600.02143337,3601.081323174
c028,3,1,7,34710,35480,35235,4200.0345974150005,4201.196918137
c028,3,1,8,27801,28693,28408,4800.040254745,4801.381769293
c028,3,1,9,24133,24815,24559,5400.05120955,5401.552309629
c028,3,1,10,20984,21437,21197,6000.077972917999,6001.728592645
c028,3,1,11,17659,18460,18319,6600.083366702999,6601.873879128
# search time: 6600.083s
# total time: 26416.077s
c028,4,1,1,882110,882112,820264,600.001511792,600.260652838
c028,4,1,2,273789,276139,268768,1200.0019805040001,1200.435847825
c028,4,1,3,107493,108637,107808,1800.003016441,1800.538302785
c028,4,1,4,57255,58000,57588,2400.011983316,2400.633982434
c028,4,1,5,69125,69865,67997,3000.017141757,3000.714257834
c028,4,1,6,49358,50121,49131,3600.028492712,3600.797766595
c028,4,1,7,33868,34615,34339,4200.037102568,4200.879143709
c028,4,1,8,27013,27707,27479,4800.0401418149995,4800.99346997
c028,4,1,9,24415,25111,24873,5400.062165019999,5401.109288193
c028,4,1,10,21392,22167,21960,6000.090079026999,6001.236150972
c028,4,1,11,18108,18690,18519,6600.145507424999,6601.417348693
# search time: 6600.146s
# total time: 33017.889s
