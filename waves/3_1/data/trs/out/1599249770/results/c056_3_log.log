    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c056_3.json out/1599249770/results/c056_3_best.csv out/1599249770/results/c056_3_predictions.csv out/1599249770/results/c056_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 1, 2, 6, 7, 2]), o: IntList([2, 1, 2, 6, 2]) }
#   Datum { i: IntList([5, 6, 9, 6, 6, 5, 9]), o: IntList([5, 6, 9, 6, 5, 9]) }
#   Datum { i: IntList([7, 6, 7, 8, 6, 0, 7, 6, 0, 5]), o: IntList([7, 6, 7, 8, 0, 7, 6, 0, 5]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1]), o: IntList([1, 1, 1, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([1, 8, 3, 8, 3, 0, 6]), o: IntList([1, 8, 3, 8, 0, 6]) }
#   Datum { i: IntList([3, 4, 4, 3, 3, 4]), o: IntList([3, 4, 4, 3, 4]) }
#   Datum { i: IntList([0, 4, 2, 4, 0]), o: IntList([0, 4, 2, 4]) }
#   Datum { i: IntList([9, 0, 0, 9, 0, 0, 0, 9]), o: IntList([9, 0, 0, 9, 0, 0, 9]) }
#   Datum { i: IntList([0, 8, 3, 6, 5, 9, 7, 2, 3, 1]), o: IntList([0, 8, 3, 6, 9, 7, 2, 3, 1]) }
#   Datum { i: IntList([2, 0, 6, 2, 0, 0, 6, 2, 6]), o: IntList([2, 0, 6, 2, 0, 6, 2, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c056,0,3,1,908133,908135,860468,600.001159178,602.659751463
c056,0,3,2,213235,215499,209675,1200.003162767,1203.352929024
c056,0,3,3,107039,108094,105722,1800.004597481,1803.807937322
c056,0,3,4,60653,61484,59613,2400.0255580040002,2404.498033096
c056,0,3,5,48983,49750,48518,3000.032991696,3005.159670246
c056,0,3,6,40818,41578,40421,3600.047551335,3605.899347844
c056,0,3,7,35078,35831,34954,4200.04777466,4206.553909671
c056,0,3,8,30898,31659,30499,4800.055586354,4806.967161691
c056,0,3,9,30381,31140,30198,5400.075564474,5407.529025676
c056,0,3,10,26931,27603,26742,6000.094348408,6008.333887981
c056,0,3,11,22045,22802,22186,6600.107445572,6609.420395098
# search time: 6600.107s
# total time: 6609.672s
c056,1,3,1,916497,916499,870387,600.000095261,600.40025685
c056,1,3,2,213496,215867,209340,1200.002462753,1200.73944375
c056,1,3,3,110500,111522,109034,1800.0064855259998,1800.975859635
c056,1,3,4,61759,62605,60871,2400.0200707269996,2401.313370363
c056,1,3,5,49768,50622,49255,3000.0264604829995,3001.683471755
c056,1,3,6,42088,42831,41746,3600.0300755059993,3602.046454792
c056,1,3,7,36509,37248,36275,4200.037963645,4202.342908538
c056,1,3,8,31728,32498,31311,4800.08547096,4802.609827333
c056,1,3,9,31041,31731,30744,5400.106180046,5403.004274649
c056,1,3,10,27585,28293,27365,6000.116892611,6003.308046714
c056,1,3,11,23136,23907,23194,6600.143221613001,6603.779850126
# search time: 6600.143s
# total time: 13213.754s
c056,2,3,1,925651,925653,854616,600.000548146,600.289812012
c056,2,3,2,219987,222328,216191,1200.0044112750002,1200.551164716
c056,2,3,3,109424,110512,108148,1800.0054646820001,1800.697406201
c056,2,3,4,61691,62496,60834,2400.0056723010002,2400.89147651
c056,2,3,5,49484,50294,49055,3000.02087286,3001.192485923
c056,2,3,6,40635,41347,40319,3600.033480674,3601.479615476
c056,2,3,7,36197,37024,36033,4200.046562634,4201.752603638
c056,2,3,8,32014,32730,31507,4800.047991497,4801.916580291
c056,2,3,9,30753,31523,30500,5400.056246676,5402.144042272
c056,2,3,10,27278,28002,27210,6000.084585033001,6002.431074332
c056,2,3,11,22936,23639,23021,6600.098457729001,6602.697984629
# search time: 6600.098s
# total time: 19816.755s
c056,3,3,1,918382,918384,864979,600.000098867,600.521701122
c056,3,3,2,213535,215741,209573,1200.00190098,1200.725225594
c056,3,3,3,103606,104668,102753,1800.005702336,1800.871150353
c056,3,3,4,59823,60553,58672,2400.017648509,2401.050090529
c056,3,3,5,50020,50756,49420,3000.021457238,3001.197062965
c056,3,3,6,41412,42109,40996,3600.023937689,3601.474456949
c056,3,3,7,35876,36716,35794,4200.034352174,4201.681304974
c056,3,3,8,31632,32396,31240,4800.044514859,4801.811214761
c056,3,3,9,31600,32288,31324,5400.0685381309995,5402.041717902
c056,3,3,10,27612,28205,27362,6000.103187039999,6002.329104638
c056,3,3,11,22839,23559,22885,6600.147049458999,6602.53286501
# search time: 6600.147s
# total time: 26419.591s
c056,4,3,1,907853,907855,854623,600.000269032,600.240088259
c056,4,3,2,217437,219416,213446,1200.002234123,1200.426385256
c056,4,3,3,109821,110829,108357,1800.003162303,1800.538514358
c056,4,3,4,61461,62307,60465,2400.0046233969997,2400.641869955
c056,4,3,5,49354,50202,48953,3000.006354246,3000.778498133
c056,4,3,6,41131,41882,40847,3600.011039872,3600.9807942
c056,4,3,7,36506,36965,36116,4200.0151852359995,4201.129456906
c056,4,3,8,32850,33752,32334,4800.03241772,4801.221887856
c056,4,3,9,31351,32008,31065,5400.049819471,5401.321908124
c056,4,3,10,27187,27840,27028,6000.053714588,6001.536508482
c056,4,3,11,23018,23735,23012,6600.058420388,6601.66164473
# search time: 6600.058s
# total time: 33021.527s
