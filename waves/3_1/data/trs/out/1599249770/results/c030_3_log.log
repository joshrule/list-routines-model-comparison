    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c030_3.json out/1599249770/results/c030_3_best.csv out/1599249770/results/c030_3_predictions.csv out/1599249770/results/c030_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 4, 8, 1, 0]), o: IntList([6, 4, 8]) }
#   Datum { i: IntList([9, 7, 4, 3, 8, 1]), o: IntList([9, 7, 4, 3]) }
#   Datum { i: IntList([2, 5, 7, 8, 2, 2, 9, 3, 1, 0]), o: IntList([2, 5, 7, 8, 2, 2, 9, 3]) }
#   Datum { i: IntList([5, 4, 5, 0]), o: IntList([5, 4]) }
#   Datum { i: IntList([6, 2, 9, 7, 8, 3, 8, 5, 0]), o: IntList([6, 2, 9, 7, 8, 3, 8]) }
#   Datum { i: IntList([5, 3]), o: IntList([]) }
#   Datum { i: IntList([6, 4, 1, 6, 7, 2, 5, 8]), o: IntList([6, 4, 1, 6, 7, 2]) }
#   Datum { i: IntList([0, 0, 3, 3, 0, 3, 0]), o: IntList([0, 0, 3, 3, 0]) }
#   Datum { i: IntList([5, 7, 1, 8, 9, 4, 1, 6, 2, 3]), o: IntList([5, 7, 1, 8, 9, 4, 1, 6]) }
#   Datum { i: IntList([9, 7, 2, 5, 9, 4, 6, 8, 4]), o: IntList([9, 7, 2, 5, 9, 4, 6]) }
#   Datum { i: IntList([1, 0, 1]), o: IntList([1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,3,1,964447,964449,892791,600.000108279,603.083374967
c030,0,3,2,273342,275681,267673,1200.000228939,1203.769475184
c030,0,3,3,133387,134429,133082,1800.007733873,1804.298770821
c030,0,3,4,68955,69717,69362,2400.013908212,2404.654289027
c030,0,3,5,57367,58055,57673,3000.022388886,3005.044432374
c030,0,3,6,42595,43259,43078,3600.036645476,3605.430554428
c030,0,3,7,47250,47943,46252,4200.037862042,4205.823878313
c030,0,3,8,36648,37467,35925,4800.040140182,4806.230158517
c030,0,3,9,32403,33124,31865,5400.050063676,5406.62894759
c030,0,3,10,26904,27623,26564,6000.054436409,6007.053356634
c030,0,3,11,22972,23672,22711,6600.06883864,6607.475236287
# search time: 6600.069s
# total time: 6607.839s
c030,1,3,1,940093,940095,868212,600.000120352,600.380964419
c030,1,3,2,283184,285287,277577,1200.0015330289998,1200.696555362
c030,1,3,3,137613,138618,137137,1800.0018014089997,1800.940421568
c030,1,3,4,70156,70991,70636,2400.0051601829996,2401.17184189
c030,1,3,5,58888,59593,59182,3000.0052921549996,3001.402537391
c030,1,3,6,44004,44713,44542,3600.0095520539994,3601.596242088
c030,1,3,7,48405,49119,47445,4200.018724616999,4201.839523397
c030,1,3,8,38346,39051,37414,4800.030061345999,4802.094259944
c030,1,3,9,33371,34082,32775,5400.043945812999,5402.315459035
c030,1,3,10,28103,28728,27607,6000.044303577999,6002.575384746
c030,1,3,11,23729,24410,23366,6600.049906464999,6602.818934031
# search time: 6600.050s
# total time: 13211.130s
c030,2,3,1,949234,949236,884275,600.000389169,600.299653163
c030,2,3,2,288925,290992,282969,1200.001610632,1200.540264072
c030,2,3,3,136277,137369,136019,1800.0018975369999,1800.720835046
c030,2,3,4,69414,70101,69759,2400.004268063,2400.858727202
c030,2,3,5,58296,59047,58645,3000.005513467,3001.024086209
c030,2,3,6,43755,44444,44218,3600.008028118,3601.195595764
c030,2,3,7,47827,48502,46830,4200.0085301829995,4201.363021875
c030,2,3,8,37926,38703,37163,4800.015796637,4801.51245618
c030,2,3,9,32889,33568,32259,5400.025925402,5401.671473974
c030,2,3,10,27705,28378,27240,6000.039150212,6001.842122938
c030,2,3,11,23574,24253,23223,6600.06132471,6602.04252403
# search time: 6600.061s
# total time: 19813.647s
c030,3,3,1,944980,944982,869241,600.000005935,600.403989082
c030,3,3,2,287582,289997,281908,1200.001036273,1200.614772477
c030,3,3,3,134310,135374,133986,1800.0067681609999,1800.80010714
c030,3,3,4,69290,69997,69648,2400.008589176,2400.915623082
c030,3,3,5,58827,59491,59146,3000.014962184,3001.048865046
c030,3,3,6,43577,44313,44055,3600.037464546,3601.182189865
c030,3,3,7,48754,49453,47814,4200.038038424,4201.340480697
c030,3,3,8,37430,38307,36774,4800.042666182,4801.479912724
c030,3,3,9,33598,34218,32912,5400.060983251,5401.612787737
c030,3,3,10,27278,27959,26810,6000.071166586,6001.757829908
c030,3,3,11,23240,24060,23025,6600.083667267,6601.912172206
# search time: 6600.084s
# total time: 26416.042s
c030,4,3,1,963269,963271,890280,600.000334433,600.270200618
c030,4,3,2,282563,284660,276943,1200.0077183180001,1200.429381074
c030,4,3,3,136617,137592,136203,1800.0096608840001,1800.544684047
c030,4,3,4,68770,69572,69193,2400.0166378510003,2400.706640218
c030,4,3,5,58549,59174,58786,3000.0216335130003,3000.829186872
c030,4,3,6,43548,44251,44051,3600.0288573860003,3600.936535846
c030,4,3,7,48384,49127,47451,4200.029261510001,4201.049098824
c030,4,3,8,37319,38011,36434,4800.046035723,4801.169063446
c030,4,3,9,33228,33901,32580,5400.050293701001,5401.264773491
c030,4,3,10,27195,28029,26938,6000.0538574560005,6001.372928007
c030,4,3,11,23590,24248,23206,6600.0597152870005,6601.504832529
# search time: 6600.060s
# total time: 33018.044s
