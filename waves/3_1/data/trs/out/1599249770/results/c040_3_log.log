    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c040_3.json out/1599249770/results/c040_3_best.csv out/1599249770/results/c040_3_predictions.csv out/1599249770/results/c040_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 8, 3, 7, 8]), o: IntList([4, 8, 3, 7, 8, 3]) }
#   Datum { i: IntList([5, 8, 2, 9, 0, 0]), o: IntList([5, 8, 2, 9, 0, 0, 9]) }
#   Datum { i: IntList([3, 8, 5]), o: IntList([3, 8, 5, 3]) }
#   Datum { i: IntList([9, 1, 1, 5, 1, 6, 5, 6]), o: IntList([9, 1, 1, 5, 1, 6, 5, 6, 9]) }
#   Datum { i: IntList([7, 0]), o: IntList([7, 0]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([4, 7, 4, 3]), o: IntList([4, 7, 4, 3, 3]) }
#   Datum { i: IntList([5, 7, 7, 3, 0, 2, 0, 6, 1]), o: IntList([5, 7, 7, 3, 0, 2, 0, 6, 1, 3]) }
#   Datum { i: IntList([4, 8, 9, 2, 5, 7, 1, 0, 6, 2]), o: IntList([4, 8, 9, 2, 5, 7, 1, 0, 6, 2, 9]) }
#   Datum { i: IntList([6]), o: IntList([6]) }
#   Datum { i: IntList([4, 2, 2, 6, 8, 9, 4]), o: IntList([4, 2, 2, 6, 8, 9, 4, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c040,0,3,1,915240,915242,859616,600.00170363,603.018408032
c040,0,3,2,192307,194163,189144,1200.0036067249998,1203.791655081
c040,0,3,3,96283,97391,96530,1800.0043610569999,1804.355422843
c040,0,3,4,74496,75251,74823,2400.011253578,2404.839315841
c040,0,3,5,49451,50244,49773,3000.0221428,3005.348262739
c040,0,3,6,44873,45579,45290,3600.022907253,3605.771221249
c040,0,3,7,54811,55469,53487,4200.030963018,4206.14161216
c040,0,3,8,41035,41803,40371,4800.040626057,4806.481711339
c040,0,3,9,29788,30549,29474,5400.047518021,5406.844827799
c040,0,3,10,23770,24465,23559,6000.05505844,6007.24594274
c040,0,3,11,23041,23756,22928,6600.060609041,6607.545587805
# search time: 6600.061s
# total time: 6607.822s
c040,1,3,1,900500,900502,846518,600.000339374,600.605006137
c040,1,3,2,231862,233734,227342,1200.00106048,1201.00451184
c040,1,3,3,114125,115408,114466,1800.0090588130001,1801.326638039
c040,1,3,4,86736,87497,86935,2400.020048317,2401.580390161
c040,1,3,5,56685,57504,57016,3000.0239111110004,3001.865667594
c040,1,3,6,51911,52535,52196,3600.0328702610004,3602.119885489
c040,1,3,7,64882,65653,63319,4200.03783044,4202.325767036
c040,1,3,8,48011,48788,47143,4800.04443428,4802.524133206
c040,1,3,9,34444,35205,33944,5400.049765106,5402.787845111
c040,1,3,10,26188,26901,25918,6000.053226892001,6003.055933892
c040,1,3,11,26674,27399,26366,6600.064521653001,6603.276420558
# search time: 6600.065s
# total time: 13211.639s
c040,2,3,1,939342,939344,887557,600.000220747,600.551443278
c040,2,3,2,233137,234000,227785,1200.0014519659999,1200.838979495
c040,2,3,3,111634,112780,111797,1800.003889487,1801.056045407
c040,2,3,4,84341,85061,84512,2400.006654036,2401.245915851
c040,2,3,5,55765,56453,56010,3000.0184080729996,3001.462411886
c040,2,3,6,50332,51030,50739,3600.0262934989996,3601.633333089
c040,2,3,7,64921,65585,63351,4200.031779665,4201.819366751
c040,2,3,8,47936,48458,46792,4800.046699539,4801.996662427
c040,2,3,9,34320,35094,33850,5400.056818723,5402.189912027
c040,2,3,10,25882,26579,25617,6000.058344998,6002.372827632
c040,2,3,11,25469,26168,25220,6600.058623015,6602.54654005
# search time: 6600.059s
# total time: 19814.962s
c040,3,3,1,926414,926416,868434,600.000828618,600.455264075
c040,3,3,2,229845,231737,225728,1200.007467352,1200.688450023
c040,3,3,3,112827,113868,112867,1800.018710591,1800.894397958
c040,3,3,4,84523,85279,84778,2400.023114652,2401.071295652
c040,3,3,5,55250,55946,55481,3000.029065287,3001.262110087
c040,3,3,6,50731,51395,51025,3600.03866282,3601.430433698
c040,3,3,7,64793,65425,63103,4200.0490942199995,4201.573389696
c040,3,3,8,47825,48566,46882,4800.054320973999,4801.709908436
c040,3,3,9,34357,35112,33798,5400.072898173999,5401.873418563
c040,3,3,10,26054,26705,25725,6000.074973526999,6002.028554366
c040,3,3,11,25822,26529,25597,6600.101645712999,6602.172029529
# search time: 6600.102s
# total time: 26417.949s
c040,4,3,1,979375,979377,926181,600.000244728,600.414160432
c040,4,3,2,230679,232706,226379,1200.000293317,1200.621271087
c040,4,3,3,111939,112990,112031,1800.000675266,1800.768035941
c040,4,3,4,84668,85406,84800,2400.00262247,2400.913812805
c040,4,3,5,55435,56211,55760,3000.017149412,3001.046623649
c040,4,3,6,50661,51389,51078,3600.035002281,3601.202878594
c040,4,3,7,64632,65260,62892,4200.03513477,4201.319203835
c040,4,3,8,47395,48200,46491,4800.04004859,4801.427182325
c040,4,3,9,33750,34467,33261,5400.055525833,5401.574334395
c040,4,3,10,26348,26930,25937,6000.059732778999,6001.702931627
c040,4,3,11,26038,26712,25810,6600.100091535,6601.893159961
# search time: 6600.100s
# total time: 33020.734s
