    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c063_4.json out/1599249770/results/c063_4_best.csv out/1599249770/results/c063_4_predictions.csv out/1599249770/results/c063_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 6, 2, 6, 6, 6]), o: IntList([6, 6, 6]) }
#   Datum { i: IntList([4, 1, 1, 4, 1, 1, 3]), o: IntList([1, 3]) }
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([1, 7, 9, 9, 8, 4, 1, 7, 8]), o: IntList([9, 9, 8, 4, 1, 7, 8]) }
#   Datum { i: IntList([0, 3, 9, 4, 6, 6, 7, 8, 2]), o: IntList([3, 9, 4, 6, 6, 7, 8, 2]) }
#   Datum { i: IntList([0, 9, 7, 1, 1, 5, 4, 3, 6, 6]), o: IntList([9, 7, 1, 1, 5, 4, 3, 6, 6]) }
#   Datum { i: IntList([0, 5, 0, 5, 5, 7]), o: IntList([5, 0, 5, 5, 7]) }
#   Datum { i: IntList([0, 2, 0]), o: IntList([2, 0]) }
#   Datum { i: IntList([3, 8, 8, 7, 7, 7, 8, 8]), o: IntList([7, 7, 8, 8]) }
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([2]) }
#   Datum { i: IntList([3, 8, 4, 4]), o: IntList([]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c063,0,4,1,1059479,1059481,977930,600.000410903,602.594741541
c063,0,4,2,289475,291595,283775,1200.002705725,1203.265198367
c063,0,4,3,144679,145788,144035,1800.006541459,1803.759199782
c063,0,4,4,86698,87560,87128,2400.0072419119997,2404.151805378
c063,0,4,5,50721,51438,51205,3000.02124118,3004.496045405
c063,0,4,6,43437,44188,43890,3600.035605452,3604.833754041
c063,0,4,7,31130,31867,31645,4200.048413377,4205.201314848
c063,0,4,8,27531,28078,27959,4800.05276403,4805.634374223
c063,0,4,9,24418,25071,24940,5400.068044586999,5406.106840944
c063,0,4,10,22293,22986,22837,6000.092257003999,6006.582978744
c063,0,4,11,21607,22328,22193,6600.117094146999,6606.990205748
# search time: 6600.117s
# total time: 6607.318s
c063,1,4,1,914434,914436,863499,600.00014275,600.416033662
c063,1,4,2,277370,279409,271993,1200.004351623,1200.711627644
c063,1,4,3,144069,145100,143478,1800.013934227,1800.96947486
c063,1,4,4,84225,85059,84672,2400.019429687,2401.151661635
c063,1,4,5,50602,51299,51054,3000.023065725,3001.382595709
c063,1,4,6,42941,43671,43309,3600.0316501959996,3601.533469381
c063,1,4,7,30451,31175,31051,4200.0353345369995,4201.728005515
c063,1,4,8,27426,28017,27877,4800.044818689999,4801.898676515
c063,1,4,9,23549,24217,24073,5400.063825406999,5402.123954389
c063,1,4,10,21906,22599,22472,6000.070693579999,6002.37066973
c063,1,4,11,20956,21614,21482,6600.124608256999,6602.631826013
# search time: 6600.125s
# total time: 13210.097s
c063,2,4,1,924869,924871,873858,600.000065381,600.273417605
c063,2,4,2,267624,268956,261698,1200.001367449,1200.497048907
c063,2,4,3,138633,139807,138231,1800.002584026,1800.666715073
c063,2,4,4,80587,81390,81166,2400.009554853,2400.818987165
c063,2,4,5,49355,50069,49765,3000.017104042,3000.96755866
c063,2,4,6,41391,42162,41866,3600.026120981,3601.106298522
c063,2,4,7,30291,30996,30784,4200.03601145,4201.229348938
c063,2,4,8,26372,27064,26953,4800.04645082,4801.387482788
c063,2,4,9,23837,24518,24383,5400.063065103001,5401.58145428
c063,2,4,10,21403,22050,21937,6000.067539353001,6001.753754384
c063,2,4,11,20740,21484,21368,6600.0840222080005,6602.004391651
# search time: 6600.084s
# total time: 19812.453s
c063,3,4,1,949202,949204,871796,600.000172026,600.258275937
c063,3,4,2,272487,274630,267117,1200.002972158,1200.413558229
c063,3,4,3,141247,142259,140619,1800.0032145579999,1800.536672506
c063,3,4,4,83349,84194,83738,2400.007040573,2400.63908868
c063,3,4,5,49059,49837,49575,3000.021954639,3000.729465507
c063,3,4,6,41939,42611,42311,3600.037189161,3600.836510082
c063,3,4,7,30378,31156,30992,4200.055902188999,4200.984506553
c063,3,4,8,26607,27353,27220,4800.078449866,4801.11146947
c063,3,4,9,23704,24297,24159,5400.08578949,5401.221275955
c063,3,4,10,21135,21874,21739,6000.145202098,6001.502293107
c063,3,4,11,20527,21260,21150,6600.161314012999,6601.676781904
# search time: 6600.161s
# total time: 26414.499s
c063,4,4,1,897626,897628,845178,600.000682867,600.243116539
c063,4,4,2,264112,266053,259057,1200.004318262,1200.394433667
c063,4,4,3,136956,137942,136419,1800.005905567,1800.519193673
c063,4,4,4,83765,84554,84106,2400.017177753,2400.633248953
c063,4,4,5,48984,49727,49462,3000.026121341,3000.747892945
c063,4,4,6,41670,42424,42140,3600.0329798929997,3600.845923675
c063,4,4,7,29769,30541,30386,4200.034695777,4200.904547072
c063,4,4,8,26129,26841,26717,4800.053132739,4801.008748435
c063,4,4,9,23746,24357,24233,5400.089635333,5401.18218595
c063,4,4,10,21136,21871,21728,6000.097226616,6001.261533606
c063,4,4,11,20428,21229,21113,6600.118409388,6601.371560174
# search time: 6600.118s
# total time: 33016.239s
