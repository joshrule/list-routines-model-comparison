    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.71s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c019_2.json out/1599249770/results/c019_2_best.csv out/1599249770/results/c019_2_predictions.csv out/1599249770/results/c019_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 5, 5, 0, 4, 2]), o: IntList([4, 5, 5, 0, 4, 3]) }
#   Datum { i: IntList([6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([3, 7, 2, 0, 4, 9, 8]), o: IntList([3, 7, 2, 0, 4, 3, 8]) }
#   Datum { i: IntList([1, 1, 7, 4, 0, 8, 9, 0]), o: IntList([1, 1, 7, 4, 0, 3, 9, 0]) }
#   Datum { i: IntList([4, 3, 5, 8, 3, 2, 7, 9, 1]), o: IntList([4, 3, 5, 8, 3, 3, 7, 9, 1]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6, 6, 6]) }
#   Datum { i: IntList([8, 2, 6, 7, 9]), o: IntList([8, 2, 6, 7, 9]) }
#   Datum { i: IntList([7, 1, 8, 6, 5, 0, 4, 5, 3, 9]), o: IntList([7, 1, 8, 6, 5, 3, 4, 5, 3, 9]) }
#   Datum { i: IntList([9, 9, 9, 2, 0, 2, 3]), o: IntList([9, 9, 9, 2, 0, 3, 3]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 8]), o: IntList([1, 1, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c019,0,2,1,894515,894517,826468,600.000127217,603.190458426
c019,0,2,2,186290,188413,182908,1200.002882642,1203.927233712
c019,0,2,3,138712,139630,137084,1800.003274939,1804.442752695
c019,0,2,4,78830,79675,78910,2400.007455256,2404.870826351
c019,0,2,5,68602,69313,68172,3000.012437766,3005.197184631
c019,0,2,6,40891,41648,40994,3600.025856651,3605.665504634
c019,0,2,7,38867,39481,38368,4200.035508017,4206.07881242
c019,0,2,8,42868,43619,41962,4800.03712505,4806.364550942
c019,0,2,9,35459,36138,34692,5400.045851936,5406.765590677
c019,0,2,10,22208,22417,21847,6000.0738902,6007.208141519
c019,0,2,11,31663,32269,30348,6600.081468818,6607.517528145
# search time: 6600.081s
# total time: 6607.791s
c019,1,2,1,890393,890395,833239,600.001468406,600.433520022
c019,1,2,2,178863,180266,175024,1200.00458261,1200.72703663
c019,1,2,3,136581,137659,135012,1800.011826731,1800.930677309
c019,1,2,4,77119,77834,77084,2400.014950112,2401.124853756
c019,1,2,5,67659,68425,67369,3000.0185515929998,3001.311439334
c019,1,2,6,39922,40742,40050,3600.045460033,3601.57593305
c019,1,2,7,38645,39307,38233,4200.0480038059995,4201.782495459
c019,1,2,8,41699,42468,40940,4800.052266969,4801.947065618
c019,1,2,9,34239,35038,33591,5400.067204719,5402.13089585
c019,1,2,10,21356,22159,21712,6000.080072242,6002.376842376
c019,1,2,11,31424,32019,30070,6600.083698451,6602.527333399
# search time: 6600.084s
# total time: 13210.720s
c019,2,2,1,843739,843741,786729,600.000403948,600.318513656
c019,2,2,2,181325,183319,178327,1200.00210068,1200.526705942
c019,2,2,3,134838,135907,133387,1800.005247046,1800.707979878
c019,2,2,4,76279,77046,76315,2400.014806278,2400.86040534
c019,2,2,5,67635,68299,67154,3000.016029415,3000.990524597
c019,2,2,6,39466,40283,39590,3600.027919725,3601.152715368
c019,2,2,7,38598,39239,38128,4200.037633301,4201.30806246
c019,2,2,8,42355,43064,41509,4800.0449687049995,4801.436897029
c019,2,2,9,34170,34934,33525,5400.047506798999,5401.576933691
c019,2,2,10,21086,21876,21395,6000.059568860999,6001.751336646
c019,2,2,11,30971,31792,29967,6600.061114078999,6601.863558358
# search time: 6600.061s
# total time: 19812.921s
c019,3,2,1,852480,852482,790862,600.000207846,600.394785626
c019,3,2,2,179680,181864,176643,1200.004093597,1200.569044359
c019,3,2,3,136216,137128,134567,1800.0051572040002,1800.701138371
c019,3,2,4,75460,76301,75563,2400.007807621,2400.821381022
c019,3,2,5,67220,67939,66981,3000.011173592,3000.942055497
c019,3,2,6,38689,39492,38758,3600.0154682029997,3601.058100945
c019,3,2,7,37481,38172,36986,4200.033049726,4201.182330896
c019,3,2,8,41071,41725,40123,4800.034168084,4801.274247115
c019,3,2,9,33380,34246,32905,5400.035411443,5401.384205019
c019,3,2,10,20878,21689,21251,6000.054654278,6001.545942384
c019,3,2,11,30952,31588,29814,6600.075187649,6601.641495706
# search time: 6600.075s
# total time: 26414.942s
c019,4,2,1,842323,842325,793739,600.001737593,600.249119567
c019,4,2,2,180723,182749,177374,1200.010588608,1200.416073686
c019,4,2,3,137183,138165,135594,1800.0178051369999,1800.579741334
c019,4,2,4,76465,77340,76652,2400.02197957,2400.686128817
c019,4,2,5,66726,67406,66371,3000.028592435,3000.784434481
c019,4,2,6,39479,40285,39643,3600.047019763,3600.915751939
c019,4,2,7,38338,39012,37950,4200.05887769,4201.002459302
c019,4,2,8,41295,42128,40489,4800.064858113001,4801.086029096
c019,4,2,9,34847,35586,34210,5400.070742596001,5401.187444535
c019,4,2,10,21457,22281,21782,6000.074943658001,6001.299282275
c019,4,2,11,30875,31644,29827,6600.08867212,6601.406304648
# search time: 6600.089s
# total time: 33016.656s
