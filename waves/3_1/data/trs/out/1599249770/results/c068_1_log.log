    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c068_1.json out/1599249770/results/c068_1_best.csv out/1599249770/results/c068_1_predictions.csv out/1599249770/results/c068_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c068,0,1,1,1020620,1020622,961597,600.00014522,602.733008406
c068,0,1,2,151760,153995,149182,1200.003123642,1203.359636512
c068,0,1,3,64651,65761,65326,1800.008671431,1803.889759862
c068,0,1,4,52662,53359,53032,2400.012307783,2404.378720556
c068,0,1,5,46440,47112,46913,3000.0139401469996,3004.713234002
c068,0,1,6,34349,35093,34904,3600.016621768,3605.057498166
c068,0,1,7,23993,24666,24556,4200.037602801,4205.447660243
c068,0,1,8,22606,23296,23176,4800.078848032999,4805.803231635
c068,0,1,9,20542,21171,21038,5400.101272688999,5406.164966203
c068,0,1,10,15866,16569,16458,6000.1188913959995,6006.505954188
c068,0,1,11,14031,14750,14626,6600.13886142,6606.791039683
# search time: 6600.139s
# total time: 6606.999s
c068,1,1,1,993652,993654,921539,600.009365399,600.471427855
c068,1,1,2,146747,148793,143885,1200.011032386,1200.744305268
c068,1,1,3,64323,65335,64915,1800.0128874819998,1801.01067498
c068,1,1,4,51833,52494,52127,2400.016515382,2401.214942807
c068,1,1,5,45597,46341,46158,3000.0368122789996,3001.436126365
c068,1,1,6,33725,34253,34097,3600.0572239209996,3601.639581198
c068,1,1,7,23783,24440,24323,4200.067206985999,4201.879308926
c068,1,1,8,22036,22681,22578,4800.078625781,4802.039415373
c068,1,1,9,19857,20532,20396,5400.093978483,5402.201694848
c068,1,1,10,15552,16223,16140,6000.103370387,6002.395656163
c068,1,1,11,13818,14526,14455,6600.1378952,6602.611892071
# search time: 6600.138s
# total time: 13209.924s
c068,2,1,1,980007,980009,901783,600.000897141,600.331978787
c068,2,1,2,146106,148327,144104,1200.003531793,1200.51720329
c068,2,1,3,62429,63431,63053,1800.004899099,1800.692319112
c068,2,1,4,49937,50650,50330,2400.011005849,2400.876088344
c068,2,1,5,44244,44882,44661,3000.012968091,3001.017243173
c068,2,1,6,32269,32947,32842,3600.024350251,3601.186997195
c068,2,1,7,22882,23589,23427,4200.028857108,4201.35520534
c068,2,1,8,21487,22161,22056,4800.047470404,4801.499391877
c068,2,1,9,19549,20229,20107,5400.048950093,5401.633086949
c068,2,1,10,15216,15908,15820,6000.078784808999,6001.776853105
c068,2,1,11,13375,14108,14025,6600.085173502,6601.889574289
# search time: 6600.085s
# total time: 19812.168s
c068,3,1,1,953836,953838,872667,600.000070746,600.270357661
c068,3,1,2,146404,147664,143425,1200.0045947610001,1200.41979465
c068,3,1,3,62869,63773,63370,1800.005984648,1800.542837877
c068,3,1,4,50594,51251,50938,2400.006340105,2400.695732365
c068,3,1,5,45123,45764,45581,3000.012160218,3000.821138754
c068,3,1,6,32549,33285,33127,3600.0220343610004,3600.952102401
c068,3,1,7,23093,23867,23747,4200.045900716001,4201.140164253
c068,3,1,8,21641,22284,22178,4800.0549240440005,4801.228985857
c068,3,1,9,19611,20283,20170,5400.055652327001,5401.309910852
c068,3,1,10,14787,15194,15141,6000.071093443001,6001.444868901
c068,3,1,11,13207,13853,13799,6600.095444506001,6601.573801383
# search time: 6600.095s
# total time: 26414.202s
c068,4,1,1,936025,936027,884931,600.00255248,600.265573347
c068,4,1,2,142466,143923,139487,1200.005624987,1200.402308105
c068,4,1,3,61788,62754,62343,1800.0079944559998,1800.539948974
c068,4,1,4,50149,50750,50389,2400.0097435989996,2400.657517741
c068,4,1,5,44125,44813,44635,3000.0149977819997,3000.744175889
c068,4,1,6,32246,32969,32841,3600.0228532469996,3600.863184371
c068,4,1,7,23050,23715,23565,4200.036336290999,4200.989019639
c068,4,1,8,21836,22469,22343,4800.06705017,4801.112736437
c068,4,1,9,18932,19620,19518,5400.070412673,5401.186709967
c068,4,1,10,14873,15606,15522,6000.071573166,6001.323897449
c068,4,1,11,13233,13916,13823,6600.1122818700005,6601.432300744
# search time: 6600.112s
# total time: 33015.961s
