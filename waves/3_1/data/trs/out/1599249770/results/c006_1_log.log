    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.60s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c006_1.json out/1599249770/results/c006_1_best.csv out/1599249770/results/c006_1_predictions.csv out/1599249770/results/c006_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 8, 5, 7]), o: IntList([7, 8]) }
#   Datum { i: IntList([3, 1, 1, 1, 3, 1, 1]), o: IntList([3, 1]) }
#   Datum { i: IntList([8, 0, 8, 7, 4, 0, 4]), o: IntList([8, 0]) }
#   Datum { i: IntList([2, 0, 4, 6, 5]), o: IntList([2, 0]) }
#   Datum { i: IntList([9, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([4, 3, 3, 5, 5]), o: IntList([4, 3]) }
#   Datum { i: IntList([9, 7, 7]), o: IntList([9, 7]) }
#   Datum { i: IntList([2, 2, 2, 2, 2]), o: IntList([2, 2]) }
#   Datum { i: IntList([0, 4, 0, 0, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([5, 5, 1, 5, 7, 7]), o: IntList([5, 5]) }
#   Datum { i: IntList([6, 8, 5]), o: IntList([6, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c006,0,1,1,955777,955779,895801,600.001784889,602.985953892
c006,0,1,2,332546,334575,325400,1200.003247547,1203.657910212
c006,0,1,3,194951,195936,188285,1800.004653777,1804.093232881
c006,0,1,4,141972,143143,138177,2400.0047403979997,2404.550372919
c006,0,1,5,115977,116985,111578,3000.017712087,3005.093946787
c006,0,1,6,115968,116758,111263,3600.0223630689998,3605.439951119
c006,0,1,7,102942,103853,98305,4200.022627623,4205.757428973
c006,0,1,8,86692,87596,83360,4800.028766480999,4806.36832267
c006,0,1,9,74222,75059,71380,5400.031924826999,5406.892086328
c006,0,1,10,64551,65424,62088,6000.031986867999,6007.439408395
c006,0,1,11,59806,60591,57527,6600.034278335999,6607.965362254
# search time: 6600.034s
# total time: 6608.454s
c006,1,1,1,893093,893095,837049,600.000115267,600.515347966
c006,1,1,2,320038,322031,313183,1200.009233063,1200.816816071
c006,1,1,3,188032,189154,182011,1800.010753104,1801.010505254
c006,1,1,4,138542,139794,134869,2400.014261558,2401.19056912
c006,1,1,5,115542,116560,111159,3000.0154101089997,3001.464349823
c006,1,1,6,113286,114074,108659,3600.0158255759998,3601.629167412
c006,1,1,7,102768,103706,98727,4200.021707353,4201.819308064
c006,1,1,8,83440,84414,80298,4800.0246976,4802.095257292
c006,1,1,9,71885,72733,69110,5400.050332016,5402.494429634
c006,1,1,10,63100,63931,60657,6000.057025882999,6002.752933273
c006,1,1,11,59299,59997,56951,6600.058038400999,6603.030047385
# search time: 6600.058s
# total time: 13211.760s
c006,2,1,1,887681,887683,838923,600.000053438,600.334947704
c006,2,1,2,323031,325149,316080,1200.003927767,1200.560353413
c006,2,1,3,188069,189156,182250,1800.005239916,1800.699347206
c006,2,1,4,137042,138164,133227,2400.01255477,2400.854351434
c006,2,1,5,114606,115632,110129,3000.0135296159997,3000.999275789
c006,2,1,6,115050,115720,109896,3600.0213545059996,3601.136916572
c006,2,1,7,101738,102619,97737,4200.024121752,4201.261638352
c006,2,1,8,82773,83781,79629,4800.029986044,4801.478865448
c006,2,1,9,70419,71353,67916,5400.035602486,5401.68618848
c006,2,1,10,62313,63175,60037,6000.052413925,6001.930559423
c006,2,1,11,57183,58049,55190,6600.05357388,6602.122517147
# search time: 6600.054s
# total time: 19814.211s
c006,3,1,1,901169,901171,826504,600.000064036,600.243928923
c006,3,1,2,318075,320073,311238,1200.00028103,1200.409277382
c006,3,1,3,190854,191936,184962,1800.000666269,1800.51430224
c006,3,1,4,137986,139162,134246,2400.004195562,2400.629705514
c006,3,1,5,115971,116796,111235,3000.004900288,3000.763169748
c006,3,1,6,114412,115096,109349,3600.009350263,3600.864315005
c006,3,1,7,102027,102993,98075,4200.0121956680005,4200.991048922
c006,3,1,8,84067,85045,80969,4800.013199385001,4801.15285956
c006,3,1,9,72526,73337,69728,5400.018649895001,5401.310507481
c006,3,1,10,61899,62705,59637,6000.055882269001,6001.53818317
c006,3,1,11,56904,57728,54880,6600.060233105001,6601.761846592
# search time: 6600.060s
# total time: 26416.205s
c006,4,1,1,881917,881919,809181,600.000360174,600.234025135
c006,4,1,2,318313,320568,311668,1200.000948429,1200.37613304
c006,4,1,3,186043,187133,179972,1800.00112803,1800.462803888
c006,4,1,4,136259,137350,132595,2400.005280365,2400.559776173
c006,4,1,5,113724,114870,109497,3000.009225741,3000.67174833
c006,4,1,6,112629,113447,107814,3600.010623765,3600.774020064
c006,4,1,7,100093,101055,96300,4200.020002004,4200.863128908
c006,4,1,8,82514,83363,79247,4800.020352612,4800.984267613
c006,4,1,9,70395,71238,67725,5400.029388185,5401.173057473
c006,4,1,10,62004,62824,59664,6000.029806292,6001.313344195
c006,4,1,11,57994,58773,55793,6600.041832898,6601.452913716
# search time: 6600.042s
# total time: 33017.977s
