    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_1.json out/1599249770/results/c060_1_best.csv out/1599249770/results/c060_1_predictions.csv out/1599249770/results/c060_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,1,1,911223,911225,821999,600.000167971,602.771178705
c060,0,1,2,178892,181098,175638,1200.005659003,1203.43089511
c060,0,1,3,90262,91147,88711,1800.0074062449999,1803.997364619
c060,0,1,4,54492,55190,53782,2400.012268005,2405.042373696
c060,0,1,5,43763,44626,43751,3000.028529244,3006.329128564
c060,0,1,6,35854,36590,35533,3600.068972791,3607.531300193
c060,0,1,7,30208,30835,29842,4200.092202829,4208.881030748
c060,0,1,8,26068,26775,25894,4800.123532727,4810.108766675
c060,0,1,9,22755,23464,22650,5400.127211278999,5411.341939432
c060,0,1,10,19481,20149,19411,6000.132936499999,6012.922769365
c060,0,1,11,17269,18007,17369,6600.15577325,6614.501881658
# search time: 6600.156s
# total time: 6614.747s
c060,1,1,1,907905,907907,832633,600.002834502,600.394855008
c060,1,1,2,175184,176854,171353,1200.0033129580002,1200.726967062
c060,1,1,3,89516,90487,87745,1800.004644006,1801.016145353
c060,1,1,4,53376,54302,53126,2400.011192334,2401.488292307
c060,1,1,5,42995,43795,42712,3000.023612202,3001.987202251
c060,1,1,6,36044,36810,35839,3600.0385806040003,3602.536575033
c060,1,1,7,30379,31005,30069,4200.050106045001,4203.136455771
c060,1,1,8,26261,26927,26030,4800.064309572001,4803.877699825
c060,1,1,9,22425,23176,22426,5400.092163701001,5404.509287337
c060,1,1,10,19623,20236,19595,6000.122532859001,6005.383398713
c060,1,1,11,16741,17406,16822,6600.140081322001,6605.999618175
# search time: 6600.140s
# total time: 13221.057s
c060,2,1,1,842042,842044,792390,600.000324068,600.289685173
c060,2,1,2,172803,175019,169221,1200.0022852860002,1200.542844567
c060,2,1,3,85367,86337,84102,1800.0077841020002,1800.796618872
c060,2,1,4,53602,54388,53101,2400.0122217000003,2401.129045912
c060,2,1,5,43662,44437,43450,3000.0257221250004,3001.529276588
c060,2,1,6,35698,36408,35448,3600.044156445,3601.936480313
c060,2,1,7,30300,31008,29997,4200.047078072001,4202.476464221
c060,2,1,8,26086,26861,26014,4800.054444352001,4803.048933265
c060,2,1,9,21789,22488,21813,5400.0770325150015,5403.525896774
c060,2,1,10,19189,19912,19236,6000.083636983001,6004.065569831
c060,2,1,11,16998,17643,17010,6600.1003738280015,6604.831131943
# search time: 6600.100s
# total time: 19826.181s
c060,3,1,1,868335,868337,816045,600.000996387,600.275104011
c060,3,1,2,178646,180954,175784,1200.003399897,1200.449605256
c060,3,1,3,88577,89518,86826,1800.006515781,1800.599435663
c060,3,1,4,52272,53031,51581,2400.020024738,2400.85219098
c060,3,1,5,43031,43771,42727,3000.0250893019997,3001.174177123
c060,3,1,6,34610,35468,34393,3600.0491491989997,3601.529620538
c060,3,1,7,29398,30133,29135,4200.0511475719995,4201.9674864
c060,3,1,8,25132,25946,25072,4800.061893173,4802.447081556
c060,3,1,9,22147,22857,22123,5400.073214571999,5402.713950498
c060,3,1,10,19437,20063,19398,6000.077414785,6003.091090261
c060,3,1,11,16887,17530,16907,6600.082826731999,6603.431710401
# search time: 6600.083s
# total time: 26429.885s
c060,4,1,1,847104,847106,785065,600.000160814,600.206479733
c060,4,1,2,174485,176540,171021,1200.00236029,1200.367973519
c060,4,1,3,85304,86043,83442,1800.009279781,1800.500987662
c060,4,1,4,53114,53728,52514,2400.022029703,2400.693928664
c060,4,1,5,42622,43521,42683,3000.029330655,3000.90784721
c060,4,1,6,35203,35963,34948,3600.0334901720003,3601.210268365
c060,4,1,7,29974,30718,29702,4200.050714635,4201.560232622
c060,4,1,8,25391,26119,25339,4800.06716914,4801.813281109
c060,4,1,9,22199,22953,22194,5400.0946130990005,5402.167314577
c060,4,1,10,19106,19774,19065,6000.103605383,6002.487119751
c060,4,1,11,17310,17916,17333,6600.141900076001,6602.643342084
# search time: 6600.142s
# total time: 33032.808s
