    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c069_1.json out/1599249770/results/c069_1_best.csv out/1599249770/results/c069_1_predictions.csv out/1599249770/results/c069_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([9, 3, 4, 0, 0, 5, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([]), o: IntList([9, 3, 4, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 4, 7]), o: IntList([9, 3, 4, 0, 8, 4, 7, 7, 2, 9, 1]) }
#   Datum { i: IntList([8]), o: IntList([9, 3, 4, 0, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([7, 1]), o: IntList([9, 3, 4, 0, 7, 1, 7, 2, 9, 1]) }
#   Datum { i: IntList([4, 0, 9, 3, 0, 8, 8]), o: IntList([9, 3, 4, 0, 4, 0, 9, 3, 0, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([5, 8, 8]), o: IntList([9, 3, 4, 0, 5, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 0, 4, 1, 1, 0]), o: IntList([9, 3, 4, 0, 8, 0, 4, 1, 1, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([6, 6, 6, 6, 6, 6]), o: IntList([9, 3, 4, 0, 6, 6, 6, 6, 6, 6, 7, 2, 9, 1]) }
#   Datum { i: IntList([2, 5, 2, 5, 5]), o: IntList([9, 3, 4, 0, 2, 5, 2, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 1, 6, 3, 2, 7, 3]), o: IntList([9, 3, 4, 0, 8, 1, 6, 3, 2, 7, 3, 7, 2, 9, 1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c069,0,1,1,1038844,1038846,956500,600.000277561,603.572016824
c069,0,1,2,124905,127165,123629,1200.002920722,1204.298628868
c069,0,1,3,79209,80135,79066,1800.005854262,1804.849212724
c069,0,1,4,51085,51788,51218,2400.010149359,2405.433303916
c069,0,1,5,45349,45952,45648,3000.018860171,3006.009567377
c069,0,1,6,35689,36403,36191,3600.023107107,3606.482091023
c069,0,1,7,25628,26283,26139,4200.03209626,4206.793004307
c069,0,1,8,22198,22833,22743,4800.041594632,4807.095728106
c069,0,1,9,17731,18379,18281,5400.042813694,5407.36919982
c069,0,1,10,15370,16022,15921,6000.045824787,6007.659391716
c069,0,1,11,13464,14031,13953,6600.070058644,6607.892860095
# search time: 6600.070s
# total time: 6608.215s
c069,1,1,1,960976,960978,901255,600.003015432,600.475674171
c069,1,1,2,114900,117053,113625,1200.0082946369998,1200.778023303
c069,1,1,3,71669,72529,71575,1800.0144075499998,1801.031473121
c069,1,1,4,44088,44863,44267,2400.0155255399995,2401.269952675
c069,1,1,5,41822,42513,42243,3000.0252232479997,3001.498670243
c069,1,1,6,34098,34810,34598,3600.0261360259997,3601.715952141
c069,1,1,7,25197,25866,25746,4200.027165167,4201.873579865
c069,1,1,8,22097,22750,22639,4800.040845267,4802.006017872
c069,1,1,9,17539,18263,18160,5400.066437358,5402.215895379
c069,1,1,10,15110,15765,15665,6000.081457643,6002.362311529
c069,1,1,11,13096,13757,13679,6600.216070653,6602.707254477
# search time: 6600.216s
# total time: 13211.304s
c069,2,1,1,892875,892877,834334,600.001573733,600.32411281
c069,2,1,2,111376,113190,109898,1200.005176914,1200.526308112
c069,2,1,3,71743,72583,71588,1800.00916029,1800.700355898
c069,2,1,4,44800,45537,44986,2400.011217363,2400.877455869
c069,2,1,5,40652,41097,40766,3000.018720996,3001.025303966
c069,2,1,6,33141,33870,33678,3600.028984161,3601.154777505
c069,2,1,7,25069,25739,25609,4200.042002371,4201.258687302
c069,2,1,8,21668,22331,22227,4800.065749896,4801.414875101
c069,2,1,9,17213,17883,17776,5400.0812414619995,5401.533928622
c069,2,1,10,14511,15279,15182,6000.097492557999,6001.702218898
c069,2,1,11,13158,13594,13480,6600.121884994999,6601.82068019
# search time: 6600.122s
# total time: 19813.358s
c069,3,1,1,959729,959731,885752,600.000485526,600.303388144
c069,3,1,2,110857,113275,109788,1200.00094059,1200.471954609
c069,3,1,3,69886,70688,69708,1800.004039025,1800.610048915
c069,3,1,4,45122,45805,45281,2400.0045625760004,2400.758438014
c069,3,1,5,40903,41658,41412,3000.0093819720005,3000.882626796
c069,3,1,6,33111,33781,33564,3600.0149486650007,3600.981288921
c069,3,1,7,24233,25007,24851,4200.021750706001,4201.071217814
c069,3,1,8,21453,21987,21897,4800.022759443001,4801.1670874
c069,3,1,9,17158,17806,17711,5400.037900997001,5401.29045233
c069,3,1,10,14863,15448,15357,6000.040569329001,6001.387477704
c069,3,1,11,12912,13515,13435,6600.079360593001,6601.530833268
# search time: 6600.079s
# total time: 26415.078s
c069,4,1,1,902333,902335,849756,600.000913436,600.286956865
c069,4,1,2,110764,112344,109048,1200.002334507,1200.419202809
c069,4,1,3,69103,70043,69068,1800.0075009419998,1800.535096132
c069,4,1,4,43655,44451,43893,2400.0142475449998,2400.650088543
c069,4,1,5,40096,40822,40596,3000.023729785,3000.783161712
c069,4,1,6,32654,33434,33212,3600.029236643,3600.894670092
c069,4,1,7,24400,24965,24768,4200.041090504999,4201.020122604
c069,4,1,8,21431,22134,22021,4800.053893388,4801.112594975
c069,4,1,9,17074,17762,17649,5400.05433602,5401.196083652
c069,4,1,10,14938,15543,15457,6000.063552692,6001.26800727
c069,4,1,11,13030,13724,13647,6600.087176319,6601.400157664
# search time: 6600.087s
# total time: 33016.761s
