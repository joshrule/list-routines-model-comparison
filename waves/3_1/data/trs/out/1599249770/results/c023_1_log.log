    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.76s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c023_1.json out/1599249770/results/c023_1_best.csv out/1599249770/results/c023_1_predictions.csv out/1599249770/results/c023_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 0, 5, 4]), o: IntList([2, 8, 0, 5, 4]) }
#   Datum { i: IntList([0, 2, 7, 9, 5, 8, 6, 3, 0, 9]), o: IntList([0, 5, 2, 7, 9, 5, 8, 6, 3, 0, 9]) }
#   Datum { i: IntList([9, 7, 6, 1, 2]), o: IntList([9, 5, 7, 6, 1, 2]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([7, 0, 2]), o: IntList([7, 8, 0, 2]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([1, 5, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([3, 7, 3, 7, 3, 3, 2, 2, 7, 3]), o: IntList([3, 5, 7, 3, 7, 3, 3, 2, 2, 7, 3]) }
#   Datum { i: IntList([9, 7, 2, 3, 0, 1, 6, 8, 4]), o: IntList([9, 5, 7, 2, 3, 0, 1, 6, 8, 4]) }
#   Datum { i: IntList([7, 4, 5, 9, 9, 5, 8]), o: IntList([7, 5, 4, 5, 9, 9, 5, 8]) }
#   Datum { i: IntList([0, 2, 9, 8, 0, 0, 5, 9, 2, 9]), o: IntList([0, 5, 2, 9, 8, 0, 0, 5, 9, 2, 9]) }
#   Datum { i: IntList([5, 2, 2, 6, 1, 9, 4, 2]), o: IntList([5, 5, 2, 2, 6, 1, 9, 4, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c023,0,1,1,960716,960718,881258,600.000030589,603.224540567
c023,0,1,2,228757,231047,224883,1200.003602346,1203.888768516
c023,0,1,3,74072,75128,74728,1800.003884106,1804.425613475
c023,0,1,4,70553,71400,70758,2400.01033419,2404.772432813
c023,0,1,5,61242,62035,60449,3000.02021307,3005.128847614
c023,0,1,6,46254,47066,46346,3600.029657303,3605.71899304
c023,0,1,7,40306,41069,40355,4200.03504932,4206.253391421
c023,0,1,8,27952,28752,28370,4800.041850973001,4806.967352299
c023,0,1,9,24310,24812,24305,5400.076618267,5407.398736126
c023,0,1,10,21572,21972,21542,6000.088649253001,6007.782678076
c023,0,1,11,16521,17223,16896,6600.122255106001,6608.258580234
# search time: 6600.122s
# total time: 6608.606s
c023,1,1,1,943864,943866,874937,600.000127862,600.561252816
c023,1,1,2,213925,216106,209784,1200.001186774,1200.902037032
c023,1,1,3,73622,74612,74198,1800.009086154,1801.130633227
c023,1,1,4,66229,66981,66422,2400.009358289,2401.287288005
c023,1,1,5,60061,60787,59252,3000.009380593,3001.467656413
c023,1,1,6,45376,46131,45421,3600.0229161,3601.794132443
c023,1,1,7,39611,40440,39762,4200.030977637,4202.150468323
c023,1,1,8,26747,27539,27169,4800.044378016,4802.573902261
c023,1,1,9,24447,25092,24622,5400.053144839,5402.813357229
c023,1,1,10,20607,21166,20773,6000.072627621,6003.005026249
c023,1,1,11,16448,17156,16778,6600.094371774,6603.133602246
# search time: 6600.094s
# total time: 13212.251s
c023,2,1,1,887741,887743,820032,600.000188356,600.400200593
c023,2,1,2,216042,218209,212123,1200.001728788,1200.608508724
c023,2,1,3,72656,73715,73260,1800.012345742,1800.783730491
c023,2,1,4,66839,67591,66985,2400.027505208,2400.975241648
c023,2,1,5,56898,57643,56184,3000.031913752,3001.111480894
c023,2,1,6,44720,45520,44827,3600.0393214260002,3601.305857435
c023,2,1,7,38937,39664,38994,4200.04470647,4201.535441538
c023,2,1,8,26857,27644,27280,4800.049625788,4801.793416526
c023,2,1,9,23401,24082,23566,5400.069734764001,5401.981984537
c023,2,1,10,20331,21019,20630,6000.0935570930005,6002.159422823
c023,2,1,11,16133,16841,16538,6600.106885808001,6602.337789477
# search time: 6600.107s
# total time: 19814.998s
c023,3,1,1,879318,879320,824865,600.00031581,600.338934343
c023,3,1,2,219481,221394,215432,1200.001458066,1200.541181805
c023,3,1,3,71464,72493,72173,1800.0044969229998,1800.688518783
c023,3,1,4,65980,66696,66246,2400.0108738559998,2400.811631412
c023,3,1,5,59007,59736,58228,3000.025877776,3000.907291465
c023,3,1,6,46032,46816,46086,3600.0372037340003,3601.045640514
c023,3,1,7,41036,41765,41013,4200.04823845,4201.231518677
c023,3,1,8,27298,28142,27765,4800.056441946,4801.448096662
c023,3,1,9,24915,25483,24915,5400.084489696,5401.601430366
c023,3,1,10,20517,21258,20841,6000.099846079,6001.745539083
c023,3,1,11,17516,18101,17698,6600.116184722,6601.854550833
# search time: 6600.116s
# total time: 26417.093s
c023,4,1,1,858888,858890,811851,600.000339081,600.282576666
c023,4,1,2,222723,224791,218839,1200.001834151,1200.449274162
c023,4,1,3,73010,74134,73666,1800.0029986109998,1800.543687937
c023,4,1,4,66704,67460,66840,2400.0068553029996,2400.627974199
c023,4,1,5,56967,57670,56364,3000.009626874,3000.714221553
c023,4,1,6,44315,44913,44216,3600.0115235549997,3600.823731693
c023,4,1,7,38713,39485,38898,4200.011548329,4200.950637035
c023,4,1,8,26793,27648,27276,4800.035975724,4801.150319788
c023,4,1,9,23388,23876,23458,5400.0513944760005,5401.303958158
c023,4,1,10,20245,20850,20470,6000.0562078640005,6001.387937059
c023,4,1,11,16699,17175,16885,6600.080411109,6601.499190303
# search time: 6600.080s
# total time: 33018.935s
