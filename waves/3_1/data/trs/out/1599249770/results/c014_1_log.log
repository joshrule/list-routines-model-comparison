    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.65s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c014_1.json out/1599249770/results/c014_1_best.csv out/1599249770/results/c014_1_predictions.csv out/1599249770/results/c014_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 3, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([9, 9, 1]), o: IntList([1]) }
#   Datum { i: IntList([0, 7, 9, 6, 1, 8, 2, 3]), o: IntList([9, 6, 1, 8, 2]) }
#   Datum { i: IntList([3, 0, 5, 7, 7, 5, 3, 0, 5]), o: IntList([5, 7, 7, 5, 3]) }
#   Datum { i: IntList([9]), o: IntList([]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([2, 3, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 0, 0, 1, 1]), o: IntList([0, 1, 1]) }
#   Datum { i: IntList([4, 2, 3, 3, 6, 7, 8]), o: IntList([3, 3, 6, 7, 8]) }
#   Datum { i: IntList([5, 4, 5, 8, 6, 2, 8]), o: IntList([5, 8, 6, 2, 8]) }
#   Datum { i: IntList([9, 9, 4, 4, 9, 4]), o: IntList([4, 4, 9, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c014,0,1,1,1013005,1013007,951651,600.002221207,603.311946949
c014,0,1,2,328690,330681,321792,1200.004436017,1204.050380289
c014,0,1,3,237645,238761,230403,1800.007305849,1804.458039557
c014,0,1,4,116527,117796,116085,2400.007509658,2404.778789322
c014,0,1,5,61545,62415,61994,3000.008840742,3005.086799373
c014,0,1,6,69418,70128,67857,3600.00965453,3605.493278675
c014,0,1,7,79851,80514,77001,4200.012979528,4205.752645918
c014,0,1,8,68961,69753,66694,4800.0132777750005,4806.071898994
c014,0,1,9,60493,61214,58470,5400.015333801,5406.328329122
c014,0,1,10,49497,50317,48117,6000.021744968,6006.603677107
c014,0,1,11,43048,43747,41909,6600.021958495,6606.84938318
# search time: 6600.022s
# total time: 6607.256s
c014,1,1,1,952088,952090,877422,600.000531434,600.375263101
c014,1,1,2,321324,323523,314755,1200.0014119779999,1200.663397295
c014,1,1,3,237722,238931,230567,1800.0021902839999,1800.873270716
c014,1,1,4,117835,118967,117232,2400.007050071,2401.043643031
c014,1,1,5,61278,62215,61800,3000.015553019,3001.222818259
c014,1,1,6,69062,69859,67647,3600.018380015,3601.4133541
c014,1,1,7,79319,80152,76773,4200.025030011,4201.563483478
c014,1,1,8,69161,69990,66910,4800.0266396140005,4801.725565922
c014,1,1,9,60512,61199,58472,5400.033809962,5401.867103948
c014,1,1,10,48915,49659,47484,6000.035869966,6002.020142298
c014,1,1,11,42618,43376,41458,6600.046399513,6602.203142064
# search time: 6600.046s
# total time: 13210.000s
c014,2,1,1,895911,895913,829477,600.000200375,600.273136967
c014,2,1,2,318698,320822,312105,1200.003775479,1200.470470142
c014,2,1,3,239632,240747,232369,1800.004972719,1800.636430192
c014,2,1,4,115555,116833,114972,2400.007640179,2400.782078079
c014,2,1,5,61375,62233,61816,3000.009673156,3000.892154562
c014,2,1,6,68484,69187,66972,3600.0098619650003,3601.057228767
c014,2,1,7,79685,80398,77035,4200.0139882660005,4201.173895721
c014,2,1,8,69264,69997,67019,4800.020196813,4801.301437153
c014,2,1,9,60960,61773,59060,5400.0221346690005,5401.423327591
c014,2,1,10,50171,50807,48513,6000.031766997001,6001.530696601
c014,2,1,11,42131,43029,41174,6600.055765731001,6601.655296481
# search time: 6600.056s
# total time: 19812.252s
c014,3,1,1,919723,919725,845671,600.003492672,600.241513818
c014,3,1,2,320515,322625,313711,1200.0055151870001,1200.426803285
c014,3,1,3,239468,240680,232249,1800.0062818360002,1800.585605524
c014,3,1,4,117234,118504,116703,2400.007881161,2400.689898372
c014,3,1,5,61031,61816,61409,3000.0145227840003,3000.82013678
c014,3,1,6,66944,67714,65535,3600.0147496940003,3600.962587812
c014,3,1,7,81095,81868,78411,4200.019316397001,4201.068322749
c014,3,1,8,67046,67872,64834,4800.028465130001,4801.183328087
c014,3,1,9,61048,61683,58872,5400.062751531001,5401.310464703
c014,3,1,10,49734,50529,48304,6000.072813349001,6001.423493991
c014,3,1,11,42260,43019,41085,6600.109060975001,6601.587344334
# search time: 6600.109s
# total time: 26414.315s
c014,4,1,1,836016,836018,787369,600.001340956,600.204970473
c014,4,1,2,318694,320733,311997,1200.005533963,1200.361019654
c014,4,1,3,238393,239444,231139,1800.006858972,1800.48014377
c014,4,1,4,112603,113860,112214,2400.00868099,2400.567636596
c014,4,1,5,61468,62289,61887,3000.018125998,3000.677333638
c014,4,1,6,68987,69656,67414,3600.0193028129997,3600.81703174
c014,4,1,7,81036,81730,78389,4200.020249742,4200.906506967
c014,4,1,8,70787,71589,68554,4800.0204981589995,4801.010457266
c014,4,1,9,61891,62682,59926,5400.025749302999,5401.096055491
c014,4,1,10,48931,49733,47505,6000.031131909,6001.18730317
c014,4,1,11,42422,43203,41293,6600.042767428,6601.306568322
# search time: 6600.043s
# total time: 33016.087s
