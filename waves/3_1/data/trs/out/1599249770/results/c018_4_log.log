    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.70s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c018_4.json out/1599249770/results/c018_4_best.csv out/1599249770/results/c018_4_predictions.csv out/1599249770/results/c018_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 7, 7, 7, 7, 7, 7]), o: IntList([7, 7, 7, 7, 7, 3, 7]) }
#   Datum { i: IntList([8, 8, 6, 8, 5, 1, 4, 0, 5]), o: IntList([8, 8, 6, 8, 5, 3, 4, 0, 5]) }
#   Datum { i: IntList([5, 3, 2, 8, 4, 6]), o: IntList([5, 3, 2, 8, 4, 3]) }
#   Datum { i: IntList([9, 9, 3, 0, 0, 9, 0, 0, 9, 3]), o: IntList([9, 9, 3, 0, 0, 3, 0, 0, 9, 3]) }
#   Datum { i: IntList([9, 3, 1, 8, 3, 9, 3, 3, 1]), o: IntList([9, 3, 1, 8, 3, 3, 3, 3, 1]) }
#   Datum { i: IntList([0, 6, 0, 6, 6, 6]), o: IntList([0, 6, 0, 6, 6, 3]) }
#   Datum { i: IntList([6, 1, 1, 6, 1, 6, 4]), o: IntList([6, 1, 1, 6, 1, 3, 4]) }
#   Datum { i: IntList([0, 9, 7, 8, 1, 4, 2, 5, 3, 8]), o: IntList([0, 9, 7, 8, 1, 3, 2, 5, 3, 8]) }
#   Datum { i: IntList([8, 8, 5, 0, 5, 8]), o: IntList([8, 8, 5, 0, 5, 3]) }
#   Datum { i: IntList([6, 5, 9, 6, 9, 9, 5, 8]), o: IntList([6, 5, 9, 6, 9, 3, 5, 8]) }
#   Datum { i: IntList([7, 5, 7, 7, 0, 5, 7, 5, 5]), o: IntList([7, 5, 7, 7, 0, 3, 7, 5, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c018,0,4,1,881446,881448,812432,600.00001942,602.890815547
c018,0,4,2,169500,171599,166726,1200.0001632839999,1203.627663502
c018,0,4,3,77733,78676,76974,1800.0024150059999,1804.247667019
c018,0,4,4,69397,70180,67466,2400.00758898,2404.741078558
c018,0,4,5,49927,50897,48927,3000.011660214,3005.306527846
c018,0,4,6,33129,33938,33050,3600.026496809,3606.048747109
c018,0,4,7,31778,32508,31514,4200.044957206,4206.9899793
c018,0,4,8,27867,28598,27833,4800.050948727,4807.790242446
c018,0,4,9,23294,24006,23365,5400.077538838,5408.72240877
c018,0,4,10,21625,22275,21610,6000.082510419,6009.658100669
c018,0,4,11,19647,20339,19742,6600.084213923,6610.456806522
# search time: 6600.084s
# total time: 6610.669s
c018,1,4,1,826875,826877,774842,600.000185211,600.401593415
c018,1,4,2,166767,168659,163001,1200.001005474,1200.738200262
c018,1,4,3,82826,84002,81840,1800.005033786,1800.977119035
c018,1,4,4,67782,68593,66311,2400.006057332,2401.202247061
c018,1,4,5,48810,49773,48182,3000.019991868,3001.421122174
c018,1,4,6,33102,33824,32918,3600.035785931,3601.839761587
c018,1,4,7,30617,31366,30489,4200.052242216,4202.246631779
c018,1,4,8,26892,27655,26883,4800.061483208,4802.710631792
c018,1,4,9,23096,23746,23093,5400.082781075,5403.118040088
c018,1,4,10,21535,22221,21492,6000.0881537489995,6003.55053977
c018,1,4,11,19556,20227,19505,6600.138797346999,6604.002766533
# search time: 6600.139s
# total time: 13214.963s
c018,2,4,1,892750,892752,841813,600.00077417,600.319290192
c018,2,4,2,163907,165571,160027,1200.000799444,1200.520924128
c018,2,4,3,80423,81473,79388,1800.0037043080001,1800.660700708
c018,2,4,4,64749,65602,62572,2400.016421715,2400.824075067
c018,2,4,5,47321,48330,46236,3000.030039536,3001.00187409
c018,2,4,6,32307,33069,32274,3600.045901246,3601.272268493
c018,2,4,7,29440,30084,29147,4200.053879594,4201.4836991
c018,2,4,8,26497,27333,26574,4800.058780961001,4801.700388636
c018,2,4,9,21989,22701,22119,5400.071497733001,5402.055881589
c018,2,4,10,21068,21741,21030,6000.076399872001,6002.374713928
c018,2,4,11,18853,19530,18904,6600.120232405001,6602.676523832
# search time: 6600.120s
# total time: 19817.919s
c018,3,4,1,809643,809645,761508,600.000099149,600.254896909
c018,3,4,2,168277,170339,164932,1200.003377199,1200.443459765
c018,3,4,3,81226,82223,80119,1800.012568513,1800.566983079
c018,3,4,4,64313,65134,62386,2400.014238856,2400.67267084
c018,3,4,5,47574,48207,46477,3000.0192475679996,3000.817141551
c018,3,4,6,32919,33707,32861,3600.0327965409997,3601.0252766
c018,3,4,7,29863,30625,29742,4200.040928441,4201.287881296
c018,3,4,8,26264,27065,26266,4800.049864286,4801.477924964
c018,3,4,9,22815,23468,22877,5400.100152653,5401.814130279
c018,3,4,10,21032,21769,21110,6000.101848137,6002.021521256
c018,3,4,11,19507,20118,19475,6600.112393205,6602.286566716
# search time: 6600.112s
# total time: 26420.532s
c018,4,4,1,875675,875677,806223,600.000412886,600.233589086
c018,4,4,2,165321,166451,161390,1200.0014578300002,1200.392864781
c018,4,4,3,74669,75581,73992,1800.008903542,1800.514663458
c018,4,4,4,65565,66396,64134,2400.013381142,2400.626075276
c018,4,4,5,48745,49552,48101,3000.0135874420002,3000.725455847
c018,4,4,6,33141,33815,32985,3600.027685032,3600.920757724
c018,4,4,7,30198,30907,30120,4200.029087025,4201.112360106
c018,4,4,8,26775,27483,26691,4800.035843634,4801.304087692
c018,4,4,9,22215,23040,22337,5400.0553554200005,5401.519819879
c018,4,4,10,21148,21762,21085,6000.075063776,6001.695027295
c018,4,4,11,19101,19831,19172,6600.090026465,6601.860569433
# search time: 6600.090s
# total time: 33022.619s
