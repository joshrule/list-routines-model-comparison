    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c074_3.json out/1599249770/results/c074_3_best.csv out/1599249770/results/c074_3_predictions.csv out/1599249770/results/c074_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 2, 7, 6, 8, 6]), o: IntList([8, 8]) }
#   Datum { i: IntList([9, 2, 0, 5, 7, 5, 2, 3, 4, 7]), o: IntList([9]) }
#   Datum { i: IntList([8, 8, 8, 2, 7, 7, 2]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([0]), o: IntList([]) }
#   Datum { i: IntList([8, 9, 9, 1, 1, 9, 8, 8, 9, 1]), o: IntList([8, 9, 9, 9, 8, 8, 9]) }
#   Datum { i: IntList([0, 0, 0]), o: IntList([]) }
#   Datum { i: IntList([9, 9, 7, 6, 7]), o: IntList([9, 9]) }
#   Datum { i: IntList([2, 8, 8, 8, 2, 8, 2, 2]), o: IntList([8, 8, 8, 8]) }
#   Datum { i: IntList([7, 7, 8, 8, 7, 7, 8, 8, 8, 7]), o: IntList([8, 8, 8, 8, 8]) }
#   Datum { i: IntList([6, 7, 8, 4, 3, 4]), o: IntList([8]) }
#   Datum { i: IntList([3, 8, 8, 3, 9, 9, 1, 9, 0, 9]), o: IntList([8, 8, 9, 9, 9, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c074,0,3,1,1019757,1019759,958719,600.000274942,602.580957288
c074,0,3,2,325197,327578,318252,1200.0019967,1203.281994267
c074,0,3,3,167315,168460,166880,1800.004243764,1803.754495975
c074,0,3,4,114433,115241,114338,2400.0050022719997,2404.217906415
c074,0,3,5,112248,113040,108792,3000.0098938419997,3004.579463367
c074,0,3,6,59376,60148,57953,3600.0203386549997,3604.985926302
c074,0,3,7,56878,57600,55650,4200.023680003,4205.466569243
c074,0,3,8,51128,51901,50147,4800.027658412,4805.810308601
c074,0,3,9,42441,43053,41567,5400.030378402,5406.174383404
c074,0,3,10,33648,34304,33043,6000.031624311,6006.56039485
c074,0,3,11,31891,32583,31248,6600.040870439,6607.024951814
# search time: 6600.041s
# total time: 6607.267s
c074,1,3,1,922703,922705,845804,600.001735239,600.354266722
c074,1,3,2,317938,319896,310918,1200.001906824,1200.658228912
c074,1,3,3,162153,163218,161540,1800.0083011299998,1800.906219832
c074,1,3,4,112259,113016,112215,2400.010232189,2401.123647113
c074,1,3,5,112722,113378,109177,3000.011990873,3001.314046333
c074,1,3,6,58039,58846,56625,3600.0175893039996,3601.491966825
c074,1,3,7,56264,57031,55107,4200.018672438,4201.704919507
c074,1,3,8,50334,51076,49271,4800.023353565,4801.918496846
c074,1,3,9,41145,41802,40366,5400.027731974001,5402.111913165
c074,1,3,10,33696,34355,33085,6000.0491808100005,6002.323436833
c074,1,3,11,31362,32056,30823,6600.060396472,6602.593227116
# search time: 6600.060s
# total time: 13210.194s
c074,2,3,1,916946,916948,837458,600.000058267,600.252385095
c074,2,3,2,317635,318623,309488,1200.0000741650001,1200.447875161
c074,2,3,3,158995,160063,158404,1800.0022600720001,1800.61325847
c074,2,3,4,110521,111396,110582,2400.0047095110003,2400.749108758
c074,2,3,5,111279,112012,107916,3000.0066458750002,3000.913322945
c074,2,3,6,57496,58234,56061,3600.0071865960003,3601.045997734
c074,2,3,7,55088,55785,53845,4200.008896364,4201.170092306
c074,2,3,8,49571,50328,48593,4800.015278845,4801.312220658
c074,2,3,9,41042,41789,40301,5400.015781257,5401.426572171
c074,2,3,10,33363,34100,32918,6000.036946183,6001.594646938
c074,2,3,11,31013,31650,30465,6600.040512371999,6601.742631249
# search time: 6600.041s
# total time: 19812.222s
c074,3,3,1,980915,980917,899471,600.004251879,600.254226445
c074,3,3,2,316862,317654,308477,1200.004562827,1200.42358206
c074,3,3,3,156311,157391,155776,1800.0096255170001,1800.573228968
c074,3,3,4,108691,109457,108722,2400.017091791,2400.693649415
c074,3,3,5,111064,111760,107587,3000.020259908,3000.810261029
c074,3,3,6,50829,51539,49525,3600.0308589409997,3600.953770801
c074,3,3,7,55356,56059,54143,4200.038133370999,4201.091727958
c074,3,3,8,49037,49693,47987,4800.039015199,4801.197367687
c074,3,3,9,40367,41104,39673,5400.060510511999,5401.335924404
c074,3,3,10,33394,34047,32843,6000.067963533999,6001.443382704
c074,3,3,11,30317,31013,29751,6600.068965398999,6601.563692226
# search time: 6600.069s
# total time: 26414.099s
c074,4,3,1,930735,930737,876908,600.001960169,600.204442822
c074,4,3,2,310548,312871,303824,1200.0026326369998,1200.353575726
c074,4,3,3,155982,157025,155483,1800.004518495,1800.456485483
c074,4,3,4,107170,108008,107147,2400.005845978,2400.557165907
c074,4,3,5,109711,110451,106412,3000.008788326,3000.646411258
c074,4,3,6,57110,57881,55765,3600.012375987,3600.750647903
c074,4,3,7,55325,55975,54119,4200.019364154,4200.859392055
c074,4,3,8,48304,48940,47283,4800.030883407,4800.959891139
c074,4,3,9,40327,41016,39562,5400.040236707,5401.059540483
c074,4,3,10,32923,33668,32487,6000.044373656,6001.171949209
c074,4,3,11,30801,31394,30194,6600.044446282,6601.278095722
# search time: 6600.044s
# total time: 33015.801s
