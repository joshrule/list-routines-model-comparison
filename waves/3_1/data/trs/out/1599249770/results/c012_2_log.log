    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized + debuginfo] target(s) in 0.91s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c012_2.json out/1599249770/results/c012_2_best.csv out/1599249770/results/c012_2_predictions.csv out/1599249770/results/c012_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 3, 4, 7, 6]), o: IntList([3, 4, 7]) }
#   Datum { i: IntList([7, 8, 2, 0, 4, 2]), o: IntList([8, 2, 0]) }
#   Datum { i: IntList([6]), o: IntList([]) }
#   Datum { i: IntList([2, 9, 4]), o: IntList([9, 4]) }
#   Datum { i: IntList([6, 8]), o: IntList([8]) }
#   Datum { i: IntList([1, 6, 1]), o: IntList([6, 1]) }
#   Datum { i: IntList([0, 8, 0, 8, 8, 0, 8]), o: IntList([8, 0, 8]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([5, 5, 5]), o: IntList([5, 5]) }
#   Datum { i: IntList([9, 3, 2, 6]), o: IntList([3, 2, 6]) }
#   Datum { i: IntList([4, 4]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c012,0,2,1,949460,949462,872519,600.005020209,603.14637922
c012,0,2,2,257615,259692,252489,1200.008076824,1203.871812266
c012,0,2,3,121105,122265,119424,1800.011389349,1804.616967976
c012,0,2,4,145678,146437,139338,2400.013500581,2405.088756891
c012,0,2,5,140825,141640,135764,3000.0263177859997,3005.52344935
c012,0,2,6,129536,130583,125007,3600.027947355,3605.856693983
c012,0,2,7,108668,109658,105005,4200.029840775,4206.19896761
c012,0,2,8,90890,91911,87756,4800.037329680999,4806.522794008
c012,0,2,9,91175,92142,87820,5400.0380835079995,5406.831646486
c012,0,2,10,80009,80998,76912,6000.04164687,6007.162614582
c012,0,2,11,70802,71689,67937,6600.046482215,6607.498518056
# search time: 6600.046s
# total time: 6608.000s
c012,1,2,1,868192,868194,804591,600.000117715,600.426395365
c012,1,2,2,259102,261432,254237,1200.000740443,1200.760221177
c012,1,2,3,113259,114245,111539,1800.0028568480002,1801.139168638
c012,1,2,4,146438,147096,140066,2400.0041637980003,2401.363876679
c012,1,2,5,138882,139667,133726,3000.0054294310003,3001.529452035
c012,1,2,6,127713,128712,123170,3600.008940178,3601.685497086
c012,1,2,7,111795,112957,108106,4200.016277415,4201.871037777
c012,1,2,8,91349,92229,88181,4800.017308283001,4802.035138107
c012,1,2,9,89796,90798,86250,5400.020126683001,5402.20886
c012,1,2,10,79799,80704,76591,6000.023140601001,6002.380724487
c012,1,2,11,70168,71080,67350,6600.024679642001,6602.548313692
# search time: 6600.025s
# total time: 13210.970s
c012,2,2,1,902423,902425,837439,600.008389834,600.322261237
c012,2,2,2,258040,260409,253228,1200.009651808,1200.512239417
c012,2,2,3,121168,122213,119239,1800.012244248,1800.695291151
c012,2,2,4,144863,145545,138540,2400.019659068,2400.842274227
c012,2,2,5,137436,138270,132380,3000.0201461789998,3000.954340088
c012,2,2,6,128780,129558,123997,3600.0210906249995,3601.065540079
c012,2,2,7,108767,109889,105128,4200.023324833,4201.174029405
c012,2,2,8,89811,90877,86796,4800.023926284999,4801.285117969
c012,2,2,9,89690,90568,86140,5400.026307679999,5401.429883006
c012,2,2,10,79007,79858,75853,6000.035725563999,6001.571321339
c012,2,2,11,70603,71441,67694,6600.036988144999,6601.709684276
# search time: 6600.037s
# total time: 19813.081s
c012,3,2,1,830877,830879,783795,600.006382722,600.254975312
c012,3,2,2,262046,263368,256220,1200.0075698350001,1200.409157536
c012,3,2,3,121751,122715,119677,1800.0107465400001,1800.567377689
c012,3,2,4,143392,144154,137298,2400.023002149,2400.680876662
c012,3,2,5,138024,138853,132963,3000.023428894,3000.790216619
c012,3,2,6,128783,129872,124345,3600.025730289,3600.889535655
c012,3,2,7,107971,109155,104379,4200.03204521,4200.985575578
c012,3,2,8,89161,90074,85942,4800.040131204,4801.093174778
c012,3,2,9,89012,89911,85514,5400.040375921,5401.198474001
c012,3,2,10,80525,81451,77283,6000.053254755,6001.317001287
c012,3,2,11,69694,70569,66835,6600.055391036,6601.436909739
# search time: 6600.055s
# total time: 26414.904s
c012,4,2,1,854829,854831,803441,600.000495651,600.247296429
c012,4,2,2,252678,254867,247796,1200.017076371,1200.39262867
c012,4,2,3,120562,121555,118516,1800.0217756289999,1800.532634343
c012,4,2,4,145241,145789,138935,2400.027553072,2400.650803465
c012,4,2,5,137502,138202,132246,3000.032284678,3000.747303184
c012,4,2,6,127240,128303,122892,3600.036582278,3600.839840464
c012,4,2,7,110087,111205,106316,4200.038768194,4200.924410335
c012,4,2,8,90681,91656,87524,4800.039593396,4801.005690701
c012,4,2,9,89474,90392,85889,5400.043167939,5401.128197219
c012,4,2,10,79433,80341,76179,6000.0525587970005,6001.219660684
c012,4,2,11,70326,71061,67387,6600.053221442001,6601.325981754
# search time: 6600.053s
# total time: 33016.608s
