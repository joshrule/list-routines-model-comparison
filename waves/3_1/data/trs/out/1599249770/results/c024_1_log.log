    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.77s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c024_1.json out/1599249770/results/c024_1_best.csv out/1599249770/results/c024_1_predictions.csv out/1599249770/results/c024_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 7, 4, 1]), o: IntList([8, 5, 7, 4, 1]) }
#   Datum { i: IntList([0, 8, 3]), o: IntList([0, 8, 8, 3]) }
#   Datum { i: IntList([9, 9, 4, 9, 6, 1]), o: IntList([9, 5, 9, 4, 9, 6, 1]) }
#   Datum { i: IntList([7, 6, 0, 7, 6]), o: IntList([7, 5, 6, 0, 7, 6]) }
#   Datum { i: IntList([5, 2]), o: IntList([5, 5, 2]) }
#   Datum { i: IntList([6, 7, 1, 3, 5, 6, 9, 0, 4, 3]), o: IntList([6, 5, 7, 1, 3, 5, 6, 9, 0, 4, 3]) }
#   Datum { i: IntList([9, 9, 2, 0, 0, 1, 2, 8, 4, 2]), o: IntList([9, 5, 9, 2, 0, 0, 1, 2, 8, 4, 2]) }
#   Datum { i: IntList([4, 3, 4, 3, 8, 4, 4, 3]), o: IntList([4, 8, 3, 4, 3, 8, 4, 4, 3]) }
#   Datum { i: IntList([0, 9, 9, 2, 6, 0, 1, 4, 6]), o: IntList([0, 8, 9, 9, 2, 6, 0, 1, 4, 6]) }
#   Datum { i: IntList([6, 0, 6, 5, 0, 5, 7]), o: IntList([6, 5, 0, 6, 5, 0, 5, 7]) }
#   Datum { i: IntList([3, 1, 6, 8, 2, 9, 4, 5, 0, 7]), o: IntList([3, 8, 1, 6, 8, 2, 9, 4, 5, 0, 7]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c024,0,1,1,931808,931810,877131,600.001206456,603.130026647
c024,0,1,2,225106,226355,220487,1200.003050698,1203.782101115
c024,0,1,3,140004,141023,139343,1800.005441355,1804.247814488
c024,0,1,4,95637,96479,95365,2400.0079853979996,2404.598266402
c024,0,1,5,72054,72843,71960,3000.0134633279995,3004.913926608
c024,0,1,6,63181,63976,63203,3600.0173180509996,3605.166139468
c024,0,1,7,45778,46566,46049,4200.017518527,4205.41358416
c024,0,1,8,29056,29737,29436,4800.034062635,4805.746776404
c024,0,1,9,19524,20229,20095,5400.040913424,5406.083047621
c024,0,1,10,17428,18129,17978,6000.043509074,6006.438823498
c024,0,1,11,15399,16056,15922,6600.078859492,6606.874227723
# search time: 6600.079s
# total time: 6607.030s
c024,1,1,1,880540,880542,834263,600.000071503,600.435716204
c024,1,1,2,221547,223785,217942,1200.0004831719998,1200.729571235
c024,1,1,3,130104,131111,129817,1800.0006806469999,1800.9555288
c024,1,1,4,85104,85874,85181,2400.0008842939997,2401.148636912
c024,1,1,5,66350,67111,66481,3000.0035553729995,3001.355483006
c024,1,1,6,65769,66579,65642,3600.0249050049997,3601.544164353
c024,1,1,7,46991,47650,47133,4200.031428905,4201.719861344
c024,1,1,8,31434,32156,31766,4800.052523133,4801.941519082
c024,1,1,9,18840,19462,19354,5400.063441756,5402.1351849
c024,1,1,10,17248,17831,17685,6000.098546098,6002.422199914
c024,1,1,11,15275,15850,15733,6600.115042385,6602.648227315
# search time: 6600.115s
# total time: 13210.164s
c024,2,1,1,908354,908356,832336,600.000432508,600.330164429
c024,2,1,2,222496,224735,218667,1200.000436618,1200.570666699
c024,2,1,3,129540,130500,129245,1800.004313825,1800.773110501
c024,2,1,4,85829,86511,85791,2400.006150571,2400.924351264
c024,2,1,5,64156,64925,64371,3000.009472828,3001.033712417
c024,2,1,6,64665,65423,64447,3600.0203940290003,3601.156381053
c024,2,1,7,45413,46157,45629,4200.022884673001,4201.259369766
c024,2,1,8,31402,32087,31712,4800.036304777001,4801.415012049
c024,2,1,9,18306,18961,18873,5400.04268577,5401.550310432
c024,2,1,10,17432,18019,17863,6000.0630256330005,6001.687158697
c024,2,1,11,14774,15558,15436,6600.0706045570005,6601.819506906
# search time: 6600.071s
# total time: 19812.423s
c024,3,1,1,889176,889178,819391,600.00003712,600.300694925
c024,3,1,2,218994,221175,215259,1200.000129794,1200.471731588
c024,3,1,3,130990,132066,130771,1800.005308548,1800.599425601
c024,3,1,4,85412,86161,85492,2400.007824045,2400.704304428
c024,3,1,5,65390,66191,65605,3000.012794975,3000.828187878
c024,3,1,6,66796,67457,66607,3600.0203914539998,3600.945237393
c024,3,1,7,46961,47748,47189,4200.027982453,4201.026276706
c024,3,1,8,31900,32721,32358,4800.03947947,4801.17455388
c024,3,1,9,18777,19552,19447,5400.056133909,5401.308800608
c024,3,1,10,17200,17797,17640,6000.069262306,6001.451932252
c024,3,1,11,15042,15665,15541,6600.108398397,6601.610717227
# search time: 6600.108s
# total time: 26414.453s
c024,4,1,1,890939,890941,840444,600.000267263,600.267303444
c024,4,1,2,222295,224346,218518,1200.0020194089998,1200.398124084
c024,4,1,3,130508,131549,130175,1800.0048487359998,1800.533884128
c024,4,1,4,85290,86097,85361,2400.0049560109996,2400.667125729
c024,4,1,5,65094,65819,65140,3000.0066123999995,3000.775197496
c024,4,1,6,63185,63931,63166,3600.0137355749994,3600.865283972
c024,4,1,7,43364,44146,43708,4200.027943339,4200.94493035
c024,4,1,8,28806,29593,29284,4800.049150897999,4801.049466903
c024,4,1,9,18350,19019,18919,5400.050928037,5401.125781989
c024,4,1,10,17104,17743,17633,6000.072053586,6001.249141498
c024,4,1,11,15175,15885,15767,6600.087792371,6601.355832136
# search time: 6600.088s
# total time: 33016.087s
