    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.61s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c007_1.json out/1599249770/results/c007_1_best.csv out/1599249770/results/c007_1_predictions.csv out/1599249770/results/c007_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 2, 2, 0]), o: IntList([0, 2]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([1]), o: IntList([1]) }
#   Datum { i: IntList([3, 3, 1, 9, 8]), o: IntList([3, 3]) }
#   Datum { i: IntList([7, 8, 5]), o: IntList([7, 8]) }
#   Datum { i: IntList([9, 9, 1, 4, 1, 1, 4, 4, 4, 4]), o: IntList([9, 9]) }
#   Datum { i: IntList([7]), o: IntList([7]) }
#   Datum { i: IntList([2]), o: IntList([2]) }
#   Datum { i: IntList([8]), o: IntList([8]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([5, 0, 0]), o: IntList([5, 0]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c007,0,1,1,979909,979911,903862,600.000118554,603.199110822
c007,0,1,2,320401,321628,310758,1200.001970436,1203.945910133
c007,0,1,3,324164,325195,310137,1800.003632037,1804.473683681
c007,0,1,4,239564,240542,231473,2400.005121593,2404.828722136
c007,0,1,5,183217,184236,175559,3000.006399307,3005.158963817
c007,0,1,6,147365,148298,141127,3600.006762962,3605.523829024
c007,0,1,7,128169,129212,122577,4200.00858745,4205.777619075
c007,0,1,8,121715,122736,116552,4800.009732063,4806.04713307
c007,0,1,9,112143,113071,107278,5400.013906628,5406.39278818
c007,0,1,10,104908,105740,100285,6000.015914586,6006.633595621
c007,0,1,11,93146,93971,88964,6600.019513854,6606.889950011
# search time: 6600.020s
# total time: 6607.325s
c007,1,1,1,888867,888869,836205,600.003742332,600.370702268
c007,1,1,2,307887,309427,298943,1200.00640596,1200.682624122
c007,1,1,3,304942,306032,291489,1800.009176944,1800.896026585
c007,1,1,4,232760,233851,225055,2400.009752131,2401.060316408
c007,1,1,5,181346,182388,173881,3000.011812068,3001.219312779
c007,1,1,6,145742,146763,139621,3600.021064871,3601.3961634
c007,1,1,7,123546,124635,118289,4200.021878186,4201.53418949
c007,1,1,8,116383,117421,111374,4800.022049625,4801.663696629
c007,1,1,9,108018,109052,103492,5400.023164795,5401.803324716
c007,1,1,10,102507,103319,97911,6000.023868649,6002.002082121
c007,1,1,11,90983,91813,86798,6600.046990984,6602.172661455
# search time: 6600.047s
# total time: 13209.909s
c007,2,1,1,892176,892178,841699,600.000197507,600.268269183
c007,2,1,2,301276,302645,292447,1200.002380132,1200.465327444
c007,2,1,3,311534,312607,298124,1800.003260786,1800.60570312
c007,2,1,4,227640,228547,220023,2400.007311813,2400.743503744
c007,2,1,5,177640,178656,170412,3000.007375365,3000.864295588
c007,2,1,6,144057,145188,138067,3600.009210964,3600.983151039
c007,2,1,7,122428,123538,117192,4200.010837097,4201.142620055
c007,2,1,8,117781,118797,112632,4800.019399361,4801.26209962
c007,2,1,9,109047,110159,104238,5400.022040897,5401.382244912
c007,2,1,10,101819,102673,97332,6000.051789329,6001.524627625
c007,2,1,11,90540,91469,86472,6600.051973875,6601.641023253
# search time: 6600.052s
# total time: 19811.940s
c007,3,1,1,841719,841721,794069,600.000245475,600.207204063
c007,3,1,2,308693,310557,299996,1200.000263824,1200.359256348
c007,3,1,3,320297,321297,305927,1800.000470416,1800.490076555
c007,3,1,4,229209,230215,221550,2400.0024803630004,2400.587275231
c007,3,1,5,181748,182758,174259,3000.003992365,3000.701117402
c007,3,1,6,148683,149751,142636,3600.008128799,3600.807581684
c007,3,1,7,126796,127861,121356,4200.021770976,4200.905323365
c007,3,1,8,117204,118167,111954,4800.023529206,4800.992663961
c007,3,1,9,109207,110069,104170,5400.027081077,5401.083592202
c007,3,1,10,102242,103176,97786,6000.032506447,6001.189361994
c007,3,1,11,92100,92991,87996,6600.038405922,6601.3058678
# search time: 6600.038s
# total time: 26413.628s
c007,4,1,1,942539,942541,873963,600.000127242,600.227775678
c007,4,1,2,306415,307848,297311,1200.0017173259998,1200.38003205
c007,4,1,3,306833,307906,293367,1800.002657032,1800.500285146
c007,4,1,4,228033,228976,220371,2400.0118802899997,2400.621635473
c007,4,1,5,180032,181120,172645,3000.012839997,3000.779464816
c007,4,1,6,143308,144447,137552,3600.014864116,3600.870020491
c007,4,1,7,123577,124553,118227,4200.015083788,4200.95410497
c007,4,1,8,115097,116062,110150,4800.019057387,4801.029796153
c007,4,1,9,107536,108522,102848,5400.021158228001,5401.124119886
c007,4,1,10,100809,101642,96395,6000.024110921001,6001.205566735
c007,4,1,11,90779,91647,86711,6600.062746657001,6601.342248421
# search time: 6600.063s
# total time: 33015.478s
