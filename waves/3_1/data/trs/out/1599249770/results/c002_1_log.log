    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.41s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c002_1.json out/1599249770/results/c002_1_best.csv out/1599249770/results/c002_1_predictions.csv out/1599249770/results/c002_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5]), o: IntList([]) }
#   Datum { i: IntList([5, 6, 1, 3, 2, 0, 7, 8, 9, 4]), o: IntList([1]) }
#   Datum { i: IntList([6, 7, 8, 1, 4, 3, 0, 5, 9, 2]), o: IntList([8]) }
#   Datum { i: IntList([7, 4, 3, 9, 5, 8, 2, 1, 6]), o: IntList([3]) }
#   Datum { i: IntList([4, 6]), o: IntList([]) }
#   Datum { i: IntList([3, 9]), o: IntList([]) }
#   Datum { i: IntList([4, 7, 1, 2, 6, 3, 8, 9, 0, 5]), o: IntList([1]) }
#   Datum { i: IntList([5, 7]), o: IntList([]) }
#   Datum { i: IntList([9, 6, 2, 5, 8, 7, 3, 4, 1, 0]), o: IntList([2]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([7, 9, 0, 2, 1, 8, 6, 3, 5, 4]), o: IntList([0]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c002,0,1,1,1019012,1019014,944676,600.002419927,603.099119685
c002,0,1,2,813167,815472,753317,1200.002494071,1203.841502069
c002,0,1,3,248728,250130,240230,1800.003032689,1804.226310915
c002,0,1,4,153283,154137,147329,2400.009056334,2404.58674808
c002,0,1,5,94673,95525,91107,3000.013061931,3005.154654641
c002,0,1,6,114717,115486,111704,3600.017895146,3605.5645688
c002,0,1,7,105994,107030,103301,4200.018145784,4205.987396323
c002,0,1,8,94212,95027,91861,4800.020336597,4806.394533635
c002,0,1,9,88818,89708,86455,5400.022174386,5406.721896989
c002,0,1,10,49734,50591,48534,6000.02748343,6007.225038533
c002,0,1,11,46984,47746,45825,6600.0398159629995,6607.925654963
# search time: 6600.040s
# total time: 6608.326s
c002,1,1,1,957187,957189,884258,600.000142652,600.405305227
c002,1,1,2,778136,780380,721952,1200.000485264,1200.838391176
c002,1,1,3,244923,246222,236137,1800.002051557,1801.05332538
c002,1,1,4,148976,149728,142963,2400.01574581,2401.251981332
c002,1,1,5,84729,85507,81694,3000.018570393,3001.584003571
c002,1,1,6,112788,113550,109771,3600.025202667,3601.776419669
c002,1,1,7,103377,104425,100796,4200.034197371,4201.982047502
c002,1,1,8,93249,94102,90953,4800.038187168,4802.25019999
c002,1,1,9,88296,89351,86146,5400.041409481,5402.458080177
c002,1,1,10,50653,51590,49458,6000.052297039,6002.81893506
c002,1,1,11,53757,54563,52090,6600.057907386,6603.112409771
# search time: 6600.058s
# total time: 13212.018s
c002,2,1,1,964262,964264,910228,600.000998794,600.32364428
c002,2,1,2,771910,773780,714313,1200.0015599419999,1200.622869134
c002,2,1,3,233061,234566,225343,1800.0034318589999,1800.791703151
c002,2,1,4,145721,146730,140094,2400.0037233919998,2400.902775652
c002,2,1,5,93021,93811,89581,3000.005102608,3001.116404473
c002,2,1,6,112294,113012,109379,3600.010362458,3601.285183507
c002,2,1,7,102687,103794,100129,4200.015603015,4201.460923786
c002,2,1,8,89885,90788,87677,4800.0210998640005,4801.626178417
c002,2,1,9,86685,87564,84368,5400.024972209,5401.761229501
c002,2,1,10,48794,49637,47601,6000.025002163,6001.980438019
c002,2,1,11,44892,45521,43560,6600.032523699,6602.271789763
# search time: 6600.033s
# total time: 19814.813s
c002,3,1,1,943361,943363,875096,600.005796484,600.275705783
c002,3,1,2,786909,789056,728972,1200.006318841,1200.575911517
c002,3,1,3,243445,244759,234732,1800.008022128,1800.724711909
c002,3,1,4,144534,145370,138979,2400.009858883,2400.840058399
c002,3,1,5,91636,92405,88280,3000.0106843900003,3001.025863482
c002,3,1,6,112686,113382,109821,3600.0137802370004,3601.146197611
c002,3,1,7,102987,104065,100441,4200.014656458001,4201.275187615
c002,3,1,8,91183,92073,88842,4800.016597932001,4801.358977476
c002,3,1,9,86530,87427,84328,5400.024172640001,5401.457241931
c002,3,1,10,51597,52427,50316,6000.029896527001,6001.620255197
c002,3,1,11,54376,55142,52594,6600.035500784001,6601.746921774
# search time: 6600.036s
# total time: 26417.106s
c002,4,1,1,963690,963692,894098,600.000189112,600.28326995
c002,4,1,2,786394,787615,728598,1200.001239722,1200.494700406
c002,4,1,3,239339,240874,231290,1800.001273466,1800.593432579
c002,4,1,4,145548,146505,139974,2400.008018841,2400.704509566
c002,4,1,5,92229,92992,88822,3000.0157208600003,3000.879253227
c002,4,1,6,111617,112357,108665,3600.0161907750003,3600.973713964
c002,4,1,7,102613,103602,100096,4200.020381077,4201.073683121
c002,4,1,8,90771,91658,88555,4800.024668925,4801.171704735
c002,4,1,9,85994,86852,83728,5400.024791451,5401.294679021
c002,4,1,10,50999,51765,49755,6000.055999928,6001.457993597
c002,4,1,11,52998,53793,51352,6600.058933140001,6601.566887288
# search time: 6600.059s
# total time: 33019.067s
