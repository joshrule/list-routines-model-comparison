    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.08s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation_rerun.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c076_5.json out/1595870749/results/c076_5_best.csv out/1595870749/results/c076_5_predictions.csv out/1595870749/results/c076_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 1, 6, 2, 7, 0]), o: IntList([7, 0, 6, 5, 0]) }
#   Datum { i: IntList([0, 6, 1, 9, 7, 8, 4, 2, 5, 3]), o: IntList([9, 3, 10, 0, 0]) }
#   Datum { i: IntList([6, 1, 9, 4, 5, 0, 2, 7, 3]), o: IntList([9, 3, 9, 6, 0]) }
#   Datum { i: IntList([5, 7, 9, 4]), o: IntList([9, 4, 4, 5, 4]) }
#   Datum { i: IntList([2, 6, 7, 1, 5]), o: IntList([7, 5, 5, 2, 1]) }
#   Datum { i: IntList([8, 2]), o: IntList([8, 2, 2, 8, 2]) }
#   Datum { i: IntList([4, 8, 3]), o: IntList([8, 3, 3, 4, 3]) }
#   Datum { i: IntList([2, 8, 5, 4, 7, 3, 9, 1]), o: IntList([9, 1, 8, 2, 1]) }
#   Datum { i: IntList([7, 9, 0, 5, 1, 3, 6, 2, 4, 8]), o: IntList([9, 8, 10, 7, 0]) }
#   Datum { i: IntList([3, 5, 4, 0, 8, 7, 1]), o: IntList([8, 1, 7, 3, 0]) }
#   Datum { i: IntList([6]), o: IntList([6, 6, 1, 6, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c076,0,5,1,1151959,1151961,1072048,600.001004022,602.043740389
c076,0,5,2,288540,289616,281670,1200.002061145,1202.662092395
c076,0,5,3,124839,125806,124919,1800.0051830319999,1803.260708683
c076,0,5,4,101618,102333,101654,2400.0079993179997,2403.54396626
c076,0,5,5,73631,74340,73910,3000.0132415299995,3003.928055929
c076,0,5,6,63422,64074,63712,3600.0227573709994,3604.277423932
c076,0,5,7,54170,54894,54574,4200.0275455969995,4204.601141103
c076,0,5,8,44902,45606,45434,4800.0329000659995,4804.867649426
c076,0,5,9,41085,41716,41464,5400.042130078999,5405.190624137
c076,0,5,10,35235,36015,35753,6000.049143554999,6005.548503335
c076,0,5,11,31383,32134,31987,6600.050929683,6605.974882395
# search time: 6600.051s
# total time: 6606.347s
c076,1,5,1,1259989,1259991,1173775,600.000093404,600.340960211
c076,1,5,2,280505,282786,274830,1200.000969705,1200.576829256
c076,1,5,3,121899,122885,121941,1800.0030570909998,1800.841508715
c076,1,5,4,101430,102102,101525,2400.006742728,2401.008594986
c076,1,5,5,74412,75231,74833,3000.009243242,3001.180024223
c076,1,5,6,61178,61886,61534,3600.01167204,3601.356034749
c076,1,5,7,53812,54557,54241,4200.020218074,4201.537605613
c076,1,5,8,44930,45633,45453,4800.033645058,4801.713365839
c076,1,5,9,39581,40304,40031,5400.041540071999,5401.875862562
c076,1,5,10,34987,35729,35512,6000.042304746999,6002.020187979
c076,1,5,11,31060,31789,31612,6600.069762304,6602.189194411
# search time: 6600.070s
# total time: 13208.796s
c076,2,5,1,1214177,1214179,1108005,600.000084736,600.20824946
c076,2,5,2,283104,285229,277337,1200.001812825,1200.367015715
c076,2,5,3,122555,123521,122622,1800.003500881,1800.510606944
c076,2,5,4,101080,101846,101269,2400.003779883,2400.605209307
c076,2,5,5,73424,74210,73746,3000.008083302,3000.748082677
c076,2,5,6,62625,63369,63052,3600.011645043,3600.868775759
c076,2,5,7,54717,55412,55119,4200.013343299001,4200.965307198
c076,2,5,8,44267,45058,44884,4800.019520975001,4801.082330852
c076,2,5,9,39783,40449,40186,5400.035692333001,5401.211321496
c076,2,5,10,35017,35631,35405,6000.050517656001,6001.336783887
c076,2,5,11,31559,32277,32089,6600.058244443001,6601.438230236
# search time: 6600.058s
# total time: 19810.627s
c076,3,5,1,1196042,1196044,1121111,600.003747958,600.203887206
c076,3,5,2,281396,282809,274879,1200.005694731,1200.330340244
c076,3,5,3,123965,125084,124209,1800.0076393,1800.437967067
c076,3,5,4,101816,102486,101932,2400.008226181,2400.516808185
c076,3,5,5,73382,74115,73708,3000.0083508999996,3000.612812171
c076,3,5,6,62001,62726,62398,3600.0139806959996,3600.71703017
c076,3,5,7,54225,54951,54685,4200.016189102999,4200.799130252
c076,3,5,8,44539,45194,45001,4800.020125065999,4800.883698269
c076,3,5,9,39710,40328,40078,5400.023915057999,5400.975009311
c076,3,5,10,35131,35912,35695,6000.031655765999,6001.079895524
c076,3,5,11,31080,31797,31611,6600.043397220999,6601.203800774
# search time: 6600.043s
# total time: 26412.225s
c076,4,5,1,1222772,1222774,1127411,600.000488465,600.170968452
c076,4,5,2,273120,273804,265707,1200.001171065,1200.287340119
c076,4,5,3,119279,120257,119349,1800.0039588240002,1800.390295849
c076,4,5,4,99679,100450,99809,2400.005375685,2400.467982391
c076,4,5,5,73295,74078,73622,3000.009528719,3000.558048256
c076,4,5,6,61004,61747,61446,3600.019693501,3600.651374265
c076,4,5,7,53843,54527,54236,4200.020612147,4200.721179011
c076,4,5,8,44443,45205,45030,4800.027484324,4800.802512449
c076,4,5,9,40226,40929,40669,5400.038200501001,5400.882694184
c076,4,5,10,34703,35476,35234,6000.056627816,6000.9965164
c076,4,5,11,31130,31859,31632,6600.058748070001,6601.097267851
# search time: 6600.059s
# total time: 33013.730s
