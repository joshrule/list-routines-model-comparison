    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation_rerun.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c076_3.json out/1595870749/results/c076_3_best.csv out/1595870749/results/c076_3_predictions.csv out/1595870749/results/c076_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 6, 7, 1, 5]), o: IntList([7, 5, 5, 2, 1]) }
#   Datum { i: IntList([4, 8, 3]), o: IntList([8, 3, 3, 4, 3]) }
#   Datum { i: IntList([2, 8, 5, 4, 7, 3, 9, 1]), o: IntList([9, 1, 8, 2, 1]) }
#   Datum { i: IntList([0, 6, 1, 9, 7, 8, 4, 2, 5, 3]), o: IntList([9, 3, 10, 0, 0]) }
#   Datum { i: IntList([6]), o: IntList([6, 6, 1, 6, 6]) }
#   Datum { i: IntList([6, 1, 9, 4, 5, 0, 2, 7, 3]), o: IntList([9, 3, 9, 6, 0]) }
#   Datum { i: IntList([7, 9, 0, 5, 1, 3, 6, 2, 4, 8]), o: IntList([9, 8, 10, 7, 0]) }
#   Datum { i: IntList([8, 2]), o: IntList([8, 2, 2, 8, 2]) }
#   Datum { i: IntList([3, 5, 4, 0, 8, 7, 1]), o: IntList([8, 1, 7, 3, 0]) }
#   Datum { i: IntList([5, 1, 6, 2, 7, 0]), o: IntList([7, 0, 6, 5, 0]) }
#   Datum { i: IntList([5, 7, 9, 4]), o: IntList([9, 4, 4, 5, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c076,0,3,1,1199295,1199297,1120413,600.000172886,602.187473244
c076,0,3,2,286322,288372,280025,1200.001365444,1202.707313953
c076,0,3,3,169543,170605,169265,1800.005916118,1803.097308597
c076,0,3,4,105776,106611,105986,2400.009466888,2403.437183723
c076,0,3,5,74625,75338,74934,3000.011985872,3003.770318111
c076,0,3,6,64430,65131,64808,3600.015029201,3604.084411519
c076,0,3,7,51008,51698,51383,4200.019546291,4204.450479888
c076,0,3,8,42895,43664,43408,4800.030586604999,4804.882540115
c076,0,3,9,38526,39223,38971,5400.038387076,5405.286107537
c076,0,3,10,33889,34593,34374,6000.046978107,6005.626044924
c076,0,3,11,30201,30861,30648,6600.058587670999,6605.980759595
# search time: 6600.059s
# total time: 6606.251s
c076,1,3,1,1221163,1221165,1123050,600.002167108,600.303286112
c076,1,3,2,279897,281832,273768,1200.002335272,1200.540521522
c076,1,3,3,162519,163546,162070,1800.003354275,1800.746421344
c076,1,3,4,103520,104302,103637,2400.003848251,2400.913937404
c076,1,3,5,73873,74606,74196,3000.011421895,3001.113875149
c076,1,3,6,64310,64953,64599,3600.0151542989997,3601.288935352
c076,1,3,7,51495,52231,51895,4200.016412116,4201.449933772
c076,1,3,8,42219,43002,42786,4800.031477883999,4801.65699839
c076,1,3,9,38024,38687,38450,5400.033374518999,5401.813698073
c076,1,3,10,33234,33840,33648,6000.062107008,6002.031124278
c076,1,3,11,30277,30929,30720,6600.0814247359995,6602.250177856
# search time: 6600.081s
# total time: 13209.006s
c076,2,3,1,1161824,1161826,1085124,600.00005544,600.236443524
c076,2,3,2,287118,289115,280847,1200.00049215,1200.406060986
c076,2,3,3,167112,168056,166657,1800.001071316,1800.534324965
c076,2,3,4,103309,104065,103409,2400.0053615770003,2400.654366248
c076,2,3,5,73160,73845,73407,3000.0145717920004,3000.795355223
c076,2,3,6,64034,64756,64413,3600.0246245160006,3600.923260405
c076,2,3,7,49851,50588,50295,4200.027991590001,4201.079423733
c076,2,3,8,42148,42818,42534,4800.043017823001,4801.226796352
c076,2,3,9,37633,38366,38126,5400.044698988001,5401.353348531
c076,2,3,10,33140,33809,33598,6000.053456813001,6001.490945194
c076,2,3,11,29766,30576,30355,6600.06276691,6601.65993259
# search time: 6600.063s
# total time: 19810.904s
c076,3,3,1,1203443,1203445,1110252,600.000057849,600.200765394
c076,3,3,2,292523,294774,286745,1200.0002051239999,1200.332301753
c076,3,3,3,165580,166684,165380,1800.0027188939998,1800.437628349
c076,3,3,4,103647,104437,103760,2400.0030440339997,2400.533694208
c076,3,3,5,72854,73613,73194,3000.0137691259997,3000.650055963
c076,3,3,6,63744,64509,64144,3600.0178295319997,3600.745321394
c076,3,3,7,50621,51369,51025,4200.022338694,4200.868106946
c076,3,3,8,42155,42805,42565,4800.031729048,4800.968039355
c076,3,3,9,38246,38943,38711,5400.040629393,5401.088396248
c076,3,3,10,34027,34803,34609,6000.054877456,6001.189785733
c076,3,3,11,30062,30779,30571,6600.0688099300005,6601.30125203
# search time: 6600.069s
# total time: 26412.591s
c076,4,3,1,1169831,1169833,1069223,600.000662264,600.186443607
c076,4,3,2,286162,288448,280397,1200.0062505619999,1200.306325486
c076,4,3,3,164492,165590,164161,1800.009351236,1800.402932755
c076,4,3,4,103035,103746,103083,2400.009756581,2400.505050163
c076,4,3,5,73676,74374,73973,3000.01301881,3000.585517394
c076,4,3,6,62575,63251,62895,3600.0218580070004,3600.67801508
c076,4,3,7,49158,49847,49541,4200.021991326001,4200.771124205
c076,4,3,8,41589,42292,42039,4800.040930008001,4800.889995341
c076,4,3,9,37728,38528,38308,5400.056091198001,5400.995658184
c076,4,3,10,33440,34144,33919,6000.0591902410015,6001.089342812
c076,4,3,11,30023,30763,30503,6600.079992853001,6601.260878622
# search time: 6600.080s
# total time: 33014.239s
