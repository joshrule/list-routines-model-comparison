    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.07s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation_rerun.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c076_4.json out/1595870749/results/c076_4_best.csv out/1595870749/results/c076_4_predictions.csv out/1595870749/results/c076_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 2]), o: IntList([8, 2, 2, 8, 2]) }
#   Datum { i: IntList([7, 9, 0, 5, 1, 3, 6, 2, 4, 8]), o: IntList([9, 8, 10, 7, 0]) }
#   Datum { i: IntList([3, 5, 4, 0, 8, 7, 1]), o: IntList([8, 1, 7, 3, 0]) }
#   Datum { i: IntList([6, 1, 9, 4, 5, 0, 2, 7, 3]), o: IntList([9, 3, 9, 6, 0]) }
#   Datum { i: IntList([2, 6, 7, 1, 5]), o: IntList([7, 5, 5, 2, 1]) }
#   Datum { i: IntList([0, 6, 1, 9, 7, 8, 4, 2, 5, 3]), o: IntList([9, 3, 10, 0, 0]) }
#   Datum { i: IntList([6]), o: IntList([6, 6, 1, 6, 6]) }
#   Datum { i: IntList([5, 1, 6, 2, 7, 0]), o: IntList([7, 0, 6, 5, 0]) }
#   Datum { i: IntList([4, 8, 3]), o: IntList([8, 3, 3, 4, 3]) }
#   Datum { i: IntList([5, 7, 9, 4]), o: IntList([9, 4, 4, 5, 4]) }
#   Datum { i: IntList([2, 8, 5, 4, 7, 3, 9, 1]), o: IntList([9, 1, 8, 2, 1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c076,0,4,1,1285689,1285691,1198987,600.000835377,602.002166311
c076,0,4,2,296578,298860,290143,1200.0022826240001,1202.524967416
c076,0,4,3,147516,148558,147555,1800.0039454390003,1802.894321843
c076,0,4,4,102764,103590,103062,2400.00559238,2403.265566222
c076,0,4,5,73024,73775,72916,3000.006288165,3003.648641494
c076,0,4,6,62749,63468,62902,3600.006672944,3604.000263493
c076,0,4,7,52697,53413,53068,4200.0190786309995,4204.304271065
c076,0,4,8,45959,46580,46276,4800.021495106999,4804.59787704
c076,0,4,9,40014,40750,40541,5400.024515378,5404.877853644
c076,0,4,10,36238,36904,36662,6000.036469455,6005.185007886
c076,0,4,11,32930,33665,33428,6600.053024364,6605.511533368
# search time: 6600.053s
# total time: 6605.771s
c076,1,4,1,1324478,1324480,1236235,600.000549673,600.335531208
c076,1,4,2,294460,296485,287793,1200.001904338,1200.547688453
c076,1,4,3,144396,145441,144392,1800.003005642,1800.763399241
c076,1,4,4,101168,102013,101461,2400.003123477,2400.921597406
c076,1,4,5,72742,73472,72619,3000.010747168,3001.109664522
c076,1,4,6,62295,63000,62425,3600.01517411,3601.317034029
c076,1,4,7,52468,53153,52803,4200.023251301,4201.463261794
c076,1,4,8,45213,45969,45650,4800.03937545,4801.660805284
c076,1,4,9,39889,40567,40340,5400.05078478,5401.862933367
c076,1,4,10,36259,36940,36675,6000.066998297,6002.027705123
c076,1,4,11,32542,33435,33200,6600.071025633,6602.173403523
# search time: 6600.071s
# total time: 13208.337s
c076,2,4,1,1311978,1311980,1223536,600.002134543,600.245060959
c076,2,4,2,295879,297865,288753,1200.002936009,1200.383337305
c076,2,4,3,148039,149105,148077,1800.0058751689999,1800.518836399
c076,2,4,4,101278,101856,101385,2400.01191539,2400.632679957
c076,2,4,5,74210,74958,74129,3000.0212862030003,3000.78204925
c076,2,4,6,62372,63086,62512,3600.0356987950004,3600.908383748
c076,2,4,7,51307,52001,51690,4200.044691692,4201.021045594
c076,2,4,8,44436,45219,44925,4800.050703691,4801.1326926
c076,2,4,9,39226,39973,39756,5400.0598913740005,5401.248551736
c076,2,4,10,35844,36556,36313,6000.070740403001,6001.388678714
c076,2,4,11,31970,32656,32431,6600.086845788001,6601.507649551
# search time: 6600.087s
# total time: 19810.235s
c076,3,4,1,1276773,1276775,1173677,600.000014322,600.203602091
c076,3,4,2,291878,292868,284086,1200.000346733,1200.322943518
c076,3,4,3,139615,140685,139648,1800.003249204,1800.434834155
c076,3,4,4,98088,98926,98610,2400.007126358,2400.53440216
c076,3,4,5,71721,72459,71623,3000.007917166,3000.632807684
c076,3,4,6,60844,61506,60926,3600.025980122,3600.757546216
c076,3,4,7,51451,52219,51855,4200.033079132,4200.847408009
c076,3,4,8,44512,45254,44936,4800.040395934,4800.957728934
c076,3,4,9,39625,40311,40080,5400.075823368,5401.085055831
c076,3,4,10,36036,36920,36714,6000.089395423,6001.175120186
c076,3,4,11,32180,32918,32687,6600.095622297999,6601.277050594
# search time: 6600.096s
# total time: 26411.903s
c076,4,4,1,1299290,1299292,1203871,600.000751864,600.201905707
c076,4,4,2,294735,296794,287676,1200.002621705,1200.308175559
c076,4,4,3,140443,141542,140590,1800.0036818079998,1800.383455083
c076,4,4,4,98792,99640,99180,2400.007563459,2400.469574761
c076,4,4,5,71556,72278,71456,3000.0171195229996,3000.566109392
c076,4,4,6,60866,61549,60998,3600.0218142079993,3600.652710682
c076,4,4,7,50643,51369,51060,4200.026066559999,4200.755250824
c076,4,4,8,43934,44619,44289,4800.037931844999,4800.859324096
c076,4,4,9,38398,39171,38985,5400.041296895999,5400.954035129
c076,4,4,10,35298,36034,35835,6000.045603795999,6001.031654115
c076,4,4,11,32026,32805,32602,6600.056742479,6601.113739676
# search time: 6600.057s
# total time: 33013.408s
