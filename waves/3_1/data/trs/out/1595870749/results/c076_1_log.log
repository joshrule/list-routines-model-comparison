    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation_rerun.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c076_1.json out/1595870749/results/c076_1_best.csv out/1595870749/results/c076_1_predictions.csv out/1595870749/results/c076_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 7, 9, 4]), o: IntList([9, 4, 4, 5, 4]) }
#   Datum { i: IntList([0, 6, 1, 9, 7, 8, 4, 2, 5, 3]), o: IntList([9, 3, 10, 0, 0]) }
#   Datum { i: IntList([6]), o: IntList([6, 6, 1, 6, 6]) }
#   Datum { i: IntList([8, 2]), o: IntList([8, 2, 2, 8, 2]) }
#   Datum { i: IntList([3, 5, 4, 0, 8, 7, 1]), o: IntList([8, 1, 7, 3, 0]) }
#   Datum { i: IntList([7, 9, 0, 5, 1, 3, 6, 2, 4, 8]), o: IntList([9, 8, 10, 7, 0]) }
#   Datum { i: IntList([2, 6, 7, 1, 5]), o: IntList([7, 5, 5, 2, 1]) }
#   Datum { i: IntList([4, 8, 3]), o: IntList([8, 3, 3, 4, 3]) }
#   Datum { i: IntList([6, 1, 9, 4, 5, 0, 2, 7, 3]), o: IntList([9, 3, 9, 6, 0]) }
#   Datum { i: IntList([5, 1, 6, 2, 7, 0]), o: IntList([7, 0, 6, 5, 0]) }
#   Datum { i: IntList([2, 8, 5, 4, 7, 3, 9, 1]), o: IntList([9, 1, 8, 2, 1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c076,0,1,1,1289922,1289924,1198643,600.000143297,601.932190628
c076,0,1,2,299898,302231,293652,1200.000929989,1202.411517642
c076,0,1,3,158748,159769,158575,1800.000942679,1802.79712432
c076,0,1,4,122481,123313,122569,2400.003727895,2403.057663901
c076,0,1,5,98072,98794,98270,3000.006749404,3003.298529338
c076,0,1,6,75340,76091,75576,3600.008672743,3603.520102847
c076,0,1,7,57467,58199,57831,4200.010003865,4203.774079231
c076,0,1,8,48025,48766,48372,4800.016973889,4804.080899093
c076,0,1,9,44104,44804,44507,5400.024289703,5404.332586448
c076,0,1,10,38038,38771,38548,6000.038205253,6004.589751443
c076,0,1,11,33566,34248,34002,6600.05724561,6604.900318299
# search time: 6600.057s
# total time: 6605.158s
c076,1,1,1,1257874,1257876,1172865,600.000100705,600.285139813
c076,1,1,2,300402,302520,294124,1200.0013755250002,1200.496439187
c076,1,1,3,159036,160100,158919,1800.005274305,1800.657790715
c076,1,1,4,120709,121509,120868,2400.005897047,2400.800390174
c076,1,1,5,96786,97436,96865,3000.010424635,3000.923573934
c076,1,1,6,74827,75499,75017,3600.0148464050003,3601.044526426
c076,1,1,7,57035,57725,57363,4200.024370283,4201.172447087
c076,1,1,8,47210,47905,47521,4800.02699701,4801.372907055
c076,1,1,9,43400,44051,43701,5400.0314090209995,5401.525462848
c076,1,1,10,37412,38139,37921,6000.031749266,6001.665551214
c076,1,1,11,33196,33903,33698,6600.042128347,6601.822950171
# search time: 6600.042s
# total time: 13207.379s
c076,2,1,1,1277485,1277487,1174055,600.000846675,600.218419787
c076,2,1,2,300797,302791,294305,1200.002613137,1200.359725387
c076,2,1,3,158067,159058,157858,1800.00419852,1800.479197411
c076,2,1,4,121663,122420,121732,2400.004440873,2400.585347594
c076,2,1,5,96743,97457,96906,3000.008767671,3000.68843474
c076,2,1,6,74962,75714,75247,3600.00977045,3600.775442958
c076,2,1,7,57259,57877,57471,4200.011328445,4200.85668528
c076,2,1,8,47009,47802,47434,4800.018631526,4801.000683114
c076,2,1,9,43919,44480,44188,5400.019888835,5401.091747516
c076,2,1,10,37713,38563,38369,6000.025868799999,6001.194526342
c076,2,1,11,33139,33873,33707,6600.032701849999,6601.310127496
# search time: 6600.033s
# total time: 19809.094s
c076,3,1,1,1172405,1172407,1101164,600.00050947,600.18592803
c076,3,1,2,297721,299740,291535,1200.000701434,1200.29810875
c076,3,1,3,159077,160240,159030,1800.0010957169998,1800.391602484
c076,3,1,4,120802,121519,120805,2400.0030005319995,2400.47418964
c076,3,1,5,96808,97540,96985,3000.0034690539997,3000.547969023
c076,3,1,6,74930,75472,74871,3600.004328407,3600.614063487
c076,3,1,7,56975,57717,57373,4200.007494593,4200.699120943
c076,3,1,8,47936,48672,48214,4800.01325878,4800.793024116
c076,3,1,9,43370,44059,43755,5400.020610833,5400.877150504
c076,3,1,10,37025,37706,37503,6000.025948229,6000.959078396
c076,3,1,11,33482,34212,33967,6600.042476286,6601.079806523
# search time: 6600.042s
# total time: 26410.560s
c076,4,1,1,1274271,1274273,1179214,600.000009295,600.182772488
c076,4,1,2,293148,295435,287046,1200.000406494,1200.280067125
c076,4,1,3,152287,153284,151629,1800.004445909,1800.359932387
c076,4,1,4,120468,121274,120626,2400.0068948079997,2400.426010486
c076,4,1,5,95969,96680,96115,3000.0099423469997,3000.482486104
c076,4,1,6,73831,74515,74022,3600.0119580519995,3600.543021661
c076,4,1,7,56616,57378,57031,4200.013560216999,4200.603850924
c076,4,1,8,47242,48026,47623,4800.0222500499995,4800.697071394
c076,4,1,9,43119,43788,43471,5400.029543459999,5400.772316761
c076,4,1,10,37420,38105,37925,6000.030120218999,6000.868885322
c076,4,1,11,32765,33575,33370,6600.038991811999,6600.926609201
# search time: 6600.039s
# total time: 33011.880s
