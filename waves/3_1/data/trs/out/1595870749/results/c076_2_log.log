    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation_rerun.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c076_2.json out/1595870749/results/c076_2_best.csv out/1595870749/results/c076_2_predictions.csv out/1595870749/results/c076_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 8, 3]), o: IntList([8, 3, 3, 4, 3]) }
#   Datum { i: IntList([7, 9, 0, 5, 1, 3, 6, 2, 4, 8]), o: IntList([9, 8, 10, 7, 0]) }
#   Datum { i: IntList([2, 8, 5, 4, 7, 3, 9, 1]), o: IntList([9, 1, 8, 2, 1]) }
#   Datum { i: IntList([5, 1, 6, 2, 7, 0]), o: IntList([7, 0, 6, 5, 0]) }
#   Datum { i: IntList([6, 1, 9, 4, 5, 0, 2, 7, 3]), o: IntList([9, 3, 9, 6, 0]) }
#   Datum { i: IntList([8, 2]), o: IntList([8, 2, 2, 8, 2]) }
#   Datum { i: IntList([5, 7, 9, 4]), o: IntList([9, 4, 4, 5, 4]) }
#   Datum { i: IntList([3, 5, 4, 0, 8, 7, 1]), o: IntList([8, 1, 7, 3, 0]) }
#   Datum { i: IntList([6]), o: IntList([6, 6, 1, 6, 6]) }
#   Datum { i: IntList([0, 6, 1, 9, 7, 8, 4, 2, 5, 3]), o: IntList([9, 3, 10, 0, 0]) }
#   Datum { i: IntList([2, 6, 7, 1, 5]), o: IntList([7, 5, 5, 2, 1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c076,0,2,1,1336085,1336087,1228095,600.000462324,602.02883881
c076,0,2,2,306791,308981,300844,1200.0008992369999,1202.535376757
c076,0,2,3,144381,145529,144682,1800.003086356,1802.917950447
c076,0,2,4,108120,108822,108033,2400.008260466,2403.226489334
c076,0,2,5,77422,78144,77352,3000.01131836,3003.640496033
c076,0,2,6,66300,67078,66536,3600.016071885,3603.86462088
c076,0,2,7,57357,58020,57548,4200.0161923020005,4204.105900384
c076,0,2,8,47272,47958,47677,4800.020535488001,4804.404053575
c076,0,2,9,40971,41612,41353,5400.030627309001,5404.661094786
c076,0,2,10,37352,38183,37903,6000.037796743001,6004.924946359
c076,0,2,11,33005,33699,33476,6600.061892400001,6605.258695848
# search time: 6600.062s
# total time: 6605.541s
c076,1,2,1,1253703,1253705,1175501,600.001721836,600.290856659
c076,1,2,2,303787,305767,297115,1200.0028754,1200.508600468
c076,1,2,3,142712,143805,142778,1800.003348104,1800.682705019
c076,1,2,4,107153,107900,107113,2400.005403162,2400.851239289
c076,1,2,5,77034,77749,77071,3000.005608535,3001.097867171
c076,1,2,6,65682,66387,65875,3600.014539187,3601.221012303
c076,1,2,7,56735,57411,56928,4200.0180347020005,4201.366668643
c076,1,2,8,46521,47259,46997,4800.019557888,4801.55563022
c076,1,2,9,40391,41154,40900,5400.021083884,5401.691422174
c076,1,2,10,37416,37981,37723,6000.028780265,6001.861470095
c076,1,2,11,33119,33865,33669,6600.030060614,6602.003051371
# search time: 6600.030s
# total time: 13207.956s
c076,2,2,1,1268197,1268199,1181965,600.000758858,600.242464158
c076,2,2,2,307959,309917,301615,1200.000979229,1200.392711282
c076,2,2,3,139203,140373,139451,1800.002333032,1800.525478887
c076,2,2,4,108227,108807,108103,2400.003560687,2400.62777473
c076,2,2,5,76553,77328,76577,3000.004230585,3000.751069038
c076,2,2,6,65596,66339,65882,3600.0076800800002,3600.862807649
c076,2,2,7,56885,57627,57092,4200.013189625,4200.960227465
c076,2,2,8,46664,47373,47065,4800.013852934,4801.049465515
c076,2,2,9,41221,41879,41644,5400.015968004,5401.160038128
c076,2,2,10,36594,37361,37084,6000.018283511,6001.262398496
c076,2,2,11,32944,33698,33504,6600.029760141,6601.417933789
# search time: 6600.030s
# total time: 19809.779s
c076,3,2,1,1323975,1323977,1192487,600.000485997,600.2195458
c076,3,2,2,304560,306834,298485,1200.002717879,1200.338312977
c076,3,2,3,141935,142992,141986,1800.003132365,1800.432994954
c076,3,2,4,107314,107983,107241,2400.007748582,2400.525745354
c076,3,2,5,76996,77672,77020,3000.010924906,3000.63235357
c076,3,2,6,65460,66183,65660,3600.0120904590003,3600.71476144
c076,3,2,7,56913,57656,57151,4200.012108593,4200.789647884
c076,3,2,8,46477,47125,46831,4800.025227143,4800.888385759
c076,3,2,9,40493,41199,40965,5400.028886172,5400.970236725
c076,3,2,10,37334,38038,37735,6000.041950322,6001.06108235
c076,3,2,11,33300,34082,33821,6600.054943987,6601.164698228
# search time: 6600.055s
# total time: 26411.352s
c076,4,2,1,1312736,1312738,1203153,600.000238264,600.189392373
c076,4,2,2,303344,305865,297632,1200.002083504,1200.29296196
c076,4,2,3,140839,141964,141038,1800.0087770300001,1800.375509009
c076,4,2,4,106740,107504,106784,2400.0110625350003,2400.456634582
c076,4,2,5,75662,76481,75777,3000.0203757920003,3000.569580047
c076,4,2,6,65227,65878,65370,3600.022822111,3600.632290097
c076,4,2,7,56241,56998,56523,4200.027365535,4200.699250257
c076,4,2,8,45685,46450,46096,4800.031714873,4800.77138975
c076,4,2,9,40788,41444,41193,5400.033549257,5400.837832968
c076,4,2,10,35575,36363,36152,6000.054617514001,6000.938207667
c076,4,2,11,32182,32903,32736,6600.059034634,6601.017315322
# search time: 6600.059s
# total time: 33012.781s
