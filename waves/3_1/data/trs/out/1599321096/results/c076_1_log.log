    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation_rerun.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c076_1.json out/1599321096/results/c076_1_best.csv out/1599321096/results/c076_1_predictions.csv out/1599321096/results/c076_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 7, 9, 4]), o: IntList([9, 4, 4, 5, 4]) }
#   Datum { i: IntList([0, 6, 1, 9, 7, 8, 4, 2, 5, 3]), o: IntList([9, 3, 10, 0, 0]) }
#   Datum { i: IntList([6]), o: IntList([6, 6, 1, 6, 6]) }
#   Datum { i: IntList([8, 2]), o: IntList([8, 2, 2, 8, 2]) }
#   Datum { i: IntList([3, 5, 4, 0, 8, 7, 1]), o: IntList([8, 1, 7, 3, 0]) }
#   Datum { i: IntList([7, 9, 0, 5, 1, 3, 6, 2, 4, 8]), o: IntList([9, 8, 10, 7, 0]) }
#   Datum { i: IntList([2, 6, 7, 1, 5]), o: IntList([7, 5, 5, 2, 1]) }
#   Datum { i: IntList([4, 8, 3]), o: IntList([8, 3, 3, 4, 3]) }
#   Datum { i: IntList([6, 1, 9, 4, 5, 0, 2, 7, 3]), o: IntList([9, 3, 9, 6, 0]) }
#   Datum { i: IntList([5, 1, 6, 2, 7, 0]), o: IntList([7, 0, 6, 5, 0]) }
#   Datum { i: IntList([2, 8, 5, 4, 7, 3, 9, 1]), o: IntList([9, 1, 8, 2, 1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c076,0,1,1,703678,703680,662072,600.003497403,605.034299828
c076,0,1,2,242026,242954,236051,1200.004522094,1205.801613792
c076,0,1,3,126572,127667,126692,1800.0046254640001,1806.399777651
c076,0,1,4,98026,98777,98142,2400.0051460900004,2406.768573924
c076,0,1,5,78226,78903,78478,3000.0084222810005,3007.085136946
c076,0,1,6,59733,60457,60049,3600.0104421390006,3607.368110917
c076,0,1,7,45021,45683,45400,4200.022121461001,4207.744558072
c076,0,1,8,37102,37798,37468,4800.025134487001,4808.222477702
c076,0,1,9,34239,34953,34717,5400.040363987001,5408.564637496
c076,0,1,10,30234,30938,30742,6000.0632007270015,6008.921761339
c076,0,1,11,26002,26705,26515,6600.079674277002,6609.267112633
# search time: 6600.080s
# total time: 6609.454s
c076,1,1,1,898517,898519,829454,600.000212881,600.45146859
c076,1,1,2,241476,243792,236807,1200.000790238,1200.742969986
c076,1,1,3,129411,130470,129590,1800.002491807,1800.9480699
c076,1,1,4,97640,98381,97784,2400.004290233,2401.126698866
c076,1,1,5,77064,77848,77353,3000.008907964,3001.275836352
c076,1,1,6,60394,61071,60701,3600.009265854,3601.426918842
c076,1,1,7,45811,46628,46381,4200.014654378,4201.586568425
c076,1,1,8,36717,37426,37059,4800.02068827,4801.827794873
c076,1,1,9,33899,34403,34123,5400.030387993001,5402.04752707
c076,1,1,10,30741,31505,31312,6000.034331033001,6002.218877786
c076,1,1,11,26806,27426,27243,6600.0484350980005,6602.439670763
# search time: 6600.048s
# total time: 13212.193s
c076,2,1,1,927806,927808,855505,600.000209014,600.321270618
c076,2,1,2,250903,252423,245344,1200.001168108,1200.505166496
c076,2,1,3,130780,131806,130986,1800.005107901,1800.641592232
c076,2,1,4,100399,101124,100613,2400.008933936,2400.765088786
c076,2,1,5,80101,80969,80532,3000.01404566,3000.876933477
c076,2,1,6,61765,62601,62181,3600.0201519740003,3600.969970289
c076,2,1,7,46510,47332,47075,4200.021364265001,4201.079850401
c076,2,1,8,37074,37573,37260,4800.037954916001,4801.325124147
c076,2,1,9,36609,37245,36997,5400.045441649001,5401.460248145
c076,2,1,10,32128,32839,32657,6000.058041880001,6001.615888599
c076,2,1,11,28453,29101,28889,6600.059725751001,6601.723744844
# search time: 6600.060s
# total time: 19814.229s
c076,3,1,1,997870,997872,928494,600.000086101,600.287145769
c076,3,1,2,263081,265617,258309,1200.001031245,1200.437115827
c076,3,1,3,135868,137004,135987,1800.003148025,1800.556256245
c076,3,1,4,103941,104718,104120,2400.004955837,2400.645370709
c076,3,1,5,83267,84090,83655,3000.011546735,3000.722990872
c076,3,1,6,63985,64687,64265,3600.017777512,3600.811195444
c076,3,1,7,48065,48826,48519,4200.018218334,4200.902518881
c076,3,1,8,40859,41504,41168,4800.025939077001,4801.031962729
c076,3,1,9,36866,37519,37208,5400.035172922001,5401.129748489
c076,3,1,10,32633,33375,33163,6000.043000284001,6001.204541626
c076,3,1,11,28757,29518,29322,6600.050212465001,6601.303345051
# search time: 6600.050s
# total time: 26415.885s
c076,4,1,1,1012809,1012811,952117,600.001848068,600.241973719
c076,4,1,2,261320,262612,255035,1200.006949074,1200.369589759
c076,4,1,3,138207,139272,138197,1800.009409558,1800.468376572
c076,4,1,4,105451,106235,105705,2400.011415068,2400.552714922
c076,4,1,5,84931,85708,85262,3000.0130209530003,3000.618980966
c076,4,1,6,65638,66415,65939,3600.0212218240003,3600.69762553
c076,4,1,7,49897,50691,50334,4200.026973133,4200.782003013
c076,4,1,8,41698,42367,41977,4800.027643646,4800.869493437
c076,4,1,9,37776,38448,38217,5400.031994944,5400.942382121
c076,4,1,10,33008,33736,33554,6000.042295407,6001.037390763
c076,4,1,11,28613,29393,29122,6600.062178172,6601.155539469
# search time: 6600.062s
# total time: 33017.384s
