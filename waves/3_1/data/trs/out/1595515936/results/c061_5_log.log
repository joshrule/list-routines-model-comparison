    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized + debuginfo] target(s) in 0.41s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c061_5.json out/1595515936/results/c061_5_best.csv out/1595515936/results/c061_5_predictions.csv out/1595515936/results/c061_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([8, 2, 7, 6, 1, 8, 5, 9]), o: IntList([9]) }
#   Datum { i: IntList([9, 3, 2, 4]), o: IntList([4]) }
#   Datum { i: IntList([2, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([9, 2, 2, 5, 6, 2]), o: IntList([2]) }
#   Datum { i: IntList([4, 3]), o: IntList([3]) }
#   Datum { i: IntList([1, 7, 5, 6, 9, 8]), o: IntList([8]) }
#   Datum { i: IntList([6, 6]), o: IntList([6]) }
#   Datum { i: IntList([1, 1, 5]), o: IntList([5]) }
#   Datum { i: IntList([6, 8, 4, 0, 3]), o: IntList([3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c061,0,5,1,1016433,1016435,948211,600.007540526,602.243363655
c061,0,5,2,437178,438203,425653,1200.0079981919998,1202.89593025
c061,0,5,3,258043,259070,248895,1800.009288582,1803.366444499
c061,0,5,4,182470,183212,175683,2400.010302734,2403.757389232
c061,0,5,5,151140,151896,146150,3000.011848183,3004.098836101
c061,0,5,6,121794,122617,117924,3600.014871506,3604.45610808
c061,0,5,7,95552,96304,92626,4200.016465606,4204.883433549
c061,0,5,8,90872,91554,88074,4800.026971177,4805.236296058
c061,0,5,9,71113,71934,69041,5400.042011298,5405.622724644
c061,0,5,10,67163,67922,65197,6000.047206784,6005.992287533
c061,0,5,11,57584,58416,56189,6600.057928735,6606.471952751
# search time: 6600.058s
# total time: 6606.746s
c061,1,5,1,1007156,1007158,937464,600.000172418,600.289610245
c061,1,5,2,438945,440856,428101,1200.00502297,1200.540335694
c061,1,5,3,253288,254404,244393,1800.015448573,1800.786069776
c061,1,5,4,181742,182545,174943,2400.017041259,2400.995903801
c061,1,5,5,148895,149689,143970,3000.017373332,3001.180963061
c061,1,5,6,120826,121540,117032,3600.018404142,3601.364080085
c061,1,5,7,94797,95562,91929,4200.019945407,4201.5560988
c061,1,5,8,90078,90895,87443,4800.023385064,4801.754344235
c061,1,5,9,70438,71175,68325,5400.027376925,5401.926404211
c061,1,5,10,66669,67462,64809,6000.027518444,6002.158343805
c061,1,5,11,57731,58535,56249,6600.032252059,6602.413770026
# search time: 6600.032s
# total time: 13209.535s
c061,2,5,1,1049221,1049223,955644,600.002964203,600.241446026
c061,2,5,2,441903,444029,430953,1200.0051521750001,1200.457215916
c061,2,5,3,251891,253045,243036,1800.0084864660002,1800.65337784
c061,2,5,4,175352,176137,168938,2400.0115802660002,2400.828700587
c061,2,5,5,149542,150336,144565,3000.016859198,3000.962361244
c061,2,5,6,133305,133963,128854,3600.01744839,3601.078484178
c061,2,5,7,103099,103858,99889,4200.018976786,4201.218792945
c061,2,5,8,98338,99111,95271,4800.024391382,4801.379366959
c061,2,5,9,77117,77840,74720,5400.032358648001,5401.517994613
c061,2,5,10,74080,74850,71939,6000.039346193001,6001.671958855
c061,2,5,11,64458,65169,62677,6600.040093941001,6601.830322859
# search time: 6600.040s
# total time: 19811.762s
c061,3,5,1,1124280,1124282,1048894,600.000106403,600.228839088
c061,3,5,2,476447,477515,464076,1200.001062628,1200.386360575
c061,3,5,3,270606,271787,261805,1800.0025541979999,1800.514876266
c061,3,5,4,199228,200191,191949,2400.005357975,2400.6295696
c061,3,5,5,171412,172132,165579,3000.010633061,3000.723782465
c061,3,5,6,136830,137689,131875,3600.012269845,3600.816135606
c061,3,5,7,109077,109948,105410,4200.0135595619995,4200.934255513
c061,3,5,8,105350,106069,101670,4800.013734204999,4801.0460617
c061,3,5,9,86010,86685,83193,5400.01400272,5401.159103585
c061,3,5,10,82124,82919,79591,6000.017327881999,6001.278503674
c061,3,5,11,73810,74706,71749,6600.022685722999,6601.418714338
# search time: 6600.023s
# total time: 26413.609s
c061,4,5,1,1321347,1321349,1221254,600.000143049,600.222906965
c061,4,5,2,535047,537209,522243,1200.000285227,1200.357600085
c061,4,5,3,319146,320367,307744,1800.002522223,1800.470273615
c061,4,5,4,223508,224366,215485,2400.00412096,2400.567357313
c061,4,5,5,186099,186939,179819,3000.00636838,3000.668953285
c061,4,5,6,153323,154131,148370,3600.008380227,3600.755291744
c061,4,5,7,121919,122686,118043,4200.009215208,4200.917538277
c061,4,5,8,115506,116280,111847,4800.015079344999,4801.058769452
c061,4,5,9,84844,85603,82231,5400.018495678999,5401.166405351
c061,4,5,10,82717,83575,80181,6000.020626806999,6001.303193142
c061,4,5,11,72158,72974,70157,6600.027936748998,6601.449709399
# search time: 6600.028s
# total time: 33015.768s
