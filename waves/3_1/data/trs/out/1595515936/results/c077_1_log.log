    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c077_1.json out/1595515936/results/c077_1_best.csv out/1595515936/results/c077_1_predictions.csv out/1595515936/results/c077_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 7, 2, 0]), o: IntList([4]) }
#   Datum { i: IntList([8, 6, 6]), o: IntList([3]) }
#   Datum { i: IntList([2]), o: IntList([1]) }
#   Datum { i: IntList([8, 3, 9, 5, 7]), o: IntList([5]) }
#   Datum { i: IntList([]), o: IntList([0]) }
#   Datum { i: IntList([4, 4]), o: IntList([2]) }
#   Datum { i: IntList([1, 3, 1, 3, 1, 3]), o: IntList([6]) }
#   Datum { i: IntList([7, 9, 9, 9]), o: IntList([4]) }
#   Datum { i: IntList([5, 2, 0]), o: IntList([3]) }
#   Datum { i: IntList([8, 0, 0, 0, 8]), o: IntList([5]) }
#   Datum { i: IntList([2, 4]), o: IntList([2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c077,0,1,1,1340373,1340375,1243991,600.000300322,601.857922734
c077,0,1,2,597498,599642,580531,1200.0007002490001,1202.387876187
c077,0,1,3,403962,405120,389110,1800.0008772730002,1802.744366099
c077,0,1,4,323102,324026,309842,2400.002021048,2403.007606605
c077,0,1,5,193721,194581,186173,3000.002425189,3003.353085719
c077,0,1,6,185760,186518,178783,3600.005098614,3603.716781148
c077,0,1,7,129274,130127,125405,4200.007659011,4204.143866196
c077,0,1,8,111202,111952,107626,4800.010832442,4804.567723087
c077,0,1,9,91502,92249,88864,5400.0281870769995,5405.018382613
c077,0,1,10,108040,108717,103894,6000.029759503,6005.213979625
c077,0,1,11,98594,99392,95016,6600.032934662,6605.428594408
# search time: 6600.033s
# total time: 6605.744s
c077,1,1,1,1298744,1298746,1210216,600.001471883,600.250194095
c077,1,1,2,566758,568757,552017,1200.006474455,1200.482313349
c077,1,1,3,399744,400947,385400,1800.006723172,1800.657913156
c077,1,1,4,321836,322746,308759,2400.007960201,2400.800506025
c077,1,1,5,190539,191454,183225,3000.009725028,3000.986921123
c077,1,1,6,182862,183725,176159,3600.011173116,3601.163948809
c077,1,1,7,127788,128653,124100,4200.0476871890005,4201.404071567
c077,1,1,8,109819,110665,106479,4800.049591762001,4801.621218783
c077,1,1,9,91397,92193,88815,5400.050265180001,5401.837638805
c077,1,1,10,105254,106020,101385,6000.055722596001,6001.963139694
c077,1,1,11,95400,96094,91941,6600.059067209001,6602.093865409
# search time: 6600.059s
# total time: 13208.295s
c077,2,1,1,1338467,1338469,1228359,600.000067869,600.200541707
c077,2,1,2,571694,573981,557173,1200.00158376,1200.370661184
c077,2,1,3,392448,393564,378004,1800.001782654,1800.509128947
c077,2,1,4,328194,329021,314828,2400.0026558649997,2400.611414943
c077,2,1,5,185231,186111,178340,3000.0047899319998,3000.733917336
c077,2,1,6,180190,180998,173960,3600.007483077,3600.886945968
c077,2,1,7,127846,128721,124059,4200.010004431,4201.047089117
c077,2,1,8,109232,109963,105779,4800.011742255,4801.221221076
c077,2,1,9,89906,90662,87446,5400.01209776,5401.375209126
c077,2,1,10,106909,107617,102852,6000.01814217,6001.481404947
c077,2,1,11,97425,98232,93784,6600.020150499,6601.580032815
# search time: 6600.020s
# total time: 19810.317s
c077,3,1,1,1389632,1389634,1286127,600.000684763,600.206796291
c077,3,1,2,586791,587685,569193,1200.000894537,1200.343063726
c077,3,1,3,397458,398524,383195,1800.0009470129999,1800.446452726
c077,3,1,4,317504,318481,304759,2400.001163809,2400.529751845
c077,3,1,5,191615,192510,184149,3000.003994913,3000.631281889
c077,3,1,6,180357,181149,173821,3600.004605988,3600.723292319
c077,3,1,7,127926,128777,124205,4200.005478118,4200.840084052
c077,3,1,8,109389,110194,106007,4800.009156897,4800.967186284
c077,3,1,9,89667,90492,87072,5400.018148515001,5401.076334737
c077,3,1,10,107215,107896,103104,6000.019652006001,6001.156645596
c077,3,1,11,97327,98194,93850,6600.020458860001,6601.223522655
# search time: 6600.020s
# total time: 26411.997s
c077,4,1,1,1368379,1368381,1263055,600.002489482,600.185653409
c077,4,1,2,564034,566477,549795,1200.00302109,1200.30894258
c077,4,1,3,401942,402944,387261,1800.0032872699999,1800.402029653
c077,4,1,4,320718,321674,307629,2400.003818142,2400.485046473
c077,4,1,5,191458,192264,183933,3000.0050509479997,3000.567004295
c077,4,1,6,181926,182698,175146,3600.0057009019997,3600.653197307
c077,4,1,7,127227,128113,123537,4200.007979633,4200.768577613
c077,4,1,8,108146,108992,104915,4800.011298284,4800.872495033
c077,4,1,9,91465,92207,88738,5400.012029151,5400.977626699
c077,4,1,10,105832,106590,101953,6000.020300513001,6001.05472003
c077,4,1,11,95076,95838,91522,6600.079275553,6601.179797343
# search time: 6600.079s
# total time: 33013.623s
