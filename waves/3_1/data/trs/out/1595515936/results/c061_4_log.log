    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.34s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c061_4.json out/1595515936/results/c061_4_best.csv out/1595515936/results/c061_4_predictions.csv out/1595515936/results/c061_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 5]), o: IntList([5]) }
#   Datum { i: IntList([6, 6]), o: IntList([6]) }
#   Datum { i: IntList([7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([9, 3, 2, 4]), o: IntList([4]) }
#   Datum { i: IntList([6, 8, 4, 0, 3]), o: IntList([3]) }
#   Datum { i: IntList([1, 7, 5, 6, 9, 8]), o: IntList([8]) }
#   Datum { i: IntList([0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([8, 2, 7, 6, 1, 8, 5, 9]), o: IntList([9]) }
#   Datum { i: IntList([2, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([9, 2, 2, 5, 6, 2]), o: IntList([2]) }
#   Datum { i: IntList([4, 3]), o: IntList([3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c061,0,4,1,1072429,1072431,987764,600.001219199,602.75851621
c061,0,4,2,440540,442892,430056,1200.00395886,1203.431086959
c061,0,4,3,349315,350394,335551,1800.010498892,1803.863414089
c061,0,4,4,249728,250718,240141,2400.010585635,2404.226317377
c061,0,4,5,187288,188134,180323,3000.01139832,3004.522069657
c061,0,4,6,131530,132393,126972,3600.015007172,3604.832672252
c061,0,4,7,102765,103501,99060,4200.015162926,4205.178651061
c061,0,4,8,88809,89526,85762,4800.018591843,4805.462653066
c061,0,4,9,72012,72770,69686,5400.01861975,5405.845880559
c061,0,4,10,59557,60306,57804,6000.024552798,6006.226778839
c061,0,4,11,52156,52845,50715,6600.038167414,6606.600982948
# search time: 6600.038s
# total time: 6606.886s
c061,1,4,1,1020126,1020128,937468,600.000281699,600.435551684
c061,1,4,2,435434,437547,424805,1200.000668478,1200.693904485
c061,1,4,3,331477,332607,319317,1800.000847144,1800.913572061
c061,1,4,4,248286,249252,238759,2400.000879962,2401.125099686
c061,1,4,5,183413,184237,176788,3000.0017257150002,3001.29263823
c061,1,4,6,132596,133415,127929,3600.002050555,3601.468142803
c061,1,4,7,102141,102900,98643,4200.002206941,4201.626707838
c061,1,4,8,87701,88441,84755,4800.003935506999,4801.777212694
c061,1,4,9,71469,72251,69179,5400.005686662,5401.935363501
c061,1,4,10,61425,62238,59802,6000.00831346,6002.126683791
c061,1,4,11,50364,51005,49005,6600.015163951,6602.406513624
# search time: 6600.015s
# total time: 13209.688s
c061,2,4,1,994496,994498,912959,600.001550885,600.218704052
c061,2,4,2,436576,438495,425988,1200.00201154,1200.394855007
c061,2,4,3,335259,336372,322419,1800.009092273,1800.548267201
c061,2,4,4,247449,248206,237872,2400.010318599,2400.677120508
c061,2,4,5,182088,182985,175455,3000.01200036,3000.797147585
c061,2,4,6,151376,152213,145994,3600.0138999729998,3600.930566082
c061,2,4,7,117746,118501,113551,4200.017713542999,4201.043187702
c061,2,4,8,100065,100864,96750,4800.02137764,4801.148673368
c061,2,4,9,80926,81800,78380,5400.02557145,5401.288103443
c061,2,4,10,70933,71731,68878,6000.032620576,6001.438267418
c061,2,4,11,59837,60465,58077,6600.038824801,6601.598973621
# search time: 6600.039s
# total time: 19811.655s
c061,3,4,1,1093413,1093415,1021505,600.001492615,600.180702897
c061,3,4,2,510954,512902,496808,1200.001772557,1200.319148853
c061,3,4,3,392690,393802,377056,1800.001970365,1800.433573617
c061,3,4,4,287252,288206,276174,2400.004579083,2400.532325186
c061,3,4,5,209441,210308,201736,3000.009136719,3000.619501475
c061,3,4,6,160888,161781,155293,3600.009293842,3600.708576539
c061,3,4,7,130801,131574,126133,4200.010221457,4200.80058305
c061,3,4,8,114140,114918,110079,4800.011154467999,4800.897108207
c061,3,4,9,91165,91954,88080,5400.012609830999,5401.000283359
c061,3,4,10,77520,78236,75059,6000.015156031,6001.10240545
c061,3,4,11,68132,68944,66300,6600.020203411,6601.240348785
# search time: 6600.020s
# total time: 26413.291s
c061,4,4,1,1298877,1298879,1175856,600.000404571,600.248901263
c061,4,4,2,579195,581086,563742,1200.000478248,1200.396555215
c061,4,4,3,430144,431267,413074,1800.0009564450002,1800.609121621
c061,4,4,4,317258,318148,304839,2400.0013357010002,2400.737761329
c061,4,4,5,229401,230286,220963,3000.0015241500005,3000.854965661
c061,4,4,6,168051,168928,162099,3600.0021661670007,3600.94456222
c061,4,4,7,129990,130821,125315,4200.003675048,4201.03971016
c061,4,4,8,112485,113246,108428,4800.005526857,4801.114383132
c061,4,4,9,90777,91466,87618,5400.018055832001,5401.243343034
c061,4,4,10,77284,77956,74852,6000.022165864,6001.355742254
c061,4,4,11,66862,67626,64873,6600.024599778,6601.43674556
# search time: 6600.025s
# total time: 33015.174s
