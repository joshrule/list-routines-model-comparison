    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c064_4.json out/1595515936/results/c064_4_best.csv out/1595515936/results/c064_4_predictions.csv out/1595515936/results/c064_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 0, 3, 1, 4, 8]), o: IntList([0, 3, 1, 4]) }
#   Datum { i: IntList([6, 6, 5, 8, 5, 6, 5, 8, 4, 1]), o: IntList([6, 5, 8, 5, 6, 5, 8, 4]) }
#   Datum { i: IntList([4, 5, 0, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([2, 1, 1, 2, 2, 7, 2, 7]), o: IntList([1, 1, 2, 2, 7, 2]) }
#   Datum { i: IntList([2, 0, 4, 5, 7, 9, 8]), o: IntList([0, 4, 5, 7, 9]) }
#   Datum { i: IntList([6, 1, 9, 5, 0, 2, 3, 7]), o: IntList([1, 9, 5, 0, 2, 3]) }
#   Datum { i: IntList([4, 9, 4, 9, 4, 9, 9, 9, 9, 9]), o: IntList([9, 4, 9, 4, 9, 9, 9, 9]) }
#   Datum { i: IntList([3, 0, 3]), o: IntList([0]) }
#   Datum { i: IntList([5, 7, 7, 9, 8, 1, 4, 0, 6]), o: IntList([7, 7, 9, 8, 1, 4, 0]) }
#   Datum { i: IntList([0, 2]), o: IntList([]) }
#   Datum { i: IntList([3, 8, 3, 8, 3]), o: IntList([8, 3, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c064,0,4,1,1186067,1186069,1110767,600.000563051,602.172787448
c064,0,4,2,320148,321978,312593,1200.002842152,1202.825515989
c064,0,4,3,119957,120991,120288,1800.003874527,1803.224803275
c064,0,4,4,96114,96812,96359,2400.019733981,2403.598426732
c064,0,4,5,72988,73684,73303,3000.038914629,3003.901584645
c064,0,4,6,57849,58514,58208,3600.040190922,3604.235701831
c064,0,4,7,47961,48692,48429,4200.044787776,4204.617707441
c064,0,4,8,39315,40058,39845,4800.048132583,4804.925873491
c064,0,4,9,34571,35367,35099,5400.060955938,5405.296113242
c064,0,4,10,28077,28801,28588,6000.068927727,6005.758616755
c064,0,4,11,31232,31957,31048,6600.089522257001,6606.158565465
# search time: 6600.090s
# total time: 6606.432s
c064,1,4,1,1260120,1260122,1158007,600.000337495,600.371901041
c064,1,4,2,317414,318451,309498,1200.001142707,1200.646432507
c064,1,4,3,117133,118141,117393,1800.0054817220002,1800.853611312
c064,1,4,4,96812,97481,96971,2400.006914941,2401.04489117
c064,1,4,5,72049,72650,72283,3000.014754145,3001.207281276
c064,1,4,6,56315,56987,56665,3600.021990616,3601.387612297
c064,1,4,7,47590,48311,48055,4200.028912813,4201.550427669
c064,1,4,8,38446,39171,38933,4800.043558886,4801.741011215
c064,1,4,9,34000,34716,34515,5400.044405507,5401.898083583
c064,1,4,10,27246,28002,27823,6000.056960228,6002.107467594
c064,1,4,11,29800,30507,29561,6600.061505085,6602.339635649
# search time: 6600.062s
# total time: 13209.398s
c064,2,4,1,1193845,1193847,1114840,600.000733893,600.28366324
c064,2,4,2,319313,321073,312124,1200.001989228,1200.498744221
c064,2,4,3,120959,121893,121127,1800.004044954,1800.612442906
c064,2,4,4,95515,96286,95829,2400.005818988,2400.740235843
c064,2,4,5,72333,72986,72579,3000.011664326,3000.863922271
c064,2,4,6,56374,57141,56826,3600.018227752,3601.00197607
c064,2,4,7,46732,47424,47129,4200.028030013,4201.125779319
c064,2,4,8,37882,38636,38418,4800.029702603,4801.244370153
c064,2,4,9,33019,33397,33257,5400.040316467001,5401.374819247
c064,2,4,10,27295,28027,27847,6000.051624339,6001.564367531
c064,2,4,11,29599,30215,29254,6600.057716458,6601.755027564
# search time: 6600.058s
# total time: 19811.401s
c064,3,4,1,1202803,1202805,1102029,600.000795132,600.229866212
c064,3,4,2,315183,316269,306853,1200.002236589,1200.36902546
c064,3,4,3,117504,118533,117730,1800.010936349,1800.499061025
c064,3,4,4,93673,94427,94001,2400.01770566,2400.599923713
c064,3,4,5,71364,72073,71685,3000.0228183950003,3000.69578174
c064,3,4,6,55339,56152,55852,3600.0281622840002,3600.808989738
c064,3,4,7,46595,47274,47049,4200.032250029,4200.947018849
c064,3,4,8,38258,38952,38749,4800.0349327740005,4801.044991704
c064,3,4,9,33657,34299,34074,5400.042694782001,5401.16951073
c064,3,4,10,27051,27776,27581,6000.045723376001,6001.315710037
c064,3,4,11,30549,31275,30338,6600.053671896001,6601.411652085
# search time: 6600.054s
# total time: 26413.206s
c064,4,4,1,1247103,1247105,1141352,600.002428462,600.29838335
c064,4,4,2,320538,322676,313786,1200.0037767889999,1200.434417884
c064,4,4,3,116896,117995,117189,1800.0051167339998,1800.528523703
c064,4,4,4,95646,96374,95931,2400.018251305,2400.61810159
c064,4,4,5,72849,73603,73186,3000.025204776,3000.712873513
c064,4,4,6,56920,57620,57321,3600.033128254,3600.810215465
c064,4,4,7,47021,47723,47432,4200.044724387,4200.908608032
c064,4,4,8,38370,39136,38925,4800.084951719,4801.05058483
c064,4,4,9,33239,33923,33724,5400.092357318,5401.163707852
c064,4,4,10,27531,28247,28064,6000.095472104,6001.265172826
c064,4,4,11,30510,31155,30195,6600.098802168,6601.343846719
# search time: 6600.099s
# total time: 33014.936s
