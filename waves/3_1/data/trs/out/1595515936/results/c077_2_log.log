    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c077_2.json out/1595515936/results/c077_2_best.csv out/1595515936/results/c077_2_predictions.csv out/1595515936/results/c077_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 9, 9, 9]), o: IntList([4]) }
#   Datum { i: IntList([2, 4]), o: IntList([2]) }
#   Datum { i: IntList([1, 3, 1, 3, 1, 3]), o: IntList([6]) }
#   Datum { i: IntList([5, 2, 0]), o: IntList([3]) }
#   Datum { i: IntList([8, 0, 0, 0, 8]), o: IntList([5]) }
#   Datum { i: IntList([]), o: IntList([0]) }
#   Datum { i: IntList([2]), o: IntList([1]) }
#   Datum { i: IntList([1, 7, 2, 0]), o: IntList([4]) }
#   Datum { i: IntList([8, 3, 9, 5, 7]), o: IntList([5]) }
#   Datum { i: IntList([8, 6, 6]), o: IntList([3]) }
#   Datum { i: IntList([4, 4]), o: IntList([2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c077,0,2,1,1382478,1382480,1268290,600.006426042,601.922886078
c077,0,2,2,574436,576814,560376,1200.0103002320002,1202.482446876
c077,0,2,3,434042,435311,419260,1800.0115231070004,1802.810112145
c077,0,2,4,278613,279510,267720,2400.0122015470006,2403.100792699
c077,0,2,5,222913,223731,214197,3000.0130777400004,3003.331350954
c077,0,2,6,151370,152233,145686,3600.0264103270006,3603.656676919
c077,0,2,7,119860,120565,115328,4200.028582535,4204.114440749
c077,0,2,8,113186,113950,109621,4800.031385517001,4804.546309567
c077,0,2,9,110168,110874,106311,5400.035286026001,5404.819076765
c077,0,2,10,97917,98683,94940,6000.0353062290005,6005.226402711
c077,0,2,11,95021,95878,91653,6600.056625432,6605.452875182
# search time: 6600.057s
# total time: 6605.776s
c077,1,2,1,1287072,1287074,1202560,600.000264354,600.242033336
c077,1,2,2,576799,578734,560812,1200.000788299,1200.457732057
c077,1,2,3,430933,432052,416317,1800.001109034,1800.619531982
c077,1,2,4,279997,280947,269325,2400.001179414,2400.766460541
c077,1,2,5,219610,220517,211113,3000.001456693,3000.883105092
c077,1,2,6,150576,151401,144878,3600.0060407359997,3601.019286882
c077,1,2,7,118846,119608,114372,4200.006500896,4201.214473638
c077,1,2,8,113051,113757,109405,4800.007073092,4801.419060589
c077,1,2,9,109791,110569,106145,5400.007243157,5401.559906494
c077,1,2,10,97078,97867,94203,6000.012624442,6001.765605934
c077,1,2,11,90810,91468,87548,6600.0167524,6601.90010704
# search time: 6600.017s
# total time: 13208.129s
c077,2,2,1,1367125,1367127,1258676,600.000147761,600.20692838
c077,2,2,2,573758,574762,557456,1200.000729655,1200.36194387
c077,2,2,3,432384,433490,417923,1800.001458035,1800.485699372
c077,2,2,4,277499,278380,266878,2400.002483493,2400.589008206
c077,2,2,5,220835,221609,212208,3000.004019382,3000.683527621
c077,2,2,6,150524,151368,144909,3600.0058550539998,3600.796894854
c077,2,2,7,119224,120046,114822,4200.008771013,4200.973896973
c077,2,2,8,112968,113695,109298,4800.010755589,4801.117622667
c077,2,2,9,110524,111280,106570,5400.015016668,5401.216218132
c077,2,2,10,96917,97598,93977,6000.018511535,6001.383707476
c077,2,2,11,89285,90128,86294,6600.023719053999,6601.484197858
# search time: 6600.024s
# total time: 19810.033s
c077,3,2,1,1283074,1283076,1202204,600.007974251,600.18974967
c077,3,2,2,559154,561211,544892,1200.008514469,1200.320534211
c077,3,2,3,432781,433924,418165,1800.0089992909998,1800.426243294
c077,3,2,4,276623,277295,265601,2400.0105748939995,2400.510845438
c077,3,2,5,218353,219211,209795,3000.0128913499993,3000.589935151
c077,3,2,6,149695,150475,144032,3600.0148154969993,3600.677403781
c077,3,2,7,117658,118369,113304,4200.016260916999,4200.787475789
c077,3,2,8,112170,112955,108675,4800.019558079999,4800.911875282
c077,3,2,9,109608,110377,105725,5400.021891959999,5400.994092334
c077,3,2,10,96327,97097,93360,6000.026319780999,6001.127264332
c077,3,2,11,93812,94613,90293,6600.033109608999,6601.19519041
# search time: 6600.033s
# total time: 26411.669s
c077,4,2,1,1274200,1274202,1186038,600.002918184,600.174066725
c077,4,2,2,573541,574836,557367,1200.003196047,1200.294371831
c077,4,2,3,433367,434523,418447,1800.00513461,1800.389616105
c077,4,2,4,276433,277411,265611,2400.0064909149996,2400.463988391
c077,4,2,5,218817,219767,210476,3000.0078140959995,3000.532298971
c077,4,2,6,148468,149335,142962,3600.0128624719996,3600.610141171
c077,4,2,7,117628,118405,113242,4200.014902901,4200.706062585
c077,4,2,8,110822,111532,107335,4800.022912282,4800.812896765
c077,4,2,9,109843,110565,105866,5400.024933428,5400.886275232
c077,4,2,10,96974,97753,93994,6000.029914048,6000.966471821
c077,4,2,11,93526,94271,89985,6600.034920579,6601.030459612
# search time: 6600.035s
# total time: 33013.163s
