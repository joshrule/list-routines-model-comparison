    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c080_2.json out/1595515936/results/c080_2_best.csv out/1595515936/results/c080_2_predictions.csv out/1595515936/results/c080_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 2, 5, 7]), o: IntList([7, 5, 2, 6]) }
#   Datum { i: IntList([4, 2, 1, 0, 6]), o: IntList([6, 0, 1, 2, 4]) }
#   Datum { i: IntList([6, 7, 5, 1, 2, 4]), o: IntList([4, 2, 1, 5, 7, 6]) }
#   Datum { i: IntList([9, 3, 3, 9, 3, 9, 9, 3, 3]), o: IntList([3, 3, 9, 9, 3, 9, 3, 3, 9]) }
#   Datum { i: IntList([0, 0, 0, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8, 0, 0, 0]) }
#   Datum { i: IntList([3, 3, 8, 4, 0, 7, 0, 5]), o: IntList([5, 0, 7, 0, 4, 8, 3, 3]) }
#   Datum { i: IntList([6, 7, 9, 1, 4, 8, 2, 0, 2, 3]), o: IntList([3, 2, 0, 2, 8, 4, 1, 9, 7, 6]) }
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([5, 5, 5, 0]) }
#   Datum { i: IntList([6, 3, 1]), o: IntList([1, 3, 6]) }
#   Datum { i: IntList([9, 5, 3, 0, 7, 4, 7, 1, 6]), o: IntList([6, 1, 7, 4, 7, 0, 3, 5, 9]) }
#   Datum { i: IntList([0, 7]), o: IntList([7, 0]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c080,0,2,1,1318571,1318573,1226865,600.002314319,601.956778941
c080,0,2,2,351918,353261,343198,1200.0023895919999,1202.468348845
c080,0,2,3,180882,181916,180081,1800.004406095,1802.853931019
c080,0,2,4,111728,112487,111751,2400.008567029,2403.194246358
c080,0,2,5,74851,75634,75248,3000.00872189,3003.459508958
c080,0,2,6,58033,58749,58459,3600.012578514,3603.762623661
c080,0,2,7,45581,46281,45821,4200.025695699,4204.111088894
c080,0,2,8,34888,35554,35425,4800.032773655,4804.457983692
c080,0,2,9,32799,33469,33260,5400.036850828,5404.747085245
c080,0,2,10,31227,31922,31712,6000.042874041,6005.070737649
c080,0,2,11,26770,27473,27258,6600.044226278,6605.382032482
# search time: 6600.044s
# total time: 6605.618s
c080,1,2,1,1353084,1353086,1228141,600.000203731,600.327637279
c080,1,2,2,355902,357377,346817,1200.0005941240001,1200.543225386
c080,1,2,3,178574,179591,177870,1800.0008122860002,1800.726125919
c080,1,2,4,111056,111832,111256,2400.003533254,2400.892205767
c080,1,2,5,73116,73844,73482,3000.009114194,3001.044466844
c080,1,2,6,58113,58845,58464,3600.020459058,3601.224378791
c080,1,2,7,44727,45502,45067,4200.025557258,4201.381076312
c080,1,2,8,34345,34984,34813,4800.032692081,4801.546475823
c080,1,2,9,32619,33261,33073,5400.040098396001,5401.700468673
c080,1,2,10,30198,31063,30866,6000.045985761,6001.865908158
c080,1,2,11,26026,26823,26694,6600.065174573,6602.03737867
# search time: 6600.065s
# total time: 13208.022s
c080,2,2,1,1354697,1354699,1270516,600.000325783,600.272490644
c080,2,2,2,351005,353190,342536,1200.000685822,1200.433702392
c080,2,2,3,178457,179605,177831,1800.002139317,1800.56094954
c080,2,2,4,111773,112609,111918,2400.011591452,2400.677393422
c080,2,2,5,73665,74509,74132,3000.017537187,3000.766244115
c080,2,2,6,57440,58179,57881,3600.028126929,3600.873078518
c080,2,2,7,45285,46007,45592,4200.031604131,4201.003567736
c080,2,2,8,34765,35487,35320,4800.0317064539995,4801.154010212
c080,2,2,9,32283,33125,32901,5400.035851803,5401.268365093
c080,2,2,10,29960,30711,30513,6000.0559141329995,6001.411100732
c080,2,2,11,25808,26498,26311,6600.088405484,6601.571109177
# search time: 6600.088s
# total time: 19809.969s
c080,3,2,1,1331327,1331329,1242665,600.000379253,600.220241815
c080,3,2,2,350585,352856,342461,1200.000649301,1200.351894159
c080,3,2,3,176245,177278,175463,1800.002261227,1800.459387331
c080,3,2,4,111311,112108,111390,2400.004715027,2400.558994176
c080,3,2,5,73820,74581,74256,3000.0062035,3000.638651012
c080,3,2,6,57307,58156,57868,3600.007679282,3600.715406462
c080,3,2,7,45365,46036,45617,4200.017591139,4200.828015651
c080,3,2,8,34329,35017,34842,4800.021186544,4800.939823617
c080,3,2,9,32181,32830,32655,5400.034985947999,5401.027988891
c080,3,2,10,29905,30629,30406,6000.049368798999,6001.182889823
c080,3,2,11,25568,26247,26097,6600.056092757999,6601.292254023
# search time: 6600.056s
# total time: 26411.643s
c080,4,2,1,1393954,1393956,1299717,600.000069278,600.227701978
c080,4,2,2,344683,346807,336367,1200.000768343,1200.33671874
c080,4,2,3,179367,180467,178811,1800.0053174199998,1800.42476632
c080,4,2,4,110491,111289,110577,2400.0058185099997,2400.508598839
c080,4,2,5,73434,74162,73796,3000.007828117,3000.580428145
c080,4,2,6,56543,57321,57080,3600.012900528,3600.659592565
c080,4,2,7,44383,45193,44795,4200.017543527,4200.739405587
c080,4,2,8,33885,34545,34396,4800.0207773,4800.817438427
c080,4,2,9,31901,32574,32386,5400.025234265,5400.874607934
c080,4,2,10,29751,30542,30294,6000.035687199,6000.971353985
c080,4,2,11,25596,26149,25976,6600.041309712,6601.06500109
# search time: 6600.041s
# total time: 33013.072s
