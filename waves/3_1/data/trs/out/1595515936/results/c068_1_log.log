    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c068_1.json out/1595515936/results/c068_1_best.csv out/1595515936/results/c068_1_predictions.csv out/1595515936/results/c068_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c068,0,1,1,1351813,1351815,1233755,600.000155509,602.075043818
c068,0,1,2,197661,199141,193514,1200.00200733,1202.593274804
c068,0,1,3,86877,87831,87182,1800.0046283699999,1803.010603213
c068,0,1,4,69795,70461,70007,2400.00559497,2403.412000272
c068,0,1,5,61522,62073,61821,3000.007362793,3003.699981002
c068,0,1,6,45386,46067,45834,3600.019119827,3604.024939079
c068,0,1,7,32686,33275,33062,4200.038147137,4204.374680731
c068,0,1,8,30445,31107,30935,4800.045181638,4804.625838041
c068,0,1,9,27532,28194,28000,5400.057546738,5404.863761996
c068,0,1,10,21024,21805,21680,6000.082602908,6005.109419994
c068,0,1,11,18962,19593,19461,6600.095797869,6605.453037159
# search time: 6600.096s
# total time: 6605.704s
c068,1,1,1,1268989,1268991,1186907,600.000220485,600.318685244
c068,1,1,2,198371,200494,194242,1200.0023661740001,1200.555632495
c068,1,1,3,85036,86005,85498,1800.004346744,1800.78855261
c068,1,1,4,69021,69808,69358,2400.01035738,2400.997760286
c068,1,1,5,60822,61590,61338,3000.016875224,3001.163535281
c068,1,1,6,44470,45075,44858,3600.0253508590004,3601.317969772
c068,1,1,7,31296,31956,31764,4200.04383402,4201.481179287
c068,1,1,8,28897,29577,29440,4800.0573792059995,4801.614962434
c068,1,1,9,26234,26836,26646,5400.070350999,5401.772551508
c068,1,1,10,19783,20553,20469,6000.097757654,6001.948153305
c068,1,1,11,18103,18810,18673,6600.097762130999,6602.076371251
# search time: 6600.098s
# total time: 13208.037s
c068,2,1,1,1272847,1272849,1194028,600.000448271,600.300944133
c068,2,1,2,194520,196764,190488,1200.003043859,1200.478103943
c068,2,1,3,84006,84988,84382,1800.005532508,1800.636621469
c068,2,1,4,68265,68966,68573,2400.015106337,2400.784486862
c068,2,1,5,60124,60831,60554,3000.0225359369997,3000.900826844
c068,2,1,6,43871,44692,44479,3600.030650544,3601.026885006
c068,2,1,7,31549,32264,32089,4200.036899048,4201.186790021
c068,2,1,8,29530,30093,29940,4800.052561958,4801.287591346
c068,2,1,9,26222,26920,26734,5400.083363715,5401.38972349
c068,2,1,10,20292,21035,20904,6000.08799112,6001.509809368
c068,2,1,11,18175,18810,18682,6600.100531207,6601.618379934
# search time: 6600.101s
# total time: 19809.932s
c068,3,1,1,1296237,1296239,1186795,600.003382508,600.219642871
c068,3,1,2,196820,199211,192932,1200.007069365,1200.350339426
c068,3,1,3,84546,85529,84943,1800.0120347880002,1800.474426563
c068,3,1,4,68321,69033,68587,2400.017898723,2400.579622265
c068,3,1,5,60763,61436,61152,3000.022530147,3000.665677034
c068,3,1,6,44989,45664,45388,3600.023718666,3600.757147631
c068,3,1,7,32124,32899,32660,4200.043077918001,4200.880724029
c068,3,1,8,29584,30348,30161,4800.054043632001,4800.983543229
c068,3,1,9,26744,27412,27223,5400.069051734001,5401.050094311
c068,3,1,10,20838,21488,21320,6000.069693571001,6001.142310596
c068,3,1,11,18334,18833,18737,6600.079495508001,6601.228897936
# search time: 6600.079s
# total time: 26411.358s
c068,4,1,1,1269794,1269796,1183315,600.000198715,600.204505951
c068,4,1,2,200117,201045,195275,1200.001790203,1200.314983131
c068,4,1,3,85074,86022,85390,1800.003655474,1800.426896745
c068,4,1,4,66567,67225,66825,2400.011823757,2400.584296739
c068,4,1,5,58723,59490,59221,3000.015403582,3000.671424439
c068,4,1,6,42812,43566,43366,3600.021793743,3600.757469493
c068,4,1,7,30584,31257,31117,4200.045374032,4200.881487489
c068,4,1,8,28243,28870,28748,4800.053066626,4800.968983281
c068,4,1,9,25657,26300,26155,5400.054854135,5401.039070165
c068,4,1,10,19646,20376,20274,6000.081955001,6001.146368658
c068,4,1,11,17553,18218,18087,6600.098807693,6601.231040324
# search time: 6600.099s
# total time: 33012.917s
