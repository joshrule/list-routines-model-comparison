    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c070_3.json out/1595515936/results/c070_3_best.csv out/1595515936/results/c070_3_predictions.csv out/1595515936/results/c070_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([7, 6, 9, 0, 5, 1, 2]), o: IntList([7, 6, 9, 0, 5, 1, 2, 7, 6, 9, 0, 5, 1, 2]) }
#   Datum { i: IntList([6, 7, 0, 9, 1, 8]), o: IntList([6, 7, 0, 9, 1, 8, 6, 7, 0, 9, 1, 8]) }
#   Datum { i: IntList([5, 5]), o: IntList([5, 5, 5, 5]) }
#   Datum { i: IntList([3, 2, 0, 9]), o: IntList([3, 2, 0, 9, 3, 2, 0, 9]) }
#   Datum { i: IntList([0, 8, 4, 3, 6, 8, 4]), o: IntList([0, 8, 4, 3, 6, 8, 4, 0, 8, 4, 3, 6, 8, 4]) }
#   Datum { i: IntList([4, 3, 5]), o: IntList([4, 3, 5, 4, 3, 5]) }
#   Datum { i: IntList([5, 2, 7, 8, 3, 2]), o: IntList([5, 2, 7, 8, 3, 2, 5, 2, 7, 8, 3, 2]) }
#   Datum { i: IntList([9, 0, 3, 3, 3, 1, 9]), o: IntList([9, 0, 3, 3, 3, 1, 9, 9, 0, 3, 3, 3, 1, 9]) }
#   Datum { i: IntList([7]), o: IntList([7, 7]) }
#   Datum { i: IntList([7, 1, 1, 2, 1, 2]), o: IntList([7, 1, 1, 2, 1, 2, 7, 1, 1, 2, 1, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c070,0,3,1,1212860,1212862,1137104,600.000355033,602.118627391
c070,0,3,2,185804,187939,182561,1200.001577878,1202.643585113
c070,0,3,3,78408,79483,78869,1800.008631194,1803.11037447
c070,0,3,4,52744,53409,53094,2400.0130335,2403.502554663
c070,0,3,5,45003,45717,45490,3000.014009384,3003.86267277
c070,0,3,6,39264,40005,39760,3600.022833984,3604.260225324
c070,0,3,7,31399,32051,31879,4200.0371070500005,4204.648643324
c070,0,3,8,29833,30457,30275,4800.042121955001,4804.919725597
c070,0,3,9,26265,27004,26849,5400.0518734180005,5405.231100749
c070,0,3,10,21532,22157,22028,6000.064183454,6005.517527423
c070,0,3,11,22682,23368,23228,6600.07939148,6605.775400841
# search time: 6600.079s
# total time: 6605.981s
c070,1,3,1,1260778,1260780,1161125,600.007044376,600.639138039
c070,1,3,2,180647,182804,177497,1200.010042749,1200.893801519
c070,1,3,3,78800,79797,79289,1800.011730729,1801.117711719
c070,1,3,4,51423,52112,51905,2400.0171642679998,2401.320154833
c070,1,3,5,44012,44672,44541,3000.0246305089995,3001.525786102
c070,1,3,6,38440,39205,39069,3600.0437781809997,3601.739175449
c070,1,3,7,31246,31795,31657,4200.048377462,4201.86994718
c070,1,3,8,29483,30143,29998,4800.050796668,4802.01650417
c070,1,3,9,25516,26359,26182,5400.065293438,5402.174593356
c070,1,3,10,20728,21348,21202,6000.080266075,6002.354481683
c070,1,3,11,22390,23081,22922,6600.094266155,6602.507496815
# search time: 6600.094s
# total time: 13208.797s
c070,2,3,1,1233199,1233201,1124298,600.001556591,600.24676584
c070,2,3,2,181642,184153,178844,1200.002532184,1200.408420391
c070,2,3,3,80041,81012,80426,1800.007462785,1800.53465895
c070,2,3,4,52972,53649,53334,2400.037219966,2400.723594915
c070,2,3,5,45551,46323,46106,3000.060271986,3000.893066354
c070,2,3,6,39389,40167,39969,3600.071526322,3601.01896904
c070,2,3,7,29388,29925,29820,4200.076413439,4201.196512735
c070,2,3,8,28926,29525,29416,4800.091933169,4801.358225232
c070,2,3,9,25827,26462,26317,5400.1029428540005,5401.482411004
c070,2,3,10,21148,21744,21642,6000.1160149550005,6001.58750884
c070,2,3,11,22128,22852,22735,6600.145938578001,6601.706050834
# search time: 6600.146s
# total time: 19810.820s
c070,3,3,1,1289522,1289524,1191860,600.000014387,600.23237092
c070,3,3,2,180971,183395,177804,1200.0022068869998,1200.370251754
c070,3,3,3,80192,81132,80514,1800.011008649,1800.469928684
c070,3,3,4,52674,53420,53152,2400.013941577,2400.598623752
c070,3,3,5,45449,46123,45909,3000.031070224,3000.704228513
c070,3,3,6,39836,40492,40321,3600.040661502,3600.801339091
c070,3,3,7,31053,31687,31527,4200.070221313,4200.956844492
c070,3,3,8,29253,29958,29796,4800.089032414,4801.060787747
c070,3,3,9,25665,26425,26293,5400.119545644,5401.209714151
c070,3,3,10,21072,21750,21633,6000.137029098,6001.333402996
c070,3,3,11,22126,22847,22718,6600.140335563,6601.414074582
# search time: 6600.140s
# total time: 26412.534s
c070,4,3,1,1285135,1285137,1183792,600.000066889,600.200436063
c070,4,3,2,182854,184932,179508,1200.002256752,1200.322658376
c070,4,3,3,79381,80422,79863,1800.003325021,1800.399334256
c070,4,3,4,52946,53646,53328,2400.00508719,2400.502969483
c070,4,3,5,45439,46088,45874,3000.014715849,3000.605874964
c070,4,3,6,39682,40385,40110,3600.0225435049997,3600.694229095
c070,4,3,7,30691,31469,31318,4200.031239583,4200.818071637
c070,4,3,8,29588,30317,30135,4800.034585159,4800.890753087
c070,4,3,9,25977,26594,26445,5400.05288292,5400.971497467
c070,4,3,10,21431,22034,21901,6000.0529630440005,6001.007352887
c070,4,3,11,22309,23095,22970,6600.063264587001,6601.133311625
# search time: 6600.063s
# total time: 33013.972s
