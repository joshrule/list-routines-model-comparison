    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c070_2.json out/1595515936/results/c070_2_best.csv out/1595515936/results/c070_2_predictions.csv out/1595515936/results/c070_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 3, 5]), o: IntList([4, 3, 5, 4, 3, 5]) }
#   Datum { i: IntList([5, 2, 7, 8, 3, 2]), o: IntList([5, 2, 7, 8, 3, 2, 5, 2, 7, 8, 3, 2]) }
#   Datum { i: IntList([6, 7, 0, 9, 1, 8]), o: IntList([6, 7, 0, 9, 1, 8, 6, 7, 0, 9, 1, 8]) }
#   Datum { i: IntList([3, 2, 0, 9]), o: IntList([3, 2, 0, 9, 3, 2, 0, 9]) }
#   Datum { i: IntList([7]), o: IntList([7, 7]) }
#   Datum { i: IntList([7, 6, 9, 0, 5, 1, 2]), o: IntList([7, 6, 9, 0, 5, 1, 2, 7, 6, 9, 0, 5, 1, 2]) }
#   Datum { i: IntList([9, 0, 3, 3, 3, 1, 9]), o: IntList([9, 0, 3, 3, 3, 1, 9, 9, 0, 3, 3, 3, 1, 9]) }
#   Datum { i: IntList([7, 1, 1, 2, 1, 2]), o: IntList([7, 1, 1, 2, 1, 2, 7, 1, 1, 2, 1, 2]) }
#   Datum { i: IntList([0, 8, 4, 3, 6, 8, 4]), o: IntList([0, 8, 4, 3, 6, 8, 4, 0, 8, 4, 3, 6, 8, 4]) }
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([5, 5]), o: IntList([5, 5, 5, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c070,0,2,1,1378159,1378161,1259318,600.00017133,601.911807482
c070,0,2,2,275381,277731,269685,1200.000267055,1202.38282362
c070,0,2,3,107510,108515,107628,1800.004958205,1802.760543782
c070,0,2,4,65271,66109,65532,2400.010304525,2403.126358542
c070,0,2,5,54915,55662,55350,3000.0185252379997,3003.412399364
c070,0,2,6,48686,49446,49181,3600.027573557,3603.712373231
c070,0,2,7,36935,37640,37459,4200.028764395,4203.937068849
c070,0,2,8,29961,30708,30565,4800.040927745,4804.196633889
c070,0,2,9,24342,24943,24786,5400.045929266,5404.433054207
c070,0,2,10,20203,20958,20868,6000.046465764,6004.786613355
c070,0,2,11,17821,18561,18443,6600.059787247,6605.050388847
# search time: 6600.060s
# total time: 6605.260s
c070,1,2,1,1295918,1295920,1206390,600.000046333,600.317730992
c070,1,2,2,272106,274083,266130,1200.000139433,1200.538524794
c070,1,2,3,105588,106638,105767,1800.003322977,1800.712395993
c070,1,2,4,64905,65561,65006,2400.014544415,2400.922847555
c070,1,2,5,53744,54391,54108,3000.0164722669997,3001.096332329
c070,1,2,6,48139,48864,48618,3600.0258082969995,3601.243605721
c070,1,2,7,36107,36795,36615,4200.049362395999,4201.3665199
c070,1,2,8,29508,30198,30053,4800.057050628999,4801.50818045
c070,1,2,9,23858,24492,24368,5400.076696936999,5401.702505909
c070,1,2,10,19862,20582,20444,6000.080674363999,6001.83424982
c070,1,2,11,17688,18195,18096,6600.093840845999,6601.94801208
# search time: 6600.094s
# total time: 13207.530s
c070,2,2,1,1371317,1371319,1270116,600.000260114,600.266016326
c070,2,2,2,265709,266961,259212,1200.001202592,1200.432251937
c070,2,2,3,103201,104409,103309,1800.002130482,1800.560264351
c070,2,2,4,65490,66250,65766,2400.006388338,2400.706786205
c070,2,2,5,54653,55198,54891,3000.010175864,3000.839974071
c070,2,2,6,48660,49385,49124,3600.015855183,3600.952324571
c070,2,2,7,36629,37286,37097,4200.0336019549995,4201.056135531
c070,2,2,8,29935,30539,30414,4800.045304611999,4801.180422236
c070,2,2,9,24267,24917,24737,5400.048836292999,5401.272559953
c070,2,2,10,19897,20626,20516,6000.050953545999,6001.419429433
c070,2,2,11,17709,18307,18195,6600.1048662799985,6601.579944744
# search time: 6600.105s
# total time: 19809.526s
c070,3,2,1,1301599,1301601,1215334,600.000777489,600.215215024
c070,3,2,2,274359,276616,268774,1200.002668544,1200.348922838
c070,3,2,3,107016,108063,107106,1800.004840857,1800.451461512
c070,3,2,4,65369,66143,65549,2400.013789603,2400.578187946
c070,3,2,5,54656,55384,55024,3000.014291019,3000.675206307
c070,3,2,6,48705,49453,49173,3600.0260281630003,3600.797489966
c070,3,2,7,36608,37322,37165,4200.028209059001,4200.883746057
c070,3,2,8,29848,30567,30421,4800.037012197001,4800.968881349
c070,3,2,9,24160,24760,24598,5400.053625861001,5401.066825687
c070,3,2,10,20134,20896,20783,6000.075515313001,6001.163096391
c070,3,2,11,17764,18404,18327,6600.144841711001,6601.315291084
# search time: 6600.145s
# total time: 26411.047s
c070,4,2,1,1239424,1239426,1155976,600.002646513,600.203261911
c070,4,2,2,269665,271468,263577,1200.003982314,1200.323613469
c070,4,2,3,106031,107079,106203,1800.0088386930001,1800.519800603
c070,4,2,4,62634,63306,62769,2400.010318384,2400.64341727
c070,4,2,5,52412,53040,52763,3000.022561575,3000.747483971
c070,4,2,6,46785,47493,47238,3600.032911365,3600.831052359
c070,4,2,7,35074,35761,35610,4200.045619936,4200.898582394
c070,4,2,8,28619,29334,29205,4800.080780308,4801.00924803
c070,4,2,9,23045,23643,23530,5400.112546206,5401.113806326
c070,4,2,10,19303,20003,19916,6000.112605573,6001.199002021
c070,4,2,11,17385,18015,17908,6600.147574183,6601.31716844
# search time: 6600.148s
# total time: 33012.790s
