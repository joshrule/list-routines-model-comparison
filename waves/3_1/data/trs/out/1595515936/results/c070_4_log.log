    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c070_4.json out/1595515936/results/c070_4_best.csv out/1595515936/results/c070_4_predictions.csv out/1595515936/results/c070_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 2, 7, 8, 3, 2]), o: IntList([5, 2, 7, 8, 3, 2, 5, 2, 7, 8, 3, 2]) }
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([9, 0, 3, 3, 3, 1, 9]), o: IntList([9, 0, 3, 3, 3, 1, 9, 9, 0, 3, 3, 3, 1, 9]) }
#   Datum { i: IntList([7, 6, 9, 0, 5, 1, 2]), o: IntList([7, 6, 9, 0, 5, 1, 2, 7, 6, 9, 0, 5, 1, 2]) }
#   Datum { i: IntList([7]), o: IntList([7, 7]) }
#   Datum { i: IntList([5, 5]), o: IntList([5, 5, 5, 5]) }
#   Datum { i: IntList([4, 3, 5]), o: IntList([4, 3, 5, 4, 3, 5]) }
#   Datum { i: IntList([3, 2, 0, 9]), o: IntList([3, 2, 0, 9, 3, 2, 0, 9]) }
#   Datum { i: IntList([7, 1, 1, 2, 1, 2]), o: IntList([7, 1, 1, 2, 1, 2, 7, 1, 1, 2, 1, 2]) }
#   Datum { i: IntList([0, 8, 4, 3, 6, 8, 4]), o: IntList([0, 8, 4, 3, 6, 8, 4, 0, 8, 4, 3, 6, 8, 4]) }
#   Datum { i: IntList([6, 7, 0, 9, 1, 8]), o: IntList([6, 7, 0, 9, 1, 8, 6, 7, 0, 9, 1, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c070,0,4,1,1207126,1207128,1112111,600.000324752,601.93439174
c070,0,4,2,158513,160840,156078,1200.0024088750001,1202.464774218
c070,0,4,3,88737,89655,88828,1800.003783527,1802.905815
c070,0,4,4,53398,54125,53864,2400.009237943,2403.290173586
c070,0,4,5,39667,40198,39980,3000.0376765539995,3003.736901728
c070,0,4,6,38877,39646,39453,3600.0448772979994,3604.034821742
c070,0,4,7,35167,35945,35753,4200.047012976,4204.284102472
c070,0,4,8,31600,32314,32165,4800.053783642999,4804.547916132
c070,0,4,9,27662,28378,28239,5400.066804415999,5404.846929062
c070,0,4,10,23427,24045,23938,6000.0774417289995,6005.100447337
c070,0,4,11,19798,20470,20375,6600.077500496999,6605.391911888
# search time: 6600.078s
# total time: 6605.620s
c070,1,4,1,1236642,1236644,1135907,600.000215294,600.358794412
c070,1,4,2,155435,157632,153033,1200.0023473649999,1200.614674055
c070,1,4,3,86677,87589,86840,1800.0033020199999,1800.840076068
c070,1,4,4,53672,54399,54086,2400.005783956,2401.074843208
c070,1,4,5,39413,39998,39771,3000.026443655,3001.324486327
c070,1,4,6,38901,39680,39512,3600.028613595,3601.44988317
c070,1,4,7,34999,35676,35496,4200.029461253,4201.561838859
c070,1,4,8,31057,31748,31563,4800.050593719,4801.724576524
c070,1,4,9,27724,28394,28223,5400.072384632,5401.886383009
c070,1,4,10,23104,23844,23690,6000.110067375,6002.053772842
c070,1,4,11,19473,20216,20121,6600.1194479509995,6602.199752166
# search time: 6600.119s
# total time: 13208.155s
c070,2,4,1,1206056,1206058,1123890,600.000418298,600.242808851
c070,2,4,2,153609,155652,151051,1200.000444846,1200.416900189
c070,2,4,3,83892,84781,83992,1800.004250219,1800.574881398
c070,2,4,4,50712,51433,51232,2400.007624173,2400.746713523
c070,2,4,5,37651,38270,38087,3000.009187308,3000.913878125
c070,2,4,6,38036,38683,38521,3600.01124392,3601.032688687
c070,2,4,7,34609,35306,35151,4200.037363509,4201.165550776
c070,2,4,8,31505,32204,32042,4800.043679318,4801.238000578
c070,2,4,9,27585,28287,28113,5400.061342004,5401.373968757
c070,2,4,10,22826,23623,23514,6000.066078918,6001.487815073
c070,2,4,11,19706,20422,20300,6600.067395287,6601.567556632
# search time: 6600.067s
# total time: 19810.043s
c070,3,4,1,1233849,1233851,1134879,600.000053032,600.202861974
c070,3,4,2,157173,159221,154558,1200.0033695490001,1200.336319697
c070,3,4,3,87169,88201,87438,1800.0067864890002,1800.456289397
c070,3,4,4,52422,53206,52906,2400.010145389,2400.5805181
c070,3,4,5,39014,39731,39482,3000.0265461050003,3000.712632298
c070,3,4,6,38491,39239,39069,3600.0270945260004,3600.81062742
c070,3,4,7,34835,35531,35332,4200.0404680130005,4200.900237963
c070,3,4,8,31180,31760,31623,4800.0489006590005,4800.994487905
c070,3,4,9,27794,28446,28263,5400.054984286,5401.104789263
c070,3,4,10,22878,23551,23431,6000.07030594,6001.231975096
c070,3,4,11,19579,20287,20113,6600.089703442,6601.332780499
# search time: 6600.090s
# total time: 26411.780s
c070,4,4,1,1198478,1198480,1116874,600.000739735,600.188200699
c070,4,4,2,151659,153619,149131,1200.003534087,1200.30120393
c070,4,4,3,84838,85685,84870,1800.005899014,1800.398202827
c070,4,4,4,52594,53316,53015,2400.0111842690003,2400.511529327
c070,4,4,5,39097,39745,39510,3000.0211297530004,3000.602386773
c070,4,4,6,38307,39090,38873,3600.03474515,3600.691636294
c070,4,4,7,34771,35515,35265,4200.042620463,4200.762317545
c070,4,4,8,31265,31967,31816,4800.058062919,4800.832853517
c070,4,4,9,27414,28195,28038,5400.066482615,5400.928972781
c070,4,4,10,23034,23728,23585,6000.084845339999,6001.020063738
c070,4,4,11,19705,20395,20267,6600.087019537,6601.107555408
# search time: 6600.087s
# total time: 33013.092s
