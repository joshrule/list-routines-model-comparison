    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c070_5.json out/1595515936/results/c070_5_best.csv out/1595515936/results/c070_5_predictions.csv out/1595515936/results/c070_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 7, 0, 9, 1, 8]), o: IntList([6, 7, 0, 9, 1, 8, 6, 7, 0, 9, 1, 8]) }
#   Datum { i: IntList([7, 1, 1, 2, 1, 2]), o: IntList([7, 1, 1, 2, 1, 2, 7, 1, 1, 2, 1, 2]) }
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([9, 0, 3, 3, 3, 1, 9]), o: IntList([9, 0, 3, 3, 3, 1, 9, 9, 0, 3, 3, 3, 1, 9]) }
#   Datum { i: IntList([4, 3, 5]), o: IntList([4, 3, 5, 4, 3, 5]) }
#   Datum { i: IntList([5, 5]), o: IntList([5, 5, 5, 5]) }
#   Datum { i: IntList([5, 2, 7, 8, 3, 2]), o: IntList([5, 2, 7, 8, 3, 2, 5, 2, 7, 8, 3, 2]) }
#   Datum { i: IntList([7]), o: IntList([7, 7]) }
#   Datum { i: IntList([3, 2, 0, 9]), o: IntList([3, 2, 0, 9, 3, 2, 0, 9]) }
#   Datum { i: IntList([0, 8, 4, 3, 6, 8, 4]), o: IntList([0, 8, 4, 3, 6, 8, 4, 0, 8, 4, 3, 6, 8, 4]) }
#   Datum { i: IntList([7, 6, 9, 0, 5, 1, 2]), o: IntList([7, 6, 9, 0, 5, 1, 2, 7, 6, 9, 0, 5, 1, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c070,0,5,1,1242048,1242050,1137431,600.000091813,601.962449889
c070,0,5,2,155155,157407,152660,1200.0037722040001,1202.500668319
c070,0,5,3,85523,86491,84906,1800.005287598,1802.898020063
c070,0,5,4,62206,62919,62471,2400.039441967,2403.379347078
c070,0,5,5,42982,43686,43478,3000.0441115390004,3003.844108182
c070,0,5,6,38940,39637,39419,3600.0510405100003,3604.149645993
c070,0,5,7,35808,36488,36291,4200.063343146,4204.398673332
c070,0,5,8,29666,30510,30348,4800.071699076,4804.657056445
c070,0,5,9,27732,28537,28352,5400.0826848,5404.931214227
c070,0,5,10,24312,25004,24894,6000.089266507,6005.200973582
c070,0,5,11,20536,21166,21064,6600.092768148999,6605.483310031
# search time: 6600.093s
# total time: 6605.775s
c070,1,5,1,1218025,1218027,1137871,600.00000418,600.308829528
c070,1,5,2,154364,156417,151781,1200.001808727,1200.542881284
c070,1,5,3,85044,85934,84335,1800.0026178120002,1800.749361177
c070,1,5,4,62289,63092,62539,2400.0053866810003,2400.961999783
c070,1,5,5,42978,43693,43471,3000.010539098,3001.195790967
c070,1,5,6,38721,39379,39176,3600.017427395,3601.350353511
c070,1,5,7,35230,35707,35550,4200.032221761,4201.524217518
c070,1,5,8,29506,30253,30092,4800.044044553,4801.662600341
c070,1,5,9,27162,27827,27686,5400.047450588,5401.813216775
c070,1,5,10,23901,24560,24444,6000.070461475,6002.007802461
c070,1,5,11,20663,21256,21163,6600.107720398,6602.220340544
# search time: 6600.108s
# total time: 13208.216s
c070,2,5,1,1236519,1236521,1139678,600.000034853,600.251837583
c070,2,5,2,156203,158257,153562,1200.001584096,1200.405010222
c070,2,5,3,84333,85276,83693,1800.004226313,1800.559804441
c070,2,5,4,61043,61861,61361,2400.0078727229998,2400.694565576
c070,2,5,5,42039,42712,42480,3000.0094930369996,3000.852594695
c070,2,5,6,38442,39164,38949,3600.0112037389995,3600.939098011
c070,2,5,7,35359,36027,35834,4200.011282158999,4201.04503707
c070,2,5,8,29577,30209,30079,4800.021213597,4801.13573321
c070,2,5,9,27522,28254,28080,5400.021389703999,5401.231736164
c070,2,5,10,24195,24882,24761,6000.024970582999,6001.325664079
c070,2,5,11,20137,20937,20821,6600.033908190999,6601.457736711
# search time: 6600.034s
# total time: 19809.992s
c070,3,5,1,1217773,1217775,1142078,600.000639203,600.223283635
c070,3,5,2,155583,157599,152784,1200.0024568899998,1200.348548814
c070,3,5,3,83792,84589,83010,1800.0051139459997,1800.462127658
c070,3,5,4,61741,62498,62002,2400.012631099,2400.544177551
c070,3,5,5,42558,43232,43020,3000.0213817979998,3000.67236325
c070,3,5,6,38185,38877,38650,3600.0297023639996,3600.769910017
c070,3,5,7,35265,36046,35805,4200.034274113,4200.86529387
c070,3,5,8,29532,30236,30089,4800.058770992,4800.952538706
c070,3,5,9,27558,28232,28058,5400.06633925,5401.017270148
c070,3,5,10,24415,25039,24915,6000.100200333,6001.12475179
c070,3,5,11,20460,21241,21127,6600.134407389,6601.21324983
# search time: 6600.134s
# total time: 26411.544s
c070,4,5,1,1201637,1201639,1101293,600.000664867,600.185019919
c070,4,5,2,153733,154354,149764,1200.0039681039998,1200.286978376
c070,4,5,3,83122,84027,82527,1800.005103949,1800.388699088
c070,4,5,4,61351,62151,61640,2400.006123663,2400.493617824
c070,4,5,5,41918,42644,42428,3000.029616826,3000.628051973
c070,4,5,6,38579,39266,39111,3600.038572196,3600.712849371
c070,4,5,7,35338,36034,35830,4200.039157327,4200.785070203
c070,4,5,8,29587,30234,30119,4800.055420799,4800.883204358
c070,4,5,9,27438,28212,28043,5400.064250563,5400.955324638
c070,4,5,10,24162,24902,24762,6000.070038203,6001.023664477
c070,4,5,11,20428,21234,21105,6600.090373329,6601.096099009
# search time: 6600.090s
# total time: 33012.979s
