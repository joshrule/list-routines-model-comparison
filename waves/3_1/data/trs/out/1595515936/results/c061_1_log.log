    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized + debuginfo] target(s) in 0.44s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c061_1.json out/1595515936/results/c061_1_best.csv out/1595515936/results/c061_1_predictions.csv out/1595515936/results/c061_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 3, 2, 4]), o: IntList([4]) }
#   Datum { i: IntList([1, 7, 5, 6, 9, 8]), o: IntList([8]) }
#   Datum { i: IntList([4, 3]), o: IntList([3]) }
#   Datum { i: IntList([2, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([6, 6]), o: IntList([6]) }
#   Datum { i: IntList([6, 8, 4, 0, 3]), o: IntList([3]) }
#   Datum { i: IntList([1, 1, 5]), o: IntList([5]) }
#   Datum { i: IntList([0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([8, 2, 7, 6, 1, 8, 5, 9]), o: IntList([9]) }
#   Datum { i: IntList([7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([9, 2, 2, 5, 6, 2]), o: IntList([2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c061,0,1,1,983964,983966,917078,600.000221079,602.465331942
c061,0,1,2,437244,438000,423279,1200.001599468,1203.177042313
c061,0,1,3,256476,257461,247666,1800.00373969,1803.667230314
c061,0,1,4,211336,212262,203440,2400.00479429,2404.042682993
c061,0,1,5,164787,165716,158877,3000.011252734,3004.402785513
c061,0,1,6,144648,145430,139299,3600.0125219710003,3604.644411506
c061,0,1,7,108709,109492,104839,4200.016168585,4204.988230708
c061,0,1,8,95263,96001,91927,4800.019034954999,4805.333083634
c061,0,1,9,83518,84180,80809,5400.023666159,5405.716769816
c061,0,1,10,71444,72176,69479,6000.024009289,6006.077206758
c061,0,1,11,60428,61169,58702,6600.032598246,6606.49997241
# search time: 6600.033s
# total time: 6606.783s
c061,1,1,1,1031164,1031166,943368,600.000435907,600.326710118
c061,1,1,2,428376,430486,417329,1200.000588954,1200.594747168
c061,1,1,3,248751,249831,240236,1800.001338298,1800.858872873
c061,1,1,4,204934,205768,197170,2400.00137226,2401.065501523
c061,1,1,5,164726,165454,158882,3000.004276346,3001.267726975
c061,1,1,6,145317,146135,140087,3600.0078703550003,3601.431854412
c061,1,1,7,108363,109127,104473,4200.009093847,4201.609381183
c061,1,1,8,94926,95636,91654,4800.011290087,4801.791698858
c061,1,1,9,82395,83084,79765,5400.013901615,5402.065994252
c061,1,1,10,70354,71192,68495,6000.022728458,6002.319478015
c061,1,1,11,57372,58046,55715,6600.0258319039995,6602.520617829
# search time: 6600.026s
# total time: 13209.714s
c061,2,1,1,1043747,1043749,959574,600.000462786,600.391574592
c061,2,1,2,418981,421028,408155,1200.0014842589999,1200.645039622
c061,2,1,3,254696,255758,246064,1800.0019077789998,1800.792341315
c061,2,1,4,207810,208679,199978,2400.0043363669997,2400.919149332
c061,2,1,5,174416,175296,167811,3000.0080241799997,3001.015301583
c061,2,1,6,155425,156254,149834,3600.0087857619997,3601.113240353
c061,2,1,7,118135,118764,113673,4200.013061856,4201.23070487
c061,2,1,8,103401,104059,99591,4800.016788993999,4801.344297126
c061,2,1,9,89735,90549,86847,5400.022206035999,5401.463732506
c061,2,1,10,76932,77682,74690,6000.031487128999,6001.622579157
c061,2,1,11,62818,63458,60919,6600.032639923999,6601.755509938
# search time: 6600.033s
# total time: 19811.870s
c061,3,1,1,1092093,1092095,1009962,600.006902992,600.216332718
c061,3,1,2,465327,467694,453668,1200.007454485,1200.407119516
c061,3,1,3,262951,264010,253830,1800.00892238,1800.569662102
c061,3,1,4,215748,216696,207684,2400.010094544,2400.672980222
c061,3,1,5,172418,173240,165884,3000.0129042949998,3000.775061347
c061,3,1,6,169228,170129,162991,3600.0139933689998,3600.872748
c061,3,1,7,138966,139772,134057,4200.016790111,4200.967426588
c061,3,1,8,124642,125340,120102,4800.018775435,4801.07575269
c061,3,1,9,108974,109685,105405,5400.020467958,5401.175147172
c061,3,1,10,91095,91892,88473,6000.022772039,6001.294383239
c061,3,1,11,75408,76168,73054,6600.024802825001,6601.396038754
# search time: 6600.025s
# total time: 26413.696s
c061,4,1,1,1225148,1225150,1141137,600.000276372,600.344933538
c061,4,1,2,535155,536227,520821,1200.0116622340001,1200.623440723
c061,4,1,3,306585,307706,296062,1800.012613325,1800.744581963
c061,4,1,4,267543,268310,257442,2400.01319924,2400.828534713
c061,4,1,5,214056,214847,205716,3000.013753003,3000.921386042
c061,4,1,6,184561,185484,177675,3600.0168299650004,3601.001193665
c061,4,1,7,139536,140304,134372,4200.0170691210005,4201.085685795
c061,4,1,8,123259,124065,118781,4800.021081622001,4801.189707241
c061,4,1,9,106534,107344,102997,5400.022665041,5401.282044233
c061,4,1,10,91011,91740,88321,6000.026489657001,6001.391648557
c061,4,1,11,76876,77719,74616,6600.028863581001,6601.490385146
# search time: 6600.029s
# total time: 33015.784s
