    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c068_2.json out/1595515936/results/c068_2_best.csv out/1595515936/results/c068_2_predictions.csv out/1595515936/results/c068_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c068,0,2,1,1227477,1227479,1141720,600.000254289,601.952174903
c068,0,2,2,179348,181587,175957,1200.008677927,1202.49279255
c068,0,2,3,73134,74012,73514,1800.009891101,1802.963133253
c068,0,2,4,57676,58328,58087,2400.016616216,2403.345379502
c068,0,2,5,44631,45190,44930,3000.025835098,3003.744045185
c068,0,2,6,42827,43536,43323,3600.037629778,3603.986969969
c068,0,2,7,29514,30301,30107,4200.048119132,4204.317211058
c068,0,2,8,26486,27131,26956,4800.06329243,4804.77635676
c068,0,2,9,24116,24850,24760,5400.078894296999,5405.130897333
c068,0,2,10,20664,21314,21208,6000.144011774999,6005.541037812
c068,0,2,11,17254,17952,17789,6600.171075508999,6605.821211301
# search time: 6600.171s
# total time: 6606.084s
c068,1,2,1,1223633,1223635,1137669,600.000016643,600.577925584
c068,1,2,2,178316,180395,174974,1200.0002583589999,1200.81781281
c068,1,2,3,71201,72266,71860,1800.007726627,1801.042794477
c068,1,2,4,54192,54702,54593,2400.01592347,2401.264533615
c068,1,2,5,44013,44539,44332,3000.023484629,3001.497180348
c068,1,2,6,41683,42318,42098,3600.024377131,3601.616870222
c068,1,2,7,28712,29532,29276,4200.052568931,4201.876069138
c068,1,2,8,27050,27760,27620,4800.060620558999,4802.060798371
c068,1,2,9,23705,24391,24297,5400.093677567999,5402.282427718
c068,1,2,10,20297,21005,20888,6000.109257119999,6002.418545934
c068,1,2,11,16977,17547,17440,6600.116234142999,6602.618799261
# search time: 6600.116s
# total time: 13208.903s
c068,2,2,1,1257428,1257430,1164820,600.0071703,600.273481036
c068,2,2,2,174754,176922,171392,1200.010702328,1200.435490258
c068,2,2,3,68486,69282,68734,1800.0130854220001,1800.578562287
c068,2,2,4,57343,58063,57848,2400.014227582,2400.743428668
c068,2,2,5,44763,45531,45250,3000.022080319,3000.93628645
c068,2,2,6,42479,43199,42975,3600.025519229,3601.034911744
c068,2,2,7,29597,30371,30201,4200.033159784,4201.182845824
c068,2,2,8,27531,28085,27986,4800.035008668,4801.331461015
c068,2,2,9,24839,25322,25173,5400.035804443,5401.404038538
c068,2,2,10,20587,21196,21087,6000.043202381001,6001.581664686
c068,2,2,11,16805,17373,17286,6600.048849295001,6601.695774462
# search time: 6600.049s
# total time: 19810.920s
c068,3,2,1,1250524,1250526,1164447,600.000201117,600.217336006
c068,3,2,2,175178,177251,171615,1200.002629692,1200.347528738
c068,3,2,3,72312,73292,72835,1800.0076727790001,1800.484512978
c068,3,2,4,57411,58113,57911,2400.0122407960002,2400.581128565
c068,3,2,5,44671,45355,45103,3000.030468974,3000.743176884
c068,3,2,6,42534,43137,42929,3600.035992024,3600.831612235
c068,3,2,7,29753,30492,30327,4200.038688383,4200.952099998
c068,3,2,8,27078,27793,27657,4800.061410787,4801.080859466
c068,3,2,9,24485,25109,24973,5400.067124959,5401.19161872
c068,3,2,10,20518,21195,21069,6000.075376147,6001.302602935
c068,3,2,11,17363,18064,17918,6600.100998815,6601.403691921
# search time: 6600.101s
# total time: 26412.699s
c068,4,2,1,1298897,1298899,1194897,600.000003666,600.219007551
c068,4,2,2,174195,176445,170941,1200.0012785479998,1200.326903985
c068,4,2,3,72362,73246,72773,1800.0037357829997,1800.455169282
c068,4,2,4,57282,57854,57644,2400.003779969,2400.544580741
c068,4,2,5,43896,44641,44393,3000.013072939,3000.660906735
c068,4,2,6,42608,43129,42911,3600.028683132,3600.747027906
c068,4,2,7,28770,29575,29362,4200.031161163,4200.846778292
c068,4,2,8,27299,28027,27843,4800.035426884,4800.939165557
c068,4,2,9,24214,24892,24744,5400.077257067,5401.06772266
c068,4,2,10,20172,20892,20803,6000.090669765,6001.178033902
c068,4,2,11,17248,17936,17817,6600.127759534,6601.330422694
# search time: 6600.128s
# total time: 33014.247s
