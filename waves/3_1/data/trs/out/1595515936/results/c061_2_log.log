    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized + debuginfo] target(s) in 0.32s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c061_2.json out/1595515936/results/c061_2_best.csv out/1595515936/results/c061_2_predictions.csv out/1595515936/results/c061_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([6, 6]), o: IntList([6]) }
#   Datum { i: IntList([8, 2, 7, 6, 1, 8, 5, 9]), o: IntList([9]) }
#   Datum { i: IntList([4, 3]), o: IntList([3]) }
#   Datum { i: IntList([1, 1, 5]), o: IntList([5]) }
#   Datum { i: IntList([7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([2, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([9, 2, 2, 5, 6, 2]), o: IntList([2]) }
#   Datum { i: IntList([1, 7, 5, 6, 9, 8]), o: IntList([8]) }
#   Datum { i: IntList([6, 8, 4, 0, 3]), o: IntList([3]) }
#   Datum { i: IntList([9, 3, 2, 4]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c061,0,2,1,1029624,1029626,942073,600.001463003,602.326714402
c061,0,2,2,430973,433118,420834,1200.0082273819999,1203.039576112
c061,0,2,3,367333,368427,349597,1800.0089291549998,1803.454859951
c061,0,2,4,211663,212625,204357,2400.024198838,2403.808437163
c061,0,2,5,176497,177352,170574,3000.048237563,3004.116625204
c061,0,2,6,135084,135882,130129,3600.050308884,3604.414876883
c061,0,2,7,119084,119901,114866,4200.053478707,4204.673482066
c061,0,2,8,98758,99542,95380,4800.05685843,4804.925250087
c061,0,2,9,80637,81483,78122,5400.078767413,5405.201886149
c061,0,2,10,62760,63592,61104,6000.088440971,6005.595366541
c061,0,2,11,55468,56163,53908,6600.0951362999995,6606.031566483
# search time: 6600.095s
# total time: 6606.273s
c061,1,2,1,1015474,1015476,934970,600.000225325,600.249991308
c061,1,2,2,415460,417645,405964,1200.003536999,1200.497179579
c061,1,2,3,351841,352976,335779,1800.0058419490001,1800.694716894
c061,1,2,4,204428,205380,197341,2400.0083112,2400.871882979
c061,1,2,5,176990,177788,171808,3000.0091235930004,3001.031912792
c061,1,2,6,140743,141600,136909,3600.011126624,3601.174166114
c061,1,2,7,114631,115414,110933,4200.016358842,4201.333635452
c061,1,2,8,95807,96618,93175,4800.016458178,4801.509635348
c061,1,2,9,80538,81251,78187,5400.0215201930005,5401.650556391
c061,1,2,10,61789,62474,60067,6000.027996124,6001.887994701
c061,1,2,11,57859,58626,56354,6600.034696292,6602.02108207
# search time: 6600.035s
# total time: 13208.674s
c061,2,2,1,1013991,1013993,925455,600.000113095,600.198803491
c061,2,2,2,422138,424418,412052,1200.004485966,1200.378073407
c061,2,2,3,349189,350401,333606,1800.005048409,1800.523900568
c061,2,2,4,202631,203613,195640,2400.006053859,2400.656994697
c061,2,2,5,190480,191256,184804,3000.013862499,3000.766662977
c061,2,2,6,156345,157218,152057,3600.016642607,3600.877592381
c061,2,2,7,128923,129799,124962,4200.016804884,4201.008856607
c061,2,2,8,107608,108359,104325,4800.020896999999,4801.115477711
c061,2,2,9,89653,90379,87004,5400.025132098999,5401.231222394
c061,2,2,10,69910,70717,67887,6000.032898692999,6001.384901908
c061,2,2,11,64299,64919,62223,6600.036806463999,6601.525133388
# search time: 6600.037s
# total time: 19810.569s
c061,3,2,1,1057074,1057076,982815,600.000252397,600.165876006
c061,3,2,2,467259,469192,456273,1200.0004458150001,1200.299289458
c061,3,2,3,399458,400664,381079,1800.0009009620003,1800.415633314
c061,3,2,4,232461,233427,224328,2400.001615219,2400.506425888
c061,3,2,5,197669,198451,190901,3000.00228082,3000.588048785
c061,3,2,6,161197,162126,155748,3600.00288371,3600.694889334
c061,3,2,7,148754,149634,143965,4200.005201092,4200.802560435
c061,3,2,8,124917,125689,121272,4800.00905426,4800.899084771
c061,3,2,9,103345,104109,100259,5400.013026494,5400.997362592
c061,3,2,10,80027,80746,77579,6000.0137452339995,6001.128940527
c061,3,2,11,74966,75763,72687,6600.020195962,6601.248806318
# search time: 6600.020s
# total time: 26412.230s
c061,4,2,1,1309002,1309004,1203057,600.002146851,600.200626928
c061,4,2,2,523495,525537,511382,1200.002192877,1200.328051506
c061,4,2,3,444665,445888,425071,1800.004075293,1800.45072307
c061,4,2,4,261284,262322,251822,2400.004893596,2400.556702847
c061,4,2,5,224784,225563,218109,3000.0066818779997,3000.64271573
c061,4,2,6,180288,181105,175378,3600.0111726709997,3600.739549501
c061,4,2,7,148141,148947,143351,4200.0139488019995,4200.831274503
c061,4,2,8,124845,125627,121097,4800.0153890619995,4800.932500704
c061,4,2,9,104339,105201,101313,5400.0206846969995,5401.031666285
c061,4,2,10,80216,81062,77777,6000.0232310599995,6001.151392785
c061,4,2,11,74737,75538,72474,6600.028689330999,6601.265507968
# search time: 6600.029s
# total time: 33014.104s
