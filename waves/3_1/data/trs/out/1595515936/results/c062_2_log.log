    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized + debuginfo] target(s) in 0.42s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c062_2.json out/1595515936/results/c062_2_best.csv out/1595515936/results/c062_2_predictions.csv out/1595515936/results/c062_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 9, 8]), o: IntList([1, 9]) }
#   Datum { i: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6, 3]), o: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6]) }
#   Datum { i: IntList([1, 9, 2, 8, 0, 6]), o: IntList([1, 9, 2, 8, 0]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([1, 2, 5, 4, 5, 4, 7]), o: IntList([1, 2, 5, 4, 5, 4]) }
#   Datum { i: IntList([6, 8, 9, 3, 7, 5, 2, 1]), o: IntList([6, 8, 9, 3, 7, 5, 2]) }
#   Datum { i: IntList([2, 5, 2, 7]), o: IntList([2, 5, 2]) }
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([7, 6, 0, 7, 3]), o: IntList([7, 6, 0, 7]) }
#   Datum { i: IntList([4, 2, 0, 3, 4, 0, 0, 3, 4]), o: IntList([4, 2, 0, 3, 4, 0, 0, 3]) }
#   Datum { i: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2, 4]), o: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c062,0,2,1,1035349,1035351,955786,600.000200578,602.318466509
c062,0,2,2,358542,360661,350579,1200.0004260229998,1202.978067067
c062,0,2,3,91370,92472,91849,1800.0053109439998,1803.376398521
c062,0,2,4,66835,67590,67064,2400.011074191,2403.768480738
c062,0,2,5,79780,80419,77786,3000.01942763,3004.088732346
c062,0,2,6,58857,59658,57496,3600.025219071,3604.414598915
c062,0,2,7,42576,43323,41519,4200.041536578,4204.777606155
c062,0,2,8,38473,39234,37681,4800.045232768,4805.100250176
c062,0,2,9,37072,37828,36377,5400.046403241,5405.430637616
c062,0,2,10,33122,33920,32612,6000.05739785,6005.768186737
c062,0,2,11,27016,27797,26767,6600.071545008,6606.125995864
# search time: 6600.072s
# total time: 6606.390s
c062,1,2,1,1076443,1076445,975897,600.000152239,600.336320552
c062,1,2,2,376745,378711,368115,1200.002071802,1200.597779392
c062,1,2,3,100288,101327,100680,1800.004449685,1800.751849798
c062,1,2,4,78123,78815,78236,2400.008738455,2400.96151631
c062,1,2,5,84296,85041,82340,3000.012687237,3001.111834081
c062,1,2,6,61836,62507,60142,3600.0193201290003,3601.254282453
c062,1,2,7,45531,46188,44293,4200.019968269,4201.402421471
c062,1,2,8,40860,41582,39858,4800.031521524,4801.58501427
c062,1,2,9,38215,38910,37575,5400.037887103999,5401.772251122
c062,1,2,10,33403,34131,32862,6000.0537077339995,6001.962289014
c062,1,2,11,27603,28384,27332,6600.065079749,6602.13129184
# search time: 6600.065s
# total time: 13208.933s
c062,2,2,1,1025889,1025891,956162,600.002264907,600.240043947
c062,2,2,2,370269,372276,362197,1200.003020401,1200.428110171
c062,2,2,3,99430,100561,99921,1800.00549467,1800.554948088
c062,2,2,4,76301,77056,76473,2400.019839771,2400.702372574
c062,2,2,5,86127,86837,83960,3000.023188516,3000.797091685
c062,2,2,6,65701,66443,64026,3600.0244932670003,3600.886407392
c062,2,2,7,48498,49252,47352,4200.029163393,4201.015607584
c062,2,2,8,43480,44184,42323,4800.030008699,4801.14304889
c062,2,2,9,40516,41322,39855,5400.046073632,5401.30807768
c062,2,2,10,35768,36549,35128,6000.047093068,6001.414911395
c062,2,2,11,28961,29638,28571,6600.05213337,6601.580882751
# search time: 6600.052s
# total time: 19810.945s
c062,3,2,1,1076114,1076116,1007855,600.000016861,600.205226349
c062,3,2,2,397624,398507,387825,1200.00104586,1200.371586677
c062,3,2,3,108173,109253,108540,1800.0053275750001,1800.474682552
c062,3,2,4,83070,83776,83200,2400.0101825290003,2400.584617391
c062,3,2,5,88760,89456,86463,3000.0122676420006,3000.667579443
c062,3,2,6,75305,76103,73403,3600.0244844950007,3600.755614289
c062,3,2,7,57626,58332,56036,4200.030376331,4200.872660335
c062,3,2,8,52562,53248,51042,4800.036552997,4800.951073537
c062,3,2,9,49578,50283,48495,5400.044056404,5401.04312103
c062,3,2,10,42386,43075,41483,6000.065138984,6001.190297176
c062,3,2,11,34771,35516,34213,6600.070104881001,6601.324662822
# search time: 6600.070s
# total time: 26412.554s
c062,4,2,1,1205684,1205686,1127113,600.000028048,600.206041939
c062,4,2,2,465168,467602,454853,1200.000544754,1200.343863973
c062,4,2,3,131687,132676,131766,1800.00324164,1800.441490558
c062,4,2,4,100532,101297,100560,2400.006766196,2400.535072647
c062,4,2,5,108142,108833,105369,3000.008136673,3000.621971957
c062,4,2,6,79660,80461,77533,3600.014954537,3600.705478355
c062,4,2,7,58762,59535,57301,4200.0241786120005,4200.787957986
c062,4,2,8,52636,53305,51121,4800.030066336,4800.919785434
c062,4,2,9,48648,49459,47535,5400.039147597,5401.03898908
c062,4,2,10,43440,44107,42246,6000.052945412,6001.155661535
c062,4,2,11,35503,36294,34902,6600.059424417,6601.263662365
# search time: 6600.059s
# total time: 33014.274s
