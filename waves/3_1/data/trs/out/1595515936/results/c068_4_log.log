    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c068_4.json out/1595515936/results/c068_4_best.csv out/1595515936/results/c068_4_predictions.csv out/1595515936/results/c068_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c068,0,4,1,1286832,1286834,1206761,600.000562595,602.373119145
c068,0,4,2,246029,247899,240233,1200.001225653,1202.87149731
c068,0,4,3,94377,95408,94624,1800.00297014,1803.294851263
c068,0,4,4,62959,63715,63465,2400.003678385,2403.642672045
c068,0,4,5,42995,43676,43380,3000.010629424,3004.000163095
c068,0,4,6,38449,39127,38842,3600.019734258,3604.3329796
c068,0,4,7,33761,34399,34146,4200.024183551,4204.587270943
c068,0,4,8,28355,28978,28707,4800.030287922999,4804.903462878
c068,0,4,9,24844,25547,25302,5400.046472626999,5405.206156759
c068,0,4,10,19705,20369,20190,6000.055305626,6005.521700052
c068,0,4,11,18488,19084,18979,6600.085569019,6605.819965031
# search time: 6600.086s
# total time: 6606.034s
c068,1,4,1,1394224,1394226,1283734,600.000436373,600.391672556
c068,1,4,2,240977,243304,235313,1200.002597923,1200.636990543
c068,1,4,3,92684,93890,93095,1800.006961161,1800.8445335
c068,1,4,4,62163,62923,62673,2400.0198976,2401.05052088
c068,1,4,5,41585,42245,41962,3000.0287035580004,3001.245048428
c068,1,4,6,38148,38824,38540,3600.0610400870005,3601.442452342
c068,1,4,7,33214,33841,33605,4200.071576382001,4201.638176854
c068,1,4,8,28060,28668,28370,4800.091172186001,4801.831102271
c068,1,4,9,24749,25349,25114,5400.112937110001,5402.012254908
c068,1,4,10,19577,20290,20107,6000.141216287001,6002.246984541
c068,1,4,11,18320,19015,18858,6600.163901358001,6602.426060404
# search time: 6600.164s
# total time: 13208.795s
c068,2,4,1,1385786,1385788,1272277,600.000094551,600.277921356
c068,2,4,2,239473,240266,232563,1200.0020063279999,1200.440063008
c068,2,4,3,91620,92622,91934,1800.002496575,1800.554326236
c068,2,4,4,63336,64046,63823,2400.005498343,2400.671695721
c068,2,4,5,43053,43705,43402,3000.021472952,3000.812530865
c068,2,4,6,38756,39431,39131,3600.022930729,3600.93525268
c068,2,4,7,33406,34145,33880,4200.0314218700005,4201.063311305
c068,2,4,8,28198,28855,28638,4800.051083519001,4801.22708939
c068,2,4,9,24845,25513,25297,5400.066084823001,5401.358434817
c068,2,4,10,19982,20604,20412,6000.066222277001,6001.521679302
c068,2,4,11,18265,18918,18817,6600.084629603,6601.638707713
# search time: 6600.085s
# total time: 19810.755s
c068,3,4,1,1396905,1396907,1289983,600.00018936,600.261872779
c068,3,4,2,237802,240062,231820,1200.005681072,1200.409249314
c068,3,4,3,94193,95266,94479,1800.011379645,1800.54276923
c068,3,4,4,63590,64281,63967,2400.012807947,2400.646802936
c068,3,4,5,42981,43728,43450,3000.017682242,3000.787485866
c068,3,4,6,38713,39380,39110,3600.026179425,3600.910668236
c068,3,4,7,33848,34488,34231,4200.034238224,4201.026660908
c068,3,4,8,28033,28612,28371,4800.04810559,4801.132194742
c068,3,4,9,25216,25832,25586,5400.053023148,5401.270050379
c068,3,4,10,19826,20504,20292,6000.143827696,6001.474949904
c068,3,4,11,18529,19182,19061,6600.149579279,6601.538965683
# search time: 6600.150s
# total time: 26412.677s
c068,4,4,1,1407685,1407687,1295865,600.003881058,600.245548209
c068,4,4,2,246621,248914,241194,1200.01077974,1200.361899457
c068,4,4,3,93887,94979,94222,1800.014110754,1800.455144177
c068,4,4,4,62140,62964,62712,2400.02094719,2400.553447137
c068,4,4,5,42443,43208,42889,3000.034480172,3000.64092213
c068,4,4,6,38602,39236,38930,3600.043020571,3600.74288159
c068,4,4,7,33323,33973,33707,4200.053142889999,4200.84708325
c068,4,4,8,27609,28324,28062,4800.055373224999,4800.966231873
c068,4,4,9,24757,25460,25223,5400.075266926999,5401.083344111
c068,4,4,10,19719,20376,20172,6000.110949050999,6001.247858324
c068,4,4,11,18377,19026,18883,6600.121432806999,6601.328666662
# search time: 6600.121s
# total time: 33014.208s
