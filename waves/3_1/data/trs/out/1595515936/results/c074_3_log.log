    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c074_3.json out/1595515936/results/c074_3_best.csv out/1595515936/results/c074_3_predictions.csv out/1595515936/results/c074_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 2, 7, 6, 8, 6]), o: IntList([8, 8]) }
#   Datum { i: IntList([9, 2, 0, 5, 7, 5, 2, 3, 4, 7]), o: IntList([9]) }
#   Datum { i: IntList([8, 8, 8, 2, 7, 7, 2]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([0]), o: IntList([]) }
#   Datum { i: IntList([8, 9, 9, 1, 1, 9, 8, 8, 9, 1]), o: IntList([8, 9, 9, 9, 8, 8, 9]) }
#   Datum { i: IntList([0, 0, 0]), o: IntList([]) }
#   Datum { i: IntList([9, 9, 7, 6, 7]), o: IntList([9, 9]) }
#   Datum { i: IntList([2, 8, 8, 8, 2, 8, 2, 2]), o: IntList([8, 8, 8, 8]) }
#   Datum { i: IntList([7, 7, 8, 8, 7, 7, 8, 8, 8, 7]), o: IntList([8, 8, 8, 8, 8]) }
#   Datum { i: IntList([6, 7, 8, 4, 3, 4]), o: IntList([8]) }
#   Datum { i: IntList([3, 8, 8, 3, 9, 9, 1, 9, 0, 9]), o: IntList([8, 8, 9, 9, 9, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c074,0,3,1,1217949,1217951,1135667,600.000129359,601.874117934
c074,0,3,2,425565,427577,415943,1200.001237218,1202.465713292
c074,0,3,3,221027,222011,219793,1800.003329063,1802.914257047
c074,0,3,4,149785,150617,149400,2400.008942655,2403.357474748
c074,0,3,5,151413,152149,146576,3000.0114978379997,3003.689936565
c074,0,3,6,80007,80745,77803,3600.0211518759997,3604.041126343
c074,0,3,7,76387,77053,74735,4200.024638362,4204.386657124
c074,0,3,8,68117,68706,66542,4800.028179588,4804.666492946
c074,0,3,9,56373,57168,55268,5400.033618565,5404.92182127
c074,0,3,10,46373,47103,45438,6000.04405853,6005.273611511
c074,0,3,11,42485,43148,41422,6600.0536929810005,6605.532695539
# search time: 6600.054s
# total time: 6605.783s
c074,1,3,1,1268801,1268803,1165880,600.000479069,600.273851862
c074,1,3,2,417101,419125,407219,1200.002131723,1200.533407236
c074,1,3,3,221269,222459,220202,1800.004915849,1800.724044312
c074,1,3,4,152136,152919,151622,2400.008320411,2400.925146122
c074,1,3,5,149549,150285,144682,3000.0088211700004,3001.090463726
c074,1,3,6,78246,78968,76040,3600.01595316,3601.294378569
c074,1,3,7,75764,76573,74035,4200.020733534,4201.46946664
c074,1,3,8,67411,68223,65983,4800.024434483,4801.629358623
c074,1,3,9,55973,56757,54799,5400.032483821999,5401.776739149
c074,1,3,10,45418,46160,44512,6000.035390894,6001.943489931
c074,1,3,11,40921,41629,39899,6600.036065525,6602.11829698
# search time: 6600.036s
# total time: 13208.417s
c074,2,3,1,1254932,1254934,1172960,600.000090944,600.23620693
c074,2,3,2,425316,426646,414621,1200.000457206,1200.411993312
c074,2,3,3,219170,220156,217944,1800.0014940830001,1800.546225339
c074,2,3,4,148802,149724,148451,2400.002359919,2400.687598203
c074,2,3,5,150961,151719,146124,3000.005127817,3000.812925364
c074,2,3,6,78561,79294,76378,3600.006424848,3600.938199074
c074,2,3,7,75395,76138,73662,4200.015928319,4201.059971825
c074,2,3,8,68024,68739,66469,4800.026152906999,4801.178729126
c074,2,3,9,55317,56047,54146,5400.03069849,5401.274995603
c074,2,3,10,45262,45935,44281,6000.034636791,6001.396796575
c074,2,3,11,41655,42410,40756,6600.054135986999,6601.518061032
# search time: 6600.054s
# total time: 19810.186s
c074,3,3,1,1244742,1244744,1147451,600.000224078,600.185365852
c074,3,3,2,409445,411212,398861,1200.0003204700001,1200.324739855
c074,3,3,3,218893,219884,217672,1800.0010495450001,1800.44164118
c074,3,3,4,150993,151786,150589,2400.001741078,2400.531217446
c074,3,3,5,151061,151825,146283,3000.004614713,3000.613945386
c074,3,3,6,79380,80078,77217,3600.015636366,3600.731422359
c074,3,3,7,76109,76912,74464,4200.0241233199995,4200.844045843
c074,3,3,8,71104,71805,69429,4800.025224843999,4800.927719111
c074,3,3,9,59125,59934,57907,5400.038983396999,5401.038388517
c074,3,3,10,47575,48301,46579,6000.0548586039995,6001.130299197
c074,3,3,11,44231,45010,43184,6600.057426302999,6601.211189741
# search time: 6600.057s
# total time: 26411.964s
c074,4,3,1,1317786,1317788,1210607,600.000202092,600.176043907
c074,4,3,2,437002,439208,427078,1200.004880287,1200.310382939
c074,4,3,3,228954,230047,227466,1800.007601321,1800.409114155
c074,4,3,4,150995,151846,150398,2400.00972063,2400.507108576
c074,4,3,5,155146,155980,150169,3000.009769099,3000.575623942
c074,4,3,6,75785,76666,73736,3600.018316084,3600.657771009
c074,4,3,7,73173,73983,71580,4200.022529967,4200.753075804
c074,4,3,8,65488,66207,64090,4800.0278031630005,4800.848183424
c074,4,3,9,53894,54513,52764,5400.035555954,5400.941812161
c074,4,3,10,44208,44878,43459,6000.048862143,6001.044216686
c074,4,3,11,40669,41437,39931,6600.052956705001,6601.159778979
# search time: 6600.053s
# total time: 33013.370s
