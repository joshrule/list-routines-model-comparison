    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c072_3.json out/1595515936/results/c072_3_best.csv out/1595515936/results/c072_3_predictions.csv out/1595515936/results/c072_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([9]), o: IntList([9, 9]) }
#   Datum { i: IntList([1, 6, 1, 8, 8, 2]), o: IntList([1, 1, 6, 6, 1, 1, 8, 8, 8, 8, 2, 2]) }
#   Datum { i: IntList([3, 3]), o: IntList([3, 3, 3, 3]) }
#   Datum { i: IntList([5, 5, 5, 2, 5, 2]), o: IntList([5, 5, 5, 5, 5, 5, 2, 2, 5, 5, 2, 2]) }
#   Datum { i: IntList([2, 2, 7, 7, 7, 9]), o: IntList([2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 9, 9]) }
#   Datum { i: IntList([6, 9, 2, 8, 0, 5]), o: IntList([6, 6, 9, 9, 2, 2, 8, 8, 0, 0, 5, 5]) }
#   Datum { i: IntList([5, 6, 4, 8, 9, 7, 3]), o: IntList([5, 5, 6, 6, 4, 4, 8, 8, 9, 9, 7, 7, 3, 3]) }
#   Datum { i: IntList([1, 3, 3, 7]), o: IntList([1, 1, 3, 3, 3, 3, 7, 7]) }
#   Datum { i: IntList([4, 6, 8, 8, 4]), o: IntList([4, 4, 6, 6, 8, 8, 8, 8, 4, 4]) }
#   Datum { i: IntList([0, 0, 0, 0, 0, 0]), o: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c072,0,3,1,1345972,1345974,1238075,600.000230294,602.196737365
c072,0,3,2,278663,280687,272487,1200.0009062529998,1202.724232415
c072,0,3,3,213845,214954,211075,1800.0073634159999,1803.081223262
c072,0,3,4,88963,89765,89291,2400.008234548,2403.410794736
c072,0,3,5,73657,74401,73972,3000.011290414,3003.671759637
c072,0,3,6,52483,53252,53022,3600.02583903,3603.951346597
c072,0,3,7,48228,48959,48620,4200.031829474,4204.207815845
c072,0,3,8,30011,30772,30523,4800.072767272,4804.606945675
c072,0,3,9,25797,26433,26251,5400.084548436001,5404.875497615
c072,0,3,10,22828,23561,23376,6000.107667437001,6005.133125373
c072,0,3,11,22273,22907,22815,6600.115586453001,6605.359781725
# search time: 6600.116s
# total time: 6605.590s
c072,1,3,1,1298385,1298387,1200338,600.000498634,600.315488583
c072,1,3,2,272121,274499,266604,1200.00062506,1200.548699304
c072,1,3,3,209019,210056,206264,1800.0021769579998,1800.742037005
c072,1,3,4,84931,85795,85067,2400.008055673,2400.929324168
c072,1,3,5,69768,70433,69874,3000.0094170909997,3001.101352218
c072,1,3,6,50957,51700,51174,3600.0139391239995,3601.239419209
c072,1,3,7,46776,47409,47064,4200.018227457,4201.366940013
c072,1,3,8,29506,30262,29866,4800.033956664,4801.577003748
c072,1,3,9,25685,26375,26075,5400.056941837,5401.759962551
c072,1,3,10,22993,23619,23362,6000.0608552389995,6001.867268177
c072,1,3,11,21630,22289,22195,6600.068115855999,6602.063607779
# search time: 6600.068s
# total time: 13207.983s
c072,2,3,1,1273918,1273920,1187188,600.000057746,600.252397267
c072,2,3,2,274630,276907,268861,1200.00065229,1200.420568062
c072,2,3,3,208706,209649,206209,1800.001507048,1800.553524096
c072,2,3,4,84578,85473,85033,2400.0049637519996,2400.683357054
c072,2,3,5,69161,69955,69615,3000.0107412009997,3000.80187694
c072,2,3,6,48621,49427,49233,3600.0201645839998,3600.939371227
c072,2,3,7,47419,48124,47782,4200.0320978419995,4201.052108203
c072,2,3,8,29089,29799,29578,4800.047747412,4801.217292483
c072,2,3,9,24548,25238,25044,5400.065561134999,5401.335389153
c072,2,3,10,22184,22939,22789,6000.098223708999,6001.451460942
c072,2,3,11,21561,22215,22141,6600.099467343,6601.537656386
# search time: 6600.099s
# total time: 19809.846s
c072,3,3,1,1283019,1283021,1186800,600.000216291,600.222282589
c072,3,3,2,272670,274999,266775,1200.0017310130002,1200.341084696
c072,3,3,3,211382,212378,208406,1800.0039510830002,1800.450659
c072,3,3,4,88940,89791,88835,2400.0079387690002,2400.54865798
c072,3,3,5,72839,73532,72849,3000.009585101,3000.646872264
c072,3,3,6,51609,52284,51858,3600.018723315,3600.724319782
c072,3,3,7,47110,47830,47485,4200.032101782,4200.807584441
c072,3,3,8,29739,30452,30101,4800.053706948,4800.940116498
c072,3,3,9,25665,26334,26038,5400.075949858,5401.052971205
c072,3,3,10,23139,23780,23527,6000.081695983,6001.123872809
c072,3,3,11,21542,22116,21995,6600.082270119,6601.215234639
# search time: 6600.082s
# total time: 26411.387s
c072,4,3,1,1334185,1334187,1199161,600.000125195,600.213223482
c072,4,3,2,269449,271427,263663,1200.00029162,1200.327573931
c072,4,3,3,210443,211423,207384,1800.002043214,1800.417189146
c072,4,3,4,90926,91781,90846,2400.002377745,2400.484070774
c072,4,3,5,74380,75052,74340,3000.008068572,3000.56651205
c072,4,3,6,51408,52100,51599,3600.016338325,3600.647409244
c072,4,3,7,46638,47330,47003,4200.027710163,4200.722227643
c072,4,3,8,28558,29230,28990,4800.032583745,4800.80781305
c072,4,3,9,24332,25014,24832,5400.059830973,5400.940462319
c072,4,3,10,22032,22694,22545,6000.082593181,6001.05298166
c072,4,3,11,21075,21725,21639,6600.101878660001,6601.210785628
# search time: 6600.102s
# total time: 33013.014s
