    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized + debuginfo] target(s) in 0.46s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c062_1.json out/1595515936/results/c062_1_best.csv out/1595515936/results/c062_1_predictions.csv out/1595515936/results/c062_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 5, 2, 7]), o: IntList([2, 5, 2]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([7, 6, 0, 7, 3]), o: IntList([7, 6, 0, 7]) }
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2, 4]), o: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2]) }
#   Datum { i: IntList([1, 9, 8]), o: IntList([1, 9]) }
#   Datum { i: IntList([1, 2, 5, 4, 5, 4, 7]), o: IntList([1, 2, 5, 4, 5, 4]) }
#   Datum { i: IntList([6, 8, 9, 3, 7, 5, 2, 1]), o: IntList([6, 8, 9, 3, 7, 5, 2]) }
#   Datum { i: IntList([1, 9, 2, 8, 0, 6]), o: IntList([1, 9, 2, 8, 0]) }
#   Datum { i: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6, 3]), o: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6]) }
#   Datum { i: IntList([4, 2, 0, 3, 4, 0, 0, 3, 4]), o: IntList([4, 2, 0, 3, 4, 0, 0, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c062,0,1,1,1038651,1038653,956282,600.000034552,602.37197031
c062,0,1,2,322179,323243,314338,1200.001330803,1203.00137854
c062,0,1,3,317226,318237,306304,1800.0026605419998,1803.459774685
c062,0,1,4,151562,152357,147453,2400.003199719,2403.816153528
c062,0,1,5,139657,140489,137150,3000.0036281539997,3004.088713534
c062,0,1,6,63952,64807,63030,3600.0041235849994,3604.40855038
c062,0,1,7,59396,60007,58010,4200.012821044999,4204.618855348
c062,0,1,8,44403,44991,43834,4800.017652551,4804.880503379
c062,0,1,9,36947,37665,36464,5400.026962008,5405.081391956
c062,0,1,10,33530,34289,32946,6000.04024215,6005.373304223
c062,0,1,11,26800,27293,26207,6600.0536448190005,6605.6463687
# search time: 6600.054s
# total time: 6605.850s
c062,1,1,1,1026665,1026667,943381,600.000208953,600.272113344
c062,1,1,2,315087,316032,307560,1200.001218875,1200.504864178
c062,1,1,3,315788,316839,304920,1800.003096099,1800.70936399
c062,1,1,4,150431,151236,146295,2400.006101415,2400.873434412
c062,1,1,5,137395,138206,134872,3000.009303686,3001.026078774
c062,1,1,6,63142,63998,62221,3600.014343557,3601.175721074
c062,1,1,7,61783,62435,60345,4200.022299534,4201.305681815
c062,1,1,8,42924,43697,42423,4800.041464784,4801.460355893
c062,1,1,9,35834,36586,35543,5400.050775478,5401.57570863
c062,1,1,10,32815,33615,32347,6000.063415216,6001.763166496
c062,1,1,11,26262,27026,25982,6600.06661737,6601.897100862
# search time: 6600.067s
# total time: 13208.085s
c062,2,1,1,994239,994241,909316,600.000545647,600.324751829
c062,2,1,2,304416,306727,298389,1200.001195347,1200.496035649
c062,2,1,3,308206,309216,297401,1800.002706458,1800.633937891
c062,2,1,4,147748,148620,143892,2400.0082919019997,2400.749004317
c062,2,1,5,149668,150489,146835,3000.0083879389995,3000.841018468
c062,2,1,6,71554,72439,70408,3600.0109746059993,3600.967909106
c062,2,1,7,71368,72008,69657,4200.011423010999,4201.054890898
c062,2,1,8,49766,50543,49078,4800.018253681999,4801.15862232
c062,2,1,9,41826,42550,41270,5400.0357993709995,5401.271469333
c062,2,1,10,37408,38101,36704,6000.057082449,6001.409103599
c062,2,1,11,30714,31438,30323,6600.068603301999,6601.527148753
# search time: 6600.069s
# total time: 19809.948s
c062,3,1,1,1099329,1099331,1021279,600.000416379,600.172156441
c062,3,1,2,344376,346173,336715,1200.004040885,1200.306576034
c062,3,1,3,350613,351819,338437,1800.0098122089998,1800.43533293
c062,3,1,4,169644,170469,164971,2400.017884165,2400.547025909
c062,3,1,5,155838,156629,152863,3000.018879461,3000.631876304
c062,3,1,6,74546,75450,73393,3600.0198372349996,3600.713888859
c062,3,1,7,83009,83694,80945,4200.025945693,4200.798053773
c062,3,1,8,56317,57122,55663,4800.030006744,4800.866262429
c062,3,1,9,47710,48460,47029,5400.032541793,5400.953887059
c062,3,1,10,43967,44619,42957,6000.041782743,6001.041765163
c062,3,1,11,34923,35775,34447,6600.046462602,6601.154472957
# search time: 6600.046s
# total time: 26411.451s
c062,4,1,1,1307535,1307537,1197979,600.001146385,600.196399025
c062,4,1,2,392004,394417,383596,1200.001735628,1200.316153672
c062,4,1,3,406741,407794,392188,1800.003128578,1800.438083825
c062,4,1,4,198498,199358,192549,2400.004604553,2400.53048481
c062,4,1,5,173784,174642,169731,3000.004749185,3000.605049537
c062,4,1,6,87922,88796,86039,3600.008068896,3600.665335522
c062,4,1,7,83387,84058,80956,4200.012525565,4200.719654724
c062,4,1,8,52582,53431,52179,4800.013992186,4800.795953353
c062,4,1,9,49428,50220,48673,5400.02329921,5400.856248335
c062,4,1,10,42528,43322,41879,6000.030639749,6000.93174287
c062,4,1,11,33507,34221,33016,6600.037851779,6601.047199658
# search time: 6600.038s
# total time: 33013.036s
