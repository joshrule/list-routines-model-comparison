    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c071_2.json out/1595515936/results/c071_2_best.csv out/1595515936/results/c071_2_predictions.csv out/1595515936/results/c071_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 5, 7]), o: IntList([6, 7, 9]) }
#   Datum { i: IntList([6, 0, 6, 6, 0, 2, 6, 2, 0]), o: IntList([8, 2, 8, 8, 2, 4, 8, 4, 2]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([5, 5]), o: IntList([7, 7]) }
#   Datum { i: IntList([6]), o: IntList([8]) }
#   Datum { i: IntList([6, 7, 7, 6, 1, 4, 2, 6, 5]), o: IntList([8, 9, 9, 8, 3, 6, 4, 8, 7]) }
#   Datum { i: IntList([1, 4, 3, 6, 0]), o: IntList([3, 6, 5, 8, 2]) }
#   Datum { i: IntList([0, 0, 7, 0]), o: IntList([2, 2, 9, 2]) }
#   Datum { i: IntList([7, 7, 1, 4, 4, 6, 4, 1, 4, 0]), o: IntList([9, 9, 3, 6, 6, 8, 6, 3, 6, 2]) }
#   Datum { i: IntList([1, 3, 3, 2, 4, 5, 6]), o: IntList([3, 5, 5, 4, 6, 7, 8]) }
#   Datum { i: IntList([0, 7, 5, 7, 6, 3, 4, 2]), o: IntList([2, 9, 7, 9, 8, 5, 6, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c071,0,2,1,1317207,1317209,1209154,600.004239823,601.822194535
c071,0,2,2,398544,400726,389443,1200.005109361,1202.304528668
c071,0,2,3,122746,123871,122895,1800.011223892,1802.645744934
c071,0,2,4,84402,85146,84560,2400.024582391,2403.00131034
c071,0,2,5,75357,76107,75588,3000.031959986,3003.301568801
c071,0,2,6,77012,77728,77076,3600.0388929359997,3603.587781447
c071,0,2,7,49117,49803,49527,4200.052632282999,4203.885352414
c071,0,2,8,42479,43183,42757,4800.058194996,4804.14885575
c071,0,2,9,38131,38844,38398,5400.067770205999,5404.47365585
c071,0,2,10,29040,29684,29394,6000.085049006999,6004.858669738
c071,0,2,11,26309,26878,26580,6600.1065723249985,6605.206562933
# search time: 6600.107s
# total time: 6605.454s
c071,1,2,1,1291374,1291376,1188590,600.000293606,600.443026838
c071,1,2,2,399311,401386,390283,1200.000825228,1200.674890792
c071,1,2,3,128132,129154,128092,1800.0026986459998,1800.85026347
c071,1,2,4,87136,87983,87359,2400.007566796,2401.013639821
c071,1,2,5,77587,78322,77811,3000.012212569,3001.189992536
c071,1,2,6,78773,79393,78731,3600.0159953390003,3601.339636452
c071,1,2,7,50097,50786,50503,4200.018966803,4201.501595405
c071,1,2,8,43794,44491,43988,4800.031010953,4801.707717327
c071,1,2,9,37671,38430,37970,5400.03443445,5401.857830142
c071,1,2,10,30382,30969,30690,6000.047545149,6002.05497589
c071,1,2,11,26870,27545,27243,6600.0627652680005,6602.220032643
# search time: 6600.063s
# total time: 13208.033s
c071,2,2,1,1395609,1395611,1284834,600.001229057,600.284007796
c071,2,2,2,406770,408827,397804,1200.006137845,1200.446529082
c071,2,2,3,127946,129022,128024,1800.006794124,1800.557461026
c071,2,2,4,86763,87564,87009,2400.0122568429997,2400.681487527
c071,2,2,5,78114,78772,78266,3000.014588193,3000.806650979
c071,2,2,6,78846,79568,78913,3600.0183341489997,3600.920155121
c071,2,2,7,49750,50445,50186,4200.033321135,4201.056717789
c071,2,2,8,43387,44115,43654,4800.034051985,4801.184436402
c071,2,2,9,38377,39023,38648,5400.041562226,5401.328494648
c071,2,2,10,30791,31482,31181,6000.0504943549995,6001.487166495
c071,2,2,11,27191,27868,27604,6600.062490515,6601.627533055
# search time: 6600.062s
# total time: 19810.036s
c071,3,2,1,1345958,1345960,1237951,600.000584569,600.218658908
c071,3,2,2,398579,400646,389400,1200.001760047,1200.360457253
c071,3,2,3,128438,129474,128517,1800.0027792340002,1800.466697927
c071,3,2,4,87135,87902,87331,2400.006530425,2400.563652948
c071,3,2,5,77249,77980,77453,3000.015596088,3000.666253317
c071,3,2,6,78528,79176,78500,3600.0173547920003,3600.747643434
c071,3,2,7,49926,50668,50463,4200.035569858001,4200.845403642
c071,3,2,8,43471,44092,43647,4800.050316663001,4800.976145591
c071,3,2,9,38806,39453,39047,5400.061867174,5401.107277764
c071,3,2,10,30186,30794,30501,6000.078363683,6001.236855243
c071,3,2,11,26412,26989,26688,6600.088421061,6601.342761399
# search time: 6600.088s
# total time: 26411.745s
c071,4,2,1,1346493,1346495,1231188,600.006032645,600.21165099
c071,4,2,2,400557,402894,391478,1200.006059542,1200.322305911
c071,4,2,3,126532,127625,126646,1800.006847706,1800.39351586
c071,4,2,4,86237,86989,86364,2400.008972178,2400.474694224
c071,4,2,5,76223,76869,76336,3000.013019733,3000.559481666
c071,4,2,6,77580,78338,77607,3600.026964303,3600.638261254
c071,4,2,7,49050,49768,49486,4200.033140195,4200.727248007
c071,4,2,8,43405,44094,43635,4800.036249770999,4800.836265971
c071,4,2,9,37929,38582,38177,5400.037564372999,5400.924218075
c071,4,2,10,30134,30723,30426,6000.047952393,6001.029233975
c071,4,2,11,26531,27224,26935,6600.071493849,6601.13462961
# search time: 6600.071s
# total time: 33013.248s
