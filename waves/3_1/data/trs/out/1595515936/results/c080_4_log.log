    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c080_4.json out/1595515936/results/c080_4_best.csv out/1595515936/results/c080_4_predictions.csv out/1595515936/results/c080_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 2, 1, 0, 6]), o: IntList([6, 0, 1, 2, 4]) }
#   Datum { i: IntList([9, 3, 3, 9, 3, 9, 9, 3, 3]), o: IntList([3, 3, 9, 9, 3, 9, 3, 3, 9]) }
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([5, 5, 5, 0]) }
#   Datum { i: IntList([6, 7, 9, 1, 4, 8, 2, 0, 2, 3]), o: IntList([3, 2, 0, 2, 8, 4, 1, 9, 7, 6]) }
#   Datum { i: IntList([3, 3, 8, 4, 0, 7, 0, 5]), o: IntList([5, 0, 7, 0, 4, 8, 3, 3]) }
#   Datum { i: IntList([0, 0, 0, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8, 0, 0, 0]) }
#   Datum { i: IntList([6, 3, 1]), o: IntList([1, 3, 6]) }
#   Datum { i: IntList([0, 7]), o: IntList([7, 0]) }
#   Datum { i: IntList([9, 5, 3, 0, 7, 4, 7, 1, 6]), o: IntList([6, 1, 7, 4, 7, 0, 3, 5, 9]) }
#   Datum { i: IntList([6, 2, 5, 7]), o: IntList([7, 5, 2, 6]) }
#   Datum { i: IntList([6, 7, 5, 1, 2, 4]), o: IntList([4, 2, 1, 5, 7, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c080,0,4,1,1301881,1301883,1212576,600.000339596,601.889524705
c080,0,4,2,316738,317241,308128,1200.0004716180001,1202.384970092
c080,0,4,3,125820,126832,125961,1800.0030714570003,1802.754256642
c080,0,4,4,97073,97846,97439,2400.007869291,2403.082410478
c080,0,4,5,71290,71969,71523,3000.012008342,3003.302980325
c080,0,4,6,49858,50541,50235,3600.014222832,3603.593417607
c080,0,4,7,43072,43804,43540,4200.0148998370005,4203.913349713
c080,0,4,8,40352,41032,40839,4800.021986329,4804.191712548
c080,0,4,9,37281,38031,37762,5400.048195529001,5404.517146867
c080,0,4,10,31420,32140,31859,6000.057851894,6004.845357953
c080,0,4,11,29644,30465,30218,6600.067415685,6605.176063093
# search time: 6600.067s
# total time: 6605.423s
c080,1,4,1,1365410,1365412,1269118,600.000248348,600.312675486
c080,1,4,2,315179,317220,308538,1200.001121324,1200.525589306
c080,1,4,3,124833,125869,124980,1800.002185021,1800.702418283
c080,1,4,4,96833,97572,97099,2400.004270316,2400.847388723
c080,1,4,5,70910,71611,71225,3000.006752529,3000.981687629
c080,1,4,6,49753,50510,50271,3600.015322064,3601.13893187
c080,1,4,7,42535,43352,43116,4200.031589327,4201.297664309
c080,1,4,8,40145,40827,40566,4800.033417026,4801.412704972
c080,1,4,9,36397,37084,36847,5400.048025034001,5401.586247493
c080,1,4,10,30869,31529,31367,6000.0481549450005,6001.71052388
c080,1,4,11,28232,28948,28744,6600.07050417,6601.902353511
# search time: 6600.071s
# total time: 13207.706s
c080,2,4,1,1383332,1383334,1277015,600.000150245,600.244362582
c080,2,4,2,313178,315269,306516,1200.00405907,1200.400109851
c080,2,4,3,124952,125982,125159,1800.005390808,1800.521228897
c080,2,4,4,96438,97158,96689,2400.012231366,2400.634541756
c080,2,4,5,69900,70609,70161,3000.015186972,3000.714138956
c080,2,4,6,49407,50048,49809,3600.016599278,3600.826642195
c080,2,4,7,42358,43140,42906,4200.021517347,4200.934766967
c080,2,4,8,40275,41068,40805,4800.035404499,4801.051188569
c080,2,4,9,36421,37135,36852,5400.042567503,5401.170745373
c080,2,4,10,30566,31226,31056,6000.057542188,6001.280487848
c080,2,4,11,29208,29872,29686,6600.063184556,6601.398060311
# search time: 6600.063s
# total time: 19809.479s
c080,3,4,1,1409717,1409719,1301939,600.000560585,600.236717892
c080,3,4,2,313646,315997,307331,1200.002120733,1200.360621058
c080,3,4,3,125451,126417,125487,1800.0041241430001,1800.463820885
c080,3,4,4,96394,97108,96664,2400.0082679,2400.552212336
c080,3,4,5,70626,71385,70892,3000.014293569,3000.634045139
c080,3,4,6,49788,50677,50382,3600.02001098,3600.735736245
c080,3,4,7,42999,43706,43484,4200.036268307,4200.845737462
c080,3,4,8,40121,40780,40596,4800.040688012999,4800.940994904
c080,3,4,9,36873,37563,37328,5400.04666167,5401.030536046
c080,3,4,10,30788,31534,31380,6000.055622219,6001.140346221
c080,3,4,11,28947,29729,29581,6600.062067094,6601.252568113
# search time: 6600.062s
# total time: 26411.103s
c080,4,4,1,1375070,1375072,1269636,600.000284549,600.190221413
c080,4,4,2,312001,314375,305401,1200.000912633,1200.286175056
c080,4,4,3,123620,124711,123693,1800.001908962,1800.370474037
c080,4,4,4,95203,95978,95520,2400.002476027,2400.44874605
c080,4,4,5,69346,70131,69514,3000.0115252299997,3000.522064575
c080,4,4,6,49193,49790,49571,3600.0135579899998,3600.598517093
c080,4,4,7,41753,42446,42230,4200.0177989779995,4200.680341345
c080,4,4,8,39481,40003,39830,4800.025478697,4800.752988513
c080,4,4,9,36035,36671,36464,5400.034542756,5400.847660348
c080,4,4,10,30313,31062,30889,6000.045521294,6000.957848733
c080,4,4,11,28816,29580,29353,6600.078920647,6601.065276308
# search time: 6600.079s
# total time: 33012.535s
