    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c068_3.json out/1595515936/results/c068_3_best.csv out/1595515936/results/c068_3_predictions.csv out/1595515936/results/c068_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c068,0,3,1,1376945,1376947,1291527,600.000369007,602.063471229
c068,0,3,2,217320,219612,212480,1200.001469488,1202.537801294
c068,0,3,3,117706,118776,117608,1800.003121965,1802.922305382
c068,0,3,4,84601,85413,84909,2400.004625313,2403.307540573
c068,0,3,5,54533,55243,55017,3000.0076050509997,3003.531607925
c068,0,3,6,39012,39773,39498,3600.012382181,3603.803112424
c068,0,3,7,28347,28910,28798,4200.024744128999,4204.191852431
c068,0,3,8,25138,25712,25564,4800.039573638,4804.58838787
c068,0,3,9,23526,24101,23950,5400.070845693,5404.95625497
c068,0,3,10,20477,21204,21059,6000.072118550999,6005.323821705
c068,0,3,11,17297,17887,17711,6600.104675198999,6605.734442186
# search time: 6600.105s
# total time: 6605.939s
c068,1,3,1,1370073,1370075,1276985,600.000324766,600.365963778
c068,1,3,2,218843,220934,213812,1200.004432908,1200.595372566
c068,1,3,3,117840,118888,117588,1800.015951513,1800.798490751
c068,1,3,4,85888,86601,86096,2400.022030586,2400.9815522
c068,1,3,5,54803,55582,55352,3000.026621259,3001.112069706
c068,1,3,6,39725,40283,40035,3600.064619399,3601.286429994
c068,1,3,7,28372,29052,28891,4200.064781921,4201.516839447
c068,1,3,8,24709,25447,25257,4800.0652411169995,4801.703497312
c068,1,3,9,23309,23956,23787,5400.084933138999,5401.893302406
c068,1,3,10,20275,20968,20832,6000.102071249999,6002.089190265
c068,1,3,11,17288,17861,17725,6600.107638559999,6602.244700496
# search time: 6600.108s
# total time: 13208.532s
c068,2,3,1,1337745,1337747,1249120,600.000708336,600.241760943
c068,2,3,2,219765,221691,214600,1200.00254986,1200.399884416
c068,2,3,3,116710,117859,116620,1800.005370725,1800.549768476
c068,2,3,4,85874,86577,86067,2400.005752434,2400.699682037
c068,2,3,5,54943,55682,55437,3000.014499634,3000.788658496
c068,2,3,6,39734,40508,40282,3600.0198091370003,3600.906761165
c068,2,3,7,28396,29087,28923,4200.027471653,4201.094564083
c068,2,3,8,25038,25677,25517,4800.037966708001,4801.247349143
c068,2,3,9,22965,23605,23455,5400.0481893920005,5401.460751143
c068,2,3,10,20238,20939,20800,6000.075093817,6001.640438815
c068,2,3,11,17144,17788,17626,6600.079247500001,6601.859839602
# search time: 6600.079s
# total time: 19810.582s
c068,3,3,1,1374208,1374210,1276564,600.005601497,600.216931865
c068,3,3,2,214199,216475,209348,1200.007268289,1200.338503445
c068,3,3,3,117507,118542,117290,1800.0082457190001,1800.446536658
c068,3,3,4,84985,85787,85257,2400.012316181,2400.563143351
c068,3,3,5,54351,55079,54823,3000.021460146,3000.64212378
c068,3,3,6,39271,39999,39721,3600.0260043340004,3600.746461842
c068,3,3,7,28464,29049,28899,4200.064740976,4200.918586124
c068,3,3,8,24616,25299,25121,4800.073442430001,4801.066287425
c068,3,3,9,22962,23567,23434,5400.086437809001,5401.206496916
c068,3,3,10,20195,20808,20673,6000.097023964001,6001.393220903
c068,3,3,11,16969,17581,17407,6600.104942417001,6601.53254541
# search time: 6600.105s
# total time: 26412.414s
c068,4,3,1,1360085,1360087,1252659,600.000296333,600.199193982
c068,4,3,2,217103,218575,211432,1200.0007239820002,1200.308569631
c068,4,3,3,112023,113096,111965,1800.0024602020003,1800.424531249
c068,4,3,4,84873,85619,85119,2400.0050811890005,2400.522623985
c068,4,3,5,55020,55754,55495,3000.0109115650002,3000.598014985
c068,4,3,6,39861,40555,40310,3600.014095164,3600.699819229
c068,4,3,7,28692,29346,29156,4200.032216709,4200.812103697
c068,4,3,8,24994,25688,25535,4800.047563132,4800.940932107
c068,4,3,9,23141,23803,23663,5400.06987934,5401.091869398
c068,4,3,10,20488,21181,21026,6000.083436588,6001.234939222
c068,4,3,11,17250,17902,17753,6600.107359548,6601.391386058
# search time: 6600.107s
# total time: 33014.118s
