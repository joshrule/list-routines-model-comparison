    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c068_5.json out/1595515936/results/c068_5_best.csv out/1595515936/results/c068_5_predictions.csv out/1595515936/results/c068_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c068,0,5,1,1237938,1237940,1143985,600.000692671,601.832800516
c068,0,5,2,153223,155420,150843,1200.004362439,1202.49550059
c068,0,5,3,100956,101938,101119,1800.006664637,1802.968154354
c068,0,5,4,73210,73916,73580,2400.012761745,2403.400326396
c068,0,5,5,45485,46177,46014,3000.0241797,3003.828787239
c068,0,5,6,38341,39028,38830,3600.048640998,3604.199768243
c068,0,5,7,30001,30701,30442,4200.050878483,4204.600992573
c068,0,5,8,27734,28376,28126,4800.068764919,4804.990819366
c068,0,5,9,21294,21952,21743,5400.073587265,5405.377251469
c068,0,5,10,18409,19037,18884,6000.091389649,6005.831462731
c068,0,5,11,17272,17871,17746,6600.117465167,6606.208795349
# search time: 6600.117s
# total time: 6606.445s
c068,1,5,1,1218150,1218152,1122231,600.000652362,600.325205203
c068,1,5,2,159022,161247,156837,1200.0032545469999,1200.585841621
c068,1,5,3,101645,102475,101640,1800.0042409079997,1800.808250565
c068,1,5,4,72608,73326,72936,2400.010439359,2401.028882753
c068,1,5,5,45423,46115,45876,3000.0193188490002,3001.240184836
c068,1,5,6,37940,38569,38350,3600.028779927,3601.418489053
c068,1,5,7,29510,30213,29966,4200.0321080779995,4201.580579402
c068,1,5,8,27128,27879,27617,4800.033946223999,4801.725015323
c068,1,5,9,21242,22004,21810,5400.054118150999,5401.960153625
c068,1,5,10,18070,18833,18659,6000.0684565699985,6002.161311872
c068,1,5,11,17125,17760,17595,6600.0991106249985,6602.477278281
# search time: 6600.099s
# total time: 13209.311s
c068,2,5,1,1226098,1226100,1122978,600.002917052,600.263901659
c068,2,5,2,152743,154983,150723,1200.006938394,1200.474591186
c068,2,5,3,96892,97837,97024,1800.014708429,1800.643561085
c068,2,5,4,70961,71649,71400,2400.021897365,2400.793043126
c068,2,5,5,44990,45687,45484,3000.030274787,3000.951586543
c068,2,5,6,37902,38533,38367,3600.0444743870003,3601.079188127
c068,2,5,7,29613,30346,30117,4200.05036438,4201.223302133
c068,2,5,8,27179,27876,27635,4800.061196321,4801.396647407
c068,2,5,9,20899,21473,21260,5400.095931421,5401.630307906
c068,2,5,10,17346,18062,17885,6000.099506355,6001.800014192
c068,2,5,11,16956,17637,17483,6600.107600872,6601.914304491
# search time: 6600.108s
# total time: 19811.460s
c068,3,5,1,1224439,1224441,1122368,600.00027978,600.227471963
c068,3,5,2,156602,158486,154168,1200.0179621450002,1200.373589524
c068,3,5,3,99890,100757,99986,1800.0216656400003,1800.508973546
c068,3,5,4,72273,72988,72648,2400.0297252580003,2400.628957122
c068,3,5,5,44816,45607,45434,3000.0409942200004,3000.75281449
c068,3,5,6,37839,38513,38326,3600.0530359120003,3600.872817211
c068,3,5,7,29483,30180,29941,4200.073937078,4201.048871571
c068,3,5,8,27493,28040,27798,4800.074185545001,4801.172853436
c068,3,5,9,21039,21764,21586,5400.090561542001,5401.32221685
c068,3,5,10,17530,18157,18006,6000.123904253001,6001.531706053
c068,3,5,11,16387,17084,16969,6600.249439332,6601.747152209
# search time: 6600.249s
# total time: 26413.548s
c068,4,5,1,1249134,1249136,1158487,600.000326365,600.233698518
c068,4,5,2,156184,158218,153761,1200.004130666,1200.356794643
c068,4,5,3,100177,101056,100260,1800.009213589,1800.482197884
c068,4,5,4,70406,71137,70805,2400.011756565,2400.585359538
c068,4,5,5,44460,45075,44878,3000.013726754,3000.66664467
c068,4,5,6,37784,38539,38346,3600.025013077,3600.77125913
c068,4,5,7,29970,30587,30317,4200.03410916,4200.917327933
c068,4,5,8,27729,28409,28151,4800.0471487780005,4801.041502462
c068,4,5,9,21462,22192,21997,5400.075346899001,5401.146991448
c068,4,5,10,18250,18887,18718,6000.0754305440005,6001.248759928
c068,4,5,11,17170,17785,17688,6600.081720923001,6601.349388621
# search time: 6600.082s
# total time: 33015.243s
