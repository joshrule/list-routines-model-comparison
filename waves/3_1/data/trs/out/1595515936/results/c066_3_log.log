    Finished release [optimized + debuginfo] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c066_3.json out/1595515936/results/c066_3_best.csv out/1595515936/results/c066_3_predictions.csv out/1595515936/results/c066_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4, 3]), o: IntList([4, 3, 1]) }
#   Datum { i: IntList([3, 7]), o: IntList([7, 3]) }
#   Datum { i: IntList([2, 9, 9, 5, 6]), o: IntList([9, 9, 5, 6, 2]) }
#   Datum { i: IntList([0, 1, 8, 9, 2, 7, 5]), o: IntList([1, 8, 9, 2, 7, 5, 0]) }
#   Datum { i: IntList([7, 9, 8, 2, 5, 1, 2, 4]), o: IntList([9, 8, 2, 5, 1, 2, 4, 7]) }
#   Datum { i: IntList([0, 7, 3, 3, 3, 9, 9, 6]), o: IntList([7, 3, 3, 3, 9, 9, 6, 0]) }
#   Datum { i: IntList([3, 2, 2, 5, 1, 0, 8, 7, 1, 0]), o: IntList([2, 2, 5, 1, 0, 8, 7, 1, 0, 3]) }
#   Datum { i: IntList([5, 6, 5, 8]), o: IntList([6, 5, 8, 5]) }
#   Datum { i: IntList([4, 1, 5, 8, 6, 5, 4, 0, 9]), o: IntList([1, 5, 8, 6, 5, 4, 0, 9, 4]) }
#   Datum { i: IntList([1, 6, 6]), o: IntList([6, 6, 1]) }
#   Datum { i: IntList([8, 2, 4, 7, 3, 0]), o: IntList([2, 4, 7, 3, 0, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c066,0,3,1,1346883,1346885,1238897,600.001037625,601.974074055
c066,0,3,2,442417,444487,429688,1200.0015148,1202.444554895
c066,0,3,3,295144,296173,291761,1800.002102905,1802.767791476
c066,0,3,4,160545,161324,159715,2400.007128322,2403.013541505
c066,0,3,5,97847,98657,97690,3000.007312737,3003.226077948
c066,0,3,6,69005,69682,69018,3600.0113005910002,3603.450713522
c066,0,3,7,51070,51708,51403,4200.0115948,4203.662414715
c066,0,3,8,38594,39306,39078,4800.0246573760005,4803.934636153
c066,0,3,9,34777,35506,35280,5400.037446466001,5404.231814847
c066,0,3,10,28637,29303,29116,6000.068953144001,6004.567128716
c066,0,3,11,26979,27609,27409,6600.080344500001,6604.819926288
# search time: 6600.080s
# total time: 6605.030s
c066,1,3,1,1332168,1332170,1223589,600.000274372,600.283663288
c066,1,3,2,433972,434795,420832,1200.006225281,1200.489000729
c066,1,3,3,295053,296117,291672,1800.007509733,1800.648579243
c066,1,3,4,158147,159010,157535,2400.011790096,2400.790068993
c066,1,3,5,95873,96680,95845,3000.024070387,3000.913637623
c066,1,3,6,67469,68191,67554,3600.030330085,3601.052970501
c066,1,3,7,49408,50217,49892,4200.034475853,4201.181546756
c066,1,3,8,36947,37576,37357,4800.040497754,4801.316686661
c066,1,3,9,33237,33943,33754,5400.061226804,5401.483509923
c066,1,3,10,27661,28327,28171,6000.072819248,6001.635120303
c066,1,3,11,26337,26956,26763,6600.0781594850005,6601.801235259
# search time: 6600.078s
# total time: 13207.161s
c066,2,3,1,1337691,1337693,1241334,600.00073745,600.236389653
c066,2,3,2,425431,427452,414807,1200.001231132,1200.387929396
c066,2,3,3,294703,295748,291239,1800.001541878,1800.497928054
c066,2,3,4,157686,158472,157093,2400.003917002,2400.596964243
c066,2,3,5,95134,95955,95135,3000.009810866,3000.701252427
c066,2,3,6,67021,67734,67082,3600.020588341,3600.793814959
c066,2,3,7,49613,50343,50027,4200.021189486,4200.878829896
c066,2,3,8,36780,37568,37373,4800.034001344,4800.965841726
c066,2,3,9,33352,33826,33599,5400.051467851,5401.051185195
c066,2,3,10,27679,28450,28304,6000.071712826,6001.191925788
c066,2,3,11,26407,27031,26873,6600.088780073001,6601.295597574
# search time: 6600.089s
# total time: 19808.798s
c066,3,3,1,1298781,1298783,1213948,600.000111656,600.183927172
c066,3,3,2,437411,439337,425279,1200.001457329,1200.312359748
c066,3,3,3,297589,298627,294176,1800.00198836,1800.410123394
c066,3,3,4,157888,158721,157292,2400.002343362,2400.482404735
c066,3,3,5,94678,95468,94717,3000.003996887,3000.550781849
c066,3,3,6,67225,67902,67205,3600.011987654,3600.629907471
c066,3,3,7,48918,49722,49396,4200.016113106,4200.718930252
c066,3,3,8,37064,37772,37570,4800.037873207,4800.811914361
c066,3,3,9,33775,34430,34265,5400.049279171,5400.897265972
c066,3,3,10,27655,28287,28142,6000.062357305001,6000.993271123
c066,3,3,11,26459,27160,26980,6600.0781025040005,6601.114214487
# search time: 6600.078s
# total time: 26410.246s
c066,4,3,1,1330850,1330852,1218121,600.002410627,600.186413395
c066,4,3,2,431680,434135,419997,1200.00331375,1200.29401771
c066,4,3,3,295590,296805,292401,1800.003972116,1800.381013175
c066,4,3,4,154112,154976,153436,2400.0051387390004,2400.443394221
c066,4,3,5,93289,94225,93413,3000.0099030700003,3000.50061006
c066,4,3,6,65208,65987,65355,3600.011294362,3600.568716663
c066,4,3,7,48703,49396,49079,4200.017942007,4200.629477127
c066,4,3,8,36172,36923,36633,4800.02039124,4800.687450087
c066,4,3,9,32230,32829,32610,5400.0303028630005,5400.763741906
c066,4,3,10,27514,28134,27958,6000.030479715,6000.818101461
c066,4,3,11,25586,26362,26151,6600.050806429001,6600.917515686
# search time: 6600.051s
# total time: 33011.499s
