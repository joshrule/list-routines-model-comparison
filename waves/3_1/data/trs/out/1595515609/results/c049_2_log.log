    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c049_2.json out/1595515609/results/c049_2_best.csv out/1595515609/results/c049_2_predictions.csv out/1595515609/results/c049_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 6, 8]), o: IntList([6, 8]) }
#   Datum { i: IntList([9, 2, 1, 7, 0, 4, 7]), o: IntList([2, 1, 7, 0, 4, 7]) }
#   Datum { i: IntList([2]), o: IntList([]) }
#   Datum { i: IntList([4, 4]), o: IntList([4]) }
#   Datum { i: IntList([5, 1, 3, 5, 0, 9, 5, 2, 5]), o: IntList([1, 3, 5, 0, 9, 5, 2, 5]) }
#   Datum { i: IntList([7, 1, 4, 1, 0, 8]), o: IntList([1, 4, 1, 0, 8]) }
#   Datum { i: IntList([8, 2, 1, 7, 5, 9, 6, 0, 3, 2]), o: IntList([2, 1, 7, 5, 9, 6, 0, 3, 2]) }
#   Datum { i: IntList([1, 8, 0, 2, 4, 6, 7, 9]), o: IntList([8, 0, 2, 4, 6, 7, 9]) }
#   Datum { i: IntList([4, 9, 7, 6, 6, 4, 5]), o: IntList([9, 7, 6, 6, 4, 5]) }
#   Datum { i: IntList([3, 3, 3, 3]), o: IntList([3, 3, 3]) }
#   Datum { i: IntList([1, 0, 9, 0, 2]), o: IntList([0, 9, 0, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c049,0,2,1,1203783,1203785,1126570,600.00142131,601.8938655
c049,0,2,2,610915,613030,589000,1200.002081679,1202.277172102
c049,0,2,3,365123,366668,348435,1800.004392959,1802.47924887
c049,0,2,4,343282,344733,322085,2400.0057000489996,2402.664293969
c049,0,2,5,292396,293973,277630,3000.0060980229996,3002.828429187
c049,0,2,6,175619,177207,164951,3600.013991776,3602.980701431
c049,0,2,7,142653,144178,133817,4200.031053472,4203.143272158
c049,0,2,8,99305,100533,92976,4800.032624695,4803.263625362
c049,0,2,9,78380,79546,73126,5400.04389145,5403.399219517
c049,0,2,10,72926,73993,68552,6000.05071345,6003.544130233
c049,0,2,11,64649,65751,61027,6600.0534400510005,6603.676893645
# search time: 6600.053s
# total time: 6603.897s
c049,1,2,1,1266324,1266326,1176254,600.000052086,600.269436445
c049,1,2,2,567519,569413,545978,1200.000402794,1200.41347753
c049,1,2,3,355271,357140,340194,1800.0029852569999,1800.514874647
c049,1,2,4,340272,341757,324173,2400.003618034,2400.610596005
c049,1,2,5,294556,295937,279742,3000.0049003329996,3000.709014001
c049,1,2,6,182660,184194,171711,3600.0138813159997,3600.79873612
c049,1,2,7,152131,153564,142582,4200.0147570789995,4200.872509444
c049,1,2,8,109277,110769,103437,4800.015300718999,4800.957122707
c049,1,2,9,88363,89618,83024,5400.027148173999,5401.039717495
c049,1,2,10,74096,75248,69465,6000.031312018999,6001.131362434
c049,1,2,11,65421,66390,61859,6600.0392287449995,6601.19865011
# search time: 6600.039s
# total time: 13205.411s
c049,2,2,1,1271102,1271104,1181701,600.000408221,600.218837607
c049,2,2,2,581543,583615,559868,1200.000895521,1200.337153513
c049,2,2,3,359858,361669,340334,1800.0025502,1800.420128937
c049,2,2,4,336663,338227,320660,2400.0029608940004,2400.500584502
c049,2,2,5,268872,270620,253920,3000.0030248200005,3000.576784648
c049,2,2,6,184549,186132,174212,3600.0036553630007,3600.642073247
c049,2,2,7,157576,158928,146327,4200.006091284001,4200.707524256
c049,2,2,8,107358,108628,101016,4800.006226408001,4800.753121878
c049,2,2,9,85680,86920,80790,5400.020503324001,5400.830791023
c049,2,2,10,69602,70987,65730,6000.023757768001,6000.905007912
c049,2,2,11,63690,64794,59812,6600.026914961001,6600.966487212
# search time: 6600.027s
# total time: 19806.782s
c049,3,2,1,1279066,1279068,1180031,600.000761701,600.19174012
c049,3,2,2,649899,650773,583439,1200.002291461,1200.306129156
c049,3,2,3,326935,327836,301469,1800.0028048,1800.384939747
c049,3,2,4,303759,304672,295855,2400.008045282,2400.483804831
c049,3,2,5,277202,278376,271431,3000.008432241,3000.563165169
c049,3,2,6,147994,149086,143415,3600.010768318,3600.634976225
c049,3,2,7,120822,121961,115661,4200.012520146,4200.692224436
c049,3,2,8,85292,86564,81864,4800.014240039,4800.745351062
c049,3,2,9,65232,66179,62192,5400.016922843999,5400.798291663
c049,3,2,10,54222,55109,51543,6000.022852762999,6000.866751312
c049,3,2,11,48829,49681,46417,6600.033884871998,6600.925208696
# search time: 6600.034s
# total time: 26407.968s
c049,4,2,1,1315230,1315232,1218102,600.002386382,600.203205618
c049,4,2,2,600358,602617,574007,1200.002467662,1200.300550203
c049,4,2,3,367371,369065,352324,1800.003368017,1800.369341179
c049,4,2,4,327120,328640,311674,2400.004287096,2400.451944315
c049,4,2,5,271588,273038,256327,3000.0061483030004,3000.513915961
c049,4,2,6,179524,181122,169429,3600.0100380700005,3600.567875244
c049,4,2,7,145995,147463,137420,4200.012373799001,4200.620009399
c049,4,2,8,97137,98421,91069,4800.0146423450005,4800.703401002
c049,4,2,9,83222,84490,78330,5400.018823569,5400.750569588
c049,4,2,10,70336,71625,65932,6000.023298661,6000.794258737
c049,4,2,11,63207,64338,59526,6600.034629721,6600.852681472
# search time: 6600.035s
# total time: 33009.216s
