    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.33s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c042_1.json out/1595515609/results/c042_1_best.csv out/1595515609/results/c042_1_predictions.csv out/1595515609/results/c042_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 3, 8, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 1, 0, 7, 7]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([4, 4]), o: IntList([5, 2]) }
#   Datum { i: IntList([3, 7, 7, 4, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 9, 9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 4, 1, 2]), o: IntList([5, 2]) }
#   Datum { i: IntList([]), o: IntList([5, 2]) }
#   Datum { i: IntList([2, 6, 0, 0, 8, 9, 6, 6, 9, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([4]), o: IntList([5, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c042,0,1,1,1027610,1027612,944704,600.002477232,602.304097288
c042,0,1,2,348352,350711,340320,1200.0045882260001,1202.954400115
c042,0,1,3,226871,227889,222412,1800.005755142,1803.492228188
c042,0,1,4,182186,183198,178730,2400.007391286,2403.995767968
c042,0,1,5,170310,171276,165498,3000.0115577409997,3004.377619242
c042,0,1,6,146767,147814,142955,3600.0133172139995,3604.735532074
c042,0,1,7,122693,123516,119677,4200.014435444,4205.142642518
c042,0,1,8,107530,108464,104981,4800.0173983859995,4805.515246052
c042,0,1,9,70476,71333,69626,5400.018321887999,5405.844114843
c042,0,1,10,76151,76834,75550,6000.023977458999,6006.088564649
c042,0,1,11,67458,68262,67126,6600.041234211999,6606.379940413
# search time: 6600.041s
# total time: 6606.639s
c042,1,1,1,1002860,1002862,921435,600.000111339,600.260888203
c042,1,1,2,352231,354404,344312,1200.004760575,1200.501875982
c042,1,1,3,232470,233603,228420,1800.0052691380001,1800.714169164
c042,1,1,4,188370,189443,185124,2400.0107148800003,2400.940356532
c042,1,1,5,166922,167809,161881,3000.013156711,3001.107044504
c042,1,1,6,141528,142530,137387,3600.020810802,3601.270978386
c042,1,1,7,118097,119038,115009,4200.021418416,4201.43909963
c042,1,1,8,103979,104805,101552,4800.024048003001,4801.628763572
c042,1,1,9,67581,68358,66747,5400.026327855001,5401.803758359
c042,1,1,10,73869,74563,73291,6000.033004309001,6001.972670428
c042,1,1,11,64566,65364,64086,6600.041342569,6602.140438256
# search time: 6600.041s
# total time: 13209.140s
c042,2,1,1,993665,993667,912427,600.005487415,600.197293863
c042,2,1,2,341564,343783,333953,1200.0058345829998,1200.368616728
c042,2,1,3,227358,228382,223500,1800.0068144359998,1800.512471333
c042,2,1,4,183614,184673,180585,2400.0068162,2400.666623275
c042,2,1,5,164379,165385,159699,3000.008659188,3000.787854891
c042,2,1,6,147836,148792,143610,3600.013888852,3600.900461083
c042,2,1,7,121930,122914,118392,4200.018568084,4201.033489678
c042,2,1,8,107999,108821,105248,4800.02513239,4801.174331942
c042,2,1,9,72860,73680,71820,5400.02887014,5401.303139992
c042,2,1,10,81863,82476,81115,6000.062573619,6001.417503838
c042,2,1,11,69838,70666,69502,6600.064404622,6601.528576915
# search time: 6600.064s
# total time: 19811.017s
c042,3,1,1,1146664,1146666,1049124,600.000356998,600.182523428
c042,3,1,2,388570,389853,378995,1200.001189927,1200.321761262
c042,3,1,3,252060,253189,248071,1800.001610794,1800.453020145
c042,3,1,4,203218,204291,199732,2400.001880577,2400.569603002
c042,3,1,5,184244,185176,178774,3000.003226903,3000.673418128
c042,3,1,6,158948,159900,154232,3600.003378897,3600.784286837
c042,3,1,7,133507,134496,130025,4200.013467113,4200.897028369
c042,3,1,8,118565,119415,115781,4800.017525395,4800.998183104
c042,3,1,9,77897,78730,76975,5400.018412536,5401.089554593
c042,3,1,10,84135,84943,83495,6000.02394911,6001.178424771
c042,3,1,11,73511,74291,73142,6600.02700561,6601.265735601
# search time: 6600.027s
# total time: 26412.674s
c042,4,1,1,1158043,1158045,1080241,600.000418231,600.238524611
c042,4,1,2,389255,391330,380527,1200.0005979759999,1200.360039224
c042,4,1,3,258088,259107,253281,1800.000627557,1800.463653479
c042,4,1,4,206407,207545,202302,2400.000665063,2400.573088052
c042,4,1,5,189461,190348,183660,3000.0113537959996,3000.669384136
c042,4,1,6,163613,164595,159219,3600.0137403459994,3600.757371725
c042,4,1,7,134767,135800,131254,4200.014023569999,4200.838283399
c042,4,1,8,119267,120073,116156,4800.016870739999,4800.93556227
c042,4,1,9,78069,78906,76907,5400.019445577999,5401.017921275
c042,4,1,10,84508,85273,83773,6000.027951112999,6001.089952004
c042,4,1,11,74634,75414,74112,6600.028854529,6601.173622138
# search time: 6600.029s
# total time: 33014.237s
