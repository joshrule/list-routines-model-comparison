    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c059_4.json out/1595515609/results/c059_4_best.csv out/1595515609/results/c059_4_predictions.csv out/1595515609/results/c059_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 7, 2, 6, 5, 4, 4, 0]), o: IntList([6, 7, 2, 0, 5, 4, 4, 6]) }
#   Datum { i: IntList([1, 0, 7, 8, 6, 4, 2, 6, 1, 9]), o: IntList([1, 0, 7, 6, 6, 4, 2, 8, 1, 9]) }
#   Datum { i: IntList([8, 9, 9, 6, 5, 2, 4, 0, 0]), o: IntList([8, 9, 9, 0, 5, 2, 4, 6, 0]) }
#   Datum { i: IntList([7, 3, 4, 0, 1, 6, 8, 1, 5]), o: IntList([7, 3, 4, 1, 1, 6, 8, 0, 5]) }
#   Datum { i: IntList([5, 2, 8, 8, 8, 8, 2, 5]), o: IntList([5, 2, 8, 5, 8, 8, 2, 8]) }
#   Datum { i: IntList([3, 1, 1, 5, 1, 0, 7, 0, 7]), o: IntList([3, 1, 1, 0, 1, 0, 7, 5, 7]) }
#   Datum { i: IntList([8, 3, 9, 2, 7, 4, 6, 3]), o: IntList([8, 3, 9, 3, 7, 4, 6, 2]) }
#   Datum { i: IntList([0, 5, 3, 8, 1, 9, 4, 6, 2]), o: IntList([0, 5, 3, 6, 1, 9, 4, 8, 2]) }
#   Datum { i: IntList([9, 5, 5, 9, 3, 7, 6, 3, 9, 3]), o: IntList([9, 5, 5, 3, 3, 7, 6, 9, 9, 3]) }
#   Datum { i: IntList([6, 1, 8, 5, 2, 3, 7, 9, 0, 4]), o: IntList([6, 1, 8, 9, 2, 3, 7, 5, 0, 4]) }
#   Datum { i: IntList([5, 2, 4, 3, 7, 0, 8, 6]), o: IntList([5, 2, 4, 6, 7, 0, 8, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c059,0,4,1,1124395,1124397,1050586,600.000693686,601.74412275
c059,0,4,2,197248,199259,193106,1200.00093984,1202.35954177
c059,0,4,3,98512,99482,96466,1800.002360091,1802.764225034
c059,0,4,4,74879,75714,72910,2400.0090137099996,2403.155810303
c059,0,4,5,57817,58688,57072,3000.0142968029995,3003.616155447
c059,0,4,6,48011,48803,47223,3600.0215669919994,3604.156795503
c059,0,4,7,39222,39953,38939,4200.034460319999,4204.91432308
c059,0,4,8,32624,33354,32449,4800.038772278,4805.609517494
c059,0,4,9,28399,29077,28265,5400.053666694999,5406.406004336
c059,0,4,10,24426,25129,24390,6000.076200779999,6007.244550466
c059,0,4,11,21114,21782,21102,6600.103364346999,6608.170057564
# search time: 6600.103s
# total time: 6608.366s
c059,1,4,1,1172467,1172469,1077158,600.001504917,600.293644305
c059,1,4,2,200366,201291,195333,1200.003021725,1200.5414129
c059,1,4,3,98001,98942,96064,1800.003793131,1800.735882987
c059,1,4,4,73753,74589,71421,2400.0101852850003,2400.921199483
c059,1,4,5,55992,56856,55002,3000.0127736010004,3001.152420994
c059,1,4,6,47600,48377,46636,3600.0193353540003,3601.405916583
c059,1,4,7,38794,39585,38245,4200.024542979,4201.636716523
c059,1,4,8,32385,33128,32227,4800.048300782,4802.010423127
c059,1,4,9,27902,28747,27951,5400.052705286001,5402.455236721
c059,1,4,10,23968,24734,24002,6000.055919498001,6002.933313958
c059,1,4,11,20967,21646,20952,6600.083479061001,6603.452093796
# search time: 6600.083s
# total time: 13212.102s
c059,2,4,1,1168141,1168143,1075594,600.000162862,600.218939482
c059,2,4,2,196485,197148,191219,1200.00065752,1200.39012725
c059,2,4,3,96040,96940,93888,1800.0084929270001,1800.53289434
c059,2,4,4,74837,75518,72944,2400.0131261,2400.679533125
c059,2,4,5,56706,57527,55875,3000.015769547,3000.860751798
c059,2,4,6,47166,47948,46088,3600.023452585,3601.074046133
c059,2,4,7,38763,39528,38382,4200.025716039,4201.291878445
c059,2,4,8,32086,32898,31960,4800.033269008,4801.582987545
c059,2,4,9,28144,28843,27993,5400.036052259,5401.852951104
c059,2,4,10,24175,24881,24019,6000.041979235,6002.068456065
c059,2,4,11,21124,21733,21055,6600.04974757,6602.268106195
# search time: 6600.050s
# total time: 19814.646s
c059,3,4,1,1165406,1165408,1070985,600.000116522,600.193801825
c059,3,4,2,197942,198938,193101,1200.007859079,1200.341434494
c059,3,4,3,94964,95885,92995,1800.011254696,1800.458677642
c059,3,4,4,75221,75893,73196,2400.019746035,2400.565920041
c059,3,4,5,56564,57410,55939,3000.020471251,3000.680459514
c059,3,4,6,48261,49012,47661,3600.021179761,3600.774762142
c059,3,4,7,38417,39202,38199,4200.039791732,4200.94477137
c059,3,4,8,31885,32631,31820,4800.047306192,4801.156122201
c059,3,4,9,27800,28425,27643,5400.047402014,5401.330193239
c059,3,4,10,24028,24789,24110,6000.070364653,6001.59712017
c059,3,4,11,20990,21671,20988,6600.089100113,6601.876552749
# search time: 6600.089s
# total time: 26416.798s
c059,4,4,1,1174069,1174071,1097344,600.000295296,600.198200204
c059,4,4,2,200901,203114,197187,1200.001130505,1200.300633159
c059,4,4,3,96929,97861,94992,1800.006792212,1800.394730049
c059,4,4,4,75513,76268,73928,2400.0108571379997,2400.48641046
c059,4,4,5,57176,57901,56412,3000.0186868949995,3000.618332129
c059,4,4,6,48016,48780,46955,3600.0241649219997,3600.730797337
c059,4,4,7,38667,39467,38153,4200.0396006129995,4200.867317659
c059,4,4,8,32151,32895,31931,4800.041250298,4800.986603417
c059,4,4,9,28103,28866,28006,5400.049646796,5401.194955279
c059,4,4,10,24098,24877,24084,6000.06113653,6001.341038978
c059,4,4,11,20986,21638,20982,6600.081647899,6601.491594752
# search time: 6600.082s
# total time: 33018.560s
