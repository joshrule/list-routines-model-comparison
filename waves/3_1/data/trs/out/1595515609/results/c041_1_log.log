    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.12s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c041_1.json out/1595515609/results/c041_1_best.csv out/1595515609/results/c041_1_predictions.csv out/1595515609/results/c041_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 3, 6, 4]), o: IntList([9]) }
#   Datum { i: IntList([8, 7, 5, 5, 1, 6]), o: IntList([9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([2, 2]), o: IntList([9]) }
#   Datum { i: IntList([0]), o: IntList([9]) }
#   Datum { i: IntList([5, 0, 7]), o: IntList([9]) }
#   Datum { i: IntList([4, 8, 7, 2, 6, 6, 5]), o: IntList([9]) }
#   Datum { i: IntList([2, 1]), o: IntList([9]) }
#   Datum { i: IntList([3, 6, 8, 8, 3, 6]), o: IntList([9]) }
#   Datum { i: IntList([4, 0, 4, 4, 0, 0]), o: IntList([9]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c041,0,1,1,989255,989257,924529,600.000037003,602.352874611
c041,0,1,2,427101,428301,414048,1200.0007555769998,1203.036371212
c041,0,1,3,268808,269893,264400,1800.0014666949999,1803.613923227
c041,0,1,4,247467,248644,243399,2400.0021647269996,2404.004721112
c041,0,1,5,213321,214467,209810,3000.0035775879996,3004.358941604
c041,0,1,6,192498,193526,189227,3600.028387435,3604.707378863
c041,0,1,7,166095,167155,163387,4200.029545455,4205.003248708
c041,0,1,8,134342,135271,132473,4800.033228574999,4805.351910756
c041,0,1,9,118473,119384,116944,5400.033419876999,5405.600637069
c041,0,1,10,100079,100991,99029,6000.034833310999,6005.865540313
c041,0,1,11,69803,70683,68427,6600.036548908999,6606.050282564
# search time: 6600.037s
# total time: 6606.287s
c041,1,1,1,1019506,1019508,936515,600.001127148,600.244547039
c041,1,1,2,414514,416692,403490,1200.004738085,1200.474344858
c041,1,1,3,259401,260446,254859,1800.005123822,1800.694530363
c041,1,1,4,247521,248753,243396,2400.007073964,2400.864279364
c041,1,1,5,218404,219503,214580,3000.0120197710003,3001.032739227
c041,1,1,6,196668,197783,193419,3600.013712922,3601.18836804
c041,1,1,7,164622,165756,162028,4200.016233316001,4201.342379039
c041,1,1,8,132433,133392,130726,4800.019931090001,4801.53064072
c041,1,1,9,117070,118012,115705,5400.021016312001,5401.637160612
c041,1,1,10,98515,99337,97463,6000.022002897001,6001.779907571
c041,1,1,11,69874,70701,68459,6600.022973183,6601.877008089
# search time: 6600.023s
# total time: 13208.487s
c041,2,1,1,985793,985795,902089,600.007332201,600.198758381
c041,2,1,2,416229,418163,405153,1200.008103763,1200.376336981
c041,2,1,3,262535,263550,257770,1800.009832473,1800.506128347
c041,2,1,4,248789,249884,244372,2400.011146901,2400.623745055
c041,2,1,5,213944,215055,210511,3000.01583524,3000.749524359
c041,2,1,6,200867,201952,197543,3600.017166923,3600.871219718
c041,2,1,7,185393,186520,182549,4200.020276906,4200.986137324
c041,2,1,8,151216,152107,149128,4800.024990457,4801.122188485
c041,2,1,9,135095,136115,133494,5400.041296359,5401.23549796
c041,2,1,10,112499,113377,111193,6000.186050788,6001.473875853
c041,2,1,11,81484,82281,79797,6600.254000451,6601.608595566
# search time: 6600.254s
# total time: 19810.418s
c041,3,1,1,1120736,1120738,1032596,600.000732064,600.168720493
c041,3,1,2,459479,461262,447860,1200.000783382,1200.300415516
c041,3,1,3,298968,300035,293883,1800.0099779460002,1800.420435347
c041,3,1,4,282536,283578,277480,2400.0104691650004,2400.519631749
c041,3,1,5,237565,238750,233571,3000.012493426,3000.612234283
c041,3,1,6,215304,216408,211832,3600.0130797580005,3600.705725083
c041,3,1,7,186219,187296,183101,4200.0164481930005,4200.794444241
c041,3,1,8,149791,150781,147828,4800.016875567,4800.900060289
c041,3,1,9,132655,133674,131141,5400.023868731,5400.997673994
c041,3,1,10,112687,113530,111320,6000.025165605,6001.073913439
c041,3,1,11,80767,81690,79224,6600.026674174001,6601.13591042
# search time: 6600.027s
# total time: 26411.885s
c041,4,1,1,1133780,1133782,1042981,600.003144389,600.164714121
c041,4,1,2,469593,471884,457263,1200.005436916,1200.271551464
c041,4,1,3,297914,299005,292766,1800.0071626459999,1800.368656067
c041,4,1,4,282212,283441,277347,2400.0116349209998,2400.450193506
c041,4,1,5,241101,242387,237243,3000.0137647799997,3000.530899286
c041,4,1,6,218402,219436,214823,3600.014535302,3600.608178927
c041,4,1,7,186689,187764,183538,4200.01666553,4200.688477254
c041,4,1,8,149673,150639,147611,4800.018298958,4800.771243845
c041,4,1,9,133532,134499,131898,5400.032865253,5400.84863084
c041,4,1,10,113316,114246,111987,6000.033495068999,6000.942891121
c041,4,1,11,81601,82425,79846,6600.034409204999,6600.984468531
# search time: 6600.034s
# total time: 33014.004s
