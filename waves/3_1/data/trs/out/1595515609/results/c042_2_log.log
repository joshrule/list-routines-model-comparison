    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.34s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c042_2.json out/1595515609/results/c042_2_best.csv out/1595515609/results/c042_2_predictions.csv out/1595515609/results/c042_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 9, 9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 4, 1, 2]), o: IntList([5, 2]) }
#   Datum { i: IntList([4]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 3, 8, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([3, 7, 7, 4, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([4, 4]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([]), o: IntList([5, 2]) }
#   Datum { i: IntList([2, 6, 0, 0, 8, 9, 6, 6, 9, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 1, 0, 7, 7]), o: IntList([5, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c042,0,2,1,964066,964068,884164,600.000352556,602.39252958
c042,0,2,2,339869,341878,332125,1200.001956142,1203.16654296
c042,0,2,3,229056,230101,225516,1800.003503882,1803.74586324
c042,0,2,4,200196,201197,195444,2400.005411684,2404.202031322
c042,0,2,5,163797,164888,160365,3000.011624355,3004.681999209
c042,0,2,6,143167,144136,139511,3600.014126472,3605.014041219
c042,0,2,7,116967,117930,114751,4200.015711754,4205.368473641
c042,0,2,8,104318,105265,101985,4800.018574032,4805.707447011
c042,0,2,9,75739,76650,74780,5400.038561403,5406.002455814
c042,0,2,10,79966,80703,79412,6000.04971989,6006.31847603
c042,0,2,11,73459,74178,72924,6600.054344956,6606.558596656
# search time: 6600.054s
# total time: 6606.824s
c042,1,2,1,1050053,1050055,962708,600.00108805,600.291516022
c042,1,2,2,345904,348247,338427,1200.00161651,1200.537340605
c042,1,2,3,233255,234275,229087,1800.007490775,1800.773400746
c042,1,2,4,213296,214407,208774,2400.008562439,2400.973227033
c042,1,2,5,162501,163650,159292,3000.011844232,3001.173488284
c042,1,2,6,135905,136771,131950,3600.0154313989997,3601.335114982
c042,1,2,7,115428,116460,112822,4200.020323356,4201.513736634
c042,1,2,8,102267,103183,100322,4800.02677161,4801.672601899
c042,1,2,9,78971,79833,77958,5400.029450315,5401.807051252
c042,1,2,10,80414,81146,79745,6000.03779708,6001.947440159
c042,1,2,11,73192,73959,72769,6600.045280405,6602.073414382
# search time: 6600.045s
# total time: 13209.265s
c042,2,2,1,1002946,1002948,919956,600.000174536,600.191195123
c042,2,2,2,352064,354467,344386,1200.003511369,1200.354563152
c042,2,2,3,230416,231446,225672,1800.005150101,1800.517411255
c042,2,2,4,211524,212630,206505,2400.006013021,2400.64378401
c042,2,2,5,168433,169472,164759,3000.009356127,3000.787770859
c042,2,2,6,150479,151464,146986,3600.010249708,3600.900292916
c042,2,2,7,129977,130898,126753,4200.0115438,4201.005684184
c042,2,2,8,113810,114873,111363,4800.016348316,4801.12178911
c042,2,2,9,87710,88645,86500,5400.024274919,5401.219950362
c042,2,2,10,89872,90650,89120,6000.046621473,6001.320890849
c042,2,2,11,80741,81510,80142,6600.0542382250005,6601.420789887
# search time: 6600.054s
# total time: 19811.039s
c042,3,2,1,1142211,1142213,1050195,600.000298399,600.190304743
c042,3,2,2,389855,391777,380659,1200.004725802,1200.335811719
c042,3,2,3,258330,259326,253270,1800.005154412,1800.45745697
c042,3,2,4,234436,235642,228997,2400.007775838,2400.590639468
c042,3,2,5,185845,186858,181167,3000.0087842499997,3000.705093867
c042,3,2,6,157585,158550,153825,3600.0155378769996,3600.806293657
c042,3,2,7,131749,132735,128789,4200.015854478999,4200.904357711
c042,3,2,8,116053,116928,113572,4800.019814222,4801.012011473
c042,3,2,9,88049,88933,86935,5400.0498987149995,5401.130942046
c042,3,2,10,90027,90723,89206,6000.053301761999,6001.218677333
c042,3,2,11,81160,81892,80457,6600.068024111999,6601.32446063
# search time: 6600.068s
# total time: 26412.840s
c042,4,2,1,1122670,1122672,1034034,600.000256771,600.175446861
c042,4,2,2,388727,390967,379863,1200.000631638,1200.293698457
c042,4,2,3,252560,253598,247006,1800.002603185,1800.395991989
c042,4,2,4,237528,238640,232153,2400.002889491,2400.480379758
c042,4,2,5,190427,191401,186267,3000.0113974570004,3000.586148845
c042,4,2,6,160878,161807,156755,3600.0148465050006,3600.667617756
c042,4,2,7,131170,132144,127931,4200.020476401,4200.741563524
c042,4,2,8,115684,116607,113286,4800.0212498890005,4800.800778006
c042,4,2,9,85450,86282,84236,5400.022717342001,5400.877298882
c042,4,2,10,89841,90501,89098,6000.023629678,6000.945212074
c042,4,2,11,81924,82633,81293,6600.027558212,6601.009839087
# search time: 6600.028s
# total time: 33014.120s
