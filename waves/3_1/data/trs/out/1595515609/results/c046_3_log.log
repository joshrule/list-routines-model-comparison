    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c046_3.json out/1595515609/results/c046_3_best.csv out/1595515609/results/c046_3_predictions.csv out/1595515609/results/c046_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 9, 6, 9, 6]), o: IntList([7, 6, 9, 6, 9, 6]) }
#   Datum { i: IntList([1, 4]), o: IntList([7, 1, 4]) }
#   Datum { i: IntList([]), o: IntList([7]) }
#   Datum { i: IntList([4, 7, 0, 5, 0, 3]), o: IntList([7, 4, 7, 0, 5, 0, 3]) }
#   Datum { i: IntList([7, 3, 5]), o: IntList([7, 7, 3, 5]) }
#   Datum { i: IntList([9, 1, 6, 5, 2, 1, 0, 1, 9]), o: IntList([7, 9, 1, 6, 5, 2, 1, 0, 1, 9]) }
#   Datum { i: IntList([3, 3, 4, 3, 3, 8, 4, 4]), o: IntList([7, 3, 3, 4, 3, 3, 8, 4, 4]) }
#   Datum { i: IntList([2, 2, 0, 0, 2, 2, 0, 2, 0, 2]), o: IntList([7, 2, 2, 0, 0, 2, 2, 0, 2, 0, 2]) }
#   Datum { i: IntList([8, 8, 5, 5]), o: IntList([7, 8, 8, 5, 5]) }
#   Datum { i: IntList([9]), o: IntList([7, 9]) }
#   Datum { i: IntList([3, 8, 6, 7, 0, 3, 4]), o: IntList([7, 3, 8, 6, 7, 0, 3, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c046,0,3,1,1123632,1123634,1031272,600.004587062,602.140244382
c046,0,3,2,251297,253236,246297,1200.006861717,1202.741468368
c046,0,3,3,201955,202963,197238,1800.009612196,1803.148136336
c046,0,3,4,172591,173409,169618,2400.011815135,2403.435674936
c046,0,3,5,112560,113682,111352,3000.0165737129996,3003.724010514
c046,0,3,6,92464,93412,91520,3600.0195784399993,3603.961395501
c046,0,3,7,65114,66028,64570,4200.023866678999,4204.150196131
c046,0,3,8,57805,58680,57211,4800.027652098999,4804.42451687
c046,0,3,9,42793,43556,42629,5400.028889002999,5404.692567165
c046,0,3,10,39699,40423,39509,6000.029735012999,6004.926322351
c046,0,3,11,39164,39836,39189,6600.034747477998,6605.162987497
# search time: 6600.035s
# total time: 6605.405s
c046,1,3,1,1224351,1224353,1140428,600.000079429,600.31089449
c046,1,3,2,280874,283034,274997,1200.0012053290002,1200.559058862
c046,1,3,3,233244,234237,227333,1800.00162533,1800.738093407
c046,1,3,4,196233,197085,192912,2400.005204912,2400.894253646
c046,1,3,5,126988,128018,125410,3000.010443725,3001.042539382
c046,1,3,6,104533,105467,103317,3600.0126374690003,3601.177573937
c046,1,3,7,72826,73686,72058,4200.013584575,4201.274202576
c046,1,3,8,56314,57225,55888,4800.029339054,4801.424481698
c046,1,3,9,42121,42785,41839,5400.032932065,5401.538651882
c046,1,3,10,38049,38712,37887,6000.036137169,6001.65446876
c046,1,3,11,38275,38920,38210,6600.062673449999,6601.80047948
# search time: 6600.063s
# total time: 13207.566s
c046,2,3,1,1294220,1294222,1194204,600.000191666,600.250525374
c046,2,3,2,277581,279675,272096,1200.0011666350001,1200.400239879
c046,2,3,3,226739,227712,220790,1800.0033519470003,1800.518196704
c046,2,3,4,192961,193944,189925,2400.006831425,2400.629282817
c046,2,3,5,125801,126872,124388,3000.011729094,3000.735609924
c046,2,3,6,103730,104536,102435,3600.015743,3600.826667576
c046,2,3,7,73033,73850,72205,4200.023271223,4200.915322885
c046,2,3,8,56899,57635,56279,4800.033217337,4801.019421103
c046,2,3,9,41859,42717,41710,5400.0490833779995,5401.138377057
c046,2,3,10,38517,39256,38382,6000.0673044059995,6001.265981984
c046,2,3,11,38812,39511,38764,6600.0911226749995,6601.359747001
# search time: 6600.091s
# total time: 19809.293s
c046,3,3,1,1262229,1262231,1155502,600.003866316,600.195268966
c046,3,3,2,275661,278008,270606,1200.0057147369998,1200.32534929
c046,3,3,3,230510,231596,225087,1800.0079329369999,1800.422812124
c046,3,3,4,190835,191725,187480,2400.010314102,2400.50700495
c046,3,3,5,124722,125742,123233,3000.012247055,3000.595010612
c046,3,3,6,102199,103183,101018,3600.019072184,3600.678229036
c046,3,3,7,72818,73780,72107,4200.023810777,4200.739602833
c046,3,3,8,55977,56865,55570,4800.0295574930005,4800.79415279
c046,3,3,9,42253,42990,42022,5400.033776093001,5400.868339506
c046,3,3,10,38089,38746,37890,6000.0340177650005,6000.933786934
c046,3,3,11,38378,39015,38287,6600.059911294001,6601.012038315
# search time: 6600.060s
# total time: 26410.659s
c046,4,3,1,1220067,1220069,1139645,600.000131271,600.188431628
c046,4,3,2,280172,281343,273651,1200.000850429,1200.29915407
c046,4,3,3,225600,226590,219969,1800.002064784,1800.381486439
c046,4,3,4,193284,194201,189933,2400.005639249,2400.456993187
c046,4,3,5,126383,127423,124687,3000.005961624,3000.515475817
c046,4,3,6,104225,105177,103130,3600.0082150050002,3600.578729239
c046,4,3,7,72831,73711,72174,4200.010427702,4200.632030483
c046,4,3,8,55796,56704,55380,4800.011583605,4800.704775207
c046,4,3,9,41874,42622,41699,5400.031658886,5400.780451425
c046,4,3,10,38286,39009,38193,6000.044057644,6000.869629951
c046,4,3,11,37651,38352,37670,6600.050080665999,6600.926426671
# search time: 6600.050s
# total time: 33011.953s
