    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.28s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c043_1.json out/1595515609/results/c043_1_best.csv out/1595515609/results/c043_1_predictions.csv out/1595515609/results/c043_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 5, 5, 5, 5]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([9, 3, 7, 8, 2, 1, 9, 0]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 0, 6, 4, 5, 5, 9, 6, 4, 1]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([4, 1, 6, 4, 6, 1, 6, 3, 4]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([4, 4, 6, 4, 6, 6, 6, 4, 6]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([8, 7, 8, 8, 4, 7]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([0]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([9, 9, 9, 9, 9, 9, 9, 9]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 5, 5, 6, 6, 5, 6, 5, 6, 6]), o: IntList([8, 2, 7, 0, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c043,0,1,1,978989,978991,915358,600.001305703,602.418863444
c043,0,1,2,221325,223323,216177,1200.0026380250001,1203.061538288
c043,0,1,3,149536,150538,146195,1800.004236796,1803.591798431
c043,0,1,4,112791,113718,110404,2400.0172759449997,2404.173870122
c043,0,1,5,84545,85304,82749,3000.0183092899997,3004.706347484
c043,0,1,6,67271,67929,65860,3600.0258755649998,3605.354483195
c043,0,1,7,55024,55707,53936,4200.039399333999,4205.952647658
c043,0,1,8,46650,47349,45915,4800.055682994999,4806.587345735
c043,0,1,9,32315,33027,32297,5400.069038475,5407.499049058
c043,0,1,10,34920,35653,34749,6000.073183187,6008.118735938
c043,0,1,11,29868,30504,29847,6600.094605892999,6608.657806968
# search time: 6600.095s
# total time: 6608.851s
c043,1,1,1,981257,981259,897297,600.000188093,600.309127846
c043,1,1,2,223461,224885,217978,1200.001333505,1200.55499003
c043,1,1,3,146760,147845,143487,1800.0029613410002,1800.773837547
c043,1,1,4,111770,112769,109438,2400.0127553790003,2401.024539875
c043,1,1,5,86341,87089,84395,3000.018307307,3001.293904627
c043,1,1,6,67800,68554,66604,3600.023498414,3601.541753379
c043,1,1,7,53338,54056,52184,4200.034162,4201.891490835
c043,1,1,8,46242,46949,45471,4800.04242277,4802.279149206
c043,1,1,9,31143,31854,31137,5400.055648117,5402.644800551
c043,1,1,10,34892,35494,34587,6000.057139748999,6002.861544441
c043,1,1,11,30264,30852,30090,6600.075576826999,6603.201066783
# search time: 6600.076s
# total time: 13212.310s
c043,2,1,1,966542,966544,901904,600.000341987,600.219974102
c043,2,1,2,216067,218026,211026,1200.001298016,1200.391420949
c043,2,1,3,149230,150286,147032,1800.006639609,1800.550107595
c043,2,1,4,112077,113040,109863,2400.0115273320002,2400.70129577
c043,2,1,5,84904,85637,82744,3000.0157474590005,3000.864058254
c043,2,1,6,69257,70089,67891,3600.0212419600007,3601.07506532
c043,2,1,7,61674,62398,60438,4200.021753848001,4201.28184793
c043,2,1,8,53639,54394,52673,4800.025360336001,4801.516922997
c043,2,1,9,36911,37546,36804,5400.031136324001,5401.783436691
c043,2,1,10,39811,40460,39349,6000.047596828001,6002.013798668
c043,2,1,11,34772,35424,34442,6600.0497804080005,6602.313101357
# search time: 6600.050s
# total time: 19814.958s
c043,3,1,1,1140046,1140048,1050977,600.000683957,600.200902369
c043,3,1,2,248559,249790,241989,1200.001467985,1200.336752554
c043,3,1,3,167297,168412,163718,1800.0028612400001,1800.453255558
c043,3,1,4,127335,128354,124994,2400.0032256000004,2400.577057771
c043,3,1,5,95456,96293,93187,3000.0032927320003,3000.699873175
c043,3,1,6,74469,75246,72711,3600.0055572260003,3600.876594028
c043,3,1,7,61301,62050,60041,4200.0265533130005,4201.042851033
c043,3,1,8,53096,53903,52204,4800.031114645,4801.230085552
c043,3,1,9,35982,36753,35996,5400.032974112,5401.447763318
c043,3,1,10,39730,40420,39386,6000.045087461001,6001.610520596
c043,3,1,11,34433,35067,34139,6600.049117497,6601.770503757
# search time: 6600.049s
# total time: 26416.933s
c043,4,1,1,1133042,1133044,1031592,600.000281709,600.167621437
c043,4,1,2,246415,248425,240321,1200.001863549,1200.27980526
c043,4,1,3,167416,168438,163555,1800.0089623110002,1800.371767194
c043,4,1,4,127085,128051,124395,2400.012446603,2400.479626786
c043,4,1,5,95525,96329,93355,3000.012535315,3000.574151907
c043,4,1,6,75349,76102,73821,3600.01659121,3600.702826068
c043,4,1,7,61824,62619,60779,4200.028636306,4200.853883668
c043,4,1,8,52446,53214,51576,4800.032423013001,4801.002800481
c043,4,1,9,35309,36051,35335,5400.035036309001,5401.169092637
c043,4,1,10,39315,39920,38847,6000.036564271001,6001.303829088
c043,4,1,11,34267,34985,34035,6600.047497559001,6601.459035631
# search time: 6600.047s
# total time: 33018.682s
