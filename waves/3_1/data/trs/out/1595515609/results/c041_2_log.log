    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.16s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c041_2.json out/1595515609/results/c041_2_best.csv out/1595515609/results/c041_2_predictions.csv out/1595515609/results/c041_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 0, 7]), o: IntList([9]) }
#   Datum { i: IntList([4, 8, 7, 2, 6, 6, 5]), o: IntList([9]) }
#   Datum { i: IntList([7, 3, 6, 4]), o: IntList([9]) }
#   Datum { i: IntList([0]), o: IntList([9]) }
#   Datum { i: IntList([2, 1]), o: IntList([9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([4, 0, 4, 4, 0, 0]), o: IntList([9]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([9]) }
#   Datum { i: IntList([8, 7, 5, 5, 1, 6]), o: IntList([9]) }
#   Datum { i: IntList([2, 2]), o: IntList([9]) }
#   Datum { i: IntList([3, 6, 8, 8, 3, 6]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c041,0,2,1,1007850,1007852,940789,600.000468895,602.372697293
c041,0,2,2,429614,430431,418106,1200.0105016480002,1203.062951417
c041,0,2,3,268755,269878,264298,1800.0158438930002,1803.513340295
c041,0,2,4,212494,213726,208734,2400.016433573,2404.042161932
c041,0,2,5,210708,211789,206062,3000.017056571,3004.438840131
c041,0,2,6,170992,172141,168270,3600.029485686,3604.885151629
c041,0,2,7,169949,170932,167017,4200.033455695,4205.20155711
c041,0,2,8,120732,121746,118132,4800.035851798,4805.397814079
c041,0,2,9,103345,104323,101299,5400.038962922001,5405.600822961
c041,0,2,10,76545,77480,75287,6000.044179140001,6005.904779221
c041,0,2,11,75471,76324,73723,6600.045463002001,6606.072296217
# search time: 6600.045s
# total time: 6606.326s
c041,1,2,1,1047085,1047087,970668,600.000150839,600.261925057
c041,1,2,2,454847,456797,442796,1200.0116206970001,1200.509856475
c041,1,2,3,274221,275362,269668,1800.0140394640002,1800.697736068
c041,1,2,4,217232,218462,213601,2400.02694078,2400.918751929
c041,1,2,5,204461,205588,199701,3000.028116771,3001.096237307
c041,1,2,6,164865,165860,161918,3600.031540758,3601.284826931
c041,1,2,7,168397,169496,165732,4200.034590517,4201.428474301
c041,1,2,8,118170,119138,115504,4800.101808887,4801.604286906
c041,1,2,9,101622,102551,99387,5400.108311147,5401.717401104
c041,1,2,10,76213,76994,74834,6000.129880099,6001.90349563
c041,1,2,11,74214,74988,72437,6600.130795949,6602.001397039
# search time: 6600.131s
# total time: 13208.721s
c041,2,2,1,1057500,1057502,975719,600.000214206,600.183725478
c041,2,2,2,449145,451493,438106,1200.000531098,1200.34524554
c041,2,2,3,273567,274708,268860,1800.001511848,1800.474335035
c041,2,2,4,219305,220540,215649,2400.004460557,2400.614131015
c041,2,2,5,211754,212753,206640,3000.014741,3000.75606152
c041,2,2,6,178329,179423,175074,3600.015501459,3600.881992871
c041,2,2,7,187704,188691,184498,4200.016672395,4200.988709577
c041,2,2,8,133806,134820,130820,4800.021057667,4801.079601083
c041,2,2,9,116530,117472,114132,5400.029182827,5401.171037429
c041,2,2,10,85875,86752,84344,6000.030370822,6001.276857463
c041,2,2,11,84022,84787,81903,6600.036909222,6601.346847997
# search time: 6600.037s
# total time: 19810.334s
c041,3,2,1,1155946,1155948,1060855,600.000191054,600.175159644
c041,3,2,2,491801,494206,480194,1200.001087991,1200.312362082
c041,3,2,3,298845,299962,293651,1800.001200144,1800.424366673
c041,3,2,4,241126,242305,237073,2400.0047730300003,2400.551391188
c041,3,2,5,231364,232490,226240,3000.007329938,3000.654568673
c041,3,2,6,186833,187924,183403,3600.008445232,3600.773463826
c041,3,2,7,188913,189901,185623,4200.010162076001,4200.865372655
c041,3,2,8,133793,134697,130768,4800.012917997001,4800.92784365
c041,3,2,9,116419,117331,113912,5400.018356353001,5400.993935858
c041,3,2,10,87478,88375,86063,6000.040772714001,6001.125522836
c041,3,2,11,84682,85526,82630,6600.0408729440005,6601.181003009
# search time: 6600.041s
# total time: 26411.869s
c041,4,2,1,1176912,1176914,1081372,600.000290742,600.189913594
c041,4,2,2,492165,494494,480597,1200.0100808789998,1200.3261515
c041,4,2,3,307337,308464,301997,1800.0102808899996,1800.428049179
c041,4,2,4,243287,244516,239162,2400.0130579819997,2400.538552532
c041,4,2,5,236681,237858,231509,3000.0137757459997,3000.640558904
c041,4,2,6,191689,192828,188804,3600.0142003739998,3600.741163342
c041,4,2,7,190465,191471,187308,4200.016305235,4200.833044117
c041,4,2,8,136548,137539,133552,4800.047485037,4800.921766057
c041,4,2,9,116436,117293,113926,5400.04842085,5400.983442489
c041,4,2,10,86799,87582,85194,6000.0511012980005,6001.080816984
c041,4,2,11,85326,86189,83400,6600.05136356,6601.124423877
# search time: 6600.051s
# total time: 33013.353s
