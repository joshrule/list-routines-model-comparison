    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c055_2.json out/1595515609/results/c055_2_best.csv out/1595515609/results/c055_2_predictions.csv out/1595515609/results/c055_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 9, 4, 4]), o: IntList([4, 4, 8, 9]) }
#   Datum { i: IntList([0, 2, 6, 1, 9, 5, 6, 5, 3]), o: IntList([6, 1, 0, 2, 9, 5, 6, 5, 3]) }
#   Datum { i: IntList([6, 2, 3, 0, 3, 2, 8, 1]), o: IntList([3, 0, 6, 2, 3, 2, 8, 1]) }
#   Datum { i: IntList([3, 9, 7, 2, 0, 8, 5]), o: IntList([7, 2, 3, 9, 0, 8, 5]) }
#   Datum { i: IntList([0, 7, 8, 1, 1, 4, 8, 9, 7, 2]), o: IntList([8, 1, 0, 7, 1, 4, 8, 9, 7, 2]) }
#   Datum { i: IntList([2, 1, 6, 6, 8, 9, 8]), o: IntList([6, 6, 2, 1, 8, 9, 8]) }
#   Datum { i: IntList([2, 5, 3, 5, 3, 5, 3, 2, 5]), o: IntList([3, 5, 2, 5, 3, 5, 3, 2, 5]) }
#   Datum { i: IntList([8, 1, 7, 0, 5]), o: IntList([7, 0, 8, 1, 5]) }
#   Datum { i: IntList([4, 8, 7, 9]), o: IntList([7, 9, 4, 8]) }
#   Datum { i: IntList([9, 7, 7, 5, 5, 7]), o: IntList([7, 5, 9, 7, 5, 7]) }
#   Datum { i: IntList([9, 4, 4, 3, 9, 9, 3, 4]), o: IntList([4, 3, 9, 4, 9, 9, 3, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c055,0,2,1,1118054,1118056,1039889,600.000198031,602.009947068
c055,0,2,2,296697,297688,289098,1200.000455552,1202.56891342
c055,0,2,3,136041,137150,132047,1800.0021088419999,1802.89879806
c055,0,2,4,94956,95984,92717,2400.007970183,2403.259007941
c055,0,2,5,73346,74073,71431,3000.009309042,3003.602186794
c055,0,2,6,46075,46922,45482,3600.027480596,3604.126525775
c055,0,2,7,38724,39495,38431,4200.028090966,4204.601616322
c055,0,2,8,35727,36468,35459,4800.036889485,4805.141570977
c055,0,2,9,35133,35871,34838,5400.045088918,5405.542634723
c055,0,2,10,36464,37169,36095,6000.059005636,6005.974366905
c055,0,2,11,33467,34137,33136,6600.064052508,6606.478235312
# search time: 6600.064s
# total time: 6606.679s
c055,1,2,1,1263497,1263499,1169379,600.00026497,600.359188989
c055,1,2,2,332240,334246,324774,1200.00220104,1200.612246486
c055,1,2,3,152387,153424,147524,1800.0027115359999,1800.765750906
c055,1,2,4,100462,101492,96740,2400.006898228,2400.941033473
c055,1,2,5,77294,78244,75015,3000.0175215199997,3001.142849868
c055,1,2,6,50115,51033,49432,3600.029740996,3601.440057992
c055,1,2,7,40816,41613,40517,4200.037736517,4201.6745269
c055,1,2,8,38577,39316,38157,4800.0453712749995,4801.873490499
c055,1,2,9,34782,35596,34657,5400.051637445999,5402.129050275
c055,1,2,10,36547,37246,36184,6000.061858998999,6002.385128858
c055,1,2,11,32791,33534,32600,6600.067607109999,6602.602304376
# search time: 6600.068s
# total time: 13209.599s
c055,2,2,1,1329394,1329396,1215142,600.000241813,600.348669391
c055,2,2,2,339754,341625,331601,1200.001263208,1200.518515172
c055,2,2,3,152833,153826,147885,1800.002403073,1800.631505815
c055,2,2,4,104775,105823,101533,2400.004261473,2400.752779468
c055,2,2,5,82651,83456,80382,3000.011532369,3000.864903057
c055,2,2,6,51917,52860,51017,3600.0186439830004,3601.005572137
c055,2,2,7,43208,43929,42585,4200.038754583,4201.201074575
c055,2,2,8,40338,41007,39837,4800.0444523589995,4801.366953018
c055,2,2,9,36214,36957,35957,5400.0627653639995,5401.520387172
c055,2,2,10,36829,37533,36440,6000.076543251,6001.684850359
c055,2,2,11,32638,33370,32442,6600.077041645,6601.859567106
# search time: 6600.077s
# total time: 19811.790s
c055,3,2,1,1284678,1284680,1184640,600.000075834,600.217149768
c055,3,2,2,333855,335714,326131,1200.000162267,1200.342439301
c055,3,2,3,151982,153148,147425,1800.004327912,1800.43604258
c055,3,2,4,105382,106324,102008,2400.00696667,2400.541617955
c055,3,2,5,83390,84296,81524,3000.008885151,3000.633971663
c055,3,2,6,52002,52681,51267,3600.020557691,3600.763586319
c055,3,2,7,43064,43906,42699,4200.021355961,4200.920493921
c055,3,2,8,40833,41515,40180,4800.022832976,4801.06155803
c055,3,2,9,36366,37152,36110,5400.030776642,5401.194090981
c055,3,2,10,36763,37404,36323,6000.047914984,6001.339826867
c055,3,2,11,33154,33651,32748,6600.070895711,6601.545560434
# search time: 6600.071s
# total time: 26413.660s
c055,4,2,1,1292761,1292763,1185292,600.000033547,600.210032157
c055,4,2,2,332501,334850,325145,1200.0007033699999,1200.323140791
c055,4,2,3,152609,153893,147780,1800.002501253,1800.402896991
c055,4,2,4,105998,106931,102627,2400.010608033,2400.491964484
c055,4,2,5,82197,83069,79628,3000.017541311,3000.578230013
c055,4,2,6,52580,53489,51775,3600.0184983090003,3600.674064034
c055,4,2,7,43871,44722,43373,4200.025925443,4200.760810838
c055,4,2,8,40484,41249,40008,4800.042772216,4800.929217405
c055,4,2,9,36342,37043,36074,5400.057926466,5401.021196773
c055,4,2,10,36866,37529,36442,6000.077268027,6001.156489111
c055,4,2,11,32814,33544,32636,6600.095162667,6601.291930337
# search time: 6600.095s
# total time: 33015.278s
