    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c057_4.json out/1595515609/results/c057_4_best.csv out/1595515609/results/c057_4_predictions.csv out/1595515609/results/c057_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 7, 8, 4, 0, 6, 5, 1]), o: IntList([2, 7, 8, 4, 0, 6, 4, 5, 1]) }
#   Datum { i: IntList([1, 8, 0, 8, 1, 6, 5]), o: IntList([1, 8, 0, 8, 1, 6, 4, 5]) }
#   Datum { i: IntList([3, 9, 9, 3, 3, 9, 3, 9, 3, 3]), o: IntList([3, 9, 9, 3, 3, 9, 4, 3, 9, 3, 3]) }
#   Datum { i: IntList([0, 4, 1, 1, 2, 4, 0, 0, 0]), o: IntList([0, 4, 1, 1, 2, 4, 4, 0, 0, 0]) }
#   Datum { i: IntList([6, 6, 3, 3, 6, 7, 3, 7, 3, 3]), o: IntList([6, 6, 3, 3, 6, 7, 4, 3, 7, 3, 3]) }
#   Datum { i: IntList([2, 5, 6, 3, 2, 9, 2, 0, 0, 0]), o: IntList([2, 5, 6, 3, 2, 9, 4, 2, 0, 0, 0]) }
#   Datum { i: IntList([5, 9, 3, 7, 2, 1, 6, 0, 8]), o: IntList([5, 9, 3, 7, 2, 1, 4, 6, 0, 8]) }
#   Datum { i: IntList([2, 3, 9, 7, 6, 0, 0, 8]), o: IntList([2, 3, 9, 7, 6, 0, 4, 0, 8]) }
#   Datum { i: IntList([2, 9, 9, 2, 9, 9, 2, 2, 2]), o: IntList([2, 9, 9, 2, 9, 9, 4, 2, 2, 2]) }
#   Datum { i: IntList([4, 5, 4, 5, 5, 9, 5, 4]), o: IntList([4, 5, 4, 5, 5, 9, 4, 5, 4]) }
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c057,0,4,1,1168514,1168516,1090919,600.000328284,601.817723485
c057,0,4,2,170992,173259,169002,1200.002909622,1202.517932557
c057,0,4,3,108671,109552,107121,1800.00342834,1802.916913964
c057,0,4,4,74292,75219,72804,2400.014023516,2403.316911892
c057,0,4,5,55786,56547,54326,3000.025119961,3003.738777964
c057,0,4,6,45709,46370,45283,3600.028964119,3604.245157412
c057,0,4,7,34363,35055,34217,4200.0346700830005,4204.869413806
c057,0,4,8,29595,30352,29532,4800.057907552001,4805.579808376
c057,0,4,9,25206,25956,25162,5400.065938027001,5406.374586348
c057,0,4,10,22381,23158,22478,6000.074766931,6006.98227287
c057,0,4,11,19772,20531,19964,6600.087055366001,6607.603575512
# search time: 6600.087s
# total time: 6607.798s
c057,1,4,1,1124684,1124686,1050770,600.000664401,600.305269522
c057,1,4,2,178416,180378,175748,1200.002333679,1200.568738089
c057,1,4,3,106087,106988,104532,1800.00605372,1800.758531002
c057,1,4,4,74959,75718,73495,2400.009589549,2400.93880896
c057,1,4,5,55189,55986,54160,3000.01571802,3001.158920904
c057,1,4,6,45013,45763,44573,3600.017782467,3601.338903717
c057,1,4,7,33712,34401,33528,4200.0279284789995,4201.6185704
c057,1,4,8,28966,29727,28900,4800.029770024999,4802.027750434
c057,1,4,9,24373,25196,24569,5400.031996309999,5402.369727983
c057,1,4,10,21884,22619,21987,6000.035317553999,6002.679662205
c057,1,4,11,19243,19985,19446,6600.0429998399995,6603.093649288
# search time: 6600.043s
# total time: 13211.154s
c057,2,4,1,1181306,1181308,1091174,600.006897729,600.244552779
c057,2,4,2,176917,179158,174716,1200.010871553,1200.427110591
c057,2,4,3,104285,105230,103213,1800.012095176,1800.554365202
c057,2,4,4,73145,73954,70957,2400.021243882,2400.695198876
c057,2,4,5,56161,57002,55286,3000.029158333,3000.881951538
c057,2,4,6,44673,45476,44069,3600.034105833,3601.063727966
c057,2,4,7,33970,34744,33857,4200.040570896,4201.282548525
c057,2,4,8,29087,29901,29150,4800.057393507,4801.572328938
c057,2,4,9,24747,25457,24677,5400.0893593559995,5401.853958995
c057,2,4,10,22376,23059,22341,6000.091181065999,6002.082532231
c057,2,4,11,19366,20069,19458,6600.100557103999,6602.317013945
# search time: 6600.101s
# total time: 19813.792s
c057,3,4,1,1155920,1155922,1061839,600.000213636,600.195256121
c057,3,4,2,183438,184523,179732,1200.0026411620001,1200.338448097
c057,3,4,3,112760,113889,110705,1800.0047434350001,1800.435725201
c057,3,4,4,72918,73712,71134,2400.008171856,2400.556954598
c057,3,4,5,54841,55647,53681,3000.011254252,3000.693350376
c057,3,4,6,44538,45231,43842,3600.0188606700003,3600.806816264
c057,3,4,7,34148,34806,33880,4200.026414837001,4201.026857467
c057,3,4,8,29447,30185,29391,4800.038988543,4801.187188527
c057,3,4,9,24805,25480,24785,5400.075567697,5401.442187929
c057,3,4,10,22318,22993,22315,6000.086821794001,6001.670736692
c057,3,4,11,19192,19914,19405,6600.092029649,6601.91998641
# search time: 6600.092s
# total time: 26415.911s
c057,4,4,1,1170864,1170866,1076447,600.000309651,600.176087251
c057,4,4,2,176525,178847,174282,1200.0006991179998,1200.28670041
c057,4,4,3,105137,106071,103767,1800.005291169,1800.381757523
c057,4,4,4,72556,73291,70727,2400.007357513,2400.486698846
c057,4,4,5,55527,55991,54031,3000.008485672,3000.586485849
c057,4,4,6,44909,45578,44100,3600.009070941,3600.732738986
c057,4,4,7,33427,34089,33308,4200.01247798,4200.857601679
c057,4,4,8,28511,29299,28589,4800.013981541,4801.042274133
c057,4,4,9,23877,24543,23928,5400.0266935770005,5401.224733852
c057,4,4,10,21929,22603,21933,6000.042389311,6001.40214527
c057,4,4,11,19225,19890,19298,6600.054796286,6601.583367197
# search time: 6600.055s
# total time: 33017.834s
