    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c059_3.json out/1595515609/results/c059_3_best.csv out/1595515609/results/c059_3_predictions.csv out/1595515609/results/c059_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 2, 4, 3, 7, 0, 8, 6]), o: IntList([5, 2, 4, 6, 7, 0, 8, 3]) }
#   Datum { i: IntList([1, 0, 7, 8, 6, 4, 2, 6, 1, 9]), o: IntList([1, 0, 7, 6, 6, 4, 2, 8, 1, 9]) }
#   Datum { i: IntList([3, 1, 1, 5, 1, 0, 7, 0, 7]), o: IntList([3, 1, 1, 0, 1, 0, 7, 5, 7]) }
#   Datum { i: IntList([0, 5, 3, 8, 1, 9, 4, 6, 2]), o: IntList([0, 5, 3, 6, 1, 9, 4, 8, 2]) }
#   Datum { i: IntList([8, 3, 9, 2, 7, 4, 6, 3]), o: IntList([8, 3, 9, 3, 7, 4, 6, 2]) }
#   Datum { i: IntList([8, 9, 9, 6, 5, 2, 4, 0, 0]), o: IntList([8, 9, 9, 0, 5, 2, 4, 6, 0]) }
#   Datum { i: IntList([7, 3, 4, 0, 1, 6, 8, 1, 5]), o: IntList([7, 3, 4, 1, 1, 6, 8, 0, 5]) }
#   Datum { i: IntList([5, 2, 8, 8, 8, 8, 2, 5]), o: IntList([5, 2, 8, 5, 8, 8, 2, 8]) }
#   Datum { i: IntList([6, 7, 2, 6, 5, 4, 4, 0]), o: IntList([6, 7, 2, 0, 5, 4, 4, 6]) }
#   Datum { i: IntList([6, 1, 8, 5, 2, 3, 7, 9, 0, 4]), o: IntList([6, 1, 8, 9, 2, 3, 7, 5, 0, 4]) }
#   Datum { i: IntList([9, 5, 5, 9, 3, 7, 6, 3, 9, 3]), o: IntList([9, 5, 5, 3, 3, 7, 6, 9, 9, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c059,0,3,1,1155738,1155740,1070727,600.000981754,601.843874811
c059,0,3,2,197114,199074,192944,1200.003964005,1202.430034604
c059,0,3,3,99878,100880,97872,1800.006559804,1802.859077887
c059,0,3,4,76077,76833,74423,2400.009492818,2403.285508088
c059,0,3,5,57832,58685,57259,3000.016376789,3003.773301196
c059,0,3,6,48818,49594,48182,3600.021466503,3604.284076257
c059,0,3,7,37042,37719,36742,4200.027668904,4205.072758012
c059,0,3,8,31782,32571,31701,4800.038933984,4805.926174549
c059,0,3,9,28677,29273,28474,5400.045789522001,5406.591030297
c059,0,3,10,25610,26294,25499,6000.051982139001,6007.347630236
c059,0,3,11,20979,21760,21136,6600.053047581001,6608.268861292
# search time: 6600.053s
# total time: 6608.465s
c059,1,3,1,1163159,1163161,1086556,600.00012144,600.314503963
c059,1,3,2,195922,198177,191784,1200.000769619,1200.569150569
c059,1,3,3,98179,99119,96129,1800.00124034,1800.759090678
c059,1,3,4,76280,76950,74837,2400.006123274,2401.007303878
c059,1,3,5,55358,56211,53724,3000.010046272,3001.255979821
c059,1,3,6,48092,48885,47386,3600.0233573590003,3601.547464733
c059,1,3,7,36905,37436,36502,4200.026293283,4201.953988382
c059,1,3,8,31294,31976,31123,4800.038174479,4802.375114567
c059,1,3,9,27812,28460,27742,5400.052270078,5402.759570476
c059,1,3,10,24923,25588,24965,6000.05257925,6003.121506576
c059,1,3,11,20472,21125,20585,6600.054750701001,6603.557997444
# search time: 6600.055s
# total time: 13212.305s
c059,2,3,1,1193401,1193403,1090785,600.000302245,600.22557949
c059,2,3,2,194860,196131,189858,1200.002234893,1200.39884627
c059,2,3,3,96523,97506,94415,1800.008138838,1800.523996057
c059,2,3,4,75369,76215,73863,2400.0108961839996,2400.676491363
c059,2,3,5,55963,56849,54779,3000.028016376,3000.837869246
c059,2,3,6,47076,47829,45924,3600.036388759,3600.988697999
c059,2,3,7,36928,37693,36710,4200.04313702,4201.175361562
c059,2,3,8,31645,32333,31408,4800.048531401,4801.498249717
c059,2,3,9,28046,28763,27998,5400.053416328,5401.719071078
c059,2,3,10,25264,25947,25180,6000.067303866,6002.018666635
c059,2,3,11,20649,21337,20741,6600.1027866449995,6602.295763299
# search time: 6600.103s
# total time: 19814.882s
c059,3,3,1,1150473,1150475,1074098,600.000179352,600.205107511
c059,3,3,2,199951,201784,195969,1200.003961054,1200.327068163
c059,3,3,3,97219,98159,95279,1800.007572234,1800.438300774
c059,3,3,4,74558,75338,72567,2400.014255228,2400.537484936
c059,3,3,5,56606,57495,55627,3000.019542391,3000.675349238
c059,3,3,6,47800,48543,46974,3600.034418579,3600.856203173
c059,3,3,7,36351,37222,36165,4200.036917166,4200.984167282
c059,3,3,8,31628,32318,31404,4800.04304482,4801.166659805
c059,3,3,9,28272,28959,28168,5400.066248997,5401.393301339
c059,3,3,10,25109,25864,25127,6000.074368362,6001.709585548
c059,3,3,11,20147,20887,20317,6600.087994160001,6601.909760753
# search time: 6600.088s
# total time: 26417.133s
c059,4,3,1,1156221,1156223,1064299,600.000084677,600.187015681
c059,4,3,2,198771,200942,195162,1200.002496512,1200.300710831
c059,4,3,3,97354,98208,95135,1800.0056847320002,1800.392702445
c059,4,3,4,75324,75748,73149,2400.012906991,2400.499090021
c059,4,3,5,56308,57123,55547,3000.0203010349996,3000.621408474
c059,4,3,6,47697,48433,47030,3600.0439771459996,3600.730884244
c059,4,3,7,36434,37268,36332,4200.058681553999,4200.935489015
c059,4,3,8,31361,32136,31350,4800.060214799999,4801.16098531
c059,4,3,9,28209,28996,28250,5400.067271255999,5401.33474807
c059,4,3,10,25302,25949,25237,6000.089772690999,6001.511299747
c059,4,3,11,20664,21352,20748,6600.108234069999,6601.701152839
# search time: 6600.108s
# total time: 33019.024s
