    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.37s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c041_4.json out/1595515609/results/c041_4_best.csv out/1595515609/results/c041_4_predictions.csv out/1595515609/results/c041_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 1]), o: IntList([9]) }
#   Datum { i: IntList([3, 6, 8, 8, 3, 6]), o: IntList([9]) }
#   Datum { i: IntList([2, 2]), o: IntList([9]) }
#   Datum { i: IntList([4, 0, 4, 4, 0, 0]), o: IntList([9]) }
#   Datum { i: IntList([5, 0, 7]), o: IntList([9]) }
#   Datum { i: IntList([4, 8, 7, 2, 6, 6, 5]), o: IntList([9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([8, 7, 5, 5, 1, 6]), o: IntList([9]) }
#   Datum { i: IntList([0]), o: IntList([9]) }
#   Datum { i: IntList([7, 3, 6, 4]), o: IntList([9]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c041,0,4,1,1030341,1030343,944609,600.000393176,602.470213456
c041,0,4,2,460527,461131,448029,1200.0021629100002,1203.110349207
c041,0,4,3,307296,308491,300338,1800.0025519330002,1803.554435697
c041,0,4,4,258819,259966,252143,2400.0028705580003,2404.01300708
c041,0,4,5,200330,201409,195113,3000.0036353240002,3004.382800262
c041,0,4,6,170989,172039,166396,3600.006917488,3604.717588594
c041,0,4,7,106393,107293,104450,4200.008775717,4205.126398178
c041,0,4,8,125320,126097,123729,4800.011634815,4805.406744382
c041,0,4,9,99457,100308,98388,5400.018822107,5405.752657784
c041,0,4,10,95879,96687,94915,6000.019041743,6006.039283396
c041,0,4,11,72906,73715,71400,6600.026450126001,6606.228895891
# search time: 6600.026s
# total time: 6606.477s
c041,1,4,1,1040991,1040993,963843,600.800730263,601.067476714
c041,1,4,2,486734,488799,473871,1200.800920005,1201.30105925
c041,1,4,3,314219,315309,306885,1800.802193938,1801.485598297
c041,1,4,4,269888,271013,262868,2400.803473588,2401.645785189
c041,1,4,5,196691,197840,191725,3000.803787315,3001.831623084
c041,1,4,6,165997,166977,161627,3600.8050928830003,3601.998768063
c041,1,4,7,106896,107889,104810,4200.806386592,4202.181898414
c041,1,4,8,125432,126152,123657,4800.824580906,4802.362504834
c041,1,4,9,97974,98828,96823,5400.831825696,5402.506746198
c041,1,4,10,95881,96640,94812,6000.836235507,6002.664559059
c041,1,4,11,71935,72852,70461,6600.874796336,6602.809410008
# search time: 6600.875s
# total time: 13209.624s
c041,2,4,1,1084474,1084476,997812,600.000176654,600.211081879
c041,2,4,2,483769,485908,471490,1200.008012067,1200.376808498
c041,2,4,3,311047,312161,304015,1800.008151327,1800.509488227
c041,2,4,4,267875,269168,261209,2400.021635287,2400.6395929
c041,2,4,5,201945,203065,196936,3000.0229139700004,3000.763831751
c041,2,4,6,179398,180636,174646,3600.0232380500006,3600.890156478
c041,2,4,7,117653,118747,115477,4200.025015938,4201.018364762
c041,2,4,8,139094,139844,137400,4800.025357376,4801.118816248
c041,2,4,9,108196,109107,106978,5400.030514751,5401.24671631
c041,2,4,10,104882,105742,103870,6000.033584989,6001.354351005
c041,2,4,11,79088,79930,77358,6600.037854074,6601.418518061
# search time: 6600.038s
# total time: 19811.370s
c041,3,4,1,1132223,1132225,1048577,600.008239162,600.2061865
c041,3,4,2,520317,522412,507420,1200.013633123,1200.359405142
c041,3,4,3,342674,343833,334494,1800.016603259,1800.483427014
c041,3,4,4,294807,295862,286823,2400.017428086,2400.592689753
c041,3,4,5,226304,227388,220365,3000.0201390680004,3000.707792873
c041,3,4,6,188319,189396,183460,3600.020827094,3600.81372347
c041,3,4,7,122333,123361,120106,4200.026318462,4201.029309398
c041,3,4,8,139622,140241,137675,4800.026500014999,4801.123869283
c041,3,4,9,109067,109890,107726,5400.031736288,5401.221574201
c041,3,4,10,106494,107238,105178,6000.039240274,6001.321493195
c041,3,4,11,81240,82065,79483,6600.039268889,6601.39103162
# search time: 6600.039s
# total time: 26413.137s
c041,4,4,1,1116502,1116504,1046231,600.000245464,600.204928535
c041,4,4,2,522561,524196,509117,1200.008633615,1200.331228667
c041,4,4,3,349760,350970,341902,1800.009128589,1800.425064137
c041,4,4,4,298835,300015,290988,2400.009994779,2400.509438459
c041,4,4,5,224351,225392,218429,3000.011275075,3000.594315473
c041,4,4,6,189962,191097,185088,3600.014015805,3600.675894185
c041,4,4,7,126088,127138,123659,4200.015890609,4200.750807874
c041,4,4,8,138733,139326,136600,4800.017074377,4800.818858574
c041,4,4,9,108652,109564,107334,5400.017638434,5400.889688982
c041,4,4,10,105731,106476,104421,6000.0223723340005,6000.960349124
c041,4,4,11,79502,80204,77608,6600.062614559,6601.051062831
# search time: 6600.063s
# total time: 33014.540s
