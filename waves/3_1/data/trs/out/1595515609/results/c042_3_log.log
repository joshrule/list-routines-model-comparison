    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.35s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c042_3.json out/1595515609/results/c042_3_best.csv out/1595515609/results/c042_3_predictions.csv out/1595515609/results/c042_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 7, 4, 1, 2]), o: IntList([5, 2]) }
#   Datum { i: IntList([]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 9, 9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([2, 6, 0, 0, 8, 9, 6, 6, 9, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([3, 7, 7, 4, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([4, 4]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 3, 8, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([4]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 1, 0, 7, 7]), o: IntList([5, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c042,0,3,1,911318,911320,847970,600.003181,602.401369467
c042,0,3,2,296762,297916,288383,1200.003624072,1203.319041153
c042,0,3,3,264185,265162,259905,1800.0039691700001,1803.755754906
c042,0,3,4,194854,196047,191807,2400.007260747,2404.144557724
c042,0,3,5,144463,145546,142647,3000.007448961,3004.596411042
c042,0,3,6,107784,108672,106647,3600.0094870420003,3605.085850932
c042,0,3,7,103613,104554,102956,4200.010703781,4205.418877857
c042,0,3,8,89343,90189,88517,4800.0124381000005,4805.723186483
c042,0,3,9,83398,84173,82814,5400.02318319,5406.04431976
c042,0,3,10,68855,69658,68511,6000.023544368,6006.347516401
c042,0,3,11,68626,69348,68278,6600.026807528,6606.602731316
# search time: 6600.027s
# total time: 6606.821s
c042,1,3,1,882202,882204,816440,600.00042389,600.271897932
c042,1,3,2,254625,255771,247371,1200.000988289,1200.533039568
c042,1,3,3,256999,257913,252624,1800.001176245,1800.701422165
c042,1,3,4,192034,193159,189020,2400.002915362,2400.875255278
c042,1,3,5,141773,142801,139790,3000.007058758,3001.072294577
c042,1,3,6,111638,112587,110609,3600.010177299,3601.343115636
c042,1,3,7,103436,104271,102264,4200.015630722,4201.546386862
c042,1,3,8,92344,93282,91781,4800.019806781001,4801.722756902
c042,1,3,9,76866,77665,76126,5400.032543373,5401.908837708
c042,1,3,10,71275,72152,70832,6000.037378791,6002.081572289
c042,1,3,11,70420,71261,70076,6600.042289441,6602.222693585
# search time: 6600.042s
# total time: 13209.381s
c042,2,3,1,940546,940548,863584,600.000330944,600.220864546
c042,2,3,2,293923,295874,286256,1200.001855492,1200.408416194
c042,2,3,3,263969,264896,259439,1800.002745083,1800.524530037
c042,2,3,4,197581,198673,194381,2400.003349849,2400.650441666
c042,2,3,5,147682,148746,145667,3000.0087255730004,3000.850879264
c042,2,3,6,117667,118558,115871,3600.0087457090003,3601.021106028
c042,2,3,7,105780,106639,104712,4200.013231708001,4201.132865546
c042,2,3,8,91585,92416,90749,4800.0193161120005,4801.246878212
c042,2,3,9,86869,87643,86100,5400.019521868,5401.34046295
c042,2,3,10,73657,74467,73119,6000.0271810310005,6001.475166135
c042,2,3,11,71507,72289,71177,6600.028681071,6601.564967911
# search time: 6600.029s
# total time: 19811.253s
c042,3,3,1,954697,954699,877199,600.000130532,600.227440034
c042,3,3,2,296851,299016,289424,1200.0031233139998,1200.380700692
c042,3,3,3,270735,271653,265907,1800.0034313479998,1800.475569629
c042,3,3,4,200519,201653,197204,2400.005394074,2400.56591155
c042,3,3,5,151633,152657,149796,3000.009487283,3000.672619415
c042,3,3,6,123958,124886,122470,3600.010953363,3600.791675484
c042,3,3,7,119933,120799,118725,4200.01617546,4200.887070996
c042,3,3,8,105609,106401,104624,4800.02162329,4800.974412787
c042,3,3,9,99564,100338,98605,5400.024064023,5401.056336227
c042,3,3,10,84576,85335,83766,6000.027057366,6001.13201604
c042,3,3,11,80766,81583,80295,6600.030392917,6601.212646683
# search time: 6600.030s
# total time: 26412.818s
c042,4,3,1,1089179,1089181,997030,600.000040188,600.246080161
c042,4,3,2,331114,332894,322224,1200.0007657249998,1200.368184751
c042,4,3,3,295165,296251,290252,1800.0008505259998,1800.450127201
c042,4,3,4,222290,223319,218821,2400.0010975389996,2400.531870031
c042,4,3,5,164748,165788,162559,3000.0013107879995,3000.611806221
c042,4,3,6,132710,133703,131303,3600.0032091949997,3600.718732563
c042,4,3,7,118382,119308,117288,4200.006793519,4200.784234531
c042,4,3,8,102338,103148,101390,4800.019915863,4800.863704203
c042,4,3,9,96386,97214,95624,5400.0249906,5400.931866002
c042,4,3,10,82653,83518,81974,6000.026658901,6000.996238319
c042,4,3,11,78773,79540,78142,6600.030261643999,6601.064443103
# search time: 6600.030s
# total time: 33014.260s
