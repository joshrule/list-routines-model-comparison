    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.24s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c042_4.json out/1595515609/results/c042_4_best.csv out/1595515609/results/c042_4_predictions.csv out/1595515609/results/c042_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 0, 7, 7]), o: IntList([5, 2]) }
#   Datum { i: IntList([3, 7, 7, 4, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([4]), o: IntList([5, 2]) }
#   Datum { i: IntList([2, 6, 0, 0, 8, 9, 6, 6, 9, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 3, 8, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 9, 9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([4, 4]), o: IntList([5, 2]) }
#   Datum { i: IntList([]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 4, 1, 2]), o: IntList([5, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c042,0,4,1,861044,861046,806795,600.007654345,602.305006449
c042,0,4,2,322541,324601,315716,1200.0084129890001,1203.111904705
c042,0,4,3,215490,216537,211793,1800.0093361430002,1803.768043152
c042,0,4,4,179123,180152,176133,2400.0116710740003,2404.362825075
c042,0,4,5,169417,170311,165446,3000.0119256820003,3004.794778331
c042,0,4,6,129026,130064,126276,3600.0229582710003,3605.29866114
c042,0,4,7,110960,111850,108456,4200.030446899001,4205.693922057
c042,0,4,8,97396,98279,95598,4800.034381363001,4806.040585126
c042,0,4,9,84433,85255,82916,5400.039340516,5406.42042705
c042,0,4,10,65306,66159,64637,6000.047807104001,6006.743947919
c042,0,4,11,72514,73249,71999,6600.047854687001,6607.003275425
# search time: 6600.048s
# total time: 6607.216s
c042,1,4,1,1006528,1006530,920640,600.001805273,600.279792582
c042,1,4,2,338636,339255,329654,1200.0026072679998,1200.551832823
c042,1,4,3,220390,221493,216536,1800.0068524119997,1800.78266813
c042,1,4,4,186938,188051,183809,2400.0094284019997,2401.03307528
c042,1,4,5,166971,167909,163117,3000.0118845479997,3001.230817868
c042,1,4,6,124965,125869,122176,3600.0140317489995,3601.468361627
c042,1,4,7,111751,112675,109527,4200.014510065999,4201.668334837
c042,1,4,8,97570,98391,95859,4800.017378774999,4801.854610371
c042,1,4,9,85130,85997,83457,5400.022780292999,5402.048589282
c042,1,4,10,69875,70744,69364,6000.03047894,6002.186908299
c042,1,4,11,72633,73385,72215,6600.032482371,6602.308580419
# search time: 6600.032s
# total time: 13209.882s
c042,2,4,1,966572,966574,904007,600.000300553,600.208654224
c042,2,4,2,327664,329692,320504,1200.002703824,1200.386925446
c042,2,4,3,219938,220963,215981,1800.0062286020002,1800.550651575
c042,2,4,4,186610,187644,183476,2400.0073464280003,2400.706427131
c042,2,4,5,175105,176147,171719,3000.008099337,3000.846597015
c042,2,4,6,135688,136172,132148,3600.009507143,3600.977304698
c042,2,4,7,121499,122356,118338,4200.012930592,4201.099012369
c042,2,4,8,107089,108054,104650,4800.014335546,4801.219937584
c042,2,4,9,94592,95671,92902,5400.022037135001,5401.348942283
c042,2,4,10,72385,73149,71485,6000.033324738,6001.476592904
c042,2,4,11,81705,82418,81006,6600.0380515120005,6601.583481471
# search time: 6600.038s
# total time: 19811.813s
c042,3,4,1,1054482,1054484,984804,600.000180464,600.172235584
c042,3,4,2,375128,376503,365700,1200.0016138649999,1200.303053116
c042,3,4,3,243301,244425,239018,1800.0043490549997,1800.434275466
c042,3,4,4,202636,203682,198868,2400.0051914369997,2400.559611225
c042,3,4,5,189024,189976,184225,3000.0115344009996,3000.663177099
c042,3,4,6,143235,144213,140418,3600.0127070769995,3600.794378487
c042,3,4,7,124845,125659,121977,4200.013527425,4200.898241403
c042,3,4,8,108722,109492,106269,4800.020719442,4801.00225859
c042,3,4,9,95023,95815,93180,5400.022419219,5401.080459375
c042,3,4,10,76670,77397,75738,6000.0348705609995,6001.17262197
c042,3,4,11,81537,82226,80919,6600.0375709459995,6601.26486518
# search time: 6600.038s
# total time: 26413.440s
c042,4,4,1,1078156,1078158,985915,600.000269403,600.15843969
c042,4,4,2,373123,375489,364828,1200.0003780329998,1200.26838456
c042,4,4,3,246673,247781,241719,1800.005374162,1800.374455522
c042,4,4,4,206161,207130,202126,2400.006585271,2400.469401886
c042,4,4,5,190063,191235,185179,3000.009355357,3000.558632465
c042,4,4,6,145883,146913,143150,3600.010799224,3600.64766452
c042,4,4,7,124672,125506,121833,4200.011921507,4200.741506581
c042,4,4,8,107554,108646,105185,4800.014672237,4800.826757012
c042,4,4,9,93959,94823,92293,5400.015419703,5400.893318247
c042,4,4,10,77535,78407,76724,6000.029770343,6000.975963875
c042,4,4,11,81972,82679,81165,6600.035003086,6601.034398768
# search time: 6600.035s
# total time: 33014.823s
