    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.26s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c042_5.json out/1595515609/results/c042_5_best.csv out/1595515609/results/c042_5_predictions.csv out/1595515609/results/c042_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([]), o: IntList([5, 2]) }
#   Datum { i: IntList([4]), o: IntList([5, 2]) }
#   Datum { i: IntList([4, 4]), o: IntList([5, 2]) }
#   Datum { i: IntList([2, 6, 0, 0, 8, 9, 6, 6, 9, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 9, 9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 1, 0, 7, 7]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 4, 1, 2]), o: IntList([5, 2]) }
#   Datum { i: IntList([3, 7, 7, 4, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 3, 8, 0]), o: IntList([5, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c042,0,5,1,995614,995616,931054,600.000069666,602.284637745
c042,0,5,2,344640,346571,335557,1200.000136923,1203.015271396
c042,0,5,3,282000,283018,276665,1800.0011523019998,1803.366354053
c042,0,5,4,231512,232622,227233,2400.0023701659998,2403.653110934
c042,0,5,5,182205,183255,178775,3000.005186395,3003.853761207
c042,0,5,6,142334,143296,140637,3600.0053013179995,3604.095399127
c042,0,5,7,122845,123678,121511,4200.011183623999,4204.342858284
c042,0,5,8,101778,102616,100755,4800.012205040999,4804.580207662
c042,0,5,9,93194,93989,92273,5400.016153094999,5404.79295912
c042,0,5,10,80231,81017,79670,6000.018042397999,6005.031991154
c042,0,5,11,69346,70081,68988,6600.020662178999,6605.295955552
# search time: 6600.021s
# total time: 6605.564s
c042,1,5,1,1027108,1027110,939575,600.000499752,600.271667001
c042,1,5,2,342510,344841,333794,1200.001082486,1200.530041111
c042,1,5,3,278387,279324,273213,1800.006510421,1800.680438235
c042,1,5,4,227720,228827,223612,2400.006577405,2400.81503889
c042,1,5,5,184507,185554,180818,3000.0097507339997,3000.914825502
c042,1,5,6,142994,143998,141309,3600.0119037899995,3601.032717118
c042,1,5,7,119177,120125,117819,4200.015458553999,4201.141151184
c042,1,5,8,99264,100266,98590,4800.019989566,4801.256151189
c042,1,5,9,91671,92557,91002,5400.026178057,5401.363959009
c042,1,5,10,79687,80400,79045,6000.0309370039995,6001.480702784
c042,1,5,11,69006,69888,68700,6600.040467618999,6601.608967853
# search time: 6600.040s
# total time: 13207.526s
c042,2,5,1,1036558,1036560,951384,600.000389346,600.197861662
c042,2,5,2,337982,339955,329000,1200.0022339910001,1200.374926608
c042,2,5,3,281475,282441,276317,1800.0023693970002,1800.476688545
c042,2,5,4,234165,235328,229998,2400.0024586030004,2400.575382689
c042,2,5,5,180667,181649,176492,3000.0051914500004,3000.656286262
c042,2,5,6,147281,148349,145676,3600.0073993580004,3600.737078641
c042,2,5,7,137584,138507,135848,4200.011159084001,4200.81683986
c042,2,5,8,116756,117552,115594,4800.011582339001,4800.905151575
c042,2,5,9,105700,106518,104599,5400.013659274001,5400.987521767
c042,2,5,10,91939,92725,91159,6000.020856203001,6001.087067873
c042,2,5,11,79792,80642,79337,6600.0262032360015,6601.16987565
# search time: 6600.026s
# total time: 19809.044s
c042,3,5,1,1157784,1157786,1081709,600.000238585,600.206818975
c042,3,5,2,389259,391542,379114,1200.000906314,1200.345605086
c042,3,5,3,317716,318671,311655,1800.0022944840002,1800.440405444
c042,3,5,4,262256,263392,257521,2400.002911132,2400.522741244
c042,3,5,5,202769,203834,198446,3000.003562346,3000.591734252
c042,3,5,6,161365,162386,159691,3600.009199395,3600.670508896
c042,3,5,7,138109,139039,136696,4200.010915549,4200.744226126
c042,3,5,8,113285,114230,112200,4800.011993502,4800.815400764
c042,3,5,9,103448,104247,102428,5400.012760526,5400.894265069
c042,3,5,10,91136,91918,90400,6000.015828187001,6000.979676179
c042,3,5,11,79461,80182,78941,6600.016021921001,6601.08082481
# search time: 6600.016s
# total time: 26410.487s
c042,4,5,1,1105430,1105432,1030644,600.007234345,600.164271232
c042,4,5,2,386410,388566,376212,1200.019384169,1200.337494698
c042,4,5,3,312086,313060,305311,1800.0201733919998,1800.420152941
c042,4,5,4,263069,264316,258148,2400.0218683919998,2400.491191952
c042,4,5,5,206344,207396,202068,3000.024179913,3000.54957012
c042,4,5,6,161416,162420,159549,3600.027372342,3600.617847778
c042,4,5,7,138419,139318,137021,4200.0319980330005,4200.678842949
c042,4,5,8,116174,117015,114988,4800.049084329001,4800.75947292
c042,4,5,9,105957,106849,105035,5400.051659664001,5400.815488194
c042,4,5,10,91972,92769,91197,6000.056483673001,6000.873121117
c042,4,5,11,81436,82190,80882,6600.060278469001,6600.918107524
# search time: 6600.060s
# total time: 33011.771s
