    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c059_1.json out/1595515609/results/c059_1_best.csv out/1595515609/results/c059_1_predictions.csv out/1595515609/results/c059_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 3, 9, 2, 7, 4, 6, 3]), o: IntList([8, 3, 9, 3, 7, 4, 6, 2]) }
#   Datum { i: IntList([5, 2, 4, 3, 7, 0, 8, 6]), o: IntList([5, 2, 4, 6, 7, 0, 8, 3]) }
#   Datum { i: IntList([8, 9, 9, 6, 5, 2, 4, 0, 0]), o: IntList([8, 9, 9, 0, 5, 2, 4, 6, 0]) }
#   Datum { i: IntList([7, 3, 4, 0, 1, 6, 8, 1, 5]), o: IntList([7, 3, 4, 1, 1, 6, 8, 0, 5]) }
#   Datum { i: IntList([6, 1, 8, 5, 2, 3, 7, 9, 0, 4]), o: IntList([6, 1, 8, 9, 2, 3, 7, 5, 0, 4]) }
#   Datum { i: IntList([1, 0, 7, 8, 6, 4, 2, 6, 1, 9]), o: IntList([1, 0, 7, 6, 6, 4, 2, 8, 1, 9]) }
#   Datum { i: IntList([6, 7, 2, 6, 5, 4, 4, 0]), o: IntList([6, 7, 2, 0, 5, 4, 4, 6]) }
#   Datum { i: IntList([3, 1, 1, 5, 1, 0, 7, 0, 7]), o: IntList([3, 1, 1, 0, 1, 0, 7, 5, 7]) }
#   Datum { i: IntList([9, 5, 5, 9, 3, 7, 6, 3, 9, 3]), o: IntList([9, 5, 5, 3, 3, 7, 6, 9, 9, 3]) }
#   Datum { i: IntList([5, 2, 8, 8, 8, 8, 2, 5]), o: IntList([5, 2, 8, 5, 8, 8, 2, 8]) }
#   Datum { i: IntList([0, 5, 3, 8, 1, 9, 4, 6, 2]), o: IntList([0, 5, 3, 6, 1, 9, 4, 8, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c059,0,1,1,1195271,1195273,1099958,600.002318425,601.990470089
c059,0,1,2,203428,205755,199607,1200.004167585,1202.510322391
c059,0,1,3,106264,107321,105683,1800.0149180429999,1802.88897632
c059,0,1,4,67943,68735,66948,2400.027836541,2403.522772717
c059,0,1,5,54481,55376,54029,3000.0326811289997,3004.188448468
c059,0,1,6,43261,44049,43031,3600.037587551,3604.936620889
c059,0,1,7,36191,36904,35990,4200.050063378,4205.665334387
c059,0,1,8,32195,32971,32096,4800.063992868,4806.534716702
c059,0,1,9,27853,28537,27727,5400.069273681001,5407.183457595
c059,0,1,10,24145,24873,24171,6000.0801890170005,6008.104951332
c059,0,1,11,21768,22444,21806,6600.095550632001,6608.736239012
# search time: 6600.096s
# total time: 6608.952s
c059,1,1,1,1176921,1176923,1081619,600.000176378,600.291549058
c059,1,1,2,198997,201200,195058,1200.0042414680001,1200.553139963
c059,1,1,3,105064,106102,104458,1800.006622539,1800.752618636
c059,1,1,4,67381,68157,66349,2400.014965919,2401.059864907
c059,1,1,5,53906,54747,53346,3000.0224163800003,3001.330931191
c059,1,1,6,42982,43762,42811,3600.027683735,3601.642825479
c059,1,1,7,35571,36332,35376,4200.0505099520005,4202.003332402
c059,1,1,8,32002,32679,31783,4800.051347276,4802.382227298
c059,1,1,9,27534,28221,27449,5400.065440843,5402.845162607
c059,1,1,10,23884,24583,23848,6000.080528014,6003.202795643
c059,1,1,11,21418,22196,21558,6600.102438108001,6603.60480986
# search time: 6600.102s
# total time: 13212.908s
c059,2,1,1,1164613,1164615,1078229,600.000025506,600.229425506
c059,2,1,2,199597,201606,195431,1200.005642658,1200.404996229
c059,2,1,3,103727,104712,103207,1800.008782448,1800.545736256
c059,2,1,4,65864,66638,64855,2400.0138908179997,2400.748052156
c059,2,1,5,53209,53995,52734,3000.014338785,3000.981474682
c059,2,1,6,42381,43156,42188,3600.02695047,3601.197311531
c059,2,1,7,35736,36535,35565,4200.039287969,4201.492751539
c059,2,1,8,31263,31900,31199,4800.050197712,4801.796018064
c059,2,1,9,27178,27886,27169,5400.070821656001,5402.090175176
c059,2,1,10,23813,24456,23756,6000.080909598,6002.358795568
c059,2,1,11,20897,21609,21096,6600.0837003510005,6602.661237493
# search time: 6600.084s
# total time: 19815.757s
c059,3,1,1,1177827,1177829,1080988,600.000011285,600.195421109
c059,3,1,2,199044,201034,194899,1200.001759087,1200.325679902
c059,3,1,3,102733,103666,102158,1800.0063945719999,1800.441027871
c059,3,1,4,66729,67431,65731,2400.008241431,2400.593078549
c059,3,1,5,53941,54670,53229,3000.0166788,3000.781655864
c059,3,1,6,42926,43799,42568,3600.026142881,3600.956952111
c059,3,1,7,35632,36425,35400,4200.028378573,4201.114371722
c059,3,1,8,31724,32438,31516,4800.046269488,4801.384868141
c059,3,1,9,27359,28117,27279,5400.072838276,5401.761297956
c059,3,1,10,23672,24504,23800,6000.081682149,6002.062774488
c059,3,1,11,21650,22392,21756,6600.100089883999,6602.294893075
# search time: 6600.100s
# total time: 26418.330s
c059,4,1,1,1133971,1133973,1057564,600.000961228,600.190621181
c059,4,1,2,201539,203396,197551,1200.002519356,1200.299404473
c059,4,1,3,104875,105837,104201,1800.005716749,1800.405413955
c059,4,1,4,66640,67393,65530,2400.006899003,2400.51716198
c059,4,1,5,53426,54283,52910,3000.009242087,3000.664913378
c059,4,1,6,43032,43802,42656,3600.014560561,3600.83231702
c059,4,1,7,35659,36460,35371,4200.020841747,4201.012396002
c059,4,1,8,31563,32311,31471,4800.04279724,4801.164912879
c059,4,1,9,27229,27997,27296,5400.054323563,5401.367351613
c059,4,1,10,23924,24618,23914,6000.080374348,6001.586443941
c059,4,1,11,21534,22214,21596,6600.081316132,6601.79619866
# search time: 6600.081s
# total time: 33020.401s
