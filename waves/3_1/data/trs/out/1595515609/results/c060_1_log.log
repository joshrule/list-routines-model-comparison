    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_1.json out/1595515609/results/c060_1_best.csv out/1595515609/results/c060_1_predictions.csv out/1595515609/results/c060_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,1,1,1138078,1138080,1049229,600.000113265,601.837221332
c060,0,1,2,229514,231733,224247,1200.0024308759998,1202.483449098
c060,0,1,3,117324,118369,114900,1800.0035110229999,1802.985274954
c060,0,1,4,72360,73205,71357,2400.004856347,2403.741592683
c060,0,1,5,57355,58145,56781,3000.018936343,3004.660087638
c060,0,1,6,46738,47515,46177,3600.040114162,3605.59848703
c060,0,1,7,39581,40348,39173,4200.0434875480005,4206.659261502
c060,0,1,8,33680,34408,33389,4800.058054104001,4807.677291062
c060,0,1,9,28890,29695,28759,5400.061450511001,5408.733960349
c060,0,1,10,25131,25880,25058,6000.086126556001,6009.863683176
c060,0,1,11,22478,23123,22328,6600.155887803001,6611.158913052
# search time: 6600.156s
# total time: 6611.358s
c060,1,1,1,1146564,1146566,1055769,600.000245906,600.286040743
c060,1,1,2,230518,232621,225093,1200.000916161,1200.557136218
c060,1,1,3,118959,119890,116665,1800.002911954,1800.753597777
c060,1,1,4,69947,70759,68687,2400.008657211,2401.103297105
c060,1,1,5,58176,58935,57303,3000.01929266,3001.591937237
c060,1,1,6,46875,47736,46444,3600.038841053,3601.992997964
c060,1,1,7,39793,40580,39363,4200.053827847,4202.419238634
c060,1,1,8,34309,34999,33931,4800.053971554,4802.969985382
c060,1,1,9,29235,29994,28961,5400.08291765,5403.521834298
c060,1,1,10,25307,26010,25085,6000.1075199160005,6004.36852858
c060,1,1,11,22096,22772,22048,6600.108914955001,6605.000539081
# search time: 6600.109s
# total time: 13216.636s
c060,2,1,1,1135730,1135732,1040833,600.000195166,600.206816412
c060,2,1,2,226013,228034,220584,1200.003091769,1200.394509365
c060,2,1,3,117022,117997,114373,1800.00746969,1800.537294868
c060,2,1,4,71445,72235,70203,2400.010585211,2400.761852467
c060,2,1,5,57114,58053,56584,3000.01086545,3000.995444122
c060,2,1,6,46576,47390,46073,3600.018170689,3601.241737773
c060,2,1,7,39631,40374,39101,4200.031357914,4201.645430583
c060,2,1,8,34319,35021,33938,4800.051210134,4802.03277219
c060,2,1,9,28979,29712,28636,5400.07305695,5402.3424709
c060,2,1,10,25196,25933,25044,6000.092197502,6002.804170715
c060,2,1,11,22360,23073,22242,6600.105671258,6603.135801861
# search time: 6600.106s
# total time: 19820.045s
c060,3,1,1,1135984,1135986,1043006,600.000182495,600.178684152
c060,3,1,2,226884,229094,221394,1200.00303111,1200.321452729
c060,3,1,3,114447,115351,111988,1800.005994482,1800.434799752
c060,3,1,4,72293,73066,71290,2400.00631594,2400.644242851
c060,3,1,5,58743,59573,58211,3000.020244358,3000.893190259
c060,3,1,6,47467,48275,46897,3600.037297811,3601.160897769
c060,3,1,7,40252,40983,39652,4200.049306852,4201.408167446
c060,3,1,8,34744,35538,34420,4800.052012644,4801.748475049
c060,3,1,9,29424,30117,29120,5400.065949616,5401.955064148
c060,3,1,10,25247,25927,25083,6000.069268456,6002.294153931
c060,3,1,11,22668,23393,22527,6600.075976336,6602.580451126
# search time: 6600.076s
# total time: 26422.903s
c060,4,1,1,1172317,1172319,1071675,600.000250338,600.200883506
c060,4,1,2,225812,228298,220773,1200.000471656,1200.333502153
c060,4,1,3,114310,115362,111874,1800.000905107,1800.441512141
c060,4,1,4,71724,72486,70836,2400.007393584,2400.608480582
c060,4,1,5,57606,58381,57171,3000.014406079,3000.803362362
c060,4,1,6,46880,47675,46354,3600.019599294,3600.947789103
c060,4,1,7,38990,39697,38436,4200.032433812,4201.140938242
c060,4,1,8,34008,34689,33610,4800.038429565,4801.430353
c060,4,1,9,29295,30014,29016,5400.052711714,5401.615628062
c060,4,1,10,25652,26366,25475,6000.066986437,6001.862793815
c060,4,1,11,22356,23053,22270,6600.071207132,6602.010148386
# search time: 6600.071s
# total time: 33025.191s
