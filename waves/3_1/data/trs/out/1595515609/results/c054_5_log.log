    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c054_5.json out/1595515609/results/c054_5_best.csv out/1595515609/results/c054_5_predictions.csv out/1595515609/results/c054_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 3, 9, 9, 0, 0]), o: IntList([9, 9, 9, 9, 0, 0]) }
#   Datum { i: IntList([8, 7, 3, 5, 5, 5, 5, 6]), o: IntList([3, 3, 3, 5, 5, 5, 5, 6]) }
#   Datum { i: IntList([9, 5, 9, 2, 3, 8, 2, 3, 8]), o: IntList([9, 9, 9, 2, 3, 8, 2, 3, 8]) }
#   Datum { i: IntList([4, 1, 1, 1, 1, 4, 4, 1, 3, 3]), o: IntList([1, 1, 1, 1, 1, 4, 4, 1, 3, 3]) }
#   Datum { i: IntList([6, 5, 6, 5, 6]), o: IntList([6, 6, 6, 5, 6]) }
#   Datum { i: IntList([4, 8, 4, 4, 8, 8, 8, 4, 8, 8]), o: IntList([4, 4, 4, 4, 8, 8, 8, 4, 8, 8]) }
#   Datum { i: IntList([2, 2, 7, 2, 2, 5, 7, 7, 0]), o: IntList([7, 7, 7, 2, 2, 5, 7, 7, 0]) }
#   Datum { i: IntList([5, 5, 9, 5]), o: IntList([9, 9, 9, 5]) }
#   Datum { i: IntList([9, 3, 6, 7, 0]), o: IntList([6, 6, 6, 7, 0]) }
#   Datum { i: IntList([4, 0, 0]), o: IntList([0, 0, 0]) }
#   Datum { i: IntList([7, 5, 2, 5, 7, 7, 2]), o: IntList([2, 2, 2, 5, 7, 7, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c054,0,5,1,1120728,1120730,1038123,600.000345292,602.040351273
c054,0,5,2,223279,225498,219150,1200.0018247530002,1202.674160336
c054,0,5,3,114734,115657,112313,1800.0030436860002,1803.093725295
c054,0,5,4,66751,67501,64995,2400.01184762,2403.609065976
c054,0,5,5,52615,53352,51607,3000.021124782,3003.967684673
c054,0,5,6,46308,47027,45779,3600.0333952349997,3604.532638599
c054,0,5,7,37264,37966,36910,4200.039126416999,4205.171207299
c054,0,5,8,30123,30841,29764,4800.048914030999,4805.58139181
c054,0,5,9,33585,34229,33121,5400.062468284999,5406.155482459
c054,0,5,10,30951,31674,30726,6000.073236509999,6006.551790913
c054,0,5,11,30036,30837,29913,6600.085455119999,6607.109418979
# search time: 6600.085s
# total time: 6607.321s
c054,1,5,1,1180754,1180756,1104894,600.000061072,600.340866915
c054,1,5,2,258549,260209,253224,1200.000606762,1200.607418384
c054,1,5,3,128294,129309,125810,1800.0025632050001,1800.790738656
c054,1,5,4,74119,74874,72811,2400.00941172,2401.017132417
c054,1,5,5,58027,58883,57034,3000.013723393,3001.178083575
c054,1,5,6,50436,51207,49815,3600.013945618,3601.40383139
c054,1,5,7,40664,41382,40184,4200.0223473589995,4201.711478184
c054,1,5,8,34783,35516,34167,4800.031650368999,4801.911998762
c054,1,5,9,32521,33144,32046,5400.050871225999,5402.191654416
c054,1,5,10,31330,32038,30996,6000.068416508999,6002.388381878
c054,1,5,11,30025,30765,29812,6600.082931719999,6602.688222063
# search time: 6600.083s
# total time: 13210.311s
c054,2,5,1,1207281,1207283,1112956,600.000102431,600.249847691
c054,2,5,2,256243,258301,251013,1200.001292971,1200.425658025
c054,2,5,3,128349,129399,125693,1800.0103996070002,1800.56171743
c054,2,5,4,77041,77841,75345,2400.011923311,2400.731230561
c054,2,5,5,58908,59739,57863,3000.028680699,3000.86770791
c054,2,5,6,52808,53581,52065,3600.0374459229997,3601.053923665
c054,2,5,7,42930,43650,42283,4200.042580107,4201.207590565
c054,2,5,8,35830,36647,35344,4800.045914607,4801.356899484
c054,2,5,9,33664,34301,33315,5400.066673743,5401.524114548
c054,2,5,10,30491,31223,30254,6000.074213033,6001.663817448
c054,2,5,11,30066,30714,29773,6600.109375365,6601.867536568
# search time: 6600.109s
# total time: 19812.508s
c054,3,5,1,1211701,1211703,1129927,600.003622121,600.236066919
c054,3,5,2,256021,258086,250994,1200.004129932,1200.370779686
c054,3,5,3,129701,130670,126956,1800.0076237150001,1800.478267091
c054,3,5,4,78287,78971,76639,2400.008207553,2400.61345501
c054,3,5,5,60967,61810,59825,3000.009196574,3000.702895275
c054,3,5,6,52805,53566,52225,3600.0146602739997,3600.866031545
c054,3,5,7,42579,43272,41995,4200.0323263459995,4201.016243729
c054,3,5,8,34806,35566,34385,4800.044375691999,4801.160241714
c054,3,5,9,33915,34704,33682,5400.047967359,5401.31874755
c054,3,5,10,31487,32142,31131,6000.050843078,6001.49017991
c054,3,5,11,30328,30993,30046,6600.05839869,6601.66895048
# search time: 6600.058s
# total time: 26414.535s
c054,4,5,1,1186565,1186567,1107349,600.00075752,600.195036904
c054,4,5,2,256980,257792,250571,1200.003707019,1200.311992912
c054,4,5,3,130353,131424,128170,1800.004805381,1800.400544763
c054,4,5,4,78124,78887,76560,2400.014472322,2400.524762178
c054,4,5,5,60238,61087,59159,3000.019363386,3000.610433003
c054,4,5,6,53431,54101,52706,3600.022968111,3600.708457716
c054,4,5,7,42465,43229,42124,4200.027463095,4200.836797121
c054,4,5,8,34677,35405,34193,4800.032936766,4800.916692478
c054,4,5,9,33216,33992,33020,5400.049635619,5401.044126445
c054,4,5,10,30499,31193,30334,6000.067182954999,6001.156641509
c054,4,5,11,29819,30524,29666,6600.068362222999,6601.332108795
# search time: 6600.068s
# total time: 33016.089s
