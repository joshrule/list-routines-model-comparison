    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.30s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c041_5.json out/1595515609/results/c041_5_best.csv out/1595515609/results/c041_5_predictions.csv out/1595515609/results/c041_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 6, 8, 8, 3, 6]), o: IntList([9]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([9]) }
#   Datum { i: IntList([2, 2]), o: IntList([9]) }
#   Datum { i: IntList([4, 8, 7, 2, 6, 6, 5]), o: IntList([9]) }
#   Datum { i: IntList([0]), o: IntList([9]) }
#   Datum { i: IntList([7, 3, 6, 4]), o: IntList([9]) }
#   Datum { i: IntList([2, 1]), o: IntList([9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([4, 0, 4, 4, 0, 0]), o: IntList([9]) }
#   Datum { i: IntList([5, 0, 7]), o: IntList([9]) }
#   Datum { i: IntList([8, 7, 5, 5, 1, 6]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c041,0,5,1,943097,943099,878019,600.000061177,602.340403262
c041,0,5,2,363306,365445,354680,1200.000647797,1203.161227743
c041,0,5,3,276880,277990,272301,1800.003208181,1803.698903573
c041,0,5,4,252820,253903,246029,2400.004747135,2404.112960511
c041,0,5,5,190679,191819,186780,3000.004850859,3004.604657244
c041,0,5,6,179170,179974,174459,3600.0088503569996,3604.987737137
c041,0,5,7,152711,153728,148771,4200.013174549999,4205.314310157
c041,0,5,8,111641,112705,109667,4800.060948513999,4805.693275364
c041,0,5,9,122466,123201,120806,5400.062791490999,5405.970584561
c041,0,5,10,87907,88724,86007,6000.06582527,6006.174783714
c041,0,5,11,76394,77228,74675,6600.067745578,6606.364918138
# search time: 6600.068s
# total time: 6606.626s
c041,1,5,1,949813,949815,883545,600.016710849,600.264731565
c041,1,5,2,377141,378394,366414,1200.018108064,1200.520944509
c041,1,5,3,281909,282961,276925,1800.021740592,1800.738255553
c041,1,5,4,256489,257546,249249,2400.022078588,2400.904532248
c041,1,5,5,180338,181522,176728,3000.025975085,3001.154334783
c041,1,5,6,172807,173639,168334,3600.026900514,3601.31965946
c041,1,5,7,150674,151658,146822,4200.030452827,4201.495732982
c041,1,5,8,106522,107541,104777,4800.034377154,4801.662447418
c041,1,5,9,121294,121984,119617,5400.053052891,5401.819925009
c041,1,5,10,86211,87062,84427,6000.055662099,6001.931010547
c041,1,5,11,75963,76772,74307,6600.061862667,6602.024572562
# search time: 6600.062s
# total time: 13208.983s
c041,2,5,1,957600,957602,879349,600.004507403,600.178739193
c041,2,5,2,378390,379354,367837,1200.004558775,1200.350702653
c041,2,5,3,285844,286901,280988,1800.006478749,1800.491857398
c041,2,5,4,261044,262101,254061,2400.0084113450002,2400.607471545
c041,2,5,5,193659,194811,189814,3000.0098714580004,3000.773737054
c041,2,5,6,186942,187781,181995,3600.0123072750002,3600.898331581
c041,2,5,7,169106,170261,164978,4200.045099684,4201.047252434
c041,2,5,8,118512,119566,116317,4800.045442235,4801.177736286
c041,2,5,9,133765,134538,131752,5400.054161774,5401.287857726
c041,2,5,10,97517,98376,95404,6000.059953831,6001.365379199
c041,2,5,11,84523,85367,82619,6600.063840795,6601.444283907
# search time: 6600.064s
# total time: 19810.753s
c041,3,5,1,1030089,1030091,947819,600.001523124,600.170636498
c041,3,5,2,419852,421894,409207,1200.002097078,1200.312738228
c041,3,5,3,308155,309231,302574,1800.002645774,1800.425617271
c041,3,5,4,280490,281605,272464,2400.004283334,2400.529281362
c041,3,5,5,209152,210306,204700,3000.011454888,3000.666568196
c041,3,5,6,194904,195802,189477,3600.013924725,3600.771034901
c041,3,5,7,173056,174060,168645,4200.016332833,4200.861027366
c041,3,5,8,118997,120024,116871,4800.025567784,4800.964704942
c041,3,5,9,134823,135541,132846,5400.0276136679995,5401.042214617
c041,3,5,10,98411,99290,96240,6000.073309734999,6001.15300003
c041,3,5,11,86294,87210,84437,6600.078618506999,6601.198803501
# search time: 6600.079s
# total time: 26412.279s
c041,4,5,1,1078571,1078573,992857,600.000747493,600.161670939
c041,4,5,2,416914,419032,406473,1200.000894142,1200.282102981
c041,4,5,3,319602,320776,313940,1800.0035209970001,1800.389842782
c041,4,5,4,289414,290489,281639,2400.0047619800002,2400.47793029
c041,4,5,5,216674,217865,212181,3000.0049138110003,3000.576116377
c041,4,5,6,198764,199710,193382,3600.0057743410002,3600.647706872
c041,4,5,7,172683,173837,168426,4200.007097238,4200.726224629
c041,4,5,8,118651,119707,116530,4800.008557339,4800.81265388
c041,4,5,9,136011,136712,134154,5400.030078223,5400.899376693
c041,4,5,10,97580,98342,95406,6000.078072284,6000.992976267
c041,4,5,11,85878,86774,83993,6600.080001657,6601.04262326
# search time: 6600.080s
# total time: 33013.657s
