    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_4.json out/1595515609/results/c060_4_best.csv out/1595515609/results/c060_4_predictions.csv out/1595515609/results/c060_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,4,1,1230466,1230468,1129071,600.000319006,601.79574911
c060,0,4,2,230288,232729,226112,1200.002432289,1202.487994929
c060,0,4,3,125598,126435,123762,1800.003205973,1802.953145847
c060,0,4,4,96674,97453,95052,2400.004915075,2403.414991222
c060,0,4,5,65281,66218,64392,3000.008403317,3004.213071446
c060,0,4,6,52613,53561,52013,3600.010967431,3605.153911966
c060,0,4,7,45456,46230,44906,4200.013817961,4206.047617159
c060,0,4,8,39274,40045,39166,4800.036609246001,4806.669899707
c060,0,4,9,32886,33577,32766,5400.057052168001,5407.657999496
c060,0,4,10,29332,30042,29191,6000.084674014001,6008.762863533
c060,0,4,11,24662,25315,24380,6600.086414431002,6609.90066528
# search time: 6600.086s
# total time: 6610.291s
c060,1,4,1,1201061,1201063,1103611,600.000424464,600.27931095
c060,1,4,2,217761,219887,213416,1200.001724793,1200.57734875
c060,1,4,3,122678,123659,120960,1800.00374308,1800.788271956
c060,1,4,4,93086,93883,90888,2400.0077340400003,2401.040254915
c060,1,4,5,63996,64963,63263,3000.016437736,3001.479518151
c060,1,4,6,54440,55406,53946,3600.021617016,3601.905766666
c060,1,4,7,45010,45876,44597,4200.037043822,4202.398644659
c060,1,4,8,38678,39491,38600,4800.054028885999,4802.733070631
c060,1,4,9,33019,33721,32884,5400.056446610999,5403.279958528
c060,1,4,10,28847,29566,28782,6000.084130570999,6003.783118251
c060,1,4,11,24305,25015,24170,6600.084775636999,6604.253311676
# search time: 6600.085s
# total time: 13214.894s
c060,2,4,1,1174099,1174101,1075472,600.000146043,600.208726632
c060,2,4,2,228601,230839,224352,1200.0028764859999,1200.403153709
c060,2,4,3,125293,126227,123516,1800.0041980349997,1800.540342716
c060,2,4,4,92823,93512,90706,2400.006497605,2400.685537474
c060,2,4,5,64848,65823,64101,3000.0225445939996,3000.981131297
c060,2,4,6,54616,55655,54144,3600.0247826179993,3601.319918118
c060,2,4,7,45139,45902,44573,4200.029156884999,4201.648040931
c060,2,4,8,39502,40362,39389,4800.029350128999,4801.857312703
c060,2,4,9,32902,33598,32746,5400.049341409999,5402.118855145
c060,2,4,10,29242,29952,29075,6000.062278115,6002.432252821
c060,2,4,11,24869,25647,24677,6600.065022643,6602.814237752
# search time: 6600.065s
# total time: 19817.916s
c060,3,4,1,1213613,1213615,1116957,600.000324059,600.190790798
c060,3,4,2,212283,214152,207595,1200.003954966,1200.383081164
c060,3,4,3,121250,122114,119455,1800.006012074,1800.517962694
c060,3,4,4,93142,93895,91158,2400.00734048,2400.66261322
c060,3,4,5,63381,64481,62781,3000.018691629,3000.862314076
c060,3,4,6,53336,54281,52880,3600.031421349,3601.08061017
c060,3,4,7,44221,45183,43975,4200.045771754,4201.326231519
c060,3,4,8,39288,40118,39110,4800.053299055,4801.498144095
c060,3,4,9,33155,33832,32901,5400.068498295,5401.723748679
c060,3,4,10,28386,29186,28392,6000.081379501,6001.981053624
c060,3,4,11,24256,24944,24069,6600.081823523,6602.392089582
# search time: 6600.082s
# total time: 26420.604s
c060,4,4,1,1154797,1154799,1076405,600.000083126,600.180358312
c060,4,4,2,214465,216230,209667,1200.001921233,1200.319151138
c060,4,4,3,128421,129396,126660,1800.009383954,1800.429014724
c060,4,4,4,95546,96257,93489,2400.014276494,2400.539124356
c060,4,4,5,64902,65841,64260,3000.014897844,3000.714094607
c060,4,4,6,54938,55922,54348,3600.015229348,3600.903038457
c060,4,4,7,45847,46797,45401,4200.015755002,4201.101661265
c060,4,4,8,39185,39971,39049,4800.0339796690005,4801.281365301
c060,4,4,9,33463,34152,33249,5400.050284979001,5401.555424079
c060,4,4,10,29328,30193,29365,6000.058188265001,6001.757317193
c060,4,4,11,24868,25577,24708,6600.088691169001,6602.01566163
# search time: 6600.089s
# total time: 33022.975s
