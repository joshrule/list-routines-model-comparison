    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c059_2.json out/1595515609/results/c059_2_best.csv out/1595515609/results/c059_2_predictions.csv out/1595515609/results/c059_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 2, 8, 8, 8, 8, 2, 5]), o: IntList([5, 2, 8, 5, 8, 8, 2, 8]) }
#   Datum { i: IntList([3, 1, 1, 5, 1, 0, 7, 0, 7]), o: IntList([3, 1, 1, 0, 1, 0, 7, 5, 7]) }
#   Datum { i: IntList([0, 5, 3, 8, 1, 9, 4, 6, 2]), o: IntList([0, 5, 3, 6, 1, 9, 4, 8, 2]) }
#   Datum { i: IntList([6, 7, 2, 6, 5, 4, 4, 0]), o: IntList([6, 7, 2, 0, 5, 4, 4, 6]) }
#   Datum { i: IntList([9, 5, 5, 9, 3, 7, 6, 3, 9, 3]), o: IntList([9, 5, 5, 3, 3, 7, 6, 9, 9, 3]) }
#   Datum { i: IntList([8, 3, 9, 2, 7, 4, 6, 3]), o: IntList([8, 3, 9, 3, 7, 4, 6, 2]) }
#   Datum { i: IntList([7, 3, 4, 0, 1, 6, 8, 1, 5]), o: IntList([7, 3, 4, 1, 1, 6, 8, 0, 5]) }
#   Datum { i: IntList([5, 2, 4, 3, 7, 0, 8, 6]), o: IntList([5, 2, 4, 6, 7, 0, 8, 3]) }
#   Datum { i: IntList([8, 9, 9, 6, 5, 2, 4, 0, 0]), o: IntList([8, 9, 9, 0, 5, 2, 4, 6, 0]) }
#   Datum { i: IntList([6, 1, 8, 5, 2, 3, 7, 9, 0, 4]), o: IntList([6, 1, 8, 9, 2, 3, 7, 5, 0, 4]) }
#   Datum { i: IntList([1, 0, 7, 8, 6, 4, 2, 6, 1, 9]), o: IntList([1, 0, 7, 6, 6, 4, 2, 8, 1, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c059,0,2,1,1187880,1187882,1088819,600.000128298,601.854546705
c059,0,2,2,204830,207158,201288,1200.000210535,1202.419752544
c059,0,2,3,100184,101115,99142,1800.002011467,1802.840856267
c059,0,2,4,76209,77045,74522,2400.0213725820004,2403.253898729
c059,0,2,5,62356,63085,61101,3000.0281144020005,3003.781934212
c059,0,2,6,39096,39984,38954,3600.028670982,3604.580196252
c059,0,2,7,34488,35186,34316,4200.031980711,4205.601158541
c059,0,2,8,29241,30004,29235,4800.050990993,4806.63871915
c059,0,2,9,28927,29694,28881,5400.058921436999,5407.246702617
c059,0,2,10,25300,26070,25384,6000.078324875999,6008.188713199
c059,0,2,11,22119,22821,22123,6600.111525754999,6609.033841557
# search time: 6600.112s
# total time: 6609.238s
c059,1,2,1,1184389,1184391,1108978,600.004806137,600.335975943
c059,1,2,2,202855,204895,198962,1200.00766532,1200.588445587
c059,1,2,3,98411,99345,97379,1800.0087285519999,1800.789258335
c059,1,2,4,77013,77637,74079,2400.0102452379997,2400.983413028
c059,1,2,5,61326,62192,60096,3000.018286521,3001.289816744
c059,1,2,6,38273,39086,38221,3600.020129211,3601.634251212
c059,1,2,7,33535,34235,33384,4200.021167115,4202.021316692
c059,1,2,8,28025,28784,28132,4800.022885644,4802.619880461
c059,1,2,9,28409,29125,28430,5400.036428413,5403.07400982
c059,1,2,10,25072,25757,24998,6000.084450373,6003.476250659
c059,1,2,11,21509,22245,21619,6600.109274479,6603.807768311
# search time: 6600.109s
# total time: 13213.397s
c059,2,2,1,1171034,1171036,1088569,600.001801556,600.24690184
c059,2,2,2,199931,201983,196268,1200.0026144550002,1200.409046897
c059,2,2,3,94429,95341,93556,1800.0102213560003,1800.56613266
c059,2,2,4,74987,75739,73237,2400.015819092,2400.707733484
c059,2,2,5,61464,62291,60279,3000.019071402,3000.88159461
c059,2,2,6,38529,39355,38408,3600.021351509,3601.192668428
c059,2,2,7,34313,34950,34081,4200.030939175,4201.405332924
c059,2,2,8,28454,29137,28355,4800.044057258,4801.790883673
c059,2,2,9,28482,29316,28527,5400.05845004,5402.069268763
c059,2,2,10,25050,25697,25019,6000.059183923,6002.350313526
c059,2,2,11,21816,22558,21888,6600.065144516,6602.643653338
# search time: 6600.065s
# total time: 19816.232s
c059,3,2,1,1167451,1167453,1078829,600.000010007,600.209634353
c059,3,2,2,202283,202990,197047,1200.001298802,1200.338827318
c059,3,2,3,98461,99453,97260,1800.001689367,1800.434022464
c059,3,2,4,74453,75245,72711,2400.009058322,2400.542170947
c059,3,2,5,61846,62668,60852,3000.014673967,3000.663746743
c059,3,2,6,38783,39598,38704,3600.020086477,3600.900112229
c059,3,2,7,34551,35260,34373,4200.031246512,4201.159244188
c059,3,2,8,28228,29001,28308,4800.036740113999,4801.470617681
c059,3,2,9,28745,29288,28446,5400.045541492999,5401.690946958
c059,3,2,10,25221,25960,25234,6000.054360456999,6001.906329126
c059,3,2,11,21689,22404,21725,6600.066388265,6602.35222653
# search time: 6600.066s
# total time: 26418.865s
c059,4,2,1,1177618,1177620,1079903,600.000252954,600.194529402
c059,4,2,2,196683,198747,192920,1200.001736138,1200.31409719
c059,4,2,3,92572,93594,92020,1800.010592686,1800.438828168
c059,4,2,4,73907,74676,71848,2400.012147276,2400.547712351
c059,4,2,5,61057,61842,60030,3000.025450906,3000.676460303
c059,4,2,6,38591,39436,38623,3600.033394781,3600.817007691
c059,4,2,7,34413,35098,34233,4200.035843347,4200.977392087
c059,4,2,8,28329,29131,28513,4800.0452095480005,4801.187929774
c059,4,2,9,28344,29007,28308,5400.059345087,5401.408878405
c059,4,2,10,24868,25583,24866,6000.089377867,6001.648595256
c059,4,2,11,21770,22389,21732,6600.091269103,6601.822388964
# search time: 6600.091s
# total time: 33021.033s
