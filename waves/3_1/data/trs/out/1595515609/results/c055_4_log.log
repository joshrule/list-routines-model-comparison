    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c055_4.json out/1595515609/results/c055_4_best.csv out/1595515609/results/c055_4_predictions.csv out/1595515609/results/c055_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 7, 7, 5, 5, 7]), o: IntList([7, 5, 9, 7, 5, 7]) }
#   Datum { i: IntList([0, 2, 6, 1, 9, 5, 6, 5, 3]), o: IntList([6, 1, 0, 2, 9, 5, 6, 5, 3]) }
#   Datum { i: IntList([2, 1, 6, 6, 8, 9, 8]), o: IntList([6, 6, 2, 1, 8, 9, 8]) }
#   Datum { i: IntList([8, 9, 4, 4]), o: IntList([4, 4, 8, 9]) }
#   Datum { i: IntList([9, 4, 4, 3, 9, 9, 3, 4]), o: IntList([4, 3, 9, 4, 9, 9, 3, 4]) }
#   Datum { i: IntList([6, 2, 3, 0, 3, 2, 8, 1]), o: IntList([3, 0, 6, 2, 3, 2, 8, 1]) }
#   Datum { i: IntList([4, 8, 7, 9]), o: IntList([7, 9, 4, 8]) }
#   Datum { i: IntList([0, 7, 8, 1, 1, 4, 8, 9, 7, 2]), o: IntList([8, 1, 0, 7, 1, 4, 8, 9, 7, 2]) }
#   Datum { i: IntList([3, 9, 7, 2, 0, 8, 5]), o: IntList([7, 2, 3, 9, 0, 8, 5]) }
#   Datum { i: IntList([8, 1, 7, 0, 5]), o: IntList([7, 0, 8, 1, 5]) }
#   Datum { i: IntList([2, 5, 3, 5, 3, 5, 3, 2, 5]), o: IntList([3, 5, 2, 5, 3, 5, 3, 2, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c055,0,4,1,1280830,1280832,1168699,600.000145878,601.883116184
c055,0,4,2,258979,261087,253677,1200.000499497,1202.382732981
c055,0,4,3,131000,132130,127191,1800.002667622,1802.701685087
c055,0,4,4,89595,90705,87953,2400.006428045,2403.070169051
c055,0,4,5,71056,71844,69905,3000.012745772,3003.520385613
c055,0,4,6,61602,62382,60449,3600.017701792,3604.023560703
c055,0,4,7,50695,51498,50102,4200.035224162,4204.528942705
c055,0,4,8,48825,49617,48170,4800.037607102,4804.949614834
c055,0,4,9,39854,40557,39360,5400.055647793,5405.392951675
c055,0,4,10,35197,36018,34868,6000.057912647,6005.845018042
c055,0,4,11,30236,30974,30277,6600.070870617,6606.309163223
# search time: 6600.071s
# total time: 6606.528s
c055,1,4,1,1225726,1225728,1145734,600.000100132,600.29052116
c055,1,4,2,252594,254778,247323,1200.002399761,1200.527808797
c055,1,4,3,132345,133431,129162,1800.0027981980002,1800.691870331
c055,1,4,4,87271,88227,85620,2400.00979726,2400.864491171
c055,1,4,5,70175,70999,68744,3000.018335816,3001.158871731
c055,1,4,6,60827,61547,59676,3600.020353656,3601.400105467
c055,1,4,7,50265,50946,49581,4200.031476703,4201.652120544
c055,1,4,8,47966,48712,47300,4800.037427815,4801.851917605
c055,1,4,9,39155,39942,38660,5400.05013032,5402.121166148
c055,1,4,10,34609,35326,34304,6000.054100374,6002.408384811
c055,1,4,11,30386,31097,30168,6600.068350168,6602.628138651
# search time: 6600.068s
# total time: 13209.465s
c055,2,4,1,1264644,1264646,1165976,600.000015476,600.230453044
c055,2,4,2,247414,249626,242272,1200.000781711,1200.388239488
c055,2,4,3,131409,132475,128138,1800.0017500929998,1800.508509911
c055,2,4,4,85445,86510,84087,2400.002044978,2400.650203663
c055,2,4,5,70046,70724,68698,3000.009086598,3000.807201784
c055,2,4,6,60502,61287,58851,3600.014039986,3600.956586842
c055,2,4,7,50050,50745,49246,4200.018287919,4201.133539171
c055,2,4,8,48285,48983,47454,4800.0192215,4801.295198136
c055,2,4,9,39619,40429,39182,5400.0240327559995,5401.47024984
c055,2,4,10,34274,35017,34019,6000.025261659999,6001.709472602
c055,2,4,11,30582,31315,30382,6600.031471486999,6601.831167463
# search time: 6600.031s
# total time: 19811.614s
c055,3,4,1,1243907,1243909,1145984,600.001303919,600.200494522
c055,3,4,2,248365,250346,242984,1200.0013796039998,1200.322856312
c055,3,4,3,128354,129349,124389,1800.0019022949998,1800.413273548
c055,3,4,4,87617,88537,86093,2400.00872412,2400.535241076
c055,3,4,5,70380,70996,68968,3000.021509199,3000.693227872
c055,3,4,6,60302,61152,59349,3600.028034983,3600.846086174
c055,3,4,7,49778,50550,49164,4200.0320267219995,4200.974927779
c055,3,4,8,48043,48809,47277,4800.043181034999,4801.107336631
c055,3,4,9,39185,40002,38785,5400.0465109649995,5401.222693396
c055,3,4,10,34414,35113,34104,6000.054512858,6001.349838465
c055,3,4,11,30425,31124,30311,6600.063652604,6601.496932714
# search time: 6600.064s
# total time: 26413.430s
c055,4,4,1,1222806,1222808,1144410,600.000180077,600.211309759
c055,4,4,2,250015,252053,244758,1200.0005687809999,1200.316776603
c055,4,4,3,127457,128517,123834,1800.0020485569999,1800.392171105
c055,4,4,4,87673,88595,85932,2400.0048607239996,2400.479747022
c055,4,4,5,68519,69190,66803,3000.0108826789997,3000.573002927
c055,4,4,6,60092,60868,58850,3600.018713054,3600.691768036
c055,4,4,7,49249,50160,48654,4200.021980961,4200.809711974
c055,4,4,8,47343,48056,46675,4800.02315399,4800.912367999
c055,4,4,9,39162,39868,38639,5400.0418338399995,5401.032923665
c055,4,4,10,34172,34943,33954,6000.05058107,6001.161540987
c055,4,4,11,30184,30867,30040,6600.10655206,6601.363930552
# search time: 6600.107s
# total time: 33015.107s
