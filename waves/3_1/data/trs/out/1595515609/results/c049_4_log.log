    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c049_4.json out/1595515609/results/c049_4_best.csv out/1595515609/results/c049_4_predictions.csv out/1595515609/results/c049_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 1, 4, 1, 0, 8]), o: IntList([1, 4, 1, 0, 8]) }
#   Datum { i: IntList([5, 1, 3, 5, 0, 9, 5, 2, 5]), o: IntList([1, 3, 5, 0, 9, 5, 2, 5]) }
#   Datum { i: IntList([4, 9, 7, 6, 6, 4, 5]), o: IntList([9, 7, 6, 6, 4, 5]) }
#   Datum { i: IntList([8, 2, 1, 7, 5, 9, 6, 0, 3, 2]), o: IntList([2, 1, 7, 5, 9, 6, 0, 3, 2]) }
#   Datum { i: IntList([1, 8, 0, 2, 4, 6, 7, 9]), o: IntList([8, 0, 2, 4, 6, 7, 9]) }
#   Datum { i: IntList([7, 6, 8]), o: IntList([6, 8]) }
#   Datum { i: IntList([2]), o: IntList([]) }
#   Datum { i: IntList([4, 4]), o: IntList([4]) }
#   Datum { i: IntList([1, 0, 9, 0, 2]), o: IntList([0, 9, 0, 2]) }
#   Datum { i: IntList([9, 2, 1, 7, 0, 4, 7]), o: IntList([2, 1, 7, 0, 4, 7]) }
#   Datum { i: IntList([3, 3, 3, 3]), o: IntList([3, 3, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c049,0,4,1,1088260,1088262,998729,600.001962804,602.007985674
c049,0,4,2,404823,407073,382376,1200.003425335,1202.298750481
c049,0,4,3,252813,254630,239162,1800.003437094,1802.441603942
c049,0,4,4,134338,135885,127460,2400.008205772,2402.703311453
c049,0,4,5,101797,103101,96792,3000.008919681,3002.942467648
c049,0,4,6,100947,102298,95545,3600.009291127,3603.088727999
c049,0,4,7,95695,96751,90034,4200.010431846,4203.235703555
c049,0,4,8,84330,85610,79399,4800.013734078,4803.412188713
c049,0,4,9,77079,78315,72502,5400.014555814,5403.587517457
c049,0,4,10,67694,68858,63515,6000.029707679,6003.787391904
c049,0,4,11,57266,58415,53852,6600.031220301,6603.97220565
# search time: 6600.031s
# total time: 6604.185s
c049,1,4,1,1040467,1040469,971633,600.002067255,600.26722205
c049,1,4,2,375962,378029,357071,1200.00372846,1200.446101755
c049,1,4,3,192156,193253,180571,1800.004192823,1800.576627699
c049,1,4,4,139758,140936,133194,2400.0058954690003,2400.707062298
c049,1,4,5,90093,90933,87704,3000.0178355340004,3000.867182872
c049,1,4,6,88993,89966,84801,3600.021178536,3600.987862436
c049,1,4,7,83968,85066,82216,4200.024550157001,4201.11842635
c049,1,4,8,76524,77313,73791,4800.025065530001,4801.259910801
c049,1,4,9,70600,71793,68112,5400.037915698001,5401.383814656
c049,1,4,10,58181,59042,55617,6000.045077774001,6001.511318056
c049,1,4,11,49882,50761,47775,6600.055512715001,6601.676227572
# search time: 6600.056s
# total time: 13206.153s
c049,2,4,1,1039979,1039981,955289,600.000493271,600.199795281
c049,2,4,2,391877,394017,371558,1200.002435373,1200.297103688
c049,2,4,3,225607,227512,214426,1800.002572564,1800.366052328
c049,2,4,4,183286,184674,175336,2400.026199661,2400.454618128
c049,2,4,5,123785,125263,118692,3000.037451268,3000.532026105
c049,2,4,6,115547,116881,110104,3600.038075361,3600.587911335
c049,2,4,7,110711,112122,105461,4200.044984586,4200.64359994
c049,2,4,8,94091,95322,88428,4800.048703661,4800.727805083
c049,2,4,9,86656,87867,81533,5400.051574874,5400.803128948
c049,2,4,10,76567,77864,72272,6000.060144391,6000.872538823
c049,2,4,11,63893,64954,59695,6600.062105766,6600.938263147
# search time: 6600.062s
# total time: 19807.386s
c049,3,4,1,1210910,1210912,1125286,600.000276329,600.241339547
c049,3,4,2,453898,455855,435001,1200.00033604,1200.332329119
c049,3,4,3,249683,251744,234146,1800.001525412,1800.396983801
c049,3,4,4,169995,170568,163731,2400.0020514860003,2400.478701306
c049,3,4,5,116312,117272,110858,3000.005494114,3000.555973658
c049,3,4,6,110874,111779,107085,3600.00713403,3600.619249303
c049,3,4,7,104545,105593,100287,4200.01002717,4200.679651271
c049,3,4,8,85593,86433,82314,4800.0175097890005,4800.758807061
c049,3,4,9,80674,81701,77284,5400.019025235,5400.851857771
c049,3,4,10,69049,70034,66238,6000.021356612,6000.926838332
c049,3,4,11,59466,59946,56841,6600.032054131,6601.043141651
# search time: 6600.032s
# total time: 26408.739s
c049,4,4,1,1223846,1223848,1114860,600.000734797,600.206385222
c049,4,4,2,414517,415153,389450,1200.001183581,1200.290827109
c049,4,4,3,268665,270035,251822,1800.005513361,1800.368375838
c049,4,4,4,165862,167202,157629,2400.0065192250004,2400.438324144
c049,4,4,5,114959,116214,109839,3000.0080408090002,3000.507682746
c049,4,4,6,115184,116447,108596,3600.0113519120005,3600.558863185
c049,4,4,7,105516,106725,99205,4200.014702873001,4200.609418848
c049,4,4,8,84669,85747,79652,4800.027640690001,4800.680773455
c049,4,4,9,84996,86209,79730,5400.030549025001,5400.737741983
c049,4,4,10,75374,76664,71053,6000.033869253001,6000.787731345
c049,4,4,11,62388,63322,58973,6600.041220412001,6600.847832895
# search time: 6600.041s
# total time: 33009.901s
