    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c048_3.json out/1595515609/results/c048_3_best.csv out/1595515609/results/c048_3_predictions.csv out/1595515609/results/c048_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([7, 4, 7, 8, 7, 1, 6]), o: IntList([7]) }
#   Datum { i: IntList([9, 6, 6, 3]), o: IntList([9]) }
#   Datum { i: IntList([1, 9, 9, 5, 5]), o: IntList([1]) }
#   Datum { i: IntList([2, 2]), o: IntList([2]) }
#   Datum { i: IntList([8, 8, 8, 8, 8]), o: IntList([8]) }
#   Datum { i: IntList([4, 8, 6]), o: IntList([4]) }
#   Datum { i: IntList([2, 1]), o: IntList([2]) }
#   Datum { i: IntList([3, 3, 3]), o: IntList([3]) }
#   Datum { i: IntList([5, 5, 5, 5, 5, 5]), o: IntList([5]) }
#   Datum { i: IntList([6, 4, 7, 9]), o: IntList([6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c048,0,3,1,1112111,1112113,1043817,600.000479372,602.085288745
c048,0,3,2,463740,465698,452427,1200.0066988459998,1202.689426549
c048,0,3,3,312635,313817,298509,1800.0068424239998,1803.207431712
c048,0,3,4,244750,245627,234752,2400.006910918,2403.546196066
c048,0,3,5,191709,192825,182741,3000.010129942,3003.918646205
c048,0,3,6,194448,195315,186152,3600.010473896,3604.218298258
c048,0,3,7,173485,174501,166223,4200.012051419,4204.507357057
c048,0,3,8,167550,168647,160638,4800.013192212,4804.810037286
c048,0,3,9,146298,147360,139898,5400.019364543,5405.13662495
c048,0,3,10,131120,132077,125537,6000.021263686,6005.455636554
c048,0,3,11,112156,113140,107259,6600.029737268,6605.81100392
# search time: 6600.030s
# total time: 6606.106s
c048,1,3,1,1313206,1313208,1213243,600.000141204,600.281703406
c048,1,3,2,519741,520901,506244,1200.00026942,1200.503010943
c048,1,3,3,357436,358758,341132,1800.0124387639999,1800.710970884
c048,1,3,4,276489,277369,265328,2400.0129222799997,2400.850355231
c048,1,3,5,216680,217765,206488,3000.0149995189995,3001.012317926
c048,1,3,6,221460,222220,212270,3600.0152977989997,3601.173963779
c048,1,3,7,181289,182299,173920,4200.0161469899995,4201.321384435
c048,1,3,8,165958,166957,159029,4800.017559503,4801.459928409
c048,1,3,9,143356,144353,137225,5400.022991551,5401.657757882
c048,1,3,10,129990,130937,124416,6000.024243894,6001.833867546
c048,1,3,11,111185,112044,106273,6600.030891007001,6602.022247488
# search time: 6600.031s
# total time: 13208.572s
c048,2,3,1,1247028,1247030,1169028,600.000116822,600.20521106
c048,2,3,2,521240,522455,507538,1200.002260519,1200.364442838
c048,2,3,3,357833,358946,341594,1800.002506282,1800.501803797
c048,2,3,4,274940,275902,263304,2400.003759353,2400.612890421
c048,2,3,5,217949,219213,207750,3000.003881661,3000.734833342
c048,2,3,6,221077,221949,211952,3600.028754562,3600.870563431
c048,2,3,7,183612,184625,176191,4200.033714598,4201.000371655
c048,2,3,8,163362,164403,156651,4800.033741935,4801.093982492
c048,2,3,9,144093,145082,137851,5400.035318935999,5401.238550521
c048,2,3,10,127982,128883,122410,6000.035591491999,6001.348452463
c048,2,3,11,110100,110939,105108,6600.039621496999,6601.461837633
# search time: 6600.040s
# total time: 19810.437s
c048,3,3,1,1286613,1286615,1180455,600.000070116,600.185933246
c048,3,3,2,520348,521057,506447,1200.005578866,1200.324527063
c048,3,3,3,355389,356620,339128,1800.006207067,1800.435209919
c048,3,3,4,275030,275978,263702,2400.007723016,2400.525491592
c048,3,3,5,215015,216103,204762,3000.009110179,3000.62277282
c048,3,3,6,218440,219267,209421,3600.009249573,3600.709109728
c048,3,3,7,178728,179768,171407,4200.010918757,4200.804925681
c048,3,3,8,162737,163754,155845,4800.011862327,4800.897763435
c048,3,3,9,144176,145012,137756,5400.015003605,5400.994596247
c048,3,3,10,128941,129882,123423,6000.016931986,6001.082679031
c048,3,3,11,109974,110812,105100,6600.017347497,6601.185637305
# search time: 6600.017s
# total time: 26412.047s
c048,4,3,1,1315090,1315092,1213336,600.005664658,600.200088759
c048,4,3,2,516557,518828,504153,1200.006747685,1200.316202667
c048,4,3,3,355814,356943,339275,1800.007332654,1800.41933117
c048,4,3,4,272550,273390,261303,2400.008790492,2400.499841795
c048,4,3,5,217994,218997,207512,3000.00921126,3000.576445151
c048,4,3,6,219609,220452,210497,3600.012826998,3600.655108461
c048,4,3,7,180031,181142,172557,4200.017683279,4200.736115258
c048,4,3,8,165050,166056,158052,4800.019118408,4800.817584007
c048,4,3,9,143627,144512,137193,5400.025129415,5400.898818776
c048,4,3,10,129102,130078,123559,6000.026408260001,6000.988744961
c048,4,3,11,110900,111791,106006,6600.029622627,6601.08308928
# search time: 6600.030s
# total time: 33013.559s
