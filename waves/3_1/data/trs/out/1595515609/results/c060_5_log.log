    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_5.json out/1595515609/results/c060_5_best.csv out/1595515609/results/c060_5_predictions.csv out/1595515609/results/c060_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,5,1,1171889,1171891,1074270,600.00019027,601.791885146
c060,0,5,2,227841,230111,223737,1200.0014951889998,1202.458421184
c060,0,5,3,124042,124890,121177,1800.003129537,1802.935656609
c060,0,5,4,78807,79777,77708,2400.014018212,2403.639192047
c060,0,5,5,63515,64383,62643,3000.016882955,3004.422738034
c060,0,5,6,51891,52711,51243,3600.030633257,3605.245017201
c060,0,5,7,44862,45691,44337,4200.048635793,4206.308080458
c060,0,5,8,36749,37571,36706,4800.083305711,4807.116676646
c060,0,5,9,32330,32946,31851,5400.102800174001,5408.285460181
c060,0,5,10,28583,29245,28210,6000.110348412,6009.510584038
c060,0,5,11,24801,25546,24635,6600.140449321,6610.913750749
# search time: 6600.140s
# total time: 6611.282s
c060,1,5,1,1223866,1223868,1127973,600.000456173,600.290923901
c060,1,5,2,223484,225544,219034,1200.003772683,1200.597163898
c060,1,5,3,124450,125269,121126,1800.003955475,1800.815791474
c060,1,5,4,79460,80617,78555,2400.010936658,2401.218272179
c060,1,5,5,65400,66538,64850,3000.017051853,3001.553543502
c060,1,5,6,52746,53806,52343,3600.017626841,3601.978526993
c060,1,5,7,45056,45895,44561,4200.018342571,4202.398937143
c060,1,5,8,37654,38597,37731,4800.0217553560005,4802.814673043
c060,1,5,9,32301,33035,31866,5400.036219358,5403.416145913
c060,1,5,10,28188,28962,27829,6000.037934641,6003.835605292
c060,1,5,11,24813,25601,24636,6600.05888445,6604.499522874
# search time: 6600.059s
# total time: 13216.083s
c060,2,5,1,1175614,1175616,1086572,600.005483578,600.29483641
c060,2,5,2,225974,228352,221964,1200.0063979390002,1200.510768997
c060,2,5,3,122343,123207,119247,1800.0071574020003,1800.660612521
c060,2,5,4,77760,78922,76954,2400.0143278230003,2400.907115357
c060,2,5,5,64210,65130,63425,3000.023401509,3001.186622055
c060,2,5,6,51700,52636,51219,3600.028507887,3601.456743037
c060,2,5,7,43935,44821,43572,4200.03363905,4201.752088672
c060,2,5,8,36362,37362,36483,4800.0343762719995,4802.01789968
c060,2,5,9,31874,32622,31505,5400.049906136999,5402.399719672
c060,2,5,10,27244,27925,26980,6000.050813570999,6002.734685984
c060,2,5,11,24185,24951,24080,6600.059780236998,6603.022652412
# search time: 6600.060s
# total time: 19819.412s
c060,3,5,1,1181891,1181893,1084276,600.000681462,600.190849929
c060,3,5,2,221257,223630,217344,1200.0016808310002,1200.345608483
c060,3,5,3,122532,123309,119313,1800.0056718130002,1800.469167169
c060,3,5,4,76489,77579,75507,2400.0225510640003,2400.675165431
c060,3,5,5,63613,64706,62909,3000.0305041640004,3000.81837525
c060,3,5,6,51640,52544,51038,3600.0446985780004,3601.060968475
c060,3,5,7,44407,45243,44087,4200.0560328930005,4201.290239278
c060,3,5,8,38516,39405,38537,4800.058822685,4801.43264825
c060,3,5,9,32097,32838,31795,5400.0680775850005,5401.688054223
c060,3,5,10,27743,28466,27509,6000.077037916,6002.069365567
c060,3,5,11,23810,24540,23709,6600.08327711,6602.224251045
# search time: 6600.083s
# total time: 26421.932s
c060,4,5,1,1188163,1188165,1094637,600.000140231,600.176351566
c060,4,5,2,230464,232638,226218,1200.001629929,1200.303638969
c060,4,5,3,125440,126390,122464,1800.0045647279999,1800.405279828
c060,4,5,4,79163,80197,78165,2400.005634958,2400.539393808
c060,4,5,5,65753,66614,64821,3000.013351892,3000.705168507
c060,4,5,6,52600,53509,52030,3600.0214487420003,3600.889014192
c060,4,5,7,45088,45675,44351,4200.022868643,4201.17072114
c060,4,5,8,38676,39356,38518,4800.029168522,4801.309061152
c060,4,5,9,32705,33405,32355,5400.038638122,5401.581739726
c060,4,5,10,28557,29235,28242,6000.044056504,6001.837767606
c060,4,5,11,25069,25789,24819,6600.061320212,6602.145469053
# search time: 6600.061s
# total time: 33025.297s
