    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_2.json out/1595515609/results/c060_2_best.csv out/1595515609/results/c060_2_predictions.csv out/1595515609/results/c060_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,2,1,1174357,1174359,1095957,600.000250198,601.685054384
c060,0,2,2,227196,229399,222662,1200.002015112,1202.406256159
c060,0,2,3,123682,124583,122118,1800.00475757,1802.927958676
c060,0,2,4,102189,102905,98182,2400.009718907,2403.342110594
c060,0,2,5,64348,65332,63950,3000.0137854530003,3004.263099458
c060,0,2,6,53632,54467,53198,3600.020725327,3605.180336562
c060,0,2,7,45940,46680,45651,4200.022990675,4205.986964385
c060,0,2,8,39621,40369,39299,4800.028673179,4807.088859878
c060,0,2,9,34192,34970,34008,5400.040124298001,5408.057328904
c060,0,2,10,28785,29481,28495,6000.0656524080005,6009.274000481
c060,0,2,11,25084,25795,24888,6600.071878896,6610.47810752
# search time: 6600.072s
# total time: 6610.733s
c060,1,2,1,1209599,1209601,1117461,600.000255216,600.274852843
c060,1,2,2,227289,228579,222094,1200.001668181,1200.575729253
c060,1,2,3,126323,127224,124650,1800.0126455230002,1800.788095538
c060,1,2,4,101328,102164,97665,2400.0133636150003,2400.995603605
c060,1,2,5,63612,64483,63002,3000.0256019790004,3001.467016153
c060,1,2,6,52563,53452,52119,3600.028071949,3602.007339307
c060,1,2,7,45071,45792,44713,4200.0396194410005,4202.450231131
c060,1,2,8,39119,39782,38768,4800.041278434001,4802.887497855
c060,1,2,9,34042,34829,33879,5400.048908285001,5403.541148232
c060,1,2,10,28552,29217,28206,6000.055416112001,6003.973815485
c060,1,2,11,25350,26125,25171,6600.063714998001,6604.412735042
# search time: 6600.064s
# total time: 13215.349s
c060,2,2,1,1146991,1146993,1068100,600.000316487,600.204223139
c060,2,2,2,226419,227062,220344,1200.000437694,1200.404334637
c060,2,2,3,126925,127904,124987,1800.0028025790002,1800.54824671
c060,2,2,4,103068,103844,100215,2400.004068826,2400.693382362
c060,2,2,5,62351,63273,62012,3000.015399639,3000.991673792
c060,2,2,6,52024,52864,51541,3600.019894303,3601.418631703
c060,2,2,7,44452,45269,44311,4200.026117819,4201.699107548
c060,2,2,8,38359,39161,38217,4800.041621057,4802.061230662
c060,2,2,9,33056,33758,32919,5400.045474786,5402.550494491
c060,2,2,10,27762,28473,27568,6000.058810113001,6002.864103054
c060,2,2,11,24747,25460,24553,6600.059830452001,6603.389132045
# search time: 6600.060s
# total time: 19819.031s
c060,3,2,1,1212971,1212973,1116098,600.00135192,600.185516185
c060,3,2,2,228463,230620,224265,1200.00536218,1200.351101039
c060,3,2,3,122639,123564,121175,1800.007826651,1800.485774833
c060,3,2,4,103538,104290,100651,2400.011768399,2400.617246971
c060,3,2,5,63612,64479,62951,3000.0182559550003,3000.861007619
c060,3,2,6,52072,52964,51910,3600.024739933,3601.081842082
c060,3,2,7,44856,45654,44549,4200.03069809,4201.351568659
c060,3,2,8,39151,39927,38856,4800.033589250001,4801.5791978
c060,3,2,9,33960,34739,33782,5400.045078595001,5401.893232105
c060,3,2,10,28573,29249,28222,6000.057068181,6002.190340821
c060,3,2,11,24523,25330,24405,6600.077687572,6602.487565206
# search time: 6600.078s
# total time: 26421.821s
c060,4,2,1,1179588,1179590,1097367,600.003992076,600.191512778
c060,4,2,2,228139,230158,223637,1200.006022827,1200.328570147
c060,4,2,3,123329,124163,121669,1800.006088956,1800.436964684
c060,4,2,4,101316,102093,98329,2400.007682763,2400.52626583
c060,4,2,5,63461,64361,62711,3000.02029492,3000.715803456
c060,4,2,6,52827,53609,52414,3600.0261181170004,3600.930295103
c060,4,2,7,45097,45940,44915,4200.0386595340005,4201.149364562
c060,4,2,8,39218,39974,38946,4800.057020716001,4801.35913357
c060,4,2,9,33884,34637,33733,5400.064789536001,5401.588828523
c060,4,2,10,28398,29080,28073,6000.0872951930005,6001.899901912
c060,4,2,11,25012,25735,24799,6600.126635452,6602.313635276
# search time: 6600.127s
# total time: 33024.428s
