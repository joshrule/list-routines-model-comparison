    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.31s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c005_3.json out/1594483387/results/c005_3_best.csv out/1594483387/results/c005_3_predictions.csv out/1594483387/results/c005_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 2, 9, 3, 7, 6, 0, 5, 1, 4]), o: IntList([1]) }
#   Datum { i: IntList([2, 6, 3, 7, 4, 8, 1, 9, 5, 0]), o: IntList([3]) }
#   Datum { i: IntList([2, 1, 9, 6, 7, 0, 4, 5, 3]), o: IntList([9]) }
#   Datum { i: IntList([7, 2, 1, 8, 0, 6, 3, 5, 9, 4]), o: IntList([5]) }
#   Datum { i: IntList([6, 1, 2, 8, 5, 4, 7, 9, 3, 0]), o: IntList([7]) }
#   Datum { i: IntList([5, 1, 7, 6, 9, 8, 2, 0, 3, 4]), o: IntList([8]) }
#   Datum { i: IntList([4, 8, 5, 6, 2, 7, 1, 0, 3, 9]), o: IntList([2]) }
#   Datum { i: IntList([4, 1, 9, 6, 3, 2, 5, 0, 8, 7]), o: IntList([3]) }
#   Datum { i: IntList([1, 6, 5, 8, 3, 4, 2, 7, 0, 9]), o: IntList([6]) }
#   Datum { i: IntList([3, 9, 4, 5, 1, 8, 2, 0, 6, 7]), o: IntList([5]) }
#   Datum { i: IntList([9, 1, 6, 4, 7, 5, 3, 8, 2, 0]), o: IntList([0]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c005,0,3,1,944683,944684,827300,600.00174381,602.30267753
c005,0,3,2,466416,466590,452146,1200.002541007,1205.039723081
c005,0,3,3,361214,361394,349334,1800.003890358,1806.614154333
c005,0,3,4,168350,168533,162210,2400.005234789,2408.573945868
c005,0,3,5,177415,177597,171465,3000.008040189,3010.053765594
c005,0,3,6,128546,128723,123209,3600.012902525,3611.554700525
c005,0,3,7,95565,95744,91323,4200.014977229,4213.011387898
c005,0,3,8,73522,73703,69941,4800.019984572999,4814.372290641
c005,0,3,9,60419,60601,57851,5400.020520519999,5416.055092281
c005,0,3,10,50353,50531,48211,6000.0385416829995,6017.587652289
c005,0,3,11,35565,35745,34172,6600.070087059999,6619.146371655
# search time: 6600.070s
# total time: 6619.418s
c005,1,3,1,967063,967064,825742,600.000004964,600.249974787
c005,1,3,2,445631,445794,431932,1200.0010141480002,1201.224352937
c005,1,3,3,353627,353797,342042,1800.0019623270002,1801.906062938
c005,1,3,4,173001,173173,166682,2400.003084557,2402.759600744
c005,1,3,5,175109,175284,168898,3000.003485084,3003.350780537
c005,1,3,6,123402,123575,118222,3600.008969116,3604.04592604
c005,1,3,7,96951,97116,92554,4200.010656821,4204.70453227
c005,1,3,8,77309,77479,73707,4800.012357828,4805.344242243
c005,1,3,9,61194,61364,58602,5400.024022175,5406.253391499
c005,1,3,10,47668,47835,45616,6000.026111509,6007.13889399
c005,1,3,11,32139,32307,30917,6600.060665270999,6607.769251538
# search time: 6600.061s
# total time: 13227.627s
c005,2,3,1,913545,913546,812563,600.000311557,600.259980356
c005,2,3,2,433200,433368,420000,1200.000585061,1200.853311248
c005,2,3,3,348614,348791,337556,1800.001523563,1801.308825585
c005,2,3,4,163838,164003,157862,2400.0031611550003,2401.879906118
c005,2,3,5,170953,171126,165023,3000.0042705100004,3002.376103579
c005,2,3,6,124301,124471,119285,3600.0052432930006,3602.851755284
c005,2,3,7,92932,93104,88938,4200.012738223,4203.383704545
c005,2,3,8,77203,77372,73545,4800.014300969,4803.756908558
c005,2,3,9,58426,58600,55821,5400.030554053,5404.154447448
c005,2,3,10,49201,49377,47075,6000.036179287,6004.851652993
c005,2,3,11,31664,31835,30508,6600.05617527,6605.539915676
# search time: 6600.056s
# total time: 19833.591s
c005,3,3,1,860326,860327,732904,600.000308432,600.160805601
c005,3,3,2,423980,424156,411110,1200.002625386,1200.61562507
c005,3,3,3,348534,348720,336933,1800.00345001,1800.953514986
c005,3,3,4,165374,165551,159359,2400.00955731,2401.389115478
c005,3,3,5,172177,172349,166313,3000.009941005,3001.766478301
c005,3,3,6,123483,123663,118468,3600.011775073,3602.071844158
c005,3,3,7,94306,94483,90055,4200.013419336,4202.48716828
c005,3,3,8,76272,76446,72639,4800.0193386539995,4802.927902429
c005,3,3,9,60969,61143,58391,5400.030778423999,5403.390300818
c005,3,3,10,50685,50861,48455,6000.032104876,6003.84511584
c005,3,3,11,34396,34574,33061,6600.0472603,6604.175570327
# search time: 6600.047s
# total time: 26438.339s
c005,4,3,1,880673,880674,789109,600.160161402,600.368469578
c005,4,3,2,439136,439305,425693,1200.160213248,1200.711024539
c005,4,3,3,349530,349708,338117,1800.1635668049998,1801.036289052
c005,4,3,4,172217,172394,165961,2400.1646287109998,2401.402013375
c005,4,3,5,173572,173751,167468,3000.1653164199997,3001.697526456
c005,4,3,6,126968,127149,121720,3600.169447206,3601.989045268
c005,4,3,7,96576,96749,92452,4200.185904137999,4202.285740217
c005,4,3,8,76789,76969,73128,4800.193894574999,4802.579932311
c005,4,3,9,56384,56557,53830,5400.214685760999,5402.972923368
c005,4,3,10,44838,45015,42852,6000.215778214999,6003.255372678
c005,4,3,11,32903,33080,31625,6600.226371716999,6603.651953895
# search time: 6600.226s
# total time: 33042.263s
