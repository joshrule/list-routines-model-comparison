    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c040_3.json out/1594483387/results/c040_3_best.csv out/1594483387/results/c040_3_predictions.csv out/1594483387/results/c040_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 8, 3, 7, 8]), o: IntList([4, 8, 3, 7, 8, 3]) }
#   Datum { i: IntList([5, 8, 2, 9, 0, 0]), o: IntList([5, 8, 2, 9, 0, 0, 9]) }
#   Datum { i: IntList([3, 8, 5]), o: IntList([3, 8, 5, 3]) }
#   Datum { i: IntList([9, 1, 1, 5, 1, 6, 5, 6]), o: IntList([9, 1, 1, 5, 1, 6, 5, 6, 9]) }
#   Datum { i: IntList([7, 0]), o: IntList([7, 0]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([4, 7, 4, 3]), o: IntList([4, 7, 4, 3, 3]) }
#   Datum { i: IntList([5, 7, 7, 3, 0, 2, 0, 6, 1]), o: IntList([5, 7, 7, 3, 0, 2, 0, 6, 1, 3]) }
#   Datum { i: IntList([4, 8, 9, 2, 5, 7, 1, 0, 6, 2]), o: IntList([4, 8, 9, 2, 5, 7, 1, 0, 6, 2, 9]) }
#   Datum { i: IntList([6]), o: IntList([6]) }
#   Datum { i: IntList([4, 2, 2, 6, 8, 9, 4]), o: IntList([4, 2, 2, 6, 8, 9, 4, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c040,0,3,1,1012695,1012696,896589,600.000296753,602.438752219
c040,0,3,2,384965,385128,374805,1200.0006813300001,1203.661883738
c040,0,3,3,205938,206101,204339,1800.0017153930003,1804.772571963
c040,0,3,4,167284,167445,166464,2400.0032336400004,2405.644724741
c040,0,3,5,107797,107958,107174,3000.0062775090005,3006.527950871
c040,0,3,6,102638,102802,102212,3600.0086620460006,3607.253390131
c040,0,3,7,119040,119224,114974,4200.013114644001,4207.728443933
c040,0,3,8,90701,90875,88593,4800.014992777001,4808.263792243
c040,0,3,9,62728,62898,60964,5400.022166161001,5408.89350221
c040,0,3,10,47065,47247,45713,6000.028765049001,6009.549986823
c040,0,3,11,49093,49266,47827,6600.044619858001,6610.071801574
# search time: 6600.045s
# total time: 6610.428s
c040,1,3,1,985480,985481,863267,600.011196663,600.346884951
c040,1,3,2,381413,381594,370990,1200.011824143,1200.77329027
c040,1,3,3,210035,210212,208374,1800.012411762,1801.226991205
c040,1,3,4,161957,162136,161535,2400.012665715,2401.587387099
c040,1,3,5,106627,106808,106036,3000.017782969,3002.047369383
c040,1,3,6,101852,102029,101421,3600.018741031,3602.474493822
c040,1,3,7,118431,118626,114424,4200.0198771,4202.74868569
c040,1,3,8,90656,90845,88608,4800.021380202999,4803.039539159
c040,1,3,9,62886,63072,61103,5400.041375321999,5403.363877065
c040,1,3,10,46865,47052,45739,6000.047274186999,6003.746318452
c040,1,3,11,50945,51128,49904,6600.056084076999,6604.048971277
# search time: 6600.056s
# total time: 13215.088s
c040,2,3,1,1159844,1159845,1034667,600.01027248,600.333577328
c040,2,3,2,435234,435404,424014,1200.015669247,1200.618756462
c040,2,3,3,245905,246084,243643,1800.016676297,1800.895544301
c040,2,3,4,193353,193526,192246,2400.017952018,2401.132707448
c040,2,3,5,109271,109441,108629,3000.018480007,3001.402341058
c040,2,3,6,104394,104558,103932,3600.0228017010004,3601.689628471
c040,2,3,7,118917,119115,114877,4200.025140032,4201.862022405
c040,2,3,8,90297,90478,88394,4800.027336073001,4802.056273241
c040,2,3,9,64803,64983,62987,5400.027989146,5402.307778375
c040,2,3,10,49982,50158,48561,6000.032190251,6002.508509759
c040,2,3,11,50247,50426,48906,6600.037482395001,6602.717253694
# search time: 6600.037s
# total time: 19818.408s
c040,3,3,1,1087552,1087553,930197,600.000265849,600.193670033
c040,3,3,2,369232,369401,359595,1200.000551875,1200.435464813
c040,3,3,3,207415,207593,205769,1800.003192531,1800.646276346
c040,3,3,4,167415,167591,166741,2400.00458335,2400.845097714
c040,3,3,5,107456,107630,106848,3000.008579083,3001.076418582
c040,3,3,6,102148,102332,101711,3600.0122135359998,3601.258124618
c040,3,3,7,118458,118664,114449,4200.014630973999,4201.382109525
c040,3,3,8,90288,90476,88288,4800.0171244289995,4801.534961069
c040,3,3,9,63203,63385,61419,5400.026701084,5401.719449787
c040,3,3,10,46889,47067,45520,6000.0272753829995,6001.894469446
c040,3,3,11,48355,48539,47278,6600.035023709,6602.027440253
# search time: 6600.035s
# total time: 26421.076s
c040,4,3,1,1063691,1063692,957060,600.000071717,600.225604633
c040,4,3,2,372944,373110,362898,1200.0003499109998,1200.417406667
c040,4,3,3,208941,209112,207301,1800.0006635679997,1800.597764181
c040,4,3,4,165444,165612,164830,2400.004572865,2400.746071435
c040,4,3,5,104405,104583,103816,3000.008090429,3000.939734527
c040,4,3,6,101897,102071,101450,3600.008103143,3601.07999539
c040,4,3,7,117653,117838,113703,4200.0095132179995,4201.208291731
c040,4,3,8,90864,91042,88801,4800.019959982,4801.346948037
c040,4,3,9,62844,63017,61103,5400.022077038,5401.496895873
c040,4,3,10,48151,48328,46789,6000.0248270150005,6001.650920142
c040,4,3,11,49004,49175,47735,6600.029821242,6601.745368553
# search time: 6600.030s
# total time: 33023.425s
