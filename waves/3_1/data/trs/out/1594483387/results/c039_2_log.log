    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c039_2.json out/1594483387/results/c039_2_best.csv out/1594483387/results/c039_2_predictions.csv out/1594483387/results/c039_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 8, 6]), o: IntList([3, 8, 6, 3]) }
#   Datum { i: IntList([2, 1, 0, 1, 7, 8, 1, 8, 7]), o: IntList([2, 1, 0, 1, 7, 8, 1, 8, 7, 9]) }
#   Datum { i: IntList([7, 2, 4, 4, 9, 5, 7, 2, 3]), o: IntList([7, 2, 4, 4, 9, 5, 7, 2, 3, 9]) }
#   Datum { i: IntList([2, 1, 9]), o: IntList([2, 1, 9, 3]) }
#   Datum { i: IntList([0, 5, 6, 5, 5]), o: IntList([0, 5, 6, 5, 5]) }
#   Datum { i: IntList([9, 3, 6]), o: IntList([9, 3, 6, 3]) }
#   Datum { i: IntList([1, 5, 7, 3, 4, 8, 6, 9, 2]), o: IntList([1, 5, 7, 3, 4, 8, 6, 9, 2, 9]) }
#   Datum { i: IntList([9, 1, 4]), o: IntList([9, 1, 4, 3]) }
#   Datum { i: IntList([4, 5, 8, 4, 0, 2, 8, 7, 2]), o: IntList([4, 5, 8, 4, 0, 2, 8, 7, 2, 9]) }
#   Datum { i: IntList([7, 8, 4, 6, 3, 5, 1]), o: IntList([7, 8, 4, 6, 3, 5, 1]) }
#   Datum { i: IntList([0, 0, 6, 6, 0, 0]), o: IntList([0, 0, 6, 6, 0, 0]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c039,0,2,1,1013897,1013898,907076,600.004616177,602.772310783
c039,0,2,2,489621,489785,476504,1200.005204057,1203.83977734
c039,0,2,3,178823,178985,177594,1800.008644547,1804.806814972
c039,0,2,4,112069,112235,111504,2400.012094022,2405.691877856
c039,0,2,5,103826,103987,102630,3000.013316699,3006.340833088
c039,0,2,6,101739,101895,100545,3600.014914851,3606.873848308
c039,0,2,7,92682,92843,91727,4200.01942796,4207.404220097
c039,0,2,8,70446,70617,69948,4800.023888626,4807.976364017
c039,0,2,9,64921,65094,64469,5400.028600023001,5408.587258494
c039,0,2,10,44650,44818,44526,6000.042780885001,6009.336397384
c039,0,2,11,46325,46487,45476,6600.066542635001,6609.955734529
# search time: 6600.067s
# total time: 6610.347s
c039,1,2,1,1028654,1028655,926313,600.001796463,600.380666176
c039,1,2,2,495303,495461,481983,1200.002104739,1200.794786455
c039,1,2,3,177205,177375,175987,1800.004565541,1801.222345731
c039,1,2,4,111575,111739,111001,2400.017752079,2401.562979401
c039,1,2,5,101646,101811,100604,3000.020015919,3001.858245362
c039,1,2,6,100645,100808,99519,3600.022849478,3602.148831757
c039,1,2,7,91985,92144,90949,4200.026736583,4202.405487772
c039,1,2,8,70461,70626,69922,4800.029931229,4802.686941631
c039,1,2,9,64472,64635,64041,5400.030846316,5402.950764052
c039,1,2,10,44261,44421,44092,6000.053359347,6003.42970326
c039,1,2,11,49189,49349,48237,6600.053943144,6603.709327567
# search time: 6600.054s
# total time: 13214.434s
c039,2,2,1,1138236,1138237,1008301,600.001586791,600.278586147
c039,2,2,2,599995,600170,584509,1200.00322143,1200.593321136
c039,2,2,3,229714,229880,228041,1800.0033145,1800.883620369
c039,2,2,4,139469,139640,138752,2400.006031797,2401.11496865
c039,2,2,5,109980,110138,108694,3000.010668819,3001.343624582
c039,2,2,6,101373,101537,100194,3600.011664089,3601.516243122
c039,2,2,7,91675,91840,90509,4200.0124193,4201.687318782
c039,2,2,8,69935,70098,69193,4800.013875755,4801.883194485
c039,2,2,9,64551,64718,64095,5400.015964366,5402.083333222
c039,2,2,10,43543,43712,43437,6000.020915666,6002.308042181
c039,2,2,11,45841,46009,44899,6600.031604282,6602.493854821
# search time: 6600.032s
# total time: 19817.248s
c039,3,2,1,1083478,1083479,928166,600.000087863,600.199009948
c039,3,2,2,471614,471801,459341,1200.000446543,1200.4405597
c039,3,2,3,183197,183389,181993,1800.003156847,1800.661722377
c039,3,2,4,107794,107986,107443,2400.005737224,2400.864514491
c039,3,2,5,103059,103252,101894,3000.0083067349997,3001.025713024
c039,3,2,6,101129,101320,100022,3600.0129156989997,3601.176802926
c039,3,2,7,91743,91935,90743,4200.018495569,4201.300174337
c039,3,2,8,70275,70464,69699,4800.020035336001,4801.418514184
c039,3,2,9,64340,64529,63850,5400.024174045,5401.5277072
c039,3,2,10,45623,45808,45472,6000.025408601,6001.650584112
c039,3,2,11,46667,46861,45767,6600.033765668,6601.80579343
# search time: 6600.034s
# total time: 26419.649s
c039,4,2,1,935480,935481,820689,600.000188986,600.21013416
c039,4,2,2,481950,482122,469183,1200.001562854,1200.413803324
c039,4,2,3,180070,180242,178861,1800.004403112,1800.587284196
c039,4,2,4,110440,110613,109877,2400.010288437,2400.75673145
c039,4,2,5,100495,100664,99398,3000.01280726,3000.89648052
c039,4,2,6,100374,100549,99260,3600.021581064,3601.022092873
c039,4,2,7,91278,91449,90297,4200.024703081001,4201.14789513
c039,4,2,8,70085,70258,69528,4800.0301133250005,4801.251538573
c039,4,2,9,64223,64396,63743,5400.034073553001,5401.373248498
c039,4,2,10,43475,43647,43341,6000.037768861001,6001.483159212
c039,4,2,11,46142,46316,45309,6600.043906826,6601.639974338
# search time: 6600.044s
# total time: 33021.704s
