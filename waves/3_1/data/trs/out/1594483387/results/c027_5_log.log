    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.59s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c027_5.json out/1594483387/results/c027_5_best.csv out/1594483387/results/c027_5_predictions.csv out/1594483387/results/c027_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 7, 6, 1, 0, 8, 3]), o: IntList([5, 7, 1, 0, 8, 3]) }
#   Datum { i: IntList([5, 5, 7, 7, 2]), o: IntList([5, 7, 7, 2]) }
#   Datum { i: IntList([6, 5, 8, 0, 4, 8, 1, 9, 3, 2]), o: IntList([6, 5, 0, 4, 8, 1, 9, 3, 2]) }
#   Datum { i: IntList([6, 4, 6, 2, 3, 3]), o: IntList([6, 4, 2, 3, 3]) }
#   Datum { i: IntList([0, 0, 9, 0]), o: IntList([0, 9, 0]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 6, 6, 7, 2]), o: IntList([9, 7, 7, 7, 6, 6, 7, 2]) }
#   Datum { i: IntList([1, 2, 5, 1, 3, 2, 5]), o: IntList([1, 2, 1, 3, 2, 5]) }
#   Datum { i: IntList([9, 4, 0, 5, 9, 4, 5, 0, 0]), o: IntList([9, 4, 5, 9, 4, 5, 0, 0]) }
#   Datum { i: IntList([6, 6, 1]), o: IntList([6, 1]) }
#   Datum { i: IntList([2, 3, 9, 9, 8, 3, 8, 6]), o: IntList([2, 3, 9, 8, 3, 8, 6]) }
#   Datum { i: IntList([8, 8, 4, 1, 8, 4, 1, 4]), o: IntList([8, 4, 1, 8, 4, 1, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c027,0,5,1,939728,939729,826559,600.005015662,602.43965684
c027,0,5,2,359003,359172,348341,1200.0056635649998,1203.815277987
c027,0,5,3,257520,257702,249866,1800.0188946539997,1804.860006475
c027,0,5,4,144729,144905,143179,2400.0219336709997,2405.691171533
c027,0,5,5,121106,121287,118345,3000.0254035909998,3006.42677625
c027,0,5,6,100510,100681,99451,3600.029842567,3607.313261764
c027,0,5,7,77517,77689,76717,4200.032593078,4208.079830788
c027,0,5,8,67027,67197,66271,4800.033397752,4808.836475935
c027,0,5,9,50737,50916,50450,5400.041570136001,5409.564359246
c027,0,5,10,48049,48229,47808,6000.047030094001,6010.455784268
c027,0,5,11,41234,41418,40920,6600.055832273,6611.363468509
# search time: 6600.056s
# total time: 6611.725s
c027,1,5,1,983074,983075,882900,600.000062506,600.428515088
c027,1,5,2,358266,358443,347578,1200.000338717,1200.919904381
c027,1,5,3,258055,258234,250554,1800.002040412,1801.336159231
c027,1,5,4,144007,144179,142513,2400.0035359430003,2401.716308527
c027,1,5,5,121139,121320,118582,3000.0076696900005,3002.096588227
c027,1,5,6,96945,97121,95906,3600.0112842990006,3602.582179799
c027,1,5,7,75157,75338,74344,4200.014598632,4202.978065429
c027,1,5,8,63328,63506,62865,4800.017776172001,4803.347096217
c027,1,5,9,50930,51106,50681,5400.026010032001,5403.754082291
c027,1,5,10,49344,49524,48940,6000.032180122001,6004.171837498
c027,1,5,11,41621,41798,41304,6600.065859266,6604.657505546
# search time: 6600.066s
# total time: 13217.027s
c027,2,5,1,936708,936709,823051,600.000107176,600.250674908
c027,2,5,2,354359,354536,343539,1200.000292481,1200.560905108
c027,2,5,3,256854,257036,249258,1800.0028626160001,1800.820700651
c027,2,5,4,144022,144195,142488,2400.0079370350004,2401.084392588
c027,2,5,5,120653,120839,117965,3000.0083971560002,3001.293937364
c027,2,5,6,99570,99750,98539,3600.0122030620005,3601.569284436
c027,2,5,7,76903,77088,76014,4200.012545233,4201.838374665
c027,2,5,8,62275,62468,61842,4800.021295405,4802.177630311
c027,2,5,9,50777,50963,50489,5400.035361808001,5402.455001716
c027,2,5,10,49636,49810,49193,6000.054046397001,6002.769641101
c027,2,5,11,40085,40273,39866,6600.069331376001,6603.117894019
# search time: 6600.069s
# total time: 19820.800s
c027,3,5,1,791809,791810,713496,600.001023921,600.306782964
c027,3,5,2,215783,215958,209212,1200.005604963,1200.567764245
c027,3,5,3,155651,155819,150997,1800.006477336,1800.8015972
c027,3,5,4,85617,85789,84680,2400.009333352,2401.030439049
c027,3,5,5,72690,72863,71117,3000.032593694,3001.280562325
c027,3,5,6,60429,60601,59825,3600.037098502,3601.514172957
c027,3,5,7,48721,48896,48283,4200.042653458,4201.650318537
c027,3,5,8,66716,66891,65985,4800.0433412150005,4801.855401704
c027,3,5,9,49576,49752,49360,5400.054996047001,5402.135613452
c027,3,5,10,47071,47245,46773,6000.065521122001,6002.356233734
c027,3,5,11,38200,38377,38086,6600.069141151001,6602.604000019
# search time: 6600.069s
# total time: 26424.023s
c027,4,5,1,927757,927758,813332,600.003871301,600.202494879
c027,4,5,2,357023,357187,346091,1200.005691433,1200.422049515
c027,4,5,3,256694,256867,249282,1800.006227432,1800.625434542
c027,4,5,4,142537,142705,140945,2400.00651817,2400.802923266
c027,4,5,5,121110,121283,118248,3000.008909737,3000.976936682
c027,4,5,6,97336,97503,96279,3600.017140465,3601.200698731
c027,4,5,7,75598,75770,74761,4200.017594306,4201.400061441
c027,4,5,8,67430,67604,66687,4800.022387108001,4801.611322504
c027,4,5,9,50114,50287,49909,5400.0278700300005,5401.840499594
c027,4,5,10,49825,49992,49364,6000.030457532001,6001.999964609
c027,4,5,11,40523,40693,40217,6600.041653336,6602.225436231
# search time: 6600.042s
# total time: 33027.088s
