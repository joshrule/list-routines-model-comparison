    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.64s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c028_1.json out/1594483387/results/c028_1_best.csv out/1594483387/results/c028_1_predictions.csv out/1594483387/results/c028_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 2, 0, 6]), o: IntList([1, 2, 6]) }
#   Datum { i: IntList([3, 2, 5, 8, 0, 9, 5]), o: IntList([3, 5, 8, 0, 9, 5]) }
#   Datum { i: IntList([5, 7, 1, 9, 0, 6, 2, 8, 4, 7]), o: IntList([5, 7, 9, 0, 6, 2, 8, 4, 7]) }
#   Datum { i: IntList([3, 1, 4]), o: IntList([3, 4]) }
#   Datum { i: IntList([3, 0, 7, 6, 9, 4]), o: IntList([3, 7, 6, 9, 4]) }
#   Datum { i: IntList([5, 0, 6, 1, 2]), o: IntList([5, 6, 1, 2]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 3, 6, 8, 1]), o: IntList([2, 4, 9, 5, 3, 6, 8, 1]) }
#   Datum { i: IntList([7, 8, 0, 1, 0, 3]), o: IntList([7, 8, 1, 0, 3]) }
#   Datum { i: IntList([4, 2, 9, 1, 8, 7, 6]), o: IntList([4, 9, 1, 8, 7, 6]) }
#   Datum { i: IntList([3, 5, 0, 7, 9, 2, 8, 4]), o: IntList([3, 5, 7, 9, 2, 8, 4]) }
#   Datum { i: IntList([5, 2, 7, 9, 6, 4, 1, 0, 8, 3]), o: IntList([5, 7, 9, 6, 4, 1, 0, 8, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c028,0,1,1,1045889,1045890,895326,600.000605711,601.932555724
c028,0,1,2,526021,526202,512206,1200.00263472,1203.089728161
c028,0,1,3,265532,265715,263329,1800.003972633,1804.021828926
c028,0,1,4,139796,139982,139102,2400.005000617,2404.799028379
c028,0,1,5,137303,137484,135559,3000.009090133,3005.485904775
c028,0,1,6,107705,107888,106806,3600.01283015,3606.216255866
c028,0,1,7,88302,88482,87805,4200.014651563,4206.998765406
c028,0,1,8,69140,69318,68625,4800.014706218,4807.67959316
c028,0,1,9,59867,60053,59448,5400.017939435001,5408.406241065
c028,0,1,10,52528,52705,52227,6000.022643945001,6009.120861746
c028,0,1,11,44205,44382,43969,6600.027288736001,6609.874170464
# search time: 6600.027s
# total time: 6610.257s
c028,1,1,1,989755,989756,882568,600.000703134,600.384681307
c028,1,1,2,530039,530206,515914,1200.002385102,1200.832910844
c028,1,1,3,256437,256612,254337,1800.0065605620002,1801.289708896
c028,1,1,4,138761,138935,138149,2400.0111762300003,2401.622891262
c028,1,1,5,134981,135163,133445,3000.0120253960004,3001.957135285
c028,1,1,6,106263,106434,105377,3600.0168412280004,3602.269033754
c028,1,1,7,89036,89212,88510,4200.016991323,4202.577031632
c028,1,1,8,68453,68627,67977,4800.018098732,4802.902334328
c028,1,1,9,59583,59752,59145,5400.028373601,5403.2312483
c028,1,1,10,47671,47841,47438,6000.031068445,6003.634882566
c028,1,1,11,43509,43672,43256,6600.03434685,6603.99191542
# search time: 6600.034s
# total time: 13214.939s
c028,2,1,1,1048492,1048493,895316,600.000170715,600.218636823
c028,2,1,2,518946,519122,505525,1200.0007973900001,1200.530231878
c028,2,1,3,263381,263561,261200,1800.001215665,1800.80817917
c028,2,1,4,138527,138696,137873,2400.004346589,2401.063992351
c028,2,1,5,136163,136345,134482,3000.0067476149998,3001.293676502
c028,2,1,6,106976,107157,106071,3600.008235682,3601.526705508
c028,2,1,7,88847,89028,88347,4200.018460866,4201.733478033
c028,2,1,8,67703,67881,67204,4800.023637689001,4801.991251991
c028,2,1,9,59902,60078,59476,5400.044174482001,5402.235179092
c028,2,1,10,48506,48682,48273,6000.0504828190005,6002.534618811
c028,2,1,11,41374,41550,41249,6600.056240991001,6602.774722884
# search time: 6600.056s
# total time: 19818.427s
c028,3,1,1,932343,932344,794070,600.007711839,600.16702515
c028,3,1,2,515503,515685,501810,1200.007791027,1200.423103893
c028,3,1,3,261804,261986,259617,1800.008046774,1800.641072544
c028,3,1,4,130810,130987,130437,2400.0117047209997,2400.815114368
c028,3,1,5,134816,135004,133199,3000.0177324899996,3001.022334909
c028,3,1,6,106106,106287,105200,3600.0234764529996,3601.182644875
c028,3,1,7,87673,87858,87140,4200.029223334,4201.353259849
c028,3,1,8,66134,66313,65754,4800.032863581,4801.508893413
c028,3,1,9,58832,59018,58389,5400.033152476,5401.679120925
c028,3,1,10,47841,48024,47621,6000.045751986,6001.859668712
c028,3,1,11,43172,43350,42969,6600.056477387,6602.073701361
# search time: 6600.056s
# total time: 26421.232s
c028,4,1,1,982138,982139,873072,600.000669412,600.248597077
c028,4,1,2,522852,523021,509083,1200.001318391,1200.475247922
c028,4,1,3,253759,253927,251631,1800.002260915,1800.645475803
c028,4,1,4,137849,138010,137161,2400.003786505,2400.810559048
c028,4,1,5,129358,129520,127948,3000.0067848999997,3000.976897045
c028,4,1,6,105521,105690,104664,3600.011379349,3601.085943386
c028,4,1,7,88072,88232,87497,4200.014147924,4201.246200849
c028,4,1,8,67102,67275,66663,4800.02123091,4801.398536939
c028,4,1,9,59313,59481,58847,5400.031095955999,5401.578268988
c028,4,1,10,51748,51905,51470,6000.041386163999,6001.740259324
c028,4,1,11,43240,43405,43034,6600.041496183999,6601.882010297
# search time: 6600.041s
# total time: 33023.793s
