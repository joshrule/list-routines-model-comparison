    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c078_5.json out/1594483387/results/c078_5_best.csv out/1594483387/results/c078_5_predictions.csv out/1594483387/results/c078_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 5, 3, 0, 6, 4, 1]), o: IntList([6]) }
#   Datum { i: IntList([2, 7, 9, 5, 4, 0, 8, 1, 3, 6]), o: IntList([9]) }
#   Datum { i: IntList([1, 2, 0]), o: IntList([2]) }
#   Datum { i: IntList([3, 5, 5, 2, 1, 4, 4, 3, 0]), o: IntList([5]) }
#   Datum { i: IntList([0, 0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 0]), o: IntList([1]) }
#   Datum { i: IntList([2, 3, 0, 1]), o: IntList([3]) }
#   Datum { i: IntList([1, 5, 0, 3, 7, 4, 6, 2]), o: IntList([7]) }
#   Datum { i: IntList([5, 6, 2, 1, 7, 8, 0, 9, 3, 4]), o: IntList([9]) }
#   Datum { i: IntList([7, 1, 5, 4, 0, 2, 8, 6]), o: IntList([8]) }
#   Datum { i: IntList([1, 3, 0, 2, 2, 3, 4]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c078,0,5,1,1179178,1179179,1058047,600.000852513,602.260069766
c078,0,5,2,749139,749311,725223,1200.0041339250001,1203.619550656
c078,0,5,3,479418,479579,461472,1800.0059124530003,1804.671746794
c078,0,5,4,258397,258565,248080,2400.0078958910003,2406.004225972
c078,0,5,5,271963,272136,262062,3000.0147698810006,3006.968581762
c078,0,5,6,247961,248127,239482,3600.0153265420004,3607.888408334
c078,0,5,7,200527,200699,193112,4200.016348864,4208.799288854
c078,0,5,8,190808,190974,186155,4800.016771718,4809.590202182
c078,0,5,9,100291,100463,97501,5400.022783345,5410.701114624
c078,0,5,10,106264,106427,102672,6000.025601211,6011.603199299
c078,0,5,11,86868,87037,83615,6600.033675744,6612.491186504
# search time: 6600.034s
# total time: 6612.911s
c078,1,5,1,1158709,1158710,1028796,600.005324948,600.310476987
c078,1,5,2,766616,766780,742324,1200.005659433,1200.772633386
c078,1,5,3,468333,468495,450762,1800.006541953,1801.216621586
c078,1,5,4,263360,263515,252860,2400.006599182,2401.754680616
c078,1,5,5,276810,276975,266492,3000.009827209,3002.117673052
c078,1,5,6,256324,256484,248086,3600.012826484,3602.508956415
c078,1,5,7,206316,206479,198544,4200.014433624,4202.850931207
c078,1,5,8,189435,189595,184884,4800.018917348,4803.261905067
c078,1,5,9,98365,98530,95697,5400.0431611720005,5403.80391824
c078,1,5,10,106763,106931,103083,6000.043708814001,6004.272579153
c078,1,5,11,82890,83059,79884,6600.059215790001,6604.80571156
# search time: 6600.059s
# total time: 13218.407s
c078,2,5,1,1193251,1193252,1067253,600.002077945,600.259734485
c078,2,5,2,757405,757569,732749,1200.00418451,1200.588580729
c078,2,5,3,476400,476575,458690,1800.004957957,1800.893289654
c078,2,5,4,263203,263374,252716,2400.006376513,2401.262663093
c078,2,5,5,277377,277552,267359,3000.007954181,3001.551123856
c078,2,5,6,254536,254710,246146,3600.009387026,3601.806222078
c078,2,5,7,203037,203213,195557,4200.011122719,4202.177161449
c078,2,5,8,191508,191681,186750,4800.014229825,4802.521189151
c078,2,5,9,101180,101353,98313,5400.01538453,5402.956574207
c078,2,5,10,104814,104987,101246,6000.018267785,6003.184882618
c078,2,5,11,82999,83173,80006,6600.038821172,6603.571477289
# search time: 6600.039s
# total time: 19822.663s
c078,3,5,1,1206588,1206589,1091982,600.000195517,600.261943029
c078,3,5,2,730484,730646,706794,1200.002675624,1200.536467342
c078,3,5,3,474755,474925,457003,1800.006054722,1800.780492493
c078,3,5,4,272645,272813,261689,2400.007536566,2401.061284471
c078,3,5,5,275315,275482,265434,3000.0078079590003,3001.289738743
c078,3,5,6,251780,251951,243715,3600.012138423,3601.524761488
c078,3,5,7,204754,204919,197212,4200.013834387,4201.75074425
c078,3,5,8,188512,188680,183954,4800.017173503,4801.982145311
c078,3,5,9,103011,103177,100124,5400.022492512,5402.280103886
c078,3,5,10,105818,105988,102183,6000.034336931,6002.443604861
c078,3,5,11,80915,81085,78031,6600.040840731001,6602.747655999
# search time: 6600.041s
# total time: 26426.095s
c078,4,5,1,1193929,1193930,1021323,600.00178122,600.168733731
c078,4,5,2,746032,746225,722361,1200.00214908,1200.408492569
c078,4,5,3,473778,473968,455950,1800.002926588,1800.612427399
c078,4,5,4,262700,262896,252206,2400.003484053,2400.85800642
c078,4,5,5,280545,280744,270061,3000.0042035280003,3001.037506414
c078,4,5,6,291234,291436,281800,3600.007279363,3601.192850693
c078,4,5,7,228056,228256,220146,4200.008198266,4201.398125915
c078,4,5,8,222404,222602,216999,4800.010772458,4801.590255213
c078,4,5,9,122289,122485,118760,5400.015263297,5401.83404153
c078,4,5,10,122106,122300,117684,6000.017729131,6002.078945452
c078,4,5,11,98804,98996,95009,6600.018004361,6602.30258381
# search time: 6600.018s
# total time: 33029.125s
