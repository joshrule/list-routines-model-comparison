    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.34s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c005_1.json out/1594483387/results/c005_1_best.csv out/1594483387/results/c005_1_predictions.csv out/1594483387/results/c005_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 1, 9, 6, 7, 0, 4, 5, 3]), o: IntList([9]) }
#   Datum { i: IntList([7, 2, 1, 8, 0, 6, 3, 5, 9, 4]), o: IntList([5]) }
#   Datum { i: IntList([5, 1, 7, 6, 9, 8, 2, 0, 3, 4]), o: IntList([8]) }
#   Datum { i: IntList([9, 1, 6, 4, 7, 5, 3, 8, 2, 0]), o: IntList([0]) }
#   Datum { i: IntList([4, 1, 9, 6, 3, 2, 5, 0, 8, 7]), o: IntList([3]) }
#   Datum { i: IntList([4, 8, 5, 6, 2, 7, 1, 0, 3, 9]), o: IntList([2]) }
#   Datum { i: IntList([6, 1, 2, 8, 5, 4, 7, 9, 3, 0]), o: IntList([7]) }
#   Datum { i: IntList([2, 6, 3, 7, 4, 8, 1, 9, 5, 0]), o: IntList([3]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 6, 0, 5, 1, 4]), o: IntList([1]) }
#   Datum { i: IntList([3, 9, 4, 5, 1, 8, 2, 0, 6, 7]), o: IntList([5]) }
#   Datum { i: IntList([1, 6, 5, 8, 3, 4, 2, 7, 0, 9]), o: IntList([6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c005,0,1,1,952071,952072,844172,600.000137037,602.588485419
c005,0,1,2,585435,585606,567605,1200.000726023,1204.331202091
c005,0,1,3,251297,251455,242043,1800.008936788,1806.361529694
c005,0,1,4,242667,242832,232559,2400.0093874140002,2407.722759581
c005,0,1,5,157733,157890,151207,3000.010370408,3009.342225462
c005,0,1,6,123924,124085,118806,3600.014207572,3610.743399503
c005,0,1,7,95198,95358,91206,4200.029282515,4212.103742031
c005,0,1,8,76902,77063,73298,4800.033918772,4813.625775173
c005,0,1,9,61408,61570,58624,5400.051199812,5415.083134966
c005,0,1,10,46523,46694,44420,6000.056040283,6016.721211924
c005,0,1,11,34531,34696,33144,6600.072927892,6618.329200535
# search time: 6600.073s
# total time: 6618.638s
c005,1,1,1,941591,941592,805467,600.005623549,600.259412539
c005,1,1,2,606113,606289,586880,1200.007553169,1200.854501991
c005,1,1,3,253017,253191,243693,1800.0082138859998,1801.700291542
c005,1,1,4,244002,244174,234074,2400.013471166,2402.303224327
c005,1,1,5,169330,169500,162437,3000.014581517,3002.89730735
c005,1,1,6,120033,120209,115074,3600.029085316,3603.617577739
c005,1,1,7,93643,93811,89788,4200.034826163,4204.227646145
c005,1,1,8,77103,77273,73529,4800.034992301,4804.798112113
c005,1,1,9,56810,56980,54121,5400.092451785,5405.666561756
c005,1,1,10,45234,45404,43230,6000.098366559,6006.357348882
c005,1,1,11,33313,33483,32032,6600.162901688,6607.569872787
# search time: 6600.163s
# total time: 13226.661s
c005,2,1,1,914902,914903,818611,600.001567437,600.269825497
c005,2,1,2,578132,578300,560688,1200.001866426,1200.672008579
c005,2,1,3,253480,253650,244058,1800.002523883,1801.252280265
c005,2,1,4,245477,245637,235307,2400.0027510540003,2401.667478599
c005,2,1,5,157262,157435,150780,3000.004337661,3002.082026677
c005,2,1,6,109382,109555,105010,3600.011090364,3602.589977572
c005,2,1,7,95038,95209,90845,4200.020739510001,4203.235840576
c005,2,1,8,74617,74787,70938,4800.021640969,4803.589249225
c005,2,1,9,54753,54926,52184,5400.035175489,5404.119731968
c005,2,1,10,51505,51674,49294,6000.050088489,6004.59367339
c005,2,1,11,33554,33720,32288,6600.068958186,6605.140154479
# search time: 6600.069s
# total time: 19832.237s
c005,3,1,1,956910,956911,819081,600.000031006,600.174414336
c005,3,1,2,588661,588840,570206,1200.002440925,1200.527457733
c005,3,1,3,253532,253715,244132,1800.006815429,1800.924275188
c005,3,1,4,235562,235751,226407,2400.007180664,2401.231879975
c005,3,1,5,155382,155569,149049,3000.0078564839996,3001.602429332
c005,3,1,6,120847,121033,115835,3600.0161646279994,3602.033171923
c005,3,1,7,97105,97289,92936,4200.018853524999,4202.334963144
c005,3,1,8,76929,77112,73435,4800.0279833429995,4802.633814419
c005,3,1,9,60312,60499,57622,5400.059010174,5403.118313667
c005,3,1,10,52102,52290,49868,6000.059246325,6003.504135273
c005,3,1,11,34478,34667,33106,6600.071808643,6603.955719934
# search time: 6600.072s
# total time: 26436.632s
c005,4,1,1,944487,944488,855111,600.00086283,600.228784411
c005,4,1,2,582442,582609,564457,1200.001565512,1200.519515119
c005,4,1,3,251226,251395,242031,1800.00353367,1800.84562937
c005,4,1,4,244951,245128,234780,2400.004702773,2401.129880031
c005,4,1,5,170090,170256,163099,3000.006067262,3001.380370045
c005,4,1,6,123358,123533,118346,3600.0082817300004,3601.621250983
c005,4,1,7,95138,95307,90963,4200.031109607,4201.960223796
c005,4,1,8,76533,76702,72909,4800.038114459,4802.295498449
c005,4,1,9,59011,59184,56390,5400.047407598,5402.563837058
c005,4,1,10,49528,49696,47437,6000.048152047,6002.913490646
c005,4,1,11,33295,33462,32020,6600.048945561,6603.589996824
# search time: 6600.049s
# total time: 33040.834s
