    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c032_3.json out/1594483387/results/c032_3_best.csv out/1594483387/results/c032_3_predictions.csv out/1594483387/results/c032_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 9, 9]), o: IntList([8]) }
#   Datum { i: IntList([0, 8, 5, 4, 6, 1]), o: IntList([0, 8, 5, 4]) }
#   Datum { i: IntList([9, 8, 2, 9, 3, 6, 5, 8, 1]), o: IntList([2, 9, 3, 6, 5, 8, 1]) }
#   Datum { i: IntList([6, 3, 2, 9, 9, 2, 6, 2]), o: IntList([2, 9, 9, 2, 6, 2]) }
#   Datum { i: IntList([3, 7, 0, 5, 1, 4, 8, 6, 2, 9]), o: IntList([3, 7, 0, 5, 1, 4, 8, 6]) }
#   Datum { i: IntList([0, 9, 4, 6, 8, 2, 5, 7, 1]), o: IntList([0, 9, 4, 6, 8, 2, 5]) }
#   Datum { i: IntList([0, 1, 7, 9, 3]), o: IntList([0, 1, 7]) }
#   Datum { i: IntList([7, 6, 4, 4, 1, 8, 3]), o: IntList([4, 4, 1, 8, 3]) }
#   Datum { i: IntList([4, 7, 3, 3]), o: IntList([3, 3]) }
#   Datum { i: IntList([7, 7, 5, 5, 0, 7, 0, 5]), o: IntList([5, 5, 0, 7, 0, 5]) }
#   Datum { i: IntList([7, 2, 6, 0, 1, 1, 3, 4, 9, 8]), o: IntList([7, 2, 6, 0, 1, 1, 3, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c032,0,3,1,1093944,1093945,974849,600.000480365,602.59309973
c032,0,3,2,718744,718914,698792,1200.007323217,1203.629484068
c032,0,3,3,397760,397938,393611,1800.0080859089999,1804.493408284
c032,0,3,4,197831,198004,197063,2400.010970919,2405.174509102
c032,0,3,5,156725,156899,156367,3000.015984822,3005.745136808
c032,0,3,6,96550,96722,96226,3600.023807657,3606.393741475
c032,0,3,7,73567,73742,73401,4200.028200558,4207.05750114
c032,0,3,8,65122,65288,64989,4800.029826737,4807.689681855
c032,0,3,9,54022,54194,53830,5400.03407318,5408.396203027
c032,0,3,10,51609,51778,51342,6000.0458143139995,6009.049582123
c032,0,3,11,43948,44123,43859,6600.048344196999,6609.871175148
# search time: 6600.048s
# total time: 6610.269s
c032,1,3,1,993510,993511,871404,600.000096204,600.285618654
c032,1,3,2,724284,724455,703900,1200.00470717,1200.743924979
c032,1,3,3,396022,396193,391854,1800.005455425,1801.16156664
c032,1,3,4,189466,189646,189020,2400.00689732,2401.50175112
c032,1,3,5,161911,162090,161281,3000.0089818320002,3001.779480317
c032,1,3,6,91194,91372,91027,3600.012731017,3602.088966175
c032,1,3,7,76614,76793,76356,4200.022248622,4202.391796009
c032,1,3,8,64470,64647,64398,4800.027160283,4802.754845103
c032,1,3,9,54730,54912,54557,5400.02735348,5403.03083637
c032,1,3,10,50217,50394,50031,6000.03115707,6003.407884432
c032,1,3,11,45680,45858,45585,6600.032166702999,6603.826348255
# search time: 6600.032s
# total time: 13214.832s
c032,2,3,1,1088964,1088965,951963,600.002423856,600.275998335
c032,2,3,2,886321,886495,860904,1200.009239088,1200.640843138
c032,2,3,3,485575,485745,480304,1800.0098237070001,1800.920881446
c032,2,3,4,230361,230539,229728,2400.01286964,2401.16035452
c032,2,3,5,172611,172785,171898,3000.0142244010003,3001.350549908
c032,2,3,6,99370,99543,98991,3600.016681977,3601.506865265
c032,2,3,7,78107,78278,77831,4200.017088441,4201.664783205
c032,2,3,8,68804,68974,68647,4800.020025157,4801.870396513
c032,2,3,9,56401,56572,56219,5400.028139508,5402.117725648
c032,2,3,10,50481,50652,50312,6000.056802363,6002.48287383
c032,2,3,11,42628,42804,42563,6600.070047369,6602.837139021
# search time: 6600.070s
# total time: 19818.444s
c032,3,3,1,1093324,1093325,970746,600.002589384,600.240100958
c032,3,3,2,745139,745304,723742,1200.003714647,1200.504567617
c032,3,3,3,403657,403829,399378,1800.004012014,1800.711472537
c032,3,3,4,200874,201044,200084,2400.004851173,2400.878956254
c032,3,3,5,163642,163814,162964,3000.007159827,3001.027161659
c032,3,3,6,92826,92994,92572,3600.0076362480004,3601.175340169
c032,3,3,7,72575,72740,72461,4200.012931087001,4201.361829773
c032,3,3,8,68432,68599,68243,4800.016581223001,4801.566698324
c032,3,3,9,53352,53511,53258,5400.025609082,5401.742729568
c032,3,3,10,50070,50235,49879,6000.028138038,6001.911062569
c032,3,3,11,45040,45205,44870,6600.0329768500005,6602.121601527
# search time: 6600.033s
# total time: 26421.502s
c032,4,3,1,1105372,1105373,994514,600.00012899,600.230784847
c032,4,3,2,732402,732563,711639,1200.0005159070001,1200.46058729
c032,4,3,3,391324,391488,387222,1800.0010958490002,1800.644484147
c032,4,3,4,201859,202029,201087,2400.0016764330003,2400.806049315
c032,4,3,5,158548,158717,158181,3000.002465026,3000.911435842
c032,4,3,6,91409,91571,91228,3600.006672302,3601.009997566
c032,4,3,7,72621,72787,72495,4200.008981484,4201.159762751
c032,4,3,8,67218,67387,67007,4800.015490006001,4801.286811177
c032,4,3,9,55616,55785,55440,5400.019699366001,5401.401825123
c032,4,3,10,51607,51775,51367,6000.025830539001,6001.515437214
c032,4,3,11,44518,44689,44351,6600.028403810001,6601.629751317
# search time: 6600.028s
# total time: 33023.520s
