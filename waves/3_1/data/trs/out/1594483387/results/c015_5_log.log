    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.53s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c015_5.json out/1594483387/results/c015_5_best.csv out/1594483387/results/c015_5_predictions.csv out/1594483387/results/c015_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4, 7, 7, 5, 1, 9, 5, 7]), o: IntList([7, 7, 5, 1]) }
#   Datum { i: IntList([1, 3, 9, 2, 0, 5, 7, 5, 7, 1]), o: IntList([9, 2, 0]) }
#   Datum { i: IntList([5, 6, 2, 9, 8, 8, 9, 3, 1]), o: IntList([9, 3]) }
#   Datum { i: IntList([7, 8, 2, 1, 7, 8, 7, 7, 7, 7]), o: IntList([7, 7]) }
#   Datum { i: IntList([4, 5, 6, 6, 4, 6, 9, 9]), o: IntList([6, 9]) }
#   Datum { i: IntList([1, 2, 9, 3, 1, 4, 0, 1, 2, 8]), o: IntList([9, 3]) }
#   Datum { i: IntList([1, 1, 3, 2, 3, 4, 5, 6, 5, 1]), o: IntList([3]) }
#   Datum { i: IntList([3, 4, 5, 5, 4, 3, 3]), o: IntList([4, 3]) }
#   Datum { i: IntList([2, 4, 9, 0, 7, 6, 0, 9, 0, 4]), o: IntList([0, 7, 6]) }
#   Datum { i: IntList([6, 7, 0, 1, 3, 5, 9, 4, 2, 8]), o: IntList([4, 2]) }
#   Datum { i: IntList([1, 5, 8, 3, 6, 2, 4, 8, 0]), o: IntList([8, 3, 6, 2, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c015,0,5,1,1013844,1013845,900263,600.00284598,602.466598903
c015,0,5,2,401450,401623,388344,1200.004644899,1203.845973538
c015,0,5,3,255037,255206,252876,1800.004874149,1805.189739501
c015,0,5,4,188519,188691,187590,2400.006006563,2406.448270236
c015,0,5,5,145575,145751,145220,3000.006168461,3007.841196985
c015,0,5,6,124780,124954,124344,3600.012705571,3609.130283478
c015,0,5,7,88425,88604,88024,4200.015714632,4210.491450394
c015,0,5,8,73286,73461,72972,4800.024770759,4812.024196425
c015,0,5,9,60378,60558,57919,5400.029872393,5413.429353996
c015,0,5,10,53143,53313,51314,6000.041472218,6014.699083959
c015,0,5,11,39617,39790,37984,6600.061360807,6616.194542486
# search time: 6600.061s
# total time: 6616.517s
c015,1,5,1,948761,948762,840577,600.004818422,600.383026103
c015,1,5,2,420222,420388,406672,1200.0055828519999,1200.860919151
c015,1,5,3,262725,262895,260542,1800.006409469,1801.400450442
c015,1,5,4,198665,198839,197834,2400.00781542,2401.97518564
c015,1,5,5,150171,150343,149597,3000.011751528,3002.559904903
c015,1,5,6,129258,129429,128782,3600.013834372,3603.046513636
c015,1,5,7,97934,98101,97357,4200.018774794,4203.631861248
c015,1,5,8,74885,75047,74645,4800.025588683,4804.421292293
c015,1,5,9,63438,63610,60856,5400.043661247,5405.04870501
c015,1,5,10,54197,54359,52342,6000.046921153,6005.783570244
c015,1,5,11,47570,47735,45747,6600.058755582,6606.161568998
# search time: 6600.059s
# total time: 13223.258s
c015,2,5,1,1024772,1024773,875154,600.002807149,600.210121188
c015,2,5,2,415060,415229,402026,1200.003097646,1200.560023151
c015,2,5,3,260250,260434,258163,1800.005571277,1800.907274132
c015,2,5,4,192499,192684,191602,2400.006681882,2401.281066706
c015,2,5,5,145862,146042,145530,3000.0094242610003,3001.654259178
c015,2,5,6,127817,127986,127360,3600.0106456930002,3601.997933485
c015,2,5,7,89851,90032,89489,4200.011615134001,4202.402061986
c015,2,5,8,74547,74729,74349,4800.014419443,4803.010559056
c015,2,5,9,62864,63041,60412,5400.016623915,5403.385692175
c015,2,5,10,55029,55202,53222,6000.017306552,6003.833501651
c015,2,5,11,46506,46674,44670,6600.03138141,6604.379964397
# search time: 6600.031s
# total time: 19828.240s
c015,3,5,1,1037317,1037318,884723,600.006319404,600.179623516
c015,3,5,2,405801,405975,392776,1200.006650221,1200.457401867
c015,3,5,3,250306,250475,248363,1800.007628994,1800.724238748
c015,3,5,4,191253,191426,190387,2400.0090329,2401.005458851
c015,3,5,5,143299,143480,142901,3000.0112856,3001.335171759
c015,3,5,6,122347,122526,121900,3600.0149401460003,3601.588018034
c015,3,5,7,92718,92893,92170,4200.019641004001,4201.877987707
c015,3,5,8,71328,71503,71013,4800.030709958,4802.211742635
c015,3,5,9,60252,60426,57840,5400.033664253,5402.531186373
c015,3,5,10,50319,50493,48626,6000.0620091420005,6002.913235449
c015,3,5,11,40594,40766,39036,6600.072666314,6603.956105733
# search time: 6600.073s
# total time: 26433.968s
c015,4,5,1,585268,585269,501831,600.000641852,600.19880345
c015,4,5,2,245002,245181,237373,1200.001801746,1200.428064107
c015,4,5,3,148143,148322,147045,1800.0023369229998,1800.636679585
c015,4,5,4,110991,111170,110639,2400.0030284289996,2400.859322134
c015,4,5,5,83109,83300,82980,3000.0108924509996,3001.120684025
c015,4,5,6,70494,70685,70314,3600.016561183,3601.393457165
c015,4,5,7,53778,53964,53471,4200.019953464,4201.753432474
c015,4,5,8,42148,42336,42028,4800.0424809999995,4802.166404781
c015,4,5,9,34685,34869,33339,5400.043005156,5402.349305039
c015,4,5,10,34689,34871,33555,6000.05263551,6002.609483293
c015,4,5,11,37239,37419,35732,6600.0540845880005,6602.883174887
# search time: 6600.054s
# total time: 33037.490s
