    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.37s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c005_5.json out/1594483387/results/c005_5_best.csv out/1594483387/results/c005_5_predictions.csv out/1594483387/results/c005_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 6, 5, 8, 3, 4, 2, 7, 0, 9]), o: IntList([6]) }
#   Datum { i: IntList([4, 8, 5, 6, 2, 7, 1, 0, 3, 9]), o: IntList([2]) }
#   Datum { i: IntList([2, 1, 9, 6, 7, 0, 4, 5, 3]), o: IntList([9]) }
#   Datum { i: IntList([9, 1, 6, 4, 7, 5, 3, 8, 2, 0]), o: IntList([0]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 6, 0, 5, 1, 4]), o: IntList([1]) }
#   Datum { i: IntList([5, 1, 7, 6, 9, 8, 2, 0, 3, 4]), o: IntList([8]) }
#   Datum { i: IntList([3, 9, 4, 5, 1, 8, 2, 0, 6, 7]), o: IntList([5]) }
#   Datum { i: IntList([4, 1, 9, 6, 3, 2, 5, 0, 8, 7]), o: IntList([3]) }
#   Datum { i: IntList([7, 2, 1, 8, 0, 6, 3, 5, 9, 4]), o: IntList([5]) }
#   Datum { i: IntList([2, 6, 3, 7, 4, 8, 1, 9, 5, 0]), o: IntList([3]) }
#   Datum { i: IntList([6, 1, 2, 8, 5, 4, 7, 9, 3, 0]), o: IntList([7]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c005,0,5,1,908163,908164,805873,600.000378785,602.563591642
c005,0,5,2,438574,438737,425239,1200.000398942,1205.607640078
c005,0,5,3,370833,371000,358902,1800.001695003,1807.084563525
c005,0,5,4,244627,244789,234467,2400.0131094939998,2408.389626388
c005,0,5,5,155322,155482,148895,3000.015700602,3010.010297255
c005,0,5,6,118454,118621,113539,3600.038363575,3611.614230029
c005,0,5,7,80758,80920,77398,4200.038549889,4213.250791415
c005,0,5,8,72539,72702,69293,4800.05221644,4814.742353081
c005,0,5,9,61077,61245,58306,5400.06741673,5416.253495614
c005,0,5,10,97756,97924,94803,6000.075929122,6017.213005934
c005,0,5,11,86299,86467,83701,6600.076919116,6618.151427794
# search time: 6600.077s
# total time: 6618.576s
c005,1,5,1,907343,907344,818019,600.000175229,600.327337246
c005,1,5,2,430071,430246,416800,1200.001146316,1201.250259861
c005,1,5,3,372947,373112,360685,1800.0011618959998,1801.807945971
c005,1,5,4,235577,235747,226189,2400.0038074349995,2402.489721721
c005,1,5,5,168082,168261,161213,3000.0048762009997,3003.163461387
c005,1,5,6,119458,119630,114523,3600.007670651,3603.983803566
c005,1,5,7,89777,89952,85608,4200.01590914,4204.779380969
c005,1,5,8,60258,60429,57362,4800.017946048,4805.653644114
c005,1,5,9,57586,57761,54831,5400.020718161,5406.445408996
c005,1,5,10,99117,99284,96171,6000.021808866,6006.97008749
c005,1,5,11,85956,86128,83380,6600.044713237,6607.587001612
# search time: 6600.045s
# total time: 13226.890s
c005,2,5,1,728246,728247,651444,600.004414608,600.304737148
c005,2,5,2,326009,326180,315930,1200.005412686,1200.726904088
c005,2,5,3,365254,365437,353955,1800.006363073,1801.190431679
c005,2,5,4,228719,228891,219935,2400.007022325,2401.707294298
c005,2,5,5,139706,139879,133981,3000.0111145700002,3002.161377579
c005,2,5,6,107819,107989,103673,3600.0111269040003,3602.730266429
c005,2,5,7,91627,91797,87375,4200.011468705,4203.137686338
c005,2,5,8,70807,70976,67594,4800.02181302,4803.654927373
c005,2,5,9,61545,61718,58752,5400.036828784,5404.27291375
c005,2,5,10,98506,98674,95574,6000.039087442,6004.661155951
c005,2,5,11,84673,84844,82047,6600.040906384,6604.971870169
# search time: 6600.041s
# total time: 19832.537s
c005,3,5,1,774358,774359,678106,600.007619844,600.188818397
c005,3,5,2,448808,448983,435016,1200.007652834,1200.636929459
c005,3,5,3,364550,364727,353121,1800.008037711,1800.979084885
c005,3,5,4,241232,241404,231164,2400.012465852,2401.26765426
c005,3,5,5,149905,150078,143713,3000.012864197,3001.701864331
c005,3,5,6,120819,120991,115805,3600.023658916,3602.081355887
c005,3,5,7,81224,81397,77740,4200.028500718,4202.616467935
c005,3,5,8,61211,61381,58326,4800.034855258,4803.050000997
c005,3,5,9,60204,60375,57569,5400.052108599,5403.457706344
c005,3,5,10,97493,97666,94591,6000.057230215,6003.792516726
c005,3,5,11,84652,84825,82031,6600.059924821,6604.003911832
# search time: 6600.060s
# total time: 26437.222s
c005,4,5,1,820953,820954,731660,600.001654786,600.202703878
c005,4,5,2,440483,440650,427245,1200.002700152,1200.558363545
c005,4,5,3,346893,347062,335735,1800.003900552,1800.956600122
c005,4,5,4,157340,157511,150682,2400.008859008,2401.126060738
c005,4,5,5,153096,153270,146761,3000.0089160899997,3001.465104535
c005,4,5,6,120209,120370,115267,3600.0090728019995,3601.832651174
c005,4,5,7,89598,89764,85442,4200.009231352999,4202.157788546
c005,4,5,8,61087,61255,58207,4800.023789329999,4802.558594183
c005,4,5,9,58415,58586,55646,5400.031375782999,5402.971768325
c005,4,5,10,97065,97232,94149,6000.032260321999,6003.136929233
c005,4,5,11,87037,87203,84305,6600.040297557999,6603.409218195
# search time: 6600.040s
# total time: 33041.313s
