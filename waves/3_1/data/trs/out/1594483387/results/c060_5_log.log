    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_5.json out/1594483387/results/c060_5_best.csv out/1594483387/results/c060_5_predictions.csv out/1594483387/results/c060_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,5,1,1100843,1100844,985816,600.001602065,602.279895976
c060,0,5,2,339538,339707,330469,1200.004085483,1203.90387185
c060,0,5,3,209654,209827,203086,1800.0042245179998,1804.780858526
c060,0,5,4,121358,121536,118593,2400.009256646,2406.305354992
c060,0,5,5,95276,95441,93142,3000.010922094,3007.732790597
c060,0,5,6,73403,73571,71756,3600.0120120409997,3609.204968123
c060,0,5,7,60347,60523,58942,4200.0233635469995,4210.628548391
c060,0,5,8,50815,50983,49733,4800.039971795999,4812.112657651
c060,0,5,9,39169,39346,38205,5400.046143161999,5413.988712411
c060,0,5,10,34221,34391,33289,6000.047818209999,6015.746655149
c060,0,5,11,29804,29976,29030,6600.049438269999,6617.19431092
# search time: 6600.049s
# total time: 6617.413s
c060,1,5,1,1088613,1088614,974025,600.002348247,600.327025604
c060,1,5,2,344900,345068,335722,1200.0028346889999,1200.953261991
c060,1,5,3,208536,208706,201787,1800.0047343709998,1801.32015932
c060,1,5,4,120294,120463,117455,2400.021197178,2402.007983198
c060,1,5,5,94553,94719,92263,3000.0246900849997,3002.681308704
c060,1,5,6,71533,71697,69420,3600.0256337129995,3603.281016962
c060,1,5,7,59374,59547,57984,4200.0273331319995,4203.954872118
c060,1,5,8,50329,50495,49256,4800.029602383,4804.738180936
c060,1,5,9,38219,38400,37189,5400.040675288,5405.57914921
c060,1,5,10,32593,32756,31721,6000.044014792,6006.206945915
c060,1,5,11,29621,29788,28843,6600.0488494539995,6607.479298392
# search time: 6600.049s
# total time: 13225.217s
c060,2,5,1,1075929,1075930,960240,600.000345526,600.259566077
c060,2,5,2,338426,338593,329129,1200.0011610850001,1200.632945808
c060,2,5,3,207285,207445,200515,1800.002088545,1800.895847992
c060,2,5,4,121059,121230,118464,2400.008801299,2401.379473275
c060,2,5,5,94445,94616,92245,3000.014654574,3001.840453598
c060,2,5,6,73132,73301,71360,3600.019585684,3602.247865372
c060,2,5,7,60138,60310,58799,4200.021496954,4202.723095169
c060,2,5,8,49825,49999,48786,4800.038604276,4803.203681506
c060,2,5,9,38946,39125,38003,5400.04665052,5403.835311838
c060,2,5,10,33630,33800,32794,6000.048341202,6004.079686485
c060,2,5,11,29082,29250,28291,6600.051297734,6604.881959469
# search time: 6600.051s
# total time: 19830.485s
c060,3,5,1,1080733,1080734,966371,600.004508105,600.240720605
c060,3,5,2,333424,333596,324293,1200.008812874,1200.521736093
c060,3,5,3,208431,208605,201770,1800.0095444969998,1800.714449608
c060,3,5,4,119668,119842,116865,2400.0123765119997,2401.101421261
c060,3,5,5,94958,95131,92890,3000.0127568549997,3001.42927559
c060,3,5,6,72306,72483,70586,3600.0149918999996,3601.778736393
c060,3,5,7,59781,59959,58414,4200.035984196999,4202.141445049
c060,3,5,8,49808,49983,48784,4800.040047293999,4802.52385281
c060,3,5,9,38988,39164,37960,5400.041258080999,5402.977059416
c060,3,5,10,33501,33679,32635,6000.041713557999,6003.377314107
c060,3,5,11,29124,29301,28267,6600.076714698999,6603.884870989
# search time: 6600.077s
# total time: 26434.594s
c060,4,5,1,1072351,1072352,964013,600.001438406,600.223605146
c060,4,5,2,333628,333806,324489,1200.0025688340002,1200.467173623
c060,4,5,3,206930,207103,200467,1802.3062374290002,1802.935411034
c060,4,5,4,119092,119271,116163,2402.306387941,2403.201504592
c060,4,5,5,105041,105216,102394,3002.30677547,3003.462311864
c060,4,5,6,83645,83829,81579,3602.313638964,3603.713373191
c060,4,5,7,70024,70208,68277,4202.31913025,4203.96647846
c060,4,5,8,60162,60348,58921,4802.3313589419995,4804.249316185
c060,4,5,9,45849,46032,44642,5402.336575238,5404.640257943
c060,4,5,10,37999,38168,37042,6002.344798034999,6005.078670663
c060,4,5,11,34317,34495,33379,6602.354113543,6605.449494485
# search time: 6602.354s
# total time: 33040.375s
