    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.26s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c002_1.json out/1594483387/results/c002_1_best.csv out/1594483387/results/c002_1_predictions.csv out/1594483387/results/c002_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5]), o: IntList([]) }
#   Datum { i: IntList([5, 6, 1, 3, 2, 0, 7, 8, 9, 4]), o: IntList([1]) }
#   Datum { i: IntList([6, 7, 8, 1, 4, 3, 0, 5, 9, 2]), o: IntList([8]) }
#   Datum { i: IntList([7, 4, 3, 9, 5, 8, 2, 1, 6]), o: IntList([3]) }
#   Datum { i: IntList([4, 6]), o: IntList([]) }
#   Datum { i: IntList([3, 9]), o: IntList([]) }
#   Datum { i: IntList([4, 7, 1, 2, 6, 3, 8, 9, 0, 5]), o: IntList([1]) }
#   Datum { i: IntList([5, 7]), o: IntList([]) }
#   Datum { i: IntList([9, 6, 2, 5, 8, 7, 3, 4, 1, 0]), o: IntList([2]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([7, 9, 0, 2, 1, 8, 6, 3, 5, 4]), o: IntList([0]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c002,0,1,1,1082644,1082645,970951,600.000296891,602.575202002
c002,0,1,2,887111,887272,838661,1200.001293102,1203.45174898
c002,0,1,3,561630,561796,540652,1800.002032087,1804.414413301
c002,0,1,4,353888,354058,337918,2400.003442109,2405.300559186
c002,0,1,5,161746,161914,155044,3000.004082846,3006.579993247
c002,0,1,6,290969,291138,282185,3600.014713413,3607.306366053
c002,0,1,7,267496,267664,259535,4200.015166189,4207.976928947
c002,0,1,8,238087,238253,230866,4800.0162757200005,4808.567333149
c002,0,1,9,225238,225404,218091,5400.021757992001,5409.120945758
c002,0,1,10,114597,114758,109965,6000.023244199001,6009.925489158
c002,0,1,11,99777,99946,95874,6600.023671482001,6610.86822553
# search time: 6600.024s
# total time: 6611.291s
c002,1,1,1,1054758,1054759,938988,600.006269023,600.333289414
c002,1,1,2,864692,864864,818987,1200.006303064,1200.679552673
c002,1,1,3,545747,545916,525186,1800.006520341,1801.032808322
c002,1,1,4,365074,365245,349066,2400.0161745309997,2401.41291281
c002,1,1,5,171236,171403,163801,3000.0185376809995,3001.961120417
c002,1,1,6,282475,282647,273717,3600.0201019609995,3602.297096373
c002,1,1,7,264602,264774,256676,4200.021139205,4202.651852481
c002,1,1,8,238157,238327,230964,4800.034391657,4802.95552075
c002,1,1,9,224315,224482,217222,5400.038015725,5403.201529149
c002,1,1,10,115221,115393,110481,6000.040482771,6003.585876471
c002,1,1,11,99037,99215,95081,6600.041091274,6604.03501584
# search time: 6600.041s
# total time: 13216.025s
c002,2,1,1,1097380,1097381,938328,600.009239778,600.183848442
c002,2,1,2,834824,835015,790492,1200.0113070940001,1200.458890689
c002,2,1,3,555564,555748,535113,1800.0125771310002,1800.734846908
c002,2,1,4,356006,356190,340102,2400.0135733670004,2400.99612678
c002,2,1,5,170327,170513,162962,3000.0149667160003,3001.329283665
c002,2,1,6,287225,287416,278684,3600.01540181,3601.580055261
c002,2,1,7,264141,264331,256168,4200.020631866,4201.809788824
c002,2,1,8,237122,237305,229844,4800.020952809,4802.040249761
c002,2,1,9,223039,223229,215924,5400.026973356,5402.258792129
c002,2,1,10,109999,110188,105873,6000.041279307,6002.556659066
c002,2,1,11,97368,97561,93534,6600.046215403,6602.925738608
# search time: 6600.046s
# total time: 19819.650s
c002,3,1,1,1001989,1001990,886467,600.000046173,600.205872943
c002,3,1,2,867708,867877,820790,1200.001217435,1200.450194772
c002,3,1,3,552829,553004,532305,1800.002152769,1800.68090381
c002,3,1,4,370154,370327,353923,2400.002165719,2400.864911629
c002,3,1,5,171437,171599,164129,3000.0064351290002,3001.103667408
c002,3,1,6,285912,286080,277252,3600.0071393300004,3601.323730276
c002,3,1,7,262946,263113,254734,4200.007503308,4201.524564195
c002,3,1,8,234430,234602,227148,4800.008573887,4801.671967101
c002,3,1,9,223749,223920,216651,5400.008675575,5401.874311383
c002,3,1,10,114251,114417,109603,6000.013145025,6002.09891485
c002,3,1,11,96369,96544,92462,6600.016527373,6602.396144807
# search time: 6600.017s
# total time: 26422.722s
c002,4,1,1,995631,995632,883485,600.001165679,600.201621526
c002,4,1,2,884242,884404,836303,1200.001434616,1200.431402294
c002,4,1,3,551741,551901,530973,1800.001512707,1800.659373503
c002,4,1,4,360381,360548,344583,2400.002196378,2400.83610729
c002,4,1,5,161749,161913,154941,3000.0044306199998,3001.07893951
c002,4,1,6,285585,285751,276978,3600.0069941059996,3601.238095268
c002,4,1,7,263075,263240,254835,4200.0084189009995,4201.380822762
c002,4,1,8,232678,232839,225172,4800.009258497999,4801.52426811
c002,4,1,9,220297,220462,213079,5400.009812971999,5401.668182174
c002,4,1,10,115235,115396,110503,6000.010479449999,6001.915781843
c002,4,1,11,109854,110020,105345,6600.010519864999,6602.098676698
# search time: 6600.011s
# total time: 33025.532s
