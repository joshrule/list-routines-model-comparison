    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.55s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c030_2.json out/1594483387/results/c030_2_best.csv out/1594483387/results/c030_2_predictions.csv out/1594483387/results/c030_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([2, 5, 7, 8, 2, 2, 9, 3, 1, 0]), o: IntList([2, 5, 7, 8, 2, 2, 9, 3]) }
#   Datum { i: IntList([5, 3]), o: IntList([]) }
#   Datum { i: IntList([9, 7, 2, 5, 9, 4, 6, 8, 4]), o: IntList([9, 7, 2, 5, 9, 4, 6]) }
#   Datum { i: IntList([6, 4, 8, 1, 0]), o: IntList([6, 4, 8]) }
#   Datum { i: IntList([5, 7, 1, 8, 9, 4, 1, 6, 2, 3]), o: IntList([5, 7, 1, 8, 9, 4, 1, 6]) }
#   Datum { i: IntList([6, 4, 1, 6, 7, 2, 5, 8]), o: IntList([6, 4, 1, 6, 7, 2]) }
#   Datum { i: IntList([5, 4, 5, 0]), o: IntList([5, 4]) }
#   Datum { i: IntList([0, 0, 3, 3, 0, 3, 0]), o: IntList([0, 0, 3, 3, 0]) }
#   Datum { i: IntList([6, 2, 9, 7, 8, 3, 8, 5, 0]), o: IntList([6, 2, 9, 7, 8, 3, 8]) }
#   Datum { i: IntList([9, 7, 4, 3, 8, 1]), o: IntList([9, 7, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,2,1,1112581,1112582,950089,600.001582986,601.995319079
c030,0,2,2,700704,700892,681400,1200.0016411850002,1203.077646875
c030,0,2,3,239810,239997,237874,1800.0018296790001,1803.982895879
c030,0,2,4,245627,245821,238483,2400.0062801530003,2404.555751921
c030,0,2,5,138190,138380,135206,3000.0106857650003,3005.296888446
c030,0,2,6,111282,111468,109650,3600.0183022200004,3606.040833081
c030,0,2,7,85752,85939,83861,4200.018501137,4206.738202042
c030,0,2,8,71100,71289,68542,4800.024907922,4807.373493373
c030,0,2,9,66714,66904,64225,5400.030439941001,5407.944132791
c030,0,2,10,56756,56952,54507,6000.036607766001,6008.543204862
c030,0,2,11,45024,45210,43036,6600.054577463001,6609.187118999
# search time: 6600.055s
# total time: 6609.591s
c030,1,2,1,1017249,1017250,905957,600.000187668,600.398927239
c030,1,2,2,709024,709184,688360,1200.000859784,1200.91766014
c030,1,2,3,238414,238585,236480,1800.0051074490002,1801.34490646
c030,1,2,4,237864,238032,230886,2400.0071285020003,2401.666747806
c030,1,2,5,131487,131653,128700,3000.0190710940005,3002.071033154
c030,1,2,6,110796,110965,108520,3600.0209916290005,3602.400281484
c030,1,2,7,83597,83772,81755,4200.024921168,4202.742305846
c030,1,2,8,67061,67231,64436,4800.032861489,4803.104720298
c030,1,2,9,64263,64435,61909,5400.0350150740005,5403.401633929
c030,1,2,10,53799,53971,51602,6000.039956050001,6003.692570595
c030,1,2,11,46126,46297,44239,6600.052992228001,6604.064227367
# search time: 6600.053s
# total time: 13214.322s
c030,2,2,1,913477,913478,799344,600.00518167,600.231135362
c030,2,2,2,681528,681699,662306,1200.005923241,1200.558109459
c030,2,2,3,233354,233528,231489,1800.007471276,1800.830103017
c030,2,2,4,238778,238956,231820,2400.008437333,2401.053490046
c030,2,2,5,127906,128081,125413,3000.010018622,3001.308672734
c030,2,2,6,88415,88583,87284,3600.0134923660003,3601.635542436
c030,2,2,7,84129,84303,82493,4200.013549321,4201.858484
c030,2,2,8,67829,68002,65313,4800.017995405,4802.084173442
c030,2,2,9,62984,63158,60742,5400.030023224,5402.324930711
c030,2,2,10,54162,54334,51977,6000.042799598,6002.536863564
c030,2,2,11,42648,42820,40713,6600.044802603,6602.810784726
# search time: 6600.045s
# total time: 19817.776s
c030,3,2,1,972382,972383,868913,600.000269829,600.268471704
c030,3,2,2,720661,720824,700608,1200.001582508,1200.549544374
c030,3,2,3,228780,228948,226872,1800.001645525,1800.756937193
c030,3,2,4,239329,239505,232365,2400.008196242,2400.933235419
c030,3,2,5,126233,126405,123927,3000.008250373,3001.156698418
c030,3,2,6,111965,112135,109704,3600.0106640599997,3601.357212392
c030,3,2,7,83965,84134,82074,4200.014469295,4201.554072309
c030,3,2,8,67976,68145,65660,4800.0218585679995,4801.767506888
c030,3,2,9,63670,63840,61231,5400.034095268999,5401.91275894
c030,3,2,10,54077,54244,51848,6000.040174082,6002.090725941
c030,3,2,11,43672,43839,41733,6600.042226494,6602.267793963
# search time: 6600.042s
# total time: 26420.707s
c030,4,2,1,1000222,1000223,894322,600.000059869,600.242347775
c030,4,2,2,726769,726934,706519,1200.000376563,1200.500617133
c030,4,2,3,231644,231818,229806,1800.006294718,1800.682179573
c030,4,2,4,237532,237702,230649,2400.008077471,2400.84212528
c030,4,2,5,131596,131759,128813,3000.01097486,3000.998727857
c030,4,2,6,112309,112473,110040,3600.0181633169996,3601.141412729
c030,4,2,7,83027,83203,81375,4200.019531843,4201.303983112
c030,4,2,8,67844,68015,65632,4800.024767446999,4801.460367432
c030,4,2,9,63618,63787,61455,5400.026969729999,5401.617572151
c030,4,2,10,53379,53550,51377,6000.032116852999,6001.761669919
c030,4,2,11,45516,45688,43609,6600.043481848999,6601.973818758
# search time: 6600.043s
# total time: 33023.358s
