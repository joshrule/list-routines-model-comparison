    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c036_3.json out/1594483387/results/c036_3_best.csv out/1594483387/results/c036_3_predictions.csv out/1594483387/results/c036_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 4, 1, 9, 7]), o: IntList([0, 1, 4, 9, 7]) }
#   Datum { i: IntList([6, 2, 9, 1, 4, 3, 0]), o: IntList([1, 2, 9, 6, 4, 3, 0]) }
#   Datum { i: IntList([9, 6, 9, 6, 9, 6]), o: IntList([6, 6, 9, 9, 9, 6]) }
#   Datum { i: IntList([5, 3, 2, 9, 7, 3, 3, 0]), o: IntList([5, 2, 3, 9, 7, 3, 3, 0]) }
#   Datum { i: IntList([8, 8, 7, 8]), o: IntList([8, 7, 8, 8]) }
#   Datum { i: IntList([6, 0, 8, 2, 5, 2, 1, 7, 3, 4]), o: IntList([2, 0, 8, 6, 5, 2, 1, 7, 3, 4]) }
#   Datum { i: IntList([7, 5, 0, 7, 1, 2]), o: IntList([7, 0, 5, 7, 1, 2]) }
#   Datum { i: IntList([7, 0, 4, 1, 2, 9, 8, 6, 5]), o: IntList([1, 0, 4, 7, 2, 9, 8, 6, 5]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 6, 1]), o: IntList([5, 5, 8, 8, 3, 6, 1]) }
#   Datum { i: IntList([1, 4, 0, 4]), o: IntList([1, 0, 4, 4]) }
#   Datum { i: IntList([5, 3, 3, 2, 4]), o: IntList([2, 3, 3, 5, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c036,0,3,1,1086220,1086221,977605,600.009052757,602.531860641
c036,0,3,2,419003,419176,407968,1200.0134009429999,1203.716102582
c036,0,3,3,227336,227495,226021,1800.0145999909998,1804.656325525
c036,0,3,4,167094,167264,166103,2400.0154268399997,2405.452516029
c036,0,3,5,116273,116438,113798,3000.0170827019997,3006.143986735
c036,0,3,6,116412,116578,114764,3600.020869745,3606.656810497
c036,0,3,7,71449,71612,71222,4200.037477657,4207.380921416
c036,0,3,8,60342,60505,60199,4800.040091483,4808.108797071
c036,0,3,9,49819,49985,49706,5400.047169879,5408.836275503
c036,0,3,10,39580,39747,39585,6000.058513958,6009.683515527
c036,0,3,11,41489,41660,41344,6600.076826828,6610.358087351
# search time: 6600.077s
# total time: 6610.934s
c036,1,3,1,996027,996028,871524,600.000184722,600.339227061
c036,1,3,2,418622,418791,407161,1200.000886044,1200.765804943
c036,1,3,3,225424,225601,224020,1800.003799573,1801.184228447
c036,1,3,4,160330,160513,159601,2400.00576894,2401.651304833
c036,1,3,5,116213,116388,113787,3000.0082650120003,3002.066507086
c036,1,3,6,115396,115569,113733,3600.008622362,3602.301774084
c036,1,3,7,71018,71186,70856,4200.00865033,4202.654287985
c036,1,3,8,61032,61204,60803,4800.014026108,4802.996011479
c036,1,3,9,49034,49210,48920,5400.015546773,5403.378296773
c036,1,3,10,39732,39909,39712,6000.017892248,6003.758364853
c036,1,3,11,41873,42047,41765,6600.018490552,6604.035013141
# search time: 6600.018s
# total time: 13215.333s
c036,2,3,1,1168420,1168421,998505,600.001875236,600.236178576
c036,2,3,2,458415,458591,446281,1200.002816635,1200.534794768
c036,2,3,3,250633,250804,249070,1800.004298363,1800.801314256
c036,2,3,4,187557,187744,186432,2400.004749797,2401.053081082
c036,2,3,5,117613,117797,115584,3000.008096306,3001.278741968
c036,2,3,6,116174,116356,114478,3600.012214881,3601.465576104
c036,2,3,7,72689,72863,72423,4200.015252956,4201.725252132
c036,2,3,8,61600,61782,61489,4800.016559155,4802.025166037
c036,2,3,9,49453,49635,49310,5400.031240681001,5402.274472505
c036,2,3,10,41720,41911,41649,6000.045638356001,6002.539738929
c036,2,3,11,42024,42208,41895,6600.061560369001,6602.733534894
# search time: 6600.062s
# total time: 19818.728s
c036,3,3,1,1106595,1106596,994750,600.007631443,600.280798489
c036,3,3,2,430077,430255,418537,1200.008088686,1200.526809694
c036,3,3,3,222093,222266,220681,1800.0093614020002,1800.733476609
c036,3,3,4,167951,168128,166875,2400.010706862,2400.935703023
c036,3,3,5,117525,117694,115097,3000.014280282,3001.080492951
c036,3,3,6,116125,116303,114377,3600.017184916,3601.226236198
c036,3,3,7,71330,71498,71045,4200.01823983,4201.452883449
c036,3,3,8,60391,60568,60379,4800.019309274,4801.621061262
c036,3,3,9,49412,49588,49256,5400.022583499,5401.853134092
c036,3,3,10,41544,41718,41503,6000.033267051,6002.041197265
c036,3,3,11,38607,38781,38591,6600.035698682,6602.230984286
# search time: 6600.036s
# total time: 26421.623s
c036,4,3,1,1086888,1086889,967813,600.000541675,600.23007532
c036,4,3,2,419873,420040,408807,1200.000685745,1200.439920805
c036,4,3,3,220227,220394,218855,1800.0044540580002,1800.630267675
c036,4,3,4,166958,167125,165956,2400.008029163,2400.793043471
c036,4,3,5,117416,117584,115006,3000.010221691,3000.933170507
c036,4,3,6,115502,115669,113812,3600.016808545,3601.044307518
c036,4,3,7,68275,68433,67954,4200.021005583,4201.198357472
c036,4,3,8,61611,61782,61447,4800.027393072,4801.35244999
c036,4,3,9,49582,49745,49480,5400.033763023001,5401.482918228
c036,4,3,10,41243,41423,41211,6000.040699125,6001.64219962
c036,4,3,11,41521,41689,41375,6600.051123935,6601.783872174
# search time: 6600.051s
# total time: 33024.070s
