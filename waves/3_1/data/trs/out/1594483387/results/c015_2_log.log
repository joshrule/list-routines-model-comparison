    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.52s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c015_2.json out/1594483387/results/c015_2_best.csv out/1594483387/results/c015_2_predictions.csv out/1594483387/results/c015_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 5, 6, 6, 4, 6, 9, 9]), o: IntList([6, 9]) }
#   Datum { i: IntList([3, 4, 5, 5, 4, 3, 3]), o: IntList([4, 3]) }
#   Datum { i: IntList([1, 2, 9, 3, 1, 4, 0, 1, 2, 8]), o: IntList([9, 3]) }
#   Datum { i: IntList([1, 4, 7, 7, 5, 1, 9, 5, 7]), o: IntList([7, 7, 5, 1]) }
#   Datum { i: IntList([2, 4, 9, 0, 7, 6, 0, 9, 0, 4]), o: IntList([0, 7, 6]) }
#   Datum { i: IntList([1, 5, 8, 3, 6, 2, 4, 8, 0]), o: IntList([8, 3, 6, 2, 4]) }
#   Datum { i: IntList([5, 6, 2, 9, 8, 8, 9, 3, 1]), o: IntList([9, 3]) }
#   Datum { i: IntList([6, 7, 0, 1, 3, 5, 9, 4, 2, 8]), o: IntList([4, 2]) }
#   Datum { i: IntList([7, 8, 2, 1, 7, 8, 7, 7, 7, 7]), o: IntList([7, 7]) }
#   Datum { i: IntList([1, 3, 9, 2, 0, 5, 7, 5, 7, 1]), o: IntList([9, 2, 0]) }
#   Datum { i: IntList([1, 1, 3, 2, 3, 4, 5, 6, 5, 1]), o: IntList([3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c015,0,2,1,1026070,1026071,874512,600.005218893,601.882991632
c015,0,2,2,543648,543831,528761,1200.0054585090002,1203.358138412
c015,0,2,3,366693,366878,361258,1800.007852529,1804.548926634
c015,0,2,4,252252,252443,244672,2400.008310352,2405.571009763
c015,0,2,5,151532,151715,148163,3000.009252688,3006.644309522
c015,0,2,6,117789,117971,114295,3600.0127021179997,3607.63729521
c015,0,2,7,87278,87460,84764,4200.014930394,4208.55554961
c015,0,2,8,71802,71989,69245,4800.017738119,4809.652899859
c015,0,2,9,55903,56082,53689,5400.021908864,5410.74742182
c015,0,2,10,37696,37876,36367,6000.0424319759995,6012.111330585
c015,0,2,11,35772,35959,34571,6600.0695532909995,6613.574218822
# search time: 6600.070s
# total time: 6613.834s
c015,1,2,1,958654,958655,848655,600.000114636,600.336118198
c015,1,2,2,546803,546956,532152,1200.000280365,1200.861198314
c015,1,2,3,360923,361082,355517,1800.001428999,1801.363025121
c015,1,2,4,247524,247683,240351,2400.003856641,2401.864395161
c015,1,2,5,148415,148577,144627,3000.0053784519996,3002.35295094
c015,1,2,6,116692,116850,113263,3600.0144842339996,3602.849469264
c015,1,2,7,85071,85231,82757,4200.017103657,4203.404072001
c015,1,2,8,69905,70070,67359,4800.020513796,4803.896190426
c015,1,2,9,54274,54438,52243,5400.024871019,5404.513392395
c015,1,2,10,37618,37774,36247,6000.041975764,6005.280632241
c015,1,2,11,30546,30708,29494,6600.058853824,6606.006609907
# search time: 6600.059s
# total time: 13220.285s
c015,2,2,1,986281,986282,885773,600.000025778,600.278715836
c015,2,2,2,519333,519495,504798,1200.0004655779999,1200.625172256
c015,2,2,3,355104,355272,349760,1800.0020001799999,1800.982040533
c015,2,2,4,243872,244035,236925,2400.0031884659998,2401.314774237
c015,2,2,5,147287,147451,143945,3000.004448158,3001.649421695
c015,2,2,6,115231,115394,111840,3600.0085441439996,3602.029964266
c015,2,2,7,84686,84850,82298,4200.017226102999,4202.364325678
c015,2,2,8,69758,69922,67177,4800.0218848859995,4802.711562901
c015,2,2,9,55841,56007,53609,5400.023121949,5403.209776587
c015,2,2,10,35883,36046,34566,6000.023349397,6003.639928938
c015,2,2,11,35950,36115,34739,6600.025038272,6604.057917968
# search time: 6600.025s
# total time: 19824.777s
c015,3,2,1,918269,918270,783166,600.013495928,600.162842637
c015,3,2,2,532691,532876,518354,1200.016884853,1200.441196124
c015,3,2,3,361796,361983,356554,1800.023605962,1800.731979379
c015,3,2,4,251174,251357,243456,2400.0244079229997,2401.007183952
c015,3,2,5,148725,148905,145008,3000.0334111419997,3001.290917971
c015,3,2,6,110001,110183,106982,3600.0367813479997,3601.582892151
c015,3,2,7,85984,86161,83494,4200.042695198999,4201.875034963
c015,3,2,8,70234,70413,67746,4800.044114011999,4802.233968205
c015,3,2,9,54574,54754,52521,5400.060264958999,5402.603512558
c015,3,2,10,42302,42482,40837,6000.066623933999,6003.067280784
c015,3,2,11,35695,35877,34500,6600.078924444999,6603.399039246
# search time: 6600.079s
# total time: 26428.629s
c015,4,2,1,927420,927421,822174,600.000245801,600.191875828
c015,4,2,2,540897,541064,526305,1200.001340687,1200.44877867
c015,4,2,3,355832,356003,350498,1800.005940866,1800.676744176
c015,4,2,4,251664,251834,243984,2400.006482797,2400.862941584
c015,4,2,5,149522,149686,145752,3000.006621409,3001.096134035
c015,4,2,6,117762,117931,114328,3600.007459504,3601.245731228
c015,4,2,7,85328,85499,83042,4200.008293979,4201.508697533
c015,4,2,8,69823,69987,67294,4800.009907906,4801.78071489
c015,4,2,9,53478,53647,51643,5400.022690094,5402.05998682
c015,4,2,10,41891,42053,40426,6000.024890179,6002.457335938
c015,4,2,11,34771,34935,33541,6600.041156135,6602.767815468
# search time: 6600.041s
# total time: 33031.966s
