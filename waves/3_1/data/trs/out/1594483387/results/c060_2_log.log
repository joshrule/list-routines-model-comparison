    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_2.json out/1594483387/results/c060_2_best.csv out/1594483387/results/c060_2_predictions.csv out/1594483387/results/c060_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,2,1,1046831,1046832,917474,600.000558538,602.08990818
c060,0,2,2,347380,347552,338090,1200.0013422359998,1203.81423354
c060,0,2,3,208783,208972,205176,1800.0019800699997,1805.049254974
c060,0,2,4,170238,170417,164325,2400.0031322369996,2405.827033049
c060,0,2,5,89343,89529,87439,3000.0112174139995,3007.478704384
c060,0,2,6,68819,68997,67521,3600.0129406169995,3609.113256431
c060,0,2,7,61417,61595,60314,4200.0242425139995,4210.693581486
c060,0,2,8,50574,50763,49637,4800.0368313829995,4811.994939136
c060,0,2,9,42466,42659,41747,5400.039532524,5413.624561091
c060,0,2,10,33253,33434,32514,6000.050847267,6015.365204033
c060,0,2,11,29887,30068,29023,6600.063922049,6617.008510094
# search time: 6600.064s
# total time: 6617.213s
c060,1,2,1,1122940,1122941,959200,600.000064627,600.284979624
c060,1,2,2,348868,349045,339569,1200.0025919290001,1200.906456401
c060,1,2,3,217612,217792,213740,1800.0031586950001,1801.453420073
c060,1,2,4,166158,166339,159901,2400.004767492,2401.809229572
c060,1,2,5,89983,90168,87854,3000.012613491,3002.636513719
c060,1,2,6,70718,70891,69219,3600.019125456,3603.405625167
c060,1,2,7,61458,61638,60194,4200.023569359,4204.16984729
c060,1,2,8,49823,50000,48920,4800.025848596,4804.887795763
c060,1,2,9,42172,42351,41392,5400.048293699,5405.728450105
c060,1,2,10,33874,34050,33063,6000.053453204,6006.582890201
c060,1,2,11,28224,28405,27531,6600.076506217,6607.297983704
# search time: 6600.077s
# total time: 13224.819s
c060,2,2,1,1136620,1136621,1023626,600.007215335,600.310064844
c060,2,2,2,337484,337657,328090,1200.007857849,1200.731102682
c060,2,2,3,208737,208914,205091,1800.0100460949998,1801.04805685
c060,2,2,4,168247,168423,162503,2400.0104746489997,2401.280899816
c060,2,2,5,90222,90395,88098,3000.0109630539996,3001.752422246
c060,2,2,6,70334,70503,68918,3600.0134997869995,3602.243438071
c060,2,2,7,61090,61262,60012,4200.014885306,4202.706653445
c060,2,2,8,49894,50059,48800,4800.026026146,4803.212607058
c060,2,2,9,42626,42795,41811,5400.026602959,5403.664215012
c060,2,2,10,33708,33884,32845,6000.036357594,6004.281082072
c060,2,2,11,27598,27765,26888,6600.068182651,6605.055646057
# search time: 6600.068s
# total time: 19830.174s
c060,3,2,1,1128896,1128897,963912,600.007315285,600.212563913
c060,3,2,2,341961,342132,332541,1200.0088432520001,1200.499770921
c060,3,2,3,214719,214891,210692,1800.0097308040001,1800.746713508
c060,3,2,4,167810,167985,161950,2400.011115112,2400.952423169
c060,3,2,5,89422,89593,87694,3000.012178209,3001.322616939
c060,3,2,6,70975,71145,69634,3600.020732033,3601.82620395
c060,3,2,7,61225,61397,60108,4200.028739764,4202.241929744
c060,3,2,8,49956,50127,48985,4800.045999279,4802.592135382
c060,3,2,9,42018,42198,41237,5400.063179915001,5403.058069906
c060,3,2,10,33731,33908,32822,6000.066415342,6003.690007069
c060,3,2,11,28058,28236,27311,6600.0664215080005,6604.276419739
# search time: 6600.066s
# total time: 26434.758s
c060,4,2,1,1036788,1036789,914690,600.003669449,600.259032427
c060,4,2,2,349134,349290,339786,1200.0060921549998,1200.500668704
c060,4,2,3,215295,215459,211335,1800.0062277519999,1800.726678391
c060,4,2,4,163577,163736,156751,2400.0067853419996,2400.853140215
c060,4,2,5,91525,91690,89522,3000.0137109709995,3001.156572066
c060,4,2,6,81287,81444,79491,3600.0164357729996,3601.52011112
c060,4,2,7,71086,71248,69860,4200.028051820999,4201.850416317
c060,4,2,8,58044,58215,56135,4800.029967764999,4802.156979103
c060,4,2,9,48122,48288,47203,5400.0469284559995,5402.469752878
c060,4,2,10,39081,39246,38155,6000.088450013,6002.841085477
c060,4,2,11,31100,31264,30290,6600.091431422,6603.062179022
# search time: 6600.091s
# total time: 33038.117s
