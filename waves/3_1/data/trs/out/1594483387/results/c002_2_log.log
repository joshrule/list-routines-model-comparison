    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.35s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c002_2.json out/1594483387/results/c002_2_best.csv out/1594483387/results/c002_2_predictions.csv out/1594483387/results/c002_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 7]), o: IntList([]) }
#   Datum { i: IntList([7, 9, 0, 2, 1, 8, 6, 3, 5, 4]), o: IntList([0]) }
#   Datum { i: IntList([4, 7, 1, 2, 6, 3, 8, 9, 0, 5]), o: IntList([1]) }
#   Datum { i: IntList([3, 9]), o: IntList([]) }
#   Datum { i: IntList([7, 4, 3, 9, 5, 8, 2, 1, 6]), o: IntList([3]) }
#   Datum { i: IntList([0, 5]), o: IntList([]) }
#   Datum { i: IntList([9, 6, 2, 5, 8, 7, 3, 4, 1, 0]), o: IntList([2]) }
#   Datum { i: IntList([4, 6]), o: IntList([]) }
#   Datum { i: IntList([6, 7, 8, 1, 4, 3, 0, 5, 9, 2]), o: IntList([8]) }
#   Datum { i: IntList([5, 6, 1, 3, 2, 0, 7, 8, 9, 4]), o: IntList([1]) }
#   Datum { i: IntList([8]), o: IntList([]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c002,0,2,1,1140002,1140003,972737,600.000034495,602.007298586
c002,0,2,2,848819,848996,805001,1200.0036530470002,1202.894495
c002,0,2,3,573144,573327,551897,1800.003733946,1803.883149306
c002,0,2,4,341941,342121,327218,2400.004051638,2404.907526528
c002,0,2,5,349099,349281,334274,3000.005727442,3005.617685724
c002,0,2,6,278430,278615,270068,3600.007739663,3606.325480197
c002,0,2,7,284989,285174,276114,4200.009292064,4206.922138077
c002,0,2,8,210010,210187,203368,4800.0097715150005,4807.510315181
c002,0,2,9,197504,197686,191049,5400.01265225,5408.164808639
c002,0,2,10,152172,152353,147112,6000.014798257001,6008.7882632069995
c002,0,2,11,83404,83581,79707,6600.018315353001,6609.716358926
# search time: 6600.018s
# total time: 6610.092s
c002,1,2,1,1042350,1042351,927871,600.000064357,600.309063441
c002,1,2,2,880965,881128,833644,1200.000225829,1200.646756279
c002,1,2,3,550797,550964,530585,1800.002898849,1801.064940038
c002,1,2,4,345535,345704,330539,2400.00374269,2401.491451741
c002,1,2,5,336543,336712,322540,3000.0052701,3001.84989761
c002,1,2,6,277316,277484,268964,3600.006352149,3602.196190206
c002,1,2,7,280396,280562,271447,4200.007381696,4202.47234725
c002,1,2,8,208905,209067,202375,4800.008248999,4802.805324675
c002,1,2,9,194909,195071,188359,5400.010572742,5403.09175674
c002,1,2,10,152070,152236,146839,6000.016754675,6003.419373476
c002,1,2,11,85876,86044,82058,6600.018939924,6603.822744999
# search time: 6600.019s
# total time: 13214.548s
c002,2,2,1,1080424,1080425,922304,600.000095604,600.174030722
c002,2,2,2,857863,858048,811930,1200.0014004529999,1200.42200123
c002,2,2,3,550129,550310,529684,1800.0015348429997,1800.695724142
c002,2,2,4,349710,349886,334486,2400.002604081,2400.977090068
c002,2,2,5,346190,346372,331651,3000.0044898829997,3001.224844509
c002,2,2,6,284257,284431,275387,3600.0047309009997,3601.444039829
c002,2,2,7,281379,281564,272614,4200.004922816,4201.664719259
c002,2,2,8,218200,218374,211397,4800.005514564,4801.901056083
c002,2,2,9,195954,196138,189509,5400.010887916,5402.111227633
c002,2,2,10,159513,159687,154150,6000.012597315,6002.299052895
c002,2,2,11,88086,88264,84265,6600.01591641,6602.570276702
# search time: 6600.016s
# total time: 19817.758s
c002,3,2,1,1034398,1034399,925929,600.000137977,600.210174908
c002,3,2,2,871632,871796,824928,1200.0011557799999,1200.442742669
c002,3,2,3,549690,549858,529598,1800.001761417,1800.667563945
c002,3,2,4,348082,348252,332966,2400.002272382,2400.881736323
c002,3,2,5,345202,345373,330637,3000.005582715,3001.049659907
c002,3,2,6,276259,276432,267911,3600.005610312,3601.261448161
c002,3,2,7,282486,282646,273850,4200.005804667,4201.448736521
c002,3,2,8,206600,206768,199880,4800.008843783,4801.618879789
c002,3,2,9,196943,197112,190470,5400.009770637,5401.79015876
c002,3,2,10,152894,153061,147721,6000.015213332,6001.960169042
c002,3,2,11,83448,83613,79800,6600.033880178999,6602.264507846
# search time: 6600.034s
# total time: 26420.663s
c002,4,2,1,1062240,1062241,961010,600.006309535,600.270602241
c002,4,2,2,872306,872473,825739,1200.00862344,1200.495320737
c002,4,2,3,555221,555393,534864,1800.009152477,1800.699962165
c002,4,2,4,346456,346621,331389,2400.012256715,2400.894626528
c002,4,2,5,344173,344338,329636,3000.012658596,3001.053219786
c002,4,2,6,276981,277151,268556,3600.013540709,3601.221543347
c002,4,2,7,285798,285973,277132,4200.013555862,4201.352696683
c002,4,2,8,207839,208010,201064,4800.0168488300005,4801.501456812
c002,4,2,9,195688,195860,189226,5400.017637586001,5401.62819933
c002,4,2,10,152109,152280,146930,6000.022149937001,6001.774254297
c002,4,2,11,85920,86092,82137,6600.022491197001,6601.951660103
# search time: 6600.022s
# total time: 33023.287s
