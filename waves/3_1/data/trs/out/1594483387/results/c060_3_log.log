    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_3.json out/1594483387/results/c060_3_best.csv out/1594483387/results/c060_3_predictions.csv out/1594483387/results/c060_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,3,1,1100698,1100699,983589,600.000031678,602.290286031
c060,0,3,2,356622,356794,347237,1200.000503688,1203.894308502
c060,0,3,3,226190,226364,217802,1800.002008344,1804.6988758
c060,0,3,4,169667,169838,163526,2400.004712423,2405.422286974
c060,0,3,5,135515,135691,131296,3000.0057112550003,3006.227529256
c060,0,3,6,73377,73550,72174,3600.0088171570005,3607.925264505
c060,0,3,7,63949,64125,62480,4200.013037378,4209.392111867
c060,0,3,8,53677,53854,52502,4800.041287159001,4810.974730922
c060,0,3,9,44232,44410,43279,5400.045496716,5412.378044463
c060,0,3,10,33803,33975,32994,6000.068437512,6014.186433101
c060,0,3,11,29453,29633,28708,6600.074685174,6616.045588742
# search time: 6600.075s
# total time: 6616.265s
c060,1,3,1,1124238,1124239,1006531,600.000555468,600.339943524
c060,1,3,2,352349,352518,343078,1200.001635569,1200.900252201
c060,1,3,3,224566,224740,216030,1800.0057605060001,1801.241422354
c060,1,3,4,167639,167816,161706,2400.007667377,2401.559683988
c060,1,3,5,134862,135034,131011,3000.011409054,3001.937233239
c060,1,3,6,70530,70699,69336,3600.025801031,3602.597783809
c060,1,3,7,62052,62216,60619,4200.078329174,4203.278854732
c060,1,3,8,50721,50887,49555,4800.094048715,4804.09719299
c060,1,3,9,41218,41382,40357,5400.113293718,5404.990061416
c060,1,3,10,32990,33157,32174,6000.127042456,6005.698904854
c060,1,3,11,28725,28890,28027,6600.139468949,6606.45843385
# search time: 6600.139s
# total time: 13223.036s
c060,2,3,1,1033314,1033315,904087,600.000674736,600.286852834
c060,2,3,2,346693,346864,337275,1200.00080927,1200.676627943
c060,2,3,3,224634,224808,215309,1800.002305504,1800.896051713
c060,2,3,4,168128,168302,162283,2400.014587474,2401.127273695
c060,2,3,5,132373,132542,127981,3000.01820446,3001.375497977
c060,2,3,6,71147,71318,69865,3600.0235299610003,3601.843678851
c060,2,3,7,61249,61418,59910,4200.029392784,4202.358524386
c060,2,3,8,49596,49765,48680,4800.033766633001,4802.968623612
c060,2,3,9,41456,41623,40559,5400.041598896,5403.464971239
c060,2,3,10,34890,35057,33997,6000.043203395,6003.991677791
c060,2,3,11,29018,29190,28140,6600.066069348,6604.611675985
# search time: 6600.066s
# total time: 19827.946s
c060,3,3,1,1079418,1079419,955868,600.002709771,600.233396061
c060,3,3,2,342780,342947,333293,1200.003132294,1200.542989512
c060,3,3,3,224484,224656,216237,1800.004292826,1800.7110882
c060,3,3,4,167664,167833,161658,2400.006180589,2400.889829781
c060,3,3,5,130088,130264,125600,3000.008087665,3001.099750022
c060,3,3,6,70859,71026,69638,3600.010621254,3601.549327493
c060,3,3,7,61984,62148,60441,4200.011805474,4201.931221948
c060,3,3,8,52299,52459,51145,4800.014616806,4802.276757474
c060,3,3,9,43366,43532,42410,5400.015382282,5402.749690467
c060,3,3,10,32851,33017,31923,6000.017819978,6002.946962708
c060,3,3,11,27724,27887,27056,6600.043493204001,6603.378101648
# search time: 6600.043s
# total time: 26431.629s
c060,4,3,1,1043717,1043718,888802,600.000246053,600.169938738
c060,4,3,2,347675,347851,338260,1200.00157903,1200.417284316
c060,4,3,3,224254,224438,216033,1800.002120741,1800.568958603
c060,4,3,4,167953,168133,161845,2400.00640623,2400.720293945
c060,4,3,5,136613,136787,132243,3000.0125121379997,3000.888396294
c060,4,3,6,81947,82129,80460,3600.0141331359996,3601.163845536
c060,4,3,7,70891,71070,69323,4200.019508273,4201.484444725
c060,4,3,8,57373,57550,55484,4800.040396773999,4801.816847441
c060,4,3,9,49397,49575,48405,5400.045425099999,5402.117364416
c060,4,3,10,39222,39398,37971,6000.073617945999,6002.539995742
c060,4,3,11,33796,33974,32927,6600.0892960599995,6602.839621575
# search time: 6600.089s
# total time: 33034.765s
