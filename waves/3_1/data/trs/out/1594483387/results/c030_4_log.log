    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.56s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c030_4.json out/1594483387/results/c030_4_best.csv out/1594483387/results/c030_4_predictions.csv out/1594483387/results/c030_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 3]), o: IntList([]) }
#   Datum { i: IntList([9, 7, 2, 5, 9, 4, 6, 8, 4]), o: IntList([9, 7, 2, 5, 9, 4, 6]) }
#   Datum { i: IntList([0, 0, 3, 3, 0, 3, 0]), o: IntList([0, 0, 3, 3, 0]) }
#   Datum { i: IntList([5, 7, 1, 8, 9, 4, 1, 6, 2, 3]), o: IntList([5, 7, 1, 8, 9, 4, 1, 6]) }
#   Datum { i: IntList([6, 4, 1, 6, 7, 2, 5, 8]), o: IntList([6, 4, 1, 6, 7, 2]) }
#   Datum { i: IntList([1, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([5, 4, 5, 0]), o: IntList([5, 4]) }
#   Datum { i: IntList([9, 7, 4, 3, 8, 1]), o: IntList([9, 7, 4, 3]) }
#   Datum { i: IntList([6, 4, 8, 1, 0]), o: IntList([6, 4, 8]) }
#   Datum { i: IntList([2, 5, 7, 8, 2, 2, 9, 3, 1, 0]), o: IntList([2, 5, 7, 8, 2, 2, 9, 3]) }
#   Datum { i: IntList([6, 2, 9, 7, 8, 3, 8, 5, 0]), o: IntList([6, 2, 9, 7, 8, 3, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,4,1,1039555,1039556,910843,600.009658788,602.354743138
c030,0,4,2,893291,893458,845869,1200.010154176,1203.280288064
c030,0,4,3,308609,308783,298612,1800.0152506949998,1803.997078828
c030,0,4,4,183750,183924,179969,2400.016678215,2404.755325749
c030,0,4,5,122528,122705,119286,3000.019390485,3005.346690766
c030,0,4,6,91279,91454,88703,3600.022852236,3606.082012082
c030,0,4,7,87992,88169,86064,4200.023738821999,4206.724368068
c030,0,4,8,80901,81074,78331,4800.025955325999,4807.269976183
c030,0,4,9,69050,69223,66315,5400.031925967999,5407.8786707
c030,0,4,10,62160,62332,59720,6000.039533546999,6008.533909212
c030,0,4,11,51008,51180,48937,6600.068202551,6609.248647629
# search time: 6600.068s
# total time: 6609.605s
c030,1,4,1,953503,953504,844415,600.000092557,600.316237752
c030,1,4,2,853831,854005,808030,1200.001946595,1200.747530216
c030,1,4,3,300558,300729,291065,1800.0030058779998,1801.095698941
c030,1,4,4,179055,179235,175463,2400.005873926,2401.434369284
c030,1,4,5,122542,122710,119606,3000.009391554,3001.728870915
c030,1,4,6,92101,92272,89525,3600.015183776,3602.110512685
c030,1,4,7,90862,91033,88622,4200.016587768,4202.3980047
c030,1,4,8,79530,79704,77139,4800.020851192,4802.704836984
c030,1,4,9,67606,67776,65325,5400.025033065,5403.00255929
c030,1,4,10,59049,59221,57140,6000.030545678999,6003.401647297
c030,1,4,11,49308,49482,47279,6600.030873033999,6603.717505832
# search time: 6600.031s
# total time: 13213.961s
c030,2,4,1,959983,959984,841379,600.000290198,600.22702118
c030,2,4,2,871919,872090,825242,1200.000665751,1200.574045344
c030,2,4,3,305786,305958,295871,1800.002036967,1800.809657925
c030,2,4,4,179003,179179,175228,2400.002536716,2401.021969712
c030,2,4,5,121944,122120,118667,3000.004232935,3001.222360106
c030,2,4,6,89654,89830,87160,3600.007907246,3601.435134051
c030,2,4,7,88129,88308,86517,4200.021985366,4201.706879844
c030,2,4,8,78031,78207,75372,4800.024908592,4801.904301445
c030,2,4,9,67450,67623,64959,5400.02526371,5402.080030747
c030,2,4,10,61317,61493,59035,6000.051776777,6002.365796238
c030,2,4,11,47548,47722,45683,6600.060322339999,6602.616192898
# search time: 6600.060s
# total time: 19817.208s
c030,3,4,1,1030967,1030968,880813,600.000077963,600.176146997
c030,3,4,2,846261,846434,802162,1200.0002483459998,1200.441208875
c030,3,4,3,301401,301580,291583,1800.0003733859999,1800.614745604
c030,3,4,4,182253,182444,177887,2400.001647702,2400.75502553
c030,3,4,5,121109,121296,117915,3000.006335041,3000.910560451
c030,3,4,6,90490,90673,87956,3600.009126017,3601.096449152
c030,3,4,7,86538,86722,84707,4200.012728214,4201.263848686
c030,3,4,8,78506,78691,76026,4800.013649614,4801.420544145
c030,3,4,9,68014,68195,65359,5400.02536818,5401.577396357
c030,3,4,10,61434,61621,59140,6000.027644687,6001.775783379
c030,3,4,11,49378,49565,47318,6600.038463774,6601.970529219
# search time: 6600.038s
# total time: 26420.016s
c030,4,4,1,1013680,1013681,903386,600.000040558,600.213136308
c030,4,4,2,864634,864806,818160,1200.000129038,1200.455287722
c030,4,4,3,295512,295681,286249,1800.000322845,1800.635839183
c030,4,4,4,181372,181541,177229,2400.000773027,2400.779592092
c030,4,4,5,119838,120007,116588,3000.0022515319997,3000.953693716
c030,4,4,6,89421,89587,86837,3600.0067165689998,3601.119190336
c030,4,4,7,89029,89196,86840,4200.009169635,4201.272626287
c030,4,4,8,78257,78427,75532,4800.0154375540005,4801.389150705
c030,4,4,9,67271,67435,64714,5400.017068705,5401.541462659
c030,4,4,10,58081,58245,56053,6000.029343231001,6001.703201943
c030,4,4,11,49467,49632,47456,6600.029534082001,6601.852954071
# search time: 6600.030s
# total time: 33022.442s
