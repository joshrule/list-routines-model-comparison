    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.35s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c005_4.json out/1594483387/results/c005_4_best.csv out/1594483387/results/c005_4_predictions.csv out/1594483387/results/c005_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1, 9, 6, 3, 2, 5, 0, 8, 7]), o: IntList([3]) }
#   Datum { i: IntList([3, 9, 4, 5, 1, 8, 2, 0, 6, 7]), o: IntList([5]) }
#   Datum { i: IntList([2, 1, 9, 6, 7, 0, 4, 5, 3]), o: IntList([9]) }
#   Datum { i: IntList([6, 1, 2, 8, 5, 4, 7, 9, 3, 0]), o: IntList([7]) }
#   Datum { i: IntList([4, 8, 5, 6, 2, 7, 1, 0, 3, 9]), o: IntList([2]) }
#   Datum { i: IntList([9, 1, 6, 4, 7, 5, 3, 8, 2, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 6, 5, 8, 3, 4, 2, 7, 0, 9]), o: IntList([6]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 6, 0, 5, 1, 4]), o: IntList([1]) }
#   Datum { i: IntList([5, 1, 7, 6, 9, 8, 2, 0, 3, 4]), o: IntList([8]) }
#   Datum { i: IntList([7, 2, 1, 8, 0, 6, 3, 5, 9, 4]), o: IntList([5]) }
#   Datum { i: IntList([2, 6, 3, 7, 4, 8, 1, 9, 5, 0]), o: IntList([3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c005,0,4,1,1008790,1008791,913668,600.00042379,602.395753738
c005,0,4,2,451818,451991,438159,1200.001533445,1205.06102136
c005,0,4,3,373363,373542,361649,1800.001945523,1806.552662101
c005,0,4,4,240359,240537,231032,2400.008192325,2407.950819734
c005,0,4,5,171427,171603,164411,3000.008691393,3009.400717857
c005,0,4,6,121148,121317,116259,3600.0136550939997,3610.870014628
c005,0,4,7,93858,94028,89697,4200.0165354559995,4212.287144415
c005,0,4,8,74392,74557,71015,4800.0170152539995,4813.96452666
c005,0,4,9,61947,62118,59175,5400.031031385,5415.474958704
c005,0,4,10,53809,53982,51641,6000.038281169,6016.727706881
c005,0,4,11,36209,36378,34716,6600.051500717,6618.449607091
# search time: 6600.052s
# total time: 6618.917s
c005,1,4,1,957631,957632,817385,600.002366672,600.248256854
c005,1,4,2,438203,438380,424940,1200.004880897,1201.173719678
c005,1,4,3,330237,330416,319951,1800.005019598,1802.103531008
c005,1,4,4,154205,154383,147956,2400.005350124,2402.502198136
c005,1,4,5,171678,171858,164566,3000.006465498,3003.11178414
c005,1,4,6,99660,99835,95439,3600.030965188,3603.963659397
c005,1,4,7,88044,88220,84080,4200.03721632,4204.777309318
c005,1,4,8,77027,77204,73606,4800.062425181,4805.383657655
c005,1,4,9,60383,60559,57614,5400.068361572001,5406.212542631
c005,1,4,10,48016,48193,45914,6000.085401790001,6006.910361943
c005,1,4,11,33764,33945,32392,6600.091856190001,6607.909038251
# search time: 6600.092s
# total time: 13227.253s
c005,2,4,1,939802,939803,801758,600.000024917,600.187271818
c005,2,4,2,465253,465421,450853,1200.002594863,1200.715505075
c005,2,4,3,375189,375362,363342,1800.003207189,1801.08806863
c005,2,4,4,246211,246385,236073,2400.004089355,2401.509147394
c005,2,4,5,169511,169682,162503,3000.004844796,3001.90508368
c005,2,4,6,125201,125372,119970,3600.005608294,3602.550064769
c005,2,4,7,94079,94251,90102,4200.006770926,4202.996008911
c005,2,4,8,69949,70115,66670,4800.015079486,4803.701885581
c005,2,4,9,60853,61026,58155,5400.01813345,5404.120329778
c005,2,4,10,48993,49165,46846,6000.075877417,6004.469052115
c005,2,4,11,36803,36973,35390,6600.07696124,6605.046497365
# search time: 6600.077s
# total time: 19832.765s
c005,3,4,1,921591,921592,825197,600.000191339,600.228827733
c005,3,4,2,442937,443120,429467,1200.022215896,1200.698303121
c005,3,4,3,374423,374598,362356,1800.022525047,1800.976790592
c005,3,4,4,245606,245781,235342,2400.022720467,2401.299346854
c005,3,4,5,156361,156537,150014,3000.023662104,3001.671335812
c005,3,4,6,120432,120605,115645,3600.02634219,3602.023203253
c005,3,4,7,94060,94233,89909,4200.02902085,4202.315159816
c005,3,4,8,76696,76871,73250,4800.029879439,4802.722951061
c005,3,4,9,60081,60252,57431,5400.032425535,5402.997225386
c005,3,4,10,47541,47716,45415,6000.034667893,6003.457766832
c005,3,4,11,39284,39458,37714,6600.045066628,6603.768833887
# search time: 6600.045s
# total time: 26437.032s
c005,4,4,1,967079,967080,888002,600.0000537,600.227570235
c005,4,4,2,435877,436054,422627,1200.000814265,1200.564427502
c005,4,4,3,371658,371830,359527,1800.004832012,1800.826811543
c005,4,4,4,237612,237789,228358,2400.005678663,2401.118391598
c005,4,4,5,154465,154648,147969,3000.009153955,3001.373315199
c005,4,4,6,126249,126427,121045,3600.0146486619997,3601.647167721
c005,4,4,7,92810,92987,88930,4200.015579346,4201.949768764
c005,4,4,8,71286,71460,67944,4800.017037322,4802.284416846
c005,4,4,9,59340,59520,56556,5400.020397316,5402.795892003
c005,4,4,10,52831,53008,50639,6000.022074662999,6002.996163918
c005,4,4,11,34973,35154,33588,6600.0592078439995,6603.327900155
# search time: 6600.059s
# total time: 33040.637s
