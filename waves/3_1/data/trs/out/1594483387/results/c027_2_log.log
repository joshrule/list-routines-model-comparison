    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.40s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c027_2.json out/1594483387/results/c027_2_best.csv out/1594483387/results/c027_2_predictions.csv out/1594483387/results/c027_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 5, 7, 7, 2]), o: IntList([5, 7, 7, 2]) }
#   Datum { i: IntList([2, 3, 9, 9, 8, 3, 8, 6]), o: IntList([2, 3, 9, 8, 3, 8, 6]) }
#   Datum { i: IntList([5, 7, 6, 1, 0, 8, 3]), o: IntList([5, 7, 1, 0, 8, 3]) }
#   Datum { i: IntList([6, 6, 1]), o: IntList([6, 1]) }
#   Datum { i: IntList([9, 4, 0, 5, 9, 4, 5, 0, 0]), o: IntList([9, 4, 5, 9, 4, 5, 0, 0]) }
#   Datum { i: IntList([1, 2, 5, 1, 3, 2, 5]), o: IntList([1, 2, 1, 3, 2, 5]) }
#   Datum { i: IntList([0, 0, 9, 0]), o: IntList([0, 9, 0]) }
#   Datum { i: IntList([8, 8, 4, 1, 8, 4, 1, 4]), o: IntList([8, 4, 1, 8, 4, 1, 4]) }
#   Datum { i: IntList([6, 4, 6, 2, 3, 3]), o: IntList([6, 4, 2, 3, 3]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 6, 6, 7, 2]), o: IntList([9, 7, 7, 7, 6, 6, 7, 2]) }
#   Datum { i: IntList([6, 5, 8, 0, 4, 8, 1, 9, 3, 2]), o: IntList([6, 5, 0, 4, 8, 1, 9, 3, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c027,0,2,1,1024760,1024761,921622,600.00053482,602.707688162
c027,0,2,2,496364,496526,480791,1200.00542902,1203.719760759
c027,0,2,3,226733,226899,224526,1800.006829804,1804.620709105
c027,0,2,4,166262,166422,164923,2400.008183919,2405.358973978
c027,0,2,5,138443,138612,137006,3000.0095125330004,3006.126874545
c027,0,2,6,99397,99566,98149,3600.0112245470004,3606.800901308
c027,0,2,7,80366,80534,79451,4200.018424226,4207.589393332
c027,0,2,8,86972,87146,84182,4800.019540743,4808.065835266
c027,0,2,9,63807,63978,62599,5400.027190258,5408.73607048
c027,0,2,10,64503,64672,63893,6000.03258278,6009.275942595
c027,0,2,11,45548,45717,45224,6600.035023689,6609.969419731
# search time: 6600.035s
# total time: 6610.342s
c027,1,2,1,953097,953098,843572,600.000579699,600.350050867
c027,1,2,2,485673,485832,470652,1200.001166794,1200.744659599
c027,1,2,3,239820,239990,237533,1800.0014845760002,1801.129470213
c027,1,2,4,165783,165950,164683,2400.011115194,2401.486232829
c027,1,2,5,139566,139729,138169,3000.013192088,3001.857726832
c027,1,2,6,97033,97202,95855,3600.0170046499998,3602.251961179
c027,1,2,7,78053,78214,77119,4200.020526081,4202.666551854
c027,1,2,8,86538,86700,83832,4800.026103724,4802.92971818
c027,1,2,9,64487,64651,63249,5400.030192099,5403.287296702
c027,1,2,10,64461,64624,63862,6000.030956656,6003.57053346
c027,1,2,11,43905,44077,43630,6600.035470027,6604.021781717
# search time: 6600.035s
# total time: 13214.991s
c027,2,2,1,981841,981842,877057,600.002842759,600.283274487
c027,2,2,2,486521,486691,471286,1200.00427495,1200.557278811
c027,2,2,3,229378,229559,227235,1800.007521728,1800.821248465
c027,2,2,4,165605,165789,164276,2400.009812536,2401.062149843
c027,2,2,5,139398,139575,137978,3000.011827954,3001.295190273
c027,2,2,6,97862,98038,96697,3600.016434448,3601.570316201
c027,2,2,7,79792,79972,78892,4200.041013963,4201.895346605
c027,2,2,8,86461,86639,83707,4800.042210039001,4802.093039138
c027,2,2,9,64063,64238,62684,5400.047762817001,5402.420413053
c027,2,2,10,64335,64507,63676,6000.053657054001,6002.664193763
c027,2,2,11,40985,41164,40777,6600.054451153001,6602.951939838
# search time: 6600.054s
# total time: 19818.581s
c027,3,2,1,968145,968146,860216,600.000163843,600.234531229
c027,3,2,2,494767,494932,479660,1200.001885418,1200.472954793
c027,3,2,3,233787,233957,231463,1800.002708984,1800.680382218
c027,3,2,4,165265,165439,163978,2400.004702864,2400.858143712
c027,3,2,5,139459,139624,138077,3000.005501981,3001.065411552
c027,3,2,6,99601,99772,98394,3600.009612837,3601.280735193
c027,3,2,7,79421,79593,78524,4200.017499191,4201.504287692
c027,3,2,8,86333,86502,83636,4800.01879311,4801.661893356
c027,3,2,9,63118,63288,61891,5400.022215977,5401.867558102
c027,3,2,10,64130,64307,63588,6000.035304455,6002.065554072
c027,3,2,11,41707,41874,41500,6600.03855587,6602.252865243
# search time: 6600.039s
# total time: 26421.499s
c027,4,2,1,984434,984435,878468,600.001544315,600.269192199
c027,4,2,2,482916,483083,467671,1200.002370279,1200.472812178
c027,4,2,3,224315,224480,222131,1800.004544407,1800.656570112
c027,4,2,4,163436,163599,162333,2400.0061023949997,2400.819324268
c027,4,2,5,139530,139698,138148,3000.007307689,3000.992992399
c027,4,2,6,99999,100163,98809,3600.009736007,3601.150697818
c027,4,2,7,78384,78548,77463,4200.012494297,4201.341970791
c027,4,2,8,86257,86416,83399,4800.013389856,4801.477637557
c027,4,2,9,64219,64378,62923,5400.01958813,5401.584454204
c027,4,2,10,64309,64470,63694,6000.024884177,6001.706410039
c027,4,2,11,42975,43136,42698,6600.029186760999,6601.860437272
# search time: 6600.029s
# total time: 33024.022s
