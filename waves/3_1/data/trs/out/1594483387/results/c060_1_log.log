    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_1.json out/1594483387/results/c060_1_best.csv out/1594483387/results/c060_1_predictions.csv out/1594483387/results/c060_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,1,1,1033848,1033849,914699,600.003141571,602.323607278
c060,0,1,2,371673,371831,360777,1200.0068001250002,1203.578711557
c060,0,1,3,215995,216165,210791,1800.00728969,1804.756230364
c060,0,1,4,119965,120131,117004,2400.0078696210003,2406.372642959
c060,0,1,5,86651,86805,84501,3000.008605713,3007.979952646
c060,0,1,6,68979,69134,67407,3600.0166913040002,3609.45822828
c060,0,1,7,55716,55879,54300,4200.020769988,4210.867940945
c060,0,1,8,46191,46352,44913,4800.028973226,4812.578144075
c060,0,1,9,38773,38940,37805,5400.034278188,5414.311774713
c060,0,1,10,33531,33692,32695,6000.039466814,6015.737350938
c060,0,1,11,28241,28404,27514,6600.044135835999,6617.23414594
# search time: 6600.044s
# total time: 6617.441s
c060,1,1,1,1072921,1072922,918581,600.001348593,600.284852621
c060,1,1,2,377901,378077,367241,1200.00158607,1200.811425447
c060,1,1,3,203628,203802,198836,1800.001621049,1801.452952298
c060,1,1,4,116014,116181,113224,2400.00269164,2402.176196279
c060,1,1,5,85146,85319,83476,3000.005956458,3002.852582163
c060,1,1,6,67867,68038,66000,3600.00874419,3603.560023206
c060,1,1,7,56022,56189,54591,4200.008847522,4204.217974137
c060,1,1,8,45145,45318,43982,4800.011648421,4804.970471189
c060,1,1,9,38523,38687,37525,5400.032779425001,5405.604416312
c060,1,1,10,33806,33970,32920,6000.0356898850005,6006.709699865
c060,1,1,11,28258,28429,27497,6600.062703244001,6607.639815803
# search time: 6600.063s
# total time: 13225.412s
c060,2,1,1,1064659,1064660,909634,600.00072351,600.391574312
c060,2,1,2,358347,358523,347368,1200.0036219089998,1200.775109963
c060,2,1,3,215067,215228,209785,1800.004990644,1801.106339746
c060,2,1,4,119445,119617,116345,2400.006336203,2401.6160814
c060,2,1,5,89267,89432,87416,3000.00869741,3002.213945332
c060,2,1,6,69216,69387,67594,3600.021273338,3602.738466029
c060,2,1,7,55816,55987,54448,4200.04669646,4203.211445901
c060,2,1,8,46948,47120,45736,4800.052201181,4803.859840336
c060,2,1,9,39655,39826,38683,5400.084544186,5404.273747455
c060,2,1,10,32651,32820,31777,6000.100040310001,6005.080504404
c060,2,1,11,29041,29214,28246,6600.104159587001,6605.701383052
# search time: 6600.104s
# total time: 19831.634s
c060,3,1,1,1092294,1092295,932313,600.000091177,600.225106742
c060,3,1,2,376244,376430,365961,1200.0015098959998,1200.496921419
c060,3,1,3,213425,213610,208212,1800.00288689,1800.749353733
c060,3,1,4,117520,117705,114542,2400.0098225419997,2401.095679196
c060,3,1,5,86812,87000,84562,3000.0136748379996,3001.519103094
c060,3,1,6,68871,69056,67267,3600.0169801079996,3601.900102562
c060,3,1,7,55292,55469,53761,4200.021179482,4202.271666478
c060,3,1,8,45807,45993,44804,4800.037876615,4802.909241229
c060,3,1,9,38570,38749,37610,5400.0499699169995,5403.364758916
c060,3,1,10,32802,32987,31950,6000.068933987,6003.752374051
c060,3,1,11,29421,29610,28609,6600.081719272999,6604.206388412
# search time: 6600.082s
# total time: 26436.181s
c060,4,1,1,1009447,1009448,900376,600.000070709,600.273943259
c060,4,1,2,361039,361203,350163,1200.000176383,1200.50886012
c060,4,1,3,207907,208077,203210,1800.000217386,1800.720415366
c060,4,1,4,119293,119462,116185,2400.0063897640002,2400.97190038
c060,4,1,5,90102,90265,88051,3000.009187402,3001.239613817
c060,4,1,6,81049,81218,79149,3600.019826064,3601.502684208
c060,4,1,7,63922,64089,62390,4200.020388556,4201.833434014
c060,4,1,8,55127,55286,53657,4800.023748109001,4802.061857925
c060,4,1,9,46569,46737,45389,5400.0257980470005,5402.497374914
c060,4,1,10,39093,39257,38071,6000.032211957001,6002.823611163
c060,4,1,11,33800,33964,32904,6600.050825659001,6603.178835799
# search time: 6600.051s
# total time: 33039.682s
