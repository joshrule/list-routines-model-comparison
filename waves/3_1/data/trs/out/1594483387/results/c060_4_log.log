    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c060_4.json out/1594483387/results/c060_4_best.csv out/1594483387/results/c060_4_predictions.csv out/1594483387/results/c060_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 2, 9, 3, 7, 1, 6, 4, 0, 5]), o: IntList([9, 2, 8, 4, 7, 6]) }
#   Datum { i: IntList([0, 5, 2, 4, 3, 1, 6, 8, 7, 9]), o: IntList([2, 5, 0, 4, 3, 6]) }
#   Datum { i: IntList([3, 6, 1, 4, 9, 0, 8, 7, 5, 2]), o: IntList([1, 6, 3, 4, 9, 8]) }
#   Datum { i: IntList([9, 2, 5, 1, 3, 4, 7, 0, 6, 8]), o: IntList([5, 2, 9, 4, 3, 7]) }
#   Datum { i: IntList([1, 7, 8, 2, 5, 6, 0, 4, 3, 9]), o: IntList([8, 7, 1, 4, 5, 0]) }
#   Datum { i: IntList([0, 2, 5, 6, 1, 3, 7, 9, 4, 8]), o: IntList([5, 2, 0, 4, 1, 7]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 4, 5, 6, 3, 0]), o: IntList([1, 8, 9, 4, 7, 5]) }
#   Datum { i: IntList([7, 9, 0, 2, 6, 8, 3, 5, 1]), o: IntList([0, 9, 7, 4, 6, 3]) }
#   Datum { i: IntList([5, 3, 9, 8, 0, 7, 2, 1, 4, 6]), o: IntList([9, 3, 5, 4, 0, 2]) }
#   Datum { i: IntList([9, 2, 0, 5, 8, 7, 6, 4, 1, 3]), o: IntList([0, 2, 9, 4, 8, 6]) }
#   Datum { i: IntList([6, 7, 1, 3, 2, 0, 8, 9, 4, 5]), o: IntList([1, 7, 6, 4, 2, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c060,0,4,1,1094210,1094211,933827,600.000112559,601.749387749
c060,0,4,2,328444,328614,319289,1200.000652868,1203.442275457
c060,0,4,3,208893,209070,205627,1800.0007244510002,1804.678885548
c060,0,4,4,156447,156614,151768,2400.0011200900003,2405.60434216
c060,0,4,5,90797,90964,88548,3000.0013125980004,3007.171916207
c060,0,4,6,71421,71586,69725,3600.0046670560005,3608.817638922
c060,0,4,7,58750,58921,57402,4200.009678320001,4210.206972589
c060,0,4,8,54549,54721,53502,4800.017371096001,4811.620321132
c060,0,4,9,40681,40850,39563,5400.037156248,5413.461708616
c060,0,4,10,35545,35718,34779,6000.048646759001,6015.31079806
c060,0,4,11,28339,28510,27544,6600.099228659001,6617.234621128
# search time: 6600.099s
# total time: 6617.517s
c060,1,4,1,1051794,1051795,940393,600.000074106,600.362143884
c060,1,4,2,332528,332696,323556,1200.0002990930002,1201.001100317
c060,1,4,3,213969,214136,210381,1800.000571471,1801.479866889
c060,1,4,4,155496,155668,150859,2400.006498757,2401.874755083
c060,1,4,5,90376,90549,88292,3000.013966759,3002.543738787
c060,1,4,6,71075,71249,69460,3600.025287761,3603.310996906
c060,1,4,7,59726,59894,58173,4200.026719791,4203.97556176
c060,1,4,8,55284,55455,54234,4800.035616675999,4804.689187847
c060,1,4,9,41318,41491,40648,5400.052331261999,5405.51769111
c060,1,4,10,34794,34967,34202,6000.054108745999,6006.483220838
c060,1,4,11,28424,28596,27706,6600.081952900999,6607.388652703
# search time: 6600.082s
# total time: 13225.121s
c060,2,4,1,1009220,1009221,884027,600.006034017,600.287043058
c060,2,4,2,333030,333204,323833,1200.006876268,1200.667911666
c060,2,4,3,214243,214424,210703,1800.008659801,1800.998325986
c060,2,4,4,154826,155013,150020,2400.010410529,2401.272393182
c060,2,4,5,90435,90610,88297,3000.046340149,3001.74745701
c060,2,4,6,70539,70715,68388,3600.0513148150003,3602.114449253
c060,2,4,7,59564,59739,58271,4200.0528433360005,4202.563140897
c060,2,4,8,52359,52538,51260,4800.052845726001,4802.924195042
c060,2,4,9,40925,41099,40121,5400.058534913001,5403.376206324
c060,2,4,10,35053,35228,34431,6000.069458011,6003.845179847
c060,2,4,11,28313,28483,27625,6600.084492784001,6604.320507522
# search time: 6600.084s
# total time: 19829.755s
c060,3,4,1,994262,994263,870906,600.000010081,600.21433537
c060,3,4,2,335731,335902,326557,1200.000788811,1200.524433987
c060,3,4,3,214633,214808,211019,1800.0009835279998,1800.793246036
c060,3,4,4,156764,156941,152084,2400.0018778549997,2400.989193563
c060,3,4,5,90078,90253,87923,3000.005233174,3001.382946819
c060,3,4,6,68882,69052,67297,3600.015899871,3601.715947769
c060,3,4,7,59953,60123,58429,4200.018962664,4202.069978861
c060,3,4,8,54266,54441,53208,4800.022008947,4802.383495409
c060,3,4,9,40827,40996,40059,5400.045420605,5402.835329801
c060,3,4,10,35341,35511,34639,6000.05760347,6003.226361927
c060,3,4,11,29254,29422,28512,6600.062652064,6603.869239669
# search time: 6600.063s
# total time: 26433.949s
c060,4,4,1,1026316,1026317,910616,600.00026358,600.220433977
c060,4,4,2,329259,329430,320188,1200.001188489,1200.481368609
c060,4,4,3,214469,214638,211088,1800.002764448,1800.689023556
c060,4,4,4,156404,156570,151768,2400.004407728,2400.856305359
c060,4,4,5,92418,92586,90279,3000.0079248849997,3001.194166448
c060,4,4,6,83620,83787,81724,3600.018499635,3601.562077144
c060,4,4,7,69855,70012,68159,4200.019936211,4201.85777033
c060,4,4,8,65444,65613,64178,4800.021394367,4802.174988901
c060,4,4,9,47278,47447,46497,5400.025069003999,5402.488012345
c060,4,4,10,41766,41936,40950,6000.025892708999,6002.84605419
c060,4,4,11,29632,29795,28820,6600.048983428999,6603.2259118
# search time: 6600.049s
# total time: 33037.559s
