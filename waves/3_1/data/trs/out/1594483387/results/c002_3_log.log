    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.37s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c002_3.json out/1594483387/results/c002_3_best.csv out/1594483387/results/c002_3_predictions.csv out/1594483387/results/c002_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 6]), o: IntList([]) }
#   Datum { i: IntList([9, 6, 2, 5, 8, 7, 3, 4, 1, 0]), o: IntList([2]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([7, 4, 3, 9, 5, 8, 2, 1, 6]), o: IntList([3]) }
#   Datum { i: IntList([7, 9, 0, 2, 1, 8, 6, 3, 5, 4]), o: IntList([0]) }
#   Datum { i: IntList([6, 7, 8, 1, 4, 3, 0, 5, 9, 2]), o: IntList([8]) }
#   Datum { i: IntList([3, 9]), o: IntList([]) }
#   Datum { i: IntList([5, 6, 1, 3, 2, 0, 7, 8, 9, 4]), o: IntList([1]) }
#   Datum { i: IntList([5, 7]), o: IntList([]) }
#   Datum { i: IntList([4, 7, 1, 2, 6, 3, 8, 9, 0, 5]), o: IntList([1]) }
#   Datum { i: IntList([0, 5]), o: IntList([]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c002,0,3,1,1035497,1035498,920570,600.000392234,602.627068944
c002,0,3,2,853097,853263,806870,1200.0119596109998,1203.57098732
c002,0,3,3,593242,593401,572911,1800.0124754279998,1804.683420764
c002,0,3,4,443465,443637,426914,2400.012690911,2405.704053019
c002,0,3,5,367478,367649,350754,3000.013196741,3006.436554141
c002,0,3,6,221053,221220,211760,3600.013497559,3607.360123024
c002,0,3,7,167710,167879,160440,4200.014054691,4208.325689904
c002,0,3,8,157362,157527,150314,4800.020999884,4809.177131589
c002,0,3,9,129368,129535,123392,5400.040558773,5410.064402663
c002,0,3,10,113614,113784,108652,6000.056527421,6010.954425876
c002,0,3,11,79793,79960,76570,6600.066581539,6611.975535563
# search time: 6600.067s
# total time: 6612.385s
c002,1,3,1,990070,990071,894291,600.001777525,600.33480504
c002,1,3,2,867811,867981,820794,1200.0052152859998,1200.77464091
c002,1,3,3,601158,601332,579357,1800.00577183,1801.227236646
c002,1,3,4,444440,444622,427977,2400.014610705,2401.681205337
c002,1,3,5,369138,369311,352477,3000.016515372,3002.008460623
c002,1,3,6,220752,220925,211422,3600.016662382,3602.435158613
c002,1,3,7,167530,167702,160204,4200.024119036,4202.921883883
c002,1,3,8,155225,155398,148462,4800.029744096,4803.362205601
c002,1,3,9,127891,128063,121908,5400.039219442,5403.764221408
c002,1,3,10,109215,109389,104582,6000.044923444,6004.268390885
c002,1,3,11,83072,83244,79625,6600.045880318,6604.761999333
# search time: 6600.046s
# total time: 13217.832s
c002,2,3,1,1059669,1059670,906321,600.004562762,600.194576254
c002,2,3,2,854588,854767,809967,1200.004740081,1200.474244599
c002,2,3,3,598268,598447,577360,1800.0063480019999,1800.781329946
c002,2,3,4,430687,430867,415360,2400.0063762689997,2401.093977115
c002,2,3,5,366288,366470,349812,3000.0071763359997,3001.331296008
c002,2,3,6,215976,216158,207014,3600.0092452329995,3601.652311744
c002,2,3,7,146427,146608,140559,4200.013119468999,4202.016860068
c002,2,3,8,139874,140055,134158,4800.029923595999,4802.355702339
c002,2,3,9,118061,118237,113033,5400.032286236999,5402.752023164
c002,2,3,10,101408,101589,97178,6000.036660450999,6003.046427241
c002,2,3,11,71351,71530,68555,6600.038919510999,6603.365283919
# search time: 6600.039s
# total time: 19821.881s
c002,3,3,1,971429,971430,862335,600.006001524,600.23051248
c002,3,3,2,871245,871413,823607,1200.008636207,1200.484437265
c002,3,3,3,597868,598029,576529,1800.0123701520001,1800.740627795
c002,3,3,4,418766,418941,403874,2400.013016121,2401.017424775
c002,3,3,5,364939,365112,348384,3000.013921849,3001.224275668
c002,3,3,6,219847,220014,210570,3600.015074311,3601.508881634
c002,3,3,7,169189,169358,161981,4200.016518048,4201.726695495
c002,3,3,8,153572,153744,146891,4800.0170126309995,4801.982434401
c002,3,3,9,131880,132048,125637,5400.0184839329995,5402.198879894
c002,3,3,10,111580,111747,106826,6000.01878434,6002.397489113
c002,3,3,11,75359,75526,72434,6600.022554954,6602.634961387
# search time: 6600.023s
# total time: 26425.425s
c002,4,3,1,1030253,1030254,884959,600.000193892,600.164168743
c002,4,3,2,845046,845239,801385,1200.0004743999998,1200.394896448
c002,4,3,3,599798,599979,578105,1800.0006445479999,1800.615132457
c002,4,3,4,432879,433077,417630,2400.0006877019996,2400.83878419
c002,4,3,5,360714,360903,344673,3000.0088438639996,3001.038877347
c002,4,3,6,217978,218156,209014,3600.0205684199996,3601.287561473
c002,4,3,7,167556,167742,160231,4200.025302579,4201.448836073
c002,4,3,8,152935,153121,146040,4800.027428964,4801.636300662
c002,4,3,9,126964,127150,120964,5400.0362204190005,5401.823479454
c002,4,3,10,113423,113606,108449,6000.043189286001,6002.034878897
c002,4,3,11,83069,83252,79556,6600.047425064001,6602.353816404
# search time: 6600.047s
# total time: 33029.156s
