    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.53s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c027_4.json out/1594483387/results/c027_4_best.csv out/1594483387/results/c027_4_predictions.csv out/1594483387/results/c027_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 4, 6, 2, 3, 3]), o: IntList([6, 4, 2, 3, 3]) }
#   Datum { i: IntList([1, 2, 5, 1, 3, 2, 5]), o: IntList([1, 2, 1, 3, 2, 5]) }
#   Datum { i: IntList([2, 3, 9, 9, 8, 3, 8, 6]), o: IntList([2, 3, 9, 8, 3, 8, 6]) }
#   Datum { i: IntList([6, 5, 8, 0, 4, 8, 1, 9, 3, 2]), o: IntList([6, 5, 0, 4, 8, 1, 9, 3, 2]) }
#   Datum { i: IntList([9, 4, 0, 5, 9, 4, 5, 0, 0]), o: IntList([9, 4, 5, 9, 4, 5, 0, 0]) }
#   Datum { i: IntList([0, 0, 9, 0]), o: IntList([0, 9, 0]) }
#   Datum { i: IntList([6, 6, 1]), o: IntList([6, 1]) }
#   Datum { i: IntList([8, 8, 4, 1, 8, 4, 1, 4]), o: IntList([8, 4, 1, 8, 4, 1, 4]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 6, 6, 7, 2]), o: IntList([9, 7, 7, 7, 6, 6, 7, 2]) }
#   Datum { i: IntList([5, 5, 7, 7, 2]), o: IntList([5, 7, 7, 2]) }
#   Datum { i: IntList([5, 7, 6, 1, 0, 8, 3]), o: IntList([5, 7, 1, 0, 8, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c027,0,4,1,956651,956652,817450,600.00196182,602.191478549
c027,0,4,2,401623,401789,391392,1200.0034131749999,1203.530733387
c027,0,4,3,238595,238770,231815,1800.004384512,1804.512010925
c027,0,4,4,159034,159213,152278,2400.006162771,2405.18168417
c027,0,4,5,94364,94533,90766,3000.0109445460002,3006.203645593
c027,0,4,6,75101,75277,73197,3600.013318663,3607.163740634
c027,0,4,7,73776,73950,73424,4200.018936068,4208.058436059
c027,0,4,8,81571,81749,78933,4800.022368153,4808.585788608
c027,0,4,9,54795,54968,54009,5400.031044906,5409.50972303
c027,0,4,10,44522,44697,44103,6000.032911169999,6010.399170229
c027,0,4,11,41002,41177,40630,6600.040212554999,6611.232471973
# search time: 6600.040s
# total time: 6611.582s
c027,1,4,1,973958,973959,864145,600.000117714,600.348208061
c027,1,4,2,402828,402991,392657,1200.000592944,1200.832607238
c027,1,4,3,236404,236567,229675,1800.003333278,1801.271919165
c027,1,4,4,158611,158774,150535,2400.008515177,2401.625883656
c027,1,4,5,95827,95987,93135,3000.012829307,3002.095618607
c027,1,4,6,75270,75427,73305,3600.019343106,3602.600227061
c027,1,4,7,76135,76287,75644,4200.021387613,4202.951077885
c027,1,4,8,82149,82313,79600,4800.026684222,4803.210971579
c027,1,4,9,53806,53964,53014,5400.032450975999,5403.619080829
c027,1,4,10,43095,43261,42677,6000.034556123,6004.104954949
c027,1,4,11,38057,38219,37797,6600.03462764,6604.685037661
# search time: 6600.035s
# total time: 13216.936s
c027,2,4,1,1038413,1038414,885844,600.000640622,600.226398204
c027,2,4,2,396181,396372,384889,1200.000793833,1200.554141261
c027,2,4,3,230751,230940,224184,1800.0022331730001,1800.870700366
c027,2,4,4,161533,161727,155387,2400.0037870680003,2401.056042198
c027,2,4,5,95333,95522,92571,3000.0056015170003,3001.36762905
c027,2,4,6,74827,75019,72918,3600.0081080830005,3601.669251559
c027,2,4,7,73143,73329,72782,4200.019905971,4201.987398077
c027,2,4,8,80738,80937,78094,4800.026534695,4802.199743022
c027,2,4,9,54141,54331,53387,5400.033930666,5402.471757122
c027,2,4,10,43375,43570,43002,6000.036593182,6002.787558739
c027,2,4,11,38835,39026,38571,6600.0385294239995,6603.149760021
# search time: 6600.039s
# total time: 19821.003s
c027,3,4,1,937070,937071,820299,600.000052819,600.20565974
c027,3,4,2,390268,390441,379300,1200.0008275579999,1200.454769308
c027,3,4,3,231530,231712,225142,1800.0091297519998,1800.69258258
c027,3,4,4,163588,163767,157474,2400.011742238,2400.842596779
c027,3,4,5,95415,95591,92780,3000.022027399,3001.105438358
c027,3,4,6,75285,75459,73366,3600.024773129,3601.34144608
c027,3,4,7,71867,72050,71504,4200.033494637,4201.545777231
c027,3,4,8,80327,80511,77795,4800.035228854001,4801.692784493
c027,3,4,9,54111,54292,53326,5400.037237651,5401.838143262
c027,3,4,10,43299,43480,42903,6000.040625736,6002.05908567
c027,3,4,11,38661,38840,38364,6600.04202376,6602.225802124
# search time: 6600.042s
# total time: 26423.589s
c027,4,4,1,947058,947059,809276,600.000248945,600.157792405
c027,4,4,2,386186,386370,375573,1200.003897094,1200.395112965
c027,4,4,3,230899,231092,224584,1800.008554046,1800.598248076
c027,4,4,4,162362,162550,156397,2400.010361456,2400.742274274
c027,4,4,5,95385,95577,92909,3000.0183565099996,3000.909033114
c027,4,4,6,73008,73198,71133,3600.021511786,3601.135428267
c027,4,4,7,75058,75249,74579,4200.029783137999,4201.259795363
c027,4,4,8,79997,80192,77491,4800.036381177999,4801.385769393
c027,4,4,9,53381,53567,52608,5400.045484813999,5401.562301178
c027,4,4,10,42078,42269,41691,6000.046362271999,6001.777225334
c027,4,4,11,37568,37756,37221,6600.060877337999,6602.095893114
# search time: 6600.061s
# total time: 33026.645s
