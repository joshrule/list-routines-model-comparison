    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.48s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c030_5.json out/1594483387/results/c030_5_best.csv out/1594483387/results/c030_5_predictions.csv out/1594483387/results/c030_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 7, 4, 3, 8, 1]), o: IntList([9, 7, 4, 3]) }
#   Datum { i: IntList([1, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([9, 7, 2, 5, 9, 4, 6, 8, 4]), o: IntList([9, 7, 2, 5, 9, 4, 6]) }
#   Datum { i: IntList([6, 4, 1, 6, 7, 2, 5, 8]), o: IntList([6, 4, 1, 6, 7, 2]) }
#   Datum { i: IntList([5, 4, 5, 0]), o: IntList([5, 4]) }
#   Datum { i: IntList([6, 4, 8, 1, 0]), o: IntList([6, 4, 8]) }
#   Datum { i: IntList([6, 2, 9, 7, 8, 3, 8, 5, 0]), o: IntList([6, 2, 9, 7, 8, 3, 8]) }
#   Datum { i: IntList([5, 7, 1, 8, 9, 4, 1, 6, 2, 3]), o: IntList([5, 7, 1, 8, 9, 4, 1, 6]) }
#   Datum { i: IntList([2, 5, 7, 8, 2, 2, 9, 3, 1, 0]), o: IntList([2, 5, 7, 8, 2, 2, 9, 3]) }
#   Datum { i: IntList([0, 0, 3, 3, 0, 3, 0]), o: IntList([0, 0, 3, 3, 0]) }
#   Datum { i: IntList([5, 3]), o: IntList([]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,5,1,1048915,1048916,932062,600.006928743,602.50884995
c030,0,5,2,446524,446689,433951,1200.665901631,1204.406338787
c030,0,5,3,402446,402616,398245,1800.666373302,1805.41598375
c030,0,5,4,193617,193801,192837,2400.667058634,2406.277991058
c030,0,5,5,136212,136390,135829,3000.6701636730004,3007.101547748
c030,0,5,6,122466,122629,121977,3600.6708885770004,3607.852147261
c030,0,5,7,97293,97461,96475,4200.674646883001,4208.700157365
c030,0,5,8,83126,83294,82800,4800.682167556,4809.37382636
c030,0,5,9,60058,60231,59647,5400.695349636,5410.121096937
c030,0,5,10,48700,48868,48569,6000.699602987001,6010.929434722
c030,0,5,11,46203,46364,45991,6600.700278612001,6611.685003944
# search time: 6600.700s
# total time: 6612.057s
c030,1,5,1,1004757,1004758,903367,600.001581831,600.353866549
c030,1,5,2,450155,450312,437728,1200.00162882,1200.801877425
c030,1,5,3,398813,398979,394666,1800.003004869,1801.229505063
c030,1,5,4,188400,188571,187810,2400.00665396,2401.585693064
c030,1,5,5,133886,134054,133466,3000.0148023360002,3001.982003611
c030,1,5,6,119405,119570,119076,3600.0151719240002,3602.320823122
c030,1,5,7,99894,100063,99065,4200.015776631,4202.704233086
c030,1,5,8,82492,82658,82183,4800.022434266,4803.06921942
c030,1,5,9,60051,60209,59673,5400.025684598,5403.485211844
c030,1,5,10,51019,51190,50825,6000.033085706,6003.788649453
c030,1,5,11,44133,44307,44002,6600.0427636429995,6604.035764254
# search time: 6600.043s
# total time: 13216.747s
c030,2,5,1,1015143,1015144,866745,600.001733921,600.194741998
c030,2,5,2,442380,442558,429859,1200.0021559450001,1200.501391859
c030,2,5,3,397242,397423,393187,1800.003071607,1800.804461677
c030,2,5,4,188692,188883,187885,2400.005549518,2401.059396436
c030,2,5,5,133020,133207,132637,3000.009888486,3001.291792202
c030,2,5,6,119820,120003,119321,3600.0100815349997,3601.48252889
c030,2,5,7,96648,96832,95844,4200.011084449,4201.752851874
c030,2,5,8,82474,82653,82160,4800.014746831,4801.954459998
c030,2,5,9,58474,58656,58031,5400.019062601,5402.226222177
c030,2,5,10,50739,50919,50566,6000.021364265,6002.418913272
c030,2,5,11,45721,45908,45553,6600.027916325999,6602.670074782
# search time: 6600.028s
# total time: 19820.079s
c030,3,5,1,853161,853162,728856,600.014486408,600.241181573
c030,3,5,2,299671,299854,291213,1200.014992126,1200.415685795
c030,3,5,3,398181,398363,394104,1800.016284334,1800.726148234
c030,3,5,4,191577,191771,190852,2400.016833978,2400.944541143
c030,3,5,5,136616,136808,136083,3000.017485432,3001.115837478
c030,3,5,6,123185,123379,122725,3600.0197256799997,3601.319317328
c030,3,5,7,98229,98414,97419,4200.0212980979995,4201.522047309
c030,3,5,8,83770,83960,83478,4800.027903503999,4801.685783495
c030,3,5,9,62596,62786,62243,5400.031118702,5401.950870697
c030,3,5,10,49220,49410,48989,6000.05191584,6002.167090573
c030,3,5,11,47010,47206,46831,6600.05745999,6602.313911091
# search time: 6600.057s
# total time: 26423.143s
c030,4,5,1,791828,791829,701670,600.004029484,600.380100465
c030,4,5,2,289754,289918,281702,1200.004070066,1200.59649041
c030,4,5,3,265095,265264,262391,1800.005509387,1800.734339009
c030,4,5,4,188985,189152,188256,2400.0055696990003,2400.896842281
c030,4,5,5,131708,131877,131173,3000.0061433520004,3001.050098117
c030,4,5,6,119767,119933,119315,3600.0083741620006,3601.234685276
c030,4,5,7,95895,96064,95096,4200.012842012001,4201.436580062
c030,4,5,8,81389,81560,81117,4800.023106495001,4801.588436606
c030,4,5,9,60756,60933,60382,5400.025851152001,5401.783283225
c030,4,5,10,48206,48376,48075,6000.032506430001,6001.949539454
c030,4,5,11,44754,44920,44599,6600.042234052002,6602.192817195
# search time: 6600.042s
# total time: 33026.021s
