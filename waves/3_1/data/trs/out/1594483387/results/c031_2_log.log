    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c031_2.json out/1594483387/results/c031_2_best.csv out/1594483387/results/c031_2_predictions.csv out/1594483387/results/c031_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1, 6, 4, 4]), o: IntList([4, 1, 6]) }
#   Datum { i: IntList([3, 3, 5, 0, 0, 3]), o: IntList([5, 0, 0, 3]) }
#   Datum { i: IntList([6, 8, 3, 2, 5, 8, 9, 9]), o: IntList([6, 8, 3, 2, 5, 8]) }
#   Datum { i: IntList([8, 8, 9, 2, 2, 3, 0, 5, 6]), o: IntList([9, 2, 2, 3, 0, 5, 6]) }
#   Datum { i: IntList([7, 1, 1, 1, 8, 7, 7, 8, 1, 1]), o: IntList([7, 1, 1, 1, 8, 7, 7, 8]) }
#   Datum { i: IntList([3, 7, 7, 6, 9, 2, 2]), o: IntList([3, 7, 7, 6, 9]) }
#   Datum { i: IntList([0, 0, 5, 5, 0, 5, 5, 0]), o: IntList([5, 5, 0, 5, 5, 0]) }
#   Datum { i: IntList([4, 0, 2, 4, 2, 2, 7, 9, 9]), o: IntList([4, 0, 2, 4, 2, 2, 7]) }
#   Datum { i: IntList([4, 4, 8, 3, 4, 9, 9, 9, 3, 6]), o: IntList([8, 3, 4, 9, 9, 9, 3, 6]) }
#   Datum { i: IntList([6, 6, 6, 8]), o: IntList([6, 8]) }
#   Datum { i: IntList([1, 4, 4]), o: IntList([1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c031,0,2,1,1007498,1007499,857317,600.010601686,602.107675576
c031,0,2,2,524221,524402,510607,1200.017075815,1203.368461004
c031,0,2,3,309221,309408,306225,1800.01729327,1804.450607476
c031,0,2,4,178529,178716,177935,2400.017324795,2405.433674262
c031,0,2,5,130496,130679,130091,3000.019077948,3006.241859855
c031,0,2,6,116595,116784,116260,3600.023729923,3606.758962306
c031,0,2,7,81787,81970,81543,4200.028606662,4207.599698044
c031,0,2,8,63331,63523,63048,4800.037502084,4808.427592839
c031,0,2,9,51782,51971,51708,5400.040749383,5409.285942802
c031,0,2,10,43225,43410,43146,6000.043097482,6010.236169806
c031,0,2,11,42723,42908,42589,6600.048979473,6611.051263446
# search time: 6600.049s
# total time: 6611.386s
c031,1,2,1,1077591,1077592,918981,600.000670574,600.267430706
c031,1,2,2,509931,510119,496077,1200.001266218,1200.738693502
c031,1,2,3,310984,311170,307831,1800.0013840689999,1801.197691295
c031,1,2,4,185711,185896,184918,2400.001712915,2401.584810448
c031,1,2,5,123125,123310,122929,3000.003135169,3002.01019158
c031,1,2,6,112346,112536,112201,3600.006338462,3602.29939063
c031,1,2,7,79979,80163,79756,4200.007680625,4202.643240314
c031,1,2,8,63924,64116,63635,4800.014701724,4803.079276432
c031,1,2,9,51385,51571,51320,5400.015128915,5403.505889299
c031,1,2,10,43379,43567,43263,6000.021712815,6003.937170663
c031,1,2,11,43602,43788,43503,6600.031345244,6604.394755162
# search time: 6600.031s
# total time: 13216.429s
c031,2,2,1,1147824,1147825,1022506,600.000595931,600.28786394
c031,2,2,2,607929,608092,592211,1200.001351694,1200.590189479
c031,2,2,3,378877,379038,375162,1800.00182302,1800.898598362
c031,2,2,4,215266,215427,214522,2400.003692905,2401.176797168
c031,2,2,5,132718,132884,132498,3000.007095621,3001.414114768
c031,2,2,6,117350,117516,116942,3600.014533136,3601.586697172
c031,2,2,7,82472,82636,82193,4200.022312809,4201.819248551
c031,2,2,8,66848,67017,66503,4800.036023706,4802.083980969
c031,2,2,9,52343,52520,52254,5400.039285851,5402.377653125
c031,2,2,10,46066,46234,45964,6000.0497639800005,6002.724601447
c031,2,2,11,41149,41316,41072,6600.052676225,6603.014429643
# search time: 6600.053s
# total time: 19820.293s
c031,3,2,1,1029395,1029396,876818,600.014568976,600.175982856
c031,3,2,2,498185,498365,484003,1200.019185504,1200.426338773
c031,3,2,3,310286,310477,307223,1800.020171248,1800.661268799
c031,3,2,4,188131,188324,187293,2400.022173605,2400.870680455
c031,3,2,5,133586,133769,133180,3000.0268967389998,3001.047485593
c031,3,2,6,113020,113206,112877,3600.027670945,3601.192320964
c031,3,2,7,81062,81247,80778,4200.028956894,4201.390581069
c031,3,2,8,63890,64072,63608,4800.035908301999,4801.646758658
c031,3,2,9,52056,52243,51971,5400.054637138999,5401.911449413
c031,3,2,10,45302,45488,45185,6000.056676865999,6002.15988368
c031,3,2,11,43421,43609,43297,6600.066162523,6602.366050332
# search time: 6600.066s
# total time: 26423.011s
c031,4,2,1,1091885,1091886,934203,600.000085618,600.179362679
c031,4,2,2,512088,512266,498531,1200.000325971,1200.386575193
c031,4,2,3,309461,309646,306396,1800.001756051,1800.586785796
c031,4,2,4,181737,181919,181090,2400.0040230550003,2400.773168638
c031,4,2,5,132818,132999,132415,3000.004796901,3000.913172409
c031,4,2,6,115301,115486,114969,3600.004843822,3601.027928933
c031,4,2,7,81147,81325,80874,4200.005847695,4201.184799752
c031,4,2,8,65726,65904,65390,4800.01562338,4801.37274836
c031,4,2,9,51965,52140,51889,5400.020977638,5401.604883188
c031,4,2,10,44136,44312,44012,6000.026681571,6001.862519897
c031,4,2,11,41312,41493,41229,6600.061040678,6602.125681282
# search time: 6600.061s
# total time: 33025.926s
