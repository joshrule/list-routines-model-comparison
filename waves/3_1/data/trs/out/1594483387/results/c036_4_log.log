    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c036_4.json out/1594483387/results/c036_4_best.csv out/1594483387/results/c036_4_predictions.csv out/1594483387/results/c036_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 3, 3, 2, 4]), o: IntList([2, 3, 3, 5, 4]) }
#   Datum { i: IntList([7, 5, 0, 7, 1, 2]), o: IntList([7, 0, 5, 7, 1, 2]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 6, 1]), o: IntList([5, 5, 8, 8, 3, 6, 1]) }
#   Datum { i: IntList([1, 4, 0, 4]), o: IntList([1, 0, 4, 4]) }
#   Datum { i: IntList([5, 3, 2, 9, 7, 3, 3, 0]), o: IntList([5, 2, 3, 9, 7, 3, 3, 0]) }
#   Datum { i: IntList([6, 0, 8, 2, 5, 2, 1, 7, 3, 4]), o: IntList([2, 0, 8, 6, 5, 2, 1, 7, 3, 4]) }
#   Datum { i: IntList([8, 8, 7, 8]), o: IntList([8, 7, 8, 8]) }
#   Datum { i: IntList([7, 0, 4, 1, 2, 9, 8, 6, 5]), o: IntList([1, 0, 4, 7, 2, 9, 8, 6, 5]) }
#   Datum { i: IntList([0, 4, 1, 9, 7]), o: IntList([0, 1, 4, 9, 7]) }
#   Datum { i: IntList([6, 2, 9, 1, 4, 3, 0]), o: IntList([1, 2, 9, 6, 4, 3, 0]) }
#   Datum { i: IntList([9, 6, 9, 6, 9, 6]), o: IntList([6, 6, 9, 9, 9, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c036,0,4,1,1060637,1060638,950334,600.000183765,602.523749153
c036,0,4,2,415338,415510,403943,1200.005513729,1203.660468771
c036,0,4,3,248163,248336,239206,1800.007945794,1804.281774498
c036,0,4,4,154361,154533,153590,2400.010310594,2405.129334234
c036,0,4,5,138095,138272,136805,3000.0132656100004,3005.783967761
c036,0,4,6,96692,96866,96153,3600.0137788240004,3606.453752665
c036,0,4,7,67019,67189,66965,4200.021892266001,4207.193185342
c036,0,4,8,69713,69891,68943,4800.022700871001,4807.781921596
c036,0,4,9,50717,50886,50594,5400.029879584001,5408.50105342
c036,0,4,10,45378,45555,45201,6000.033817738001,6009.227979699
c036,0,4,11,39470,39641,39404,6600.055355694001,6609.860063673
# search time: 6600.055s
# total time: 6610.256s
c036,1,4,1,1104343,1104344,946530,600.000039194,600.279289304
c036,1,4,2,419889,420076,408509,1200.000169901,1200.708231092
c036,1,4,3,245792,245983,236064,1800.0005340419998,1801.011943525
c036,1,4,4,152267,152455,151510,2400.0022561329997,2401.385016891
c036,1,4,5,136327,136522,134972,3000.0127830009997,3001.757167466
c036,1,4,6,103554,103745,102793,3600.0154064549997,3602.084273433
c036,1,4,7,64328,64513,64185,4200.020612761,4202.444637399
c036,1,4,8,63257,63456,63152,4800.027835443,4802.715745731
c036,1,4,9,50210,50404,50103,5400.030595220001,5403.104893004
c036,1,4,10,44447,44644,44321,6000.045820556001,6003.558378818
c036,1,4,11,40256,40447,40293,6600.051236734001,6603.879843538
# search time: 6600.051s
# total time: 13214.827s
c036,2,4,1,1200919,1200920,1024743,600.002018565,600.21172479
c036,2,4,2,521170,521346,506320,1200.002119714,1200.494132847
c036,2,4,3,308798,308978,296850,1800.0043605239998,1800.692884955
c036,2,4,4,190788,190965,189725,2400.0070172389997,2401.008969009
c036,2,4,5,146797,146975,145268,3000.0203187849997,3001.260748669
c036,2,4,6,102541,102717,101832,3600.0224150669997,3601.476551718
c036,2,4,7,65701,65879,65699,4200.0304371209995,4201.705241342
c036,2,4,8,68149,68323,67444,4800.036063285999,4801.95399114
c036,2,4,9,48000,48181,48002,5400.049953456999,5402.22695095
c036,2,4,10,45198,45370,45002,6000.057369706999,6002.489703468
c036,2,4,11,38477,38660,38474,6600.063408702999,6602.726466757
# search time: 6600.063s
# total time: 19818.267s
c036,3,4,1,1059621,1059622,906303,600.001418558,600.20478929
c036,3,4,2,424938,425125,413724,1200.009210445,1200.43889346
c036,3,4,3,248998,249180,239347,1800.0103831239999,1800.602001999
c036,3,4,4,152879,153060,152078,2400.016024048,2400.797727663
c036,3,4,5,135864,136049,134629,3000.017959428,3000.963167039
c036,3,4,6,94550,94739,94072,3600.0364741,3601.147889532
c036,3,4,7,66988,67170,66860,4200.039265756,4201.344478323
c036,3,4,8,62528,62718,62341,4800.046161177999,4801.52536988
c036,3,4,9,49942,50124,49845,5400.057194446999,5401.687152962
c036,3,4,10,44325,44514,44138,6000.064808674999,6001.900175565
c036,3,4,11,38085,38263,38078,6600.0653980709985,6602.105644501
# search time: 6600.065s
# total time: 26421.070s
c036,4,4,1,1063738,1063739,906972,600.000029327,600.184291291
c036,4,4,2,421773,421951,410499,1200.0016108959999,1200.387770982
c036,4,4,3,244154,244335,235365,1800.0029527059999,1800.507310903
c036,4,4,4,153256,153434,152490,2400.0051713489997,2400.67111712
c036,4,4,5,132527,132711,131366,3000.0076434519997,3000.830914939
c036,4,4,6,102681,102864,102061,3600.0112583229998,3600.977699287
c036,4,4,7,67200,67377,67076,4200.015056235,4201.12384638
c036,4,4,8,66939,67131,66394,4800.016785115,4801.294671278
c036,4,4,9,48852,49031,48838,5400.019464994,5401.440540427
c036,4,4,10,43767,43952,43625,6000.0281882300005,6001.661586997
c036,4,4,11,37855,38040,37808,6600.032223416,6601.825201424
# search time: 6600.032s
# total time: 33023.591s
