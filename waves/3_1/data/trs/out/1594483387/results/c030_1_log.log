    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.53s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c030_1.json out/1594483387/results/c030_1_best.csv out/1594483387/results/c030_1_predictions.csv out/1594483387/results/c030_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 4, 5, 0]), o: IntList([5, 4]) }
#   Datum { i: IntList([5, 3]), o: IntList([]) }
#   Datum { i: IntList([5, 7, 1, 8, 9, 4, 1, 6, 2, 3]), o: IntList([5, 7, 1, 8, 9, 4, 1, 6]) }
#   Datum { i: IntList([1, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([6, 2, 9, 7, 8, 3, 8, 5, 0]), o: IntList([6, 2, 9, 7, 8, 3, 8]) }
#   Datum { i: IntList([0, 0, 3, 3, 0, 3, 0]), o: IntList([0, 0, 3, 3, 0]) }
#   Datum { i: IntList([9, 7, 4, 3, 8, 1]), o: IntList([9, 7, 4, 3]) }
#   Datum { i: IntList([6, 4, 8, 1, 0]), o: IntList([6, 4, 8]) }
#   Datum { i: IntList([2, 5, 7, 8, 2, 2, 9, 3, 1, 0]), o: IntList([2, 5, 7, 8, 2, 2, 9, 3]) }
#   Datum { i: IntList([6, 4, 1, 6, 7, 2, 5, 8]), o: IntList([6, 4, 1, 6, 7, 2]) }
#   Datum { i: IntList([9, 7, 2, 5, 9, 4, 6, 8, 4]), o: IntList([9, 7, 2, 5, 9, 4, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,1,1,978863,978864,857640,600.011383394,602.442117692
c030,0,1,2,623234,623405,604225,1200.0187891639998,1203.735366086
c030,0,1,3,650486,650656,626712,1800.0196358239998,1804.727856026
c030,0,1,4,220102,220268,212316,2400.0197985209998,2405.328114892
c030,0,1,5,209188,209360,203772,3000.0200196819997,3005.85447633
c030,0,1,6,131459,131635,127813,3600.0220711899997,3606.396958092
c030,0,1,7,104045,104216,100655,4200.022911151999,4206.878543646
c030,0,1,8,89185,89366,86546,4800.0318161079995,4807.406971247
c030,0,1,9,77478,77650,75092,5400.034349264999,5408.046999922
c030,0,1,10,60222,60396,57867,6000.038864468999,6008.653575141
c030,0,1,11,50583,50758,48459,6600.048256323999,6609.207273674
# search time: 6600.048s
# total time: 6609.721s
c030,1,1,1,1071545,1071546,917311,600.008114013,600.290004837
c030,1,1,2,649813,649990,629425,1200.0101911309998,1200.750287171
c030,1,1,3,672681,672861,648086,1800.010815748,1801.189610587
c030,1,1,4,228087,228268,220095,2400.011099986,2401.454457762
c030,1,1,5,215911,216089,210537,3000.012553576,3001.699198604
c030,1,1,6,133292,133472,129275,3600.015187689,3601.964450044
c030,1,1,7,108866,109044,105926,4200.016314257,4202.214867139
c030,1,1,8,90371,90552,87771,4800.01747058,4802.53514069
c030,1,1,9,78601,78782,76081,5400.023568241,5402.826484235
c030,1,1,10,62641,62820,60230,6000.030012627,6003.08811179
c030,1,1,11,49541,49721,47423,6600.036140541,6603.40412915
# search time: 6600.036s
# total time: 13213.534s
c030,2,1,1,1042094,1042095,925189,600.003992198,600.305031416
c030,2,1,2,646398,646561,625968,1200.004048086,1200.611279459
c030,2,1,3,672868,673041,647599,1800.004587587,1800.911535237
c030,2,1,4,229558,229730,221687,2400.0056376780003,2401.096541899
c030,2,1,5,214717,214888,209148,3000.0056609370004,3001.286189311
c030,2,1,6,130959,131126,126899,3600.00647018,3601.450711489
c030,2,1,7,108136,108300,105193,4200.00976124,4201.625861208
c030,2,1,8,91372,91535,88736,4800.013555114,4801.814429961
c030,2,1,9,79735,79903,77356,5400.013561589,5402.009444022
c030,2,1,10,60982,61148,58541,6000.0199435760005,6002.197563496
c030,2,1,11,48746,48913,46690,6600.029566648001,6602.45820968
# search time: 6600.030s
# total time: 19816.679s
c030,3,1,1,860677,860678,755440,600.000064609,600.261329831
c030,3,1,2,604707,604889,586031,1200.001255782,1200.722693884
c030,3,1,3,631397,631581,607388,1800.0027171689999,1801.025886535
c030,3,1,4,211770,211949,204311,2400.003997515,2401.194049365
c030,3,1,5,205845,206028,200925,3000.0068414609996,3001.347224718
c030,3,1,6,124455,124632,120523,3600.0134306109994,3601.503540666
c030,3,1,7,98880,99060,95661,4200.01721706,4201.673027427
c030,3,1,8,85146,85324,82587,4800.0223858869995,4801.819632857
c030,3,1,9,75511,75689,72840,5400.022820886999,5401.957376299
c030,3,1,10,57151,57325,54860,6000.031939187999,6002.140515704
c030,3,1,11,47974,48150,45936,6600.043621516999,6602.327193484
# search time: 6600.044s
# total time: 26419.940s
c030,4,1,1,1020901,1020902,872147,600.000101554,600.179692369
c030,4,1,2,601551,601733,583153,1200.000715165,1200.41696702
c030,4,1,3,638005,638193,613936,1800.0021289649999,1800.659244434
c030,4,1,4,214372,214558,206723,2400.004312465,2400.894985261
c030,4,1,5,211900,212083,206578,3000.004476936,3001.039132318
c030,4,1,6,129448,129631,125510,3600.007648889,3601.150827171
c030,4,1,7,106409,106595,103462,4200.008218606,4201.265746246
c030,4,1,8,89127,89310,86056,4800.010937748,4801.376155275
c030,4,1,9,79750,79934,77280,5400.017003477,5401.512683302
c030,4,1,10,60693,60868,58260,6000.018532236,6001.604985535
c030,4,1,11,51651,51834,49380,6600.027156737,6601.762142
# search time: 6600.027s
# total time: 33022.398s
