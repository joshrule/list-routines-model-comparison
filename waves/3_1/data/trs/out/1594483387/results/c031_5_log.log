    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c031_5.json out/1594483387/results/c031_5_best.csv out/1594483387/results/c031_5_predictions.csv out/1594483387/results/c031_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 7, 7, 6, 9, 2, 2]), o: IntList([3, 7, 7, 6, 9]) }
#   Datum { i: IntList([4, 1, 6, 4, 4]), o: IntList([4, 1, 6]) }
#   Datum { i: IntList([8, 8, 9, 2, 2, 3, 0, 5, 6]), o: IntList([9, 2, 2, 3, 0, 5, 6]) }
#   Datum { i: IntList([0, 0, 5, 5, 0, 5, 5, 0]), o: IntList([5, 5, 0, 5, 5, 0]) }
#   Datum { i: IntList([6, 6, 6, 8]), o: IntList([6, 8]) }
#   Datum { i: IntList([7, 1, 1, 1, 8, 7, 7, 8, 1, 1]), o: IntList([7, 1, 1, 1, 8, 7, 7, 8]) }
#   Datum { i: IntList([6, 8, 3, 2, 5, 8, 9, 9]), o: IntList([6, 8, 3, 2, 5, 8]) }
#   Datum { i: IntList([4, 4, 8, 3, 4, 9, 9, 9, 3, 6]), o: IntList([8, 3, 4, 9, 9, 9, 3, 6]) }
#   Datum { i: IntList([4, 0, 2, 4, 2, 2, 7, 9, 9]), o: IntList([4, 0, 2, 4, 2, 2, 7]) }
#   Datum { i: IntList([1, 4, 4]), o: IntList([1]) }
#   Datum { i: IntList([3, 3, 5, 0, 0, 3]), o: IntList([5, 0, 0, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c031,0,5,1,1025398,1025399,926103,600.000061702,602.668770479
c031,0,5,2,392525,392692,382172,1200.000776595,1204.008286555
c031,0,5,3,288067,288242,286043,1800.00334853,1805.047178025
c031,0,5,4,163370,163541,162874,2400.008994789,2405.981792243
c031,0,5,5,124952,125131,124569,3000.0109965720003,3006.818212888
c031,0,5,6,112617,112790,112084,3600.013406199,3607.505105003
c031,0,5,7,102118,102289,101676,4200.014662659,4208.024728039
c031,0,5,8,73539,73707,73268,4800.022058435,4809.015886673
c031,0,5,9,54606,54774,54385,5400.0283990749995,5409.811180567
c031,0,5,10,46558,46731,46413,6000.03494813,6010.728979835
c031,0,5,11,43518,43684,43446,6600.042715356,6611.546646365
# search time: 6600.043s
# total time: 6611.834s
c031,1,5,1,1038242,1038243,930132,600.004148412,600.365001377
c031,1,5,2,396671,396844,385864,1200.0060395209998,1200.851272668
c031,1,5,3,283830,284009,281917,1800.0072846829999,1801.306340463
c031,1,5,4,163543,163728,163070,2400.0107431789997,2401.689805947
c031,1,5,5,122915,123098,122550,3000.015704646,3002.068982042
c031,1,5,6,103264,103451,102858,3600.0180720079998,3602.464014005
c031,1,5,7,100118,100291,99719,4200.019723709,4202.780544281
c031,1,5,8,72396,72574,72127,4800.037422711,4803.208404793
c031,1,5,9,52867,53046,52630,5400.038105541,5403.781315646
c031,1,5,10,45753,45930,45603,6000.038297237,6004.299342967
c031,1,5,11,45433,45610,45348,6600.056904548,6604.835787237
# search time: 6600.057s
# total time: 13218.004s
c031,2,5,1,1046894,1046895,930910,600.000830757,600.343788063
c031,2,5,2,428779,428945,416686,1200.001317841,1200.664297141
c031,2,5,3,315717,315890,313581,1800.001711729,1800.989045669
c031,2,5,4,185073,185246,184519,2400.00171482,2401.261830673
c031,2,5,5,132895,133062,132426,3000.004074508,3001.515728603
c031,2,5,6,115103,115269,114548,3600.008734774,3601.772425178
c031,2,5,7,102745,102918,102284,4200.010684036,4201.946169942
c031,2,5,8,74194,74365,73892,4800.010958934001,4802.379207622
c031,2,5,9,53749,53920,53526,5400.020948867001,5402.747357131
c031,2,5,10,46008,46180,45878,6000.024119469001,6002.983960737
c031,2,5,11,44913,45080,44823,6600.035622606,6603.319804293
# search time: 6600.036s
# total time: 19821.917s
c031,3,5,1,991912,991913,846588,600.00620876,600.191441655
c031,3,5,2,395736,395913,384983,1200.00652265,1200.442086717
c031,3,5,3,288523,288707,286588,1800.0071048280001,1800.700456651
c031,3,5,4,168925,169106,168498,2400.008401719,2400.914670593
c031,3,5,5,120870,121051,120602,3000.0104548440004,3001.147756666
c031,3,5,6,115515,115701,114978,3600.0305628570004,3601.367602571
c031,3,5,7,99155,99340,98833,4200.0324470900005,4201.537076025
c031,3,5,8,73902,74080,73578,4800.0417406550005,4801.801124119
c031,3,5,9,55393,55578,55147,5400.044263801001,5402.060615802
c031,3,5,10,44897,45076,44802,6000.049865325001,6002.309734327
c031,3,5,11,45178,45361,45109,6600.055433552001,6602.547541831
# search time: 6600.055s
# total time: 26424.952s
c031,4,5,1,994201,994202,851364,600.000296547,600.17710925
c031,4,5,2,396101,396272,385664,1200.00171343,1200.432272981
c031,4,5,3,290807,290989,288744,1800.00291148,1800.652087983
c031,4,5,4,165396,165582,164891,2400.003288497,2400.84224011
c031,4,5,5,119602,119793,119381,3000.004185561,3001.061778247
c031,4,5,6,113722,113904,113143,3600.009606259,3601.233954845
c031,4,5,7,101564,101749,101137,4200.009611033,4201.352983954
c031,4,5,8,73659,73847,73403,4800.012450796,4801.540194632
c031,4,5,9,54729,54911,54521,5400.023308389,5401.800960047
c031,4,5,10,46068,46256,45972,6000.023504643999,6002.038912204
c031,4,5,11,45146,45326,45081,6600.026567061999,6602.284174145
# search time: 6600.027s
# total time: 33027.518s
