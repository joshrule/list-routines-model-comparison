    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.62s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c028_5.json out/1594483387/results/c028_5_best.csv out/1594483387/results/c028_5_predictions.csv out/1594483387/results/c028_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 8, 0, 1, 0, 3]), o: IntList([7, 8, 1, 0, 3]) }
#   Datum { i: IntList([3, 5, 0, 7, 9, 2, 8, 4]), o: IntList([3, 5, 7, 9, 2, 8, 4]) }
#   Datum { i: IntList([3, 0, 7, 6, 9, 4]), o: IntList([3, 7, 6, 9, 4]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 3, 6, 8, 1]), o: IntList([2, 4, 9, 5, 3, 6, 8, 1]) }
#   Datum { i: IntList([1, 2, 0, 6]), o: IntList([1, 2, 6]) }
#   Datum { i: IntList([3, 1, 4]), o: IntList([3, 4]) }
#   Datum { i: IntList([4, 2, 9, 1, 8, 7, 6]), o: IntList([4, 9, 1, 8, 7, 6]) }
#   Datum { i: IntList([5, 7, 1, 9, 0, 6, 2, 8, 4, 7]), o: IntList([5, 7, 9, 0, 6, 2, 8, 4, 7]) }
#   Datum { i: IntList([5, 2, 7, 9, 6, 4, 1, 0, 8, 3]), o: IntList([5, 7, 9, 6, 4, 1, 0, 8, 3]) }
#   Datum { i: IntList([5, 0, 6, 1, 2]), o: IntList([5, 6, 1, 2]) }
#   Datum { i: IntList([3, 2, 5, 8, 0, 9, 5]), o: IntList([3, 5, 8, 0, 9, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c028,0,5,1,1006600,1006601,896795,600.000339696,602.595758828
c028,0,5,2,403567,403737,392798,1200.0019427930001,1203.846927943
c028,0,5,3,217792,217953,212604,1800.0075328970001,1804.931123332
c028,0,5,4,157394,157571,155554,2400.0086775160003,2405.928874707
c028,0,5,5,115779,115946,115144,3000.0131611300003,3006.865052134
c028,0,5,6,104811,104976,104132,3600.01961501,3607.700964825
c028,0,5,7,98762,98946,96728,4200.020352676,4208.34483941
c028,0,5,8,94908,95076,91805,4800.022817001,4808.787763647
c028,0,5,9,56443,56622,55923,5400.024989359999,5409.523910356
c028,0,5,10,43293,43463,43042,6000.034242672999,6010.300313898
c028,0,5,11,42545,42716,42288,6600.034319537999,6611.230122822
# search time: 6600.034s
# total time: 6611.601s
c028,1,5,1,1042145,1042146,888799,600.008900898,600.320359041
c028,1,5,2,375000,375183,364379,1200.019030254,1200.892369628
c028,1,5,3,216734,216914,211324,1800.019237779,1801.342033267
c028,1,5,4,152977,153155,151222,2400.02354695,2401.759694882
c028,1,5,5,112255,112443,111611,3000.026636971,3002.159660547
c028,1,5,6,101518,101709,100889,3600.0282088269996,3602.582476512
c028,1,5,7,94969,95161,92981,4200.030952077,4202.86533422
c028,1,5,8,83758,83945,81115,4800.036524030999,4803.247382481
c028,1,5,9,37736,37920,37368,5400.040566979,5403.450176354
c028,1,5,10,42719,42905,42449,6000.040757184,6003.864628765
c028,1,5,11,39002,39198,38881,6600.041181617,6604.241152285
# search time: 6600.041s
# total time: 13216.537s
c028,2,5,1,988239,988240,842143,600.000156964,600.214844331
c028,2,5,2,379151,379335,369148,1200.0021461219999,1200.522710407
c028,2,5,3,208285,208469,203148,1800.0038773659999,1800.813929098
c028,2,5,4,152172,152358,150340,2400.003884542,2401.116088544
c028,2,5,5,110704,110894,110218,3000.008585632,3001.371938402
c028,2,5,6,105051,105236,104307,3600.0155224540003,3601.623293818
c028,2,5,7,95092,95285,93044,4200.021368813001,4201.869050528
c028,2,5,8,92153,92342,89158,4800.030289964001,4802.086507672
c028,2,5,9,51872,52058,51415,5400.036326831001,5402.403399011
c028,2,5,10,36062,36245,35901,6000.0474302930015,6002.992874107
c028,2,5,11,24172,24358,24079,6600.051043769002,6603.386867556
# search time: 6600.051s
# total time: 19820.609s
c028,3,5,1,913955,913956,781482,600.003023022,600.311242569
c028,3,5,2,411009,411188,399668,1200.014684473,1200.590559892
c028,3,5,3,220865,221052,215347,1800.016422352,1800.81849626
c028,3,5,4,154704,154896,152780,2400.027668757,2401.093059213
c028,3,5,5,113190,113378,112684,3000.029550721,3001.318132811
c028,3,5,6,103275,103466,102582,3600.0302236499997,3601.534860801
c028,3,5,7,97617,97804,95656,4200.032251318999,4201.718496874
c028,3,5,8,93340,93527,90347,4800.03432051,4801.85171431
c028,3,5,9,51860,52047,51326,5400.046066266,5402.098173012
c028,3,5,10,44861,45047,44563,6000.059560652,6002.304785503
c028,3,5,11,42090,42275,41883,6600.06209091,6602.55479198
# search time: 6600.062s
# total time: 26423.741s
c028,4,5,1,912331,912332,800204,600.004563424,600.204446523
c028,4,5,2,417187,417365,405836,1200.007202216,1200.416725661
c028,4,5,3,226779,226961,221072,1800.008177769,1800.582160387
c028,4,5,4,160338,160517,158278,2400.010463277,2400.783396296
c028,4,5,5,117427,117607,116718,3000.011669477,3000.951305935
c028,4,5,6,110898,111078,110070,3600.018906362,3601.09047065
c028,4,5,7,100153,100344,98086,4200.024886756,4201.250472482
c028,4,5,8,95809,95993,92615,4800.028831366,4801.371166468
c028,4,5,9,57671,57847,57112,5400.036472302,5401.511235258
c028,4,5,10,44172,44347,43937,6000.047511576,6001.724010185
c028,4,5,11,40457,40638,40308,6600.063376529,6601.899247035
# search time: 6600.063s
# total time: 33026.457s
