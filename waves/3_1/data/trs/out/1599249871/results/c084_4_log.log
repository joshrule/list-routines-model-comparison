    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.15s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c084_4.json out/1599249871/results/c084_4_best.csv out/1599249871/results/c084_4_predictions.csv out/1599249871/results/c084_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 42]), o: IntList([]) }
#   Datum { i: IntList([90, 8, 5, 34, 79, 65, 8, 48, 79, 9]), o: IntList([8]) }
#   Datum { i: IntList([94, 0, 58, 62, 7, 3, 1, 55, 88]), o: IntList([1]) }
#   Datum { i: IntList([5, 5]), o: IntList([]) }
#   Datum { i: IntList([85, 18, 85, 91, 91, 18, 91]), o: IntList([91]) }
#   Datum { i: IntList([57, 97, 57, 83, 92, 3, 14]), o: IntList([14]) }
#   Datum { i: IntList([99, 1, 1, 99, 85]), o: IntList([]) }
#   Datum { i: IntList([21, 24, 41, 38, 8, 6, 4, 96]), o: IntList([4]) }
#   Datum { i: IntList([27, 27, 27, 27]), o: IntList([]) }
#   Datum { i: IntList([37, 5, 82, 82, 5, 5, 37, 5, 82]), o: IntList([37]) }
#   Datum { i: IntList([6, 61, 3, 19, 80]), o: IntList([]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c084,0,4,1,904784,904786,834303,600.000310678,604.930358096
c084,0,4,2,814510,816368,753889,1200.000571669,1205.882282611
c084,0,4,3,244520,245964,236521,1800.004390557,1806.429898832
c084,0,4,4,128402,129203,123519,2400.00777034,2407.028405896
c084,0,4,5,130647,131401,125660,3000.0101354040003,3007.429310306
c084,0,4,6,101825,102612,98946,3600.0150873810003,3608.038395033
c084,0,4,7,71566,72419,69098,4200.0336427110005,4208.426897038
c084,0,4,8,67232,67907,64627,4800.035529118,4808.865924018
c084,0,4,9,53388,54101,51491,5400.040349861,5409.346440545
c084,0,4,10,50414,51168,48682,6000.0452307390005,6009.813997987
c084,0,4,11,40514,41246,39200,6600.046617739001,6610.286612077
# search time: 6600.047s
# total time: 6610.710s
c084,1,4,1,842120,842122,795667,600.005239617,600.475066467
c084,1,4,2,729082,731063,673182,1200.005275078,1200.966957073
c084,1,4,3,205579,207144,199204,1800.005627268,1801.227980707
c084,1,4,4,116273,116993,111639,2400.006719745,2401.445156028
c084,1,4,5,110510,111356,106364,3000.015637832,3001.680665944
c084,1,4,6,84366,85141,81939,3600.0159127959996,3601.981064401
c084,1,4,7,62899,63762,60939,4200.0273110709995,4202.318359319
c084,1,4,8,51565,52313,49810,4800.035908792,4802.567182185
c084,1,4,9,43038,43748,41764,5400.03630635,5402.849436639
c084,1,4,10,39728,40284,38472,6000.056413368,6003.24448156
c084,1,4,11,32590,33325,31815,6600.058383279,6603.414198797
# search time: 6600.058s
# total time: 13214.903s
c084,2,4,1,808048,808050,745821,600.002336777,600.326789118
c084,2,4,2,679566,681823,628580,1200.003007737,1200.79680216
c084,2,4,3,196816,198150,190748,1800.00374135,1801.072367901
c084,2,4,4,112477,113354,108117,2400.005000948,2401.24723582
c084,2,4,5,106672,107422,102774,3000.005944178,3001.42493806
c084,2,4,6,84106,84895,81751,3600.012604589,3601.647942434
c084,2,4,7,58076,58965,56286,4200.012617032,4201.784740508
c084,2,4,8,53708,54382,51968,4800.029343138,4802.058507386
c084,2,4,9,44254,44978,42881,5400.039416713999,5402.224237294
c084,2,4,10,40877,41544,39604,6000.039552318999,6002.420738104
c084,2,4,11,33468,34265,32618,6600.041336901999,6602.625396719
# search time: 6600.041s
# total time: 19817.938s
c084,3,4,1,778631,778633,717500,600.001011561,600.42218212
c084,3,4,2,705043,707431,651142,1200.001092616,1200.89071545
c084,3,4,3,191748,193147,185860,1800.004050667,1801.077568522
c084,3,4,4,115535,116278,110945,2400.006974223,2401.228726926
c084,3,4,5,109533,110292,105548,3000.0086112749996,3001.366207474
c084,3,4,6,84808,85598,82228,3600.0170063179994,3601.569673227
c084,3,4,7,57626,58451,55801,4200.075226186999,4201.797251948
c084,3,4,8,57638,58428,55657,4800.079064584999,4801.943450886
c084,3,4,9,45010,45736,43493,5400.088830331999,5402.131561788
c084,3,4,10,42140,42789,40733,6000.104006931999,6002.291034897
c084,3,4,11,34411,35107,33471,6600.105773570999,6602.448977808
# search time: 6600.106s
# total time: 26420.899s
c084,4,4,1,794767,794769,734010,600.006885534,600.295401203
c084,4,4,2,702167,703368,646827,1200.0082358670002,1200.642058461
c084,4,4,3,187071,188451,181580,1800.009176947,1800.848523329
c084,4,4,4,119733,120593,115192,2400.015357703,2401.005555586
c084,4,4,5,111120,111851,106709,3000.017984441,3001.15623848
c084,4,4,6,83409,84175,81039,3600.028109384,3601.32895127
c084,4,4,7,63040,63931,61051,4200.031718157999,4201.500912426
c084,4,4,8,52059,52823,50223,4800.045359223999,4801.651616323
c084,4,4,9,42830,43617,41501,5400.061763870999,5401.807306257
c084,4,4,10,39373,40114,38243,6000.075929356999,6001.949871778
c084,4,4,11,31091,31846,30428,6600.093409721999,6602.091033669
# search time: 6600.093s
# total time: 33023.390s
