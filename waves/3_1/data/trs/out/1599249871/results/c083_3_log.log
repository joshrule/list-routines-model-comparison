    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.13s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c083_3.json out/1599249871/results/c083_3_best.csv out/1599249871/results/c083_3_predictions.csv out/1599249871/results/c083_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([47, 27, 63, 1, 28, 26, 82, 1]), o: IntList([82]) }
#   Datum { i: IntList([67, 3, 20, 9, 50, 72, 29, 9, 35, 82]), o: IntList([29]) }
#   Datum { i: IntList([3, 4, 23, 57, 46, 60, 70, 7]), o: IntList([70]) }
#   Datum { i: IntList([6, 4, 54, 54, 5, 5, 4, 68]), o: IntList([4]) }
#   Datum { i: IntList([0, 6, 89, 5, 13, 89, 21, 21, 3, 30]), o: IntList([21]) }
#   Datum { i: IntList([77, 75, 75, 33, 33, 6, 40, 40, 40, 6]), o: IntList([40]) }
#   Datum { i: IntList([72, 55, 11, 6, 19, 1, 17, 70, 19]), o: IntList([17]) }
#   Datum { i: IntList([27, 25, 31, 27, 94, 5, 2]), o: IntList([2]) }
#   Datum { i: IntList([73, 73, 73, 73, 73, 73, 73, 73]), o: IntList([73]) }
#   Datum { i: IntList([41, 22, 30, 71, 84, 50, 95, 3, 7, 61]), o: IntList([95]) }
#   Datum { i: IntList([78, 8, 9, 54, 7, 0, 5, 6, 24]), o: IntList([5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c083,0,3,1,770364,770366,710964,600.000010891,604.633934189
c083,0,3,2,260925,263063,254377,1200.00337909,1205.769651156
c083,0,3,3,122377,123335,118265,1800.004316714,1806.550947426
c083,0,3,4,92442,93225,88623,2400.007339571,2407.169923588
c083,0,3,5,65788,66374,64679,3000.021439934,3008.2531456
c083,0,3,6,49257,49966,48709,3600.0223417670004,3609.415989499
c083,0,3,7,36810,37470,36098,4200.025555461,4210.683519266
c083,0,3,8,39243,39827,37439,4800.036371246,4811.569297605
c083,0,3,9,28126,28867,27660,5400.041055372,5413.031848809
c083,0,3,10,23910,24690,23615,6000.094532928,6014.714545289
c083,0,3,11,25456,26065,24731,6600.095123882,6615.548350584
# search time: 6600.095s
# total time: 6615.998s
c083,1,3,1,782899,782901,726290,600.003291457,600.51859544
c083,1,3,2,269058,271139,262560,1200.0060051710002,1200.961995704
c083,1,3,3,126967,128079,122740,1800.0173097280003,1801.315727784
c083,1,3,4,94903,95687,90997,2400.0195965560006,2401.637578421
c083,1,3,5,65204,65985,64315,3000.0229627210006,3002.239591984
c083,1,3,6,49483,50169,48871,3600.024918489001,3602.902065177
c083,1,3,7,37844,38565,37264,4200.029692455001,4203.615813005
c083,1,3,8,40534,41207,38406,4800.038754450001,4804.198011983
c083,1,3,9,29102,29691,28515,5400.060619592001,5404.884623208
c083,1,3,10,24858,25502,24392,6000.128393534001,6005.497204995
c083,1,3,11,26130,26802,25296,6600.139989112001,6606.05704789
# search time: 6600.140s
# total time: 13222.492s
c083,2,3,1,806012,806014,744222,600.000332113,600.39375554
c083,2,3,2,249716,251799,243650,1200.000827863,1200.689598132
c083,2,3,3,121485,122397,117388,1800.010674833,1800.932325245
c083,2,3,4,92620,93471,88763,2400.016085591,2401.107118064
c083,2,3,5,63410,64241,62543,3000.016346736,3001.494148309
c083,2,3,6,49145,49923,48672,3600.017385273,3601.923022694
c083,2,3,7,36982,37691,36342,4200.031281681,4202.364480295
c083,2,3,8,39644,40253,37904,4800.039221423,4802.706128596
c083,2,3,9,28351,29016,27778,5400.041324305,5403.387076688
c083,2,3,10,24081,24809,23746,6000.050904064,6003.959560239
c083,2,3,11,25153,25727,24377,6600.072974066,6604.427836297
# search time: 6600.073s
# total time: 19827.371s
c083,3,3,1,739135,739137,696045,600.000538201,600.327994694
c083,3,3,2,252111,253694,245130,1200.0016446509999,1200.599179293
c083,3,3,3,122302,123249,118256,1800.003088553,1800.784403151
c083,3,3,4,92488,93340,88806,2400.007232593,2400.981211784
c083,3,3,5,64872,65712,64016,3000.019185577,3001.327986242
c083,3,3,6,49111,49766,48556,3600.032424015,3601.71534565
c083,3,3,7,36264,36940,35570,4200.055538469,4202.235541674
c083,3,3,8,35658,36405,33957,4800.056891296999,4802.414373703
c083,3,3,9,26821,27571,26422,5400.0741656049995,5402.884514289
c083,3,3,10,22907,23659,22596,6000.131331854999,6003.200484877
c083,3,3,11,24436,25131,23732,6600.151673095999,6603.543100888
# search time: 6600.152s
# total time: 26431.372s
c083,4,3,1,775683,775685,736075,600.000512045,600.311487319
c083,4,3,2,249541,251492,243398,1200.001622081,1200.525767932
c083,4,3,3,130460,131545,125733,1800.002077883,1800.678583129
c083,4,3,4,99104,99885,95257,2400.008193238,2400.821738786
c083,4,3,5,62968,63863,62224,3000.008765623,3001.066305422
c083,4,3,6,48173,48865,47676,3600.0127703119997,3601.341194995
c083,4,3,7,36854,37542,36142,4200.029214282,4201.687627467
c083,4,3,8,39028,39736,37370,4800.050135465,4802.002513801
c083,4,3,9,28155,28919,27649,5400.054376798,5402.346556304
c083,4,3,10,24110,24854,23724,6000.075070698,6002.620405759
c083,4,3,11,23345,24020,22556,6600.091607333,6602.923071592
# search time: 6600.092s
# total time: 33035.020s
