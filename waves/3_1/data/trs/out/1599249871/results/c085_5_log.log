    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.19s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c085_5.json out/1599249871/results/c085_5_best.csv out/1599249871/results/c085_5_predictions.csv out/1599249871/results/c085_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 39, 4, 48, 46, 48]), o: IntList([46]) }
#   Datum { i: IntList([2, 67, 52, 72, 93, 9, 67, 5, 68]), o: IntList([52]) }
#   Datum { i: IntList([5, 4, 3, 80, 36, 66, 75]), o: IntList([66]) }
#   Datum { i: IntList([4, 28, 5, 26, 29, 6, 94, 3]), o: IntList([29]) }
#   Datum { i: IntList([1, 4, 4]), o: IntList([4]) }
#   Datum { i: IntList([1, 8, 27, 27, 8, 1, 8]), o: IntList([8]) }
#   Datum { i: IntList([3, 98, 94, 94, 3]), o: IntList([94]) }
#   Datum { i: IntList([8, 63, 70, 25, 0, 2, 19, 34, 60]), o: IntList([60]) }
#   Datum { i: IntList([1, 76, 9, 76]), o: IntList([76]) }
#   Datum { i: IntList([2, 53, 38, 49, 78, 69, 6, 1, 3, 11]), o: IntList([38]) }
#   Datum { i: IntList([2, 7, 3, 9]), o: IntList([3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c085,0,5,1,733232,733234,675074,600.000349091,604.319798013
c085,0,5,2,261354,263381,254887,1200.0005677059999,1205.531264831
c085,0,5,3,122605,123596,119892,1800.000800452,1806.322985839
c085,0,5,4,79342,80112,77033,2400.01340224,2407.254581913
c085,0,5,5,65142,65826,63161,3000.0160205949996,3008.082202837
c085,0,5,6,55845,56453,54454,3600.0290602839996,3608.868763447
c085,0,5,7,45173,46023,44153,4200.038923949,4209.874567263
c085,0,5,8,39799,40498,38998,4800.043376033999,4810.643664766
c085,0,5,9,32850,33570,32230,5400.062093862999,5411.640877845
c085,0,5,10,28656,29457,28282,6000.082595495999,6012.308393622
c085,0,5,11,24921,25709,24598,6600.0826096579995,6612.999016565
# search time: 6600.083s
# total time: 6613.374s
c085,1,5,1,762409,762411,705112,600.001867135,600.597648032
c085,1,5,2,319013,321138,311005,1200.006956571,1201.089539748
c085,1,5,3,144397,145469,140991,1800.0080197880002,1801.454653099
c085,1,5,4,97117,97921,94267,2400.0107633390003,2401.813600856
c085,1,5,5,78101,78857,76027,3000.013023718,3002.194447478
c085,1,5,6,66368,67179,64846,3600.0138131500003,3602.574075642
c085,1,5,7,54577,55423,53216,4200.021974941001,4203.064661357
c085,1,5,8,49322,50004,48108,4800.036100579001,4803.510826855
c085,1,5,9,41698,42498,40728,5400.045222451001,5403.908980212
c085,1,5,10,35791,36513,35083,6000.060360536001,6004.273973296
c085,1,5,11,29279,29965,28750,6600.060398434001,6604.673977491
# search time: 6600.060s
# total time: 13218.551s
c085,2,5,1,841203,841205,772906,600.001825419,600.421466546
c085,2,5,2,320848,322931,312836,1200.002898895,1200.768315309
c085,2,5,3,150094,151103,146266,1800.0045948470001,1800.994462076
c085,2,5,4,96729,97561,93923,2400.009042277,2401.215555094
c085,2,5,5,73245,74054,71100,3000.022639423,3001.474162273
c085,2,5,6,68719,69415,66696,3600.029933844,3601.734522044
c085,2,5,7,53744,54544,52287,4200.036365261,4202.04634997
c085,2,5,8,48305,48998,47112,4800.0368203240005,4802.300495739
c085,2,5,9,41825,42583,40852,5400.049138203,5402.648758644
c085,2,5,10,33954,34740,33379,6000.062541611001,6002.942810559
c085,2,5,11,29561,30323,29031,6600.069874142,6603.222969637
# search time: 6600.070s
# total time: 19822.314s
c085,3,5,1,838657,838659,793419,600.001752466,600.397913141
c085,3,5,2,311440,313110,303447,1200.004360918,1200.673238518
c085,3,5,3,140880,141935,137425,1800.006734746,1800.846725948
c085,3,5,4,99035,99939,96136,2400.0144312029997,2401.019739635
c085,3,5,5,72867,73614,70846,3000.0170294679997,3001.246030032
c085,3,5,6,68612,69339,66743,3600.0294301629997,3601.450048164
c085,3,5,7,56315,57157,54812,4200.039010418,4201.695322832
c085,3,5,8,47017,47746,45889,4800.042536485,4801.925212029
c085,3,5,9,41717,42548,40759,5400.042967875,5402.11050381
c085,3,5,10,34696,35503,34121,6000.043840261999,6002.34234363
c085,3,5,11,29896,30575,29306,6600.044470911999,6602.563666764
# search time: 6600.044s
# total time: 26425.372s
c085,4,5,1,779805,779807,735650,600.000765313,600.356172837
c085,4,5,2,316821,318878,308570,1200.000796189,1200.593315152
c085,4,5,3,147070,148065,143157,1800.001034123,1800.747425919
c085,4,5,4,99896,100799,96925,2400.00463981,2400.905448253
c085,4,5,5,74361,75140,72100,3000.006651031,3001.067303234
c085,4,5,6,68666,69378,66746,3600.0210230209996,3601.270125533
c085,4,5,7,55116,55696,53404,4200.025121256999,4201.483933965
c085,4,5,8,47874,48576,46690,4800.029560087999,4801.684457639
c085,4,5,9,41045,41662,39761,5400.035615180999,5401.849893972
c085,4,5,10,34642,35423,34047,6000.036003941999,6002.077970144
c085,4,5,11,27798,28458,27290,6600.071180380999,6602.424754562
# search time: 6600.071s
# total time: 33028.586s
