    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.12s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c082_3.json out/1599249871/results/c082_3_best.csv out/1599249871/results/c082_3_predictions.csv out/1599249871/results/c082_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([10, 6, 2, 99, 0]), o: IntList([2]) }
#   Datum { i: IntList([15]), o: IntList([]) }
#   Datum { i: IntList([18, 79, 7, 5, 3, 7, 3, 5, 79]), o: IntList([7]) }
#   Datum { i: IntList([96, 40]), o: IntList([]) }
#   Datum { i: IntList([91, 75, 3, 6, 8, 42, 11, 4, 1, 60]), o: IntList([3]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([22]), o: IntList([]) }
#   Datum { i: IntList([90, 90, 90, 90, 90]), o: IntList([90]) }
#   Datum { i: IntList([83, 58]), o: IntList([]) }
#   Datum { i: IntList([78, 8, 74, 9, 70, 78]), o: IntList([74]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c082,0,3,1,756923,756925,699957,600.002383358,604.101052411
c082,0,3,2,334506,336730,325854,1200.006766407,1205.128958139
c082,0,3,3,297135,298206,285683,1800.0069566040002,1805.60210661
c082,0,3,4,175776,176817,168699,2400.008642448,2406.02638317
c082,0,3,5,159055,159927,153144,3000.0113136190002,3006.430972659
c082,0,3,6,102325,103327,97732,3600.012429462,3606.805952261
c082,0,3,7,117961,118734,113673,4200.021434744,4207.20002239
c082,0,3,8,110959,111983,106765,4800.021989172,4807.563942387
c082,0,3,9,102316,103041,97827,5400.030547393,5408.028163825
c082,0,3,10,86909,87773,83538,6000.032739109,6008.357194238
c082,0,3,11,77170,78031,74046,6600.03748902,6608.682143988
# search time: 6600.037s
# total time: 6608.894s
c082,1,3,1,753879,753881,705972,600.000253455,600.371692542
c082,1,3,2,322670,324825,314209,1200.001421169,1200.670802548
c082,1,3,3,278632,279589,268166,1800.001783449,1800.883470074
c082,1,3,4,170463,171397,163737,2400.010086858,2401.086960063
c082,1,3,5,155844,156721,150055,3000.010339745,3001.262593269
c082,1,3,6,97966,99238,93895,3600.015045839,3601.450685592
c082,1,3,7,114524,115211,110170,4200.016042039,4201.629776963
c082,1,3,8,107778,108802,103781,4800.016934749,4801.826772372
c082,1,3,9,97168,98027,93128,5400.017200132,5402.049494609
c082,1,3,10,85553,86413,82179,6000.020887086,6002.263052169
c082,1,3,11,77943,78544,74539,6600.027201617,6602.434801892
# search time: 6600.027s
# total time: 13211.664s
c082,2,3,1,715077,715079,657848,600.00071581,600.235247823
c082,2,3,2,311949,314065,303760,1200.002720047,1200.470224974
c082,2,3,3,280454,281404,270022,1800.004357147,1800.625850761
c082,2,3,4,160540,161388,154133,2400.0044786460003,2400.764003299
c082,2,3,5,155834,156650,150310,3000.0052198020003,3000.891414168
c082,2,3,6,97239,98299,93045,3600.006634012,3601.029581312
c082,2,3,7,114698,115499,110510,4200.008575122,4201.157887771
c082,2,3,8,106830,107758,102881,4800.014750636001,4801.300408599
c082,2,3,9,96448,97400,92511,5400.023183357001,5401.445270649
c082,2,3,10,85482,86368,82267,6000.043763385001,6001.590585014
c082,2,3,11,76948,77798,73947,6600.044708171001,6601.739906272
# search time: 6600.045s
# total time: 19813.813s
c082,3,3,1,745447,745449,688701,600.000023106,600.202176904
c082,3,3,2,324076,325939,315346,1200.004936036,1200.381788208
c082,3,3,3,288689,289712,278292,1800.0059563,1800.523884116
c082,3,3,4,161674,162579,155255,2400.007555195,2400.65323323
c082,3,3,5,156007,156751,150405,3000.008392198,3000.762334773
c082,3,3,6,97328,98443,93408,3600.0112770279998,3600.853013652
c082,3,3,7,115467,116180,111149,4200.0119532809995,4200.951199619
c082,3,3,8,112659,113555,108471,4800.01276524,4801.083244414
c082,3,3,9,98487,99346,94459,5400.019285439999,5401.218086627
c082,3,3,10,88153,88859,84738,6000.026782313999,6001.330292514
c082,3,3,11,77235,78012,74193,6600.038513195999,6601.457035986
# search time: 6600.039s
# total time: 26415.530s
c082,4,3,1,758884,758886,699903,600.000268082,600.196451542
c082,4,3,2,315522,317396,307166,1200.0010569350002,1200.342366926
c082,4,3,3,287368,288275,277026,1800.002075797,1800.455808949
c082,4,3,4,163170,163993,156522,2400.002121797,2400.557806873
c082,4,3,5,154458,155204,148750,3000.002758531,3000.652658491
c082,4,3,6,96772,97894,92719,3600.005671687,3600.757562116
c082,4,3,7,114825,115641,110492,4200.006016059,4200.846658049
c082,4,3,8,105844,106713,101871,4800.013088993001,4800.938715218
c082,4,3,9,97403,98258,93340,5400.0144898220005,5401.053629145
c082,4,3,10,86012,86970,82799,6000.022908409001,6001.13437979
c082,4,3,11,78119,78917,74982,6600.025356818001,6601.237808987
# search time: 6600.025s
# total time: 33017.103s
