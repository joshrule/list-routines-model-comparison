    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized + debuginfo] target(s) in 0.09s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c081_4.json out/1599249871/results/c081_4_best.csv out/1599249871/results/c081_4_predictions.csv out/1599249871/results/c081_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([40, 50, 76, 47, 39]), o: IntList([76]) }
#   Datum { i: IntList([9, 81, 6, 81, 6]), o: IntList([6]) }
#   Datum { i: IntList([9, 91, 70, 48, 59, 83, 43]), o: IntList([70]) }
#   Datum { i: IntList([27, 4, 38, 83, 5, 3, 15, 4, 5, 83]), o: IntList([38]) }
#   Datum { i: IntList([45, 45, 45]), o: IntList([45]) }
#   Datum { i: IntList([3, 84, 2, 42, 12, 12]), o: IntList([2]) }
#   Datum { i: IntList([68, 68, 56, 46, 71]), o: IntList([56]) }
#   Datum { i: IntList([5, 83, 64, 87, 57, 1, 95, 1, 95]), o: IntList([64]) }
#   Datum { i: IntList([70, 1, 7, 18, 2, 8, 21, 6, 4, 19]), o: IntList([7]) }
#   Datum { i: IntList([55, 74, 69]), o: IntList([69]) }
#   Datum { i: IntList([9, 56, 9, 9]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c081,0,4,1,787819,787821,723293,600.000309074,604.485848162
c081,0,4,2,317399,319675,309598,1200.000455607,1205.40338964
c081,0,4,3,218767,219858,211365,1800.004720004,1806.023660703
c081,0,4,4,135233,136064,129395,2400.00775599,2406.540576437
c081,0,4,5,103111,103956,98607,3000.021156668,3007.040401029
c081,0,4,6,94656,95448,91389,3600.021391362,3607.796964586
c081,0,4,7,81239,82149,78651,4200.021688307,4208.621558905
c081,0,4,8,68196,69046,65850,4800.035418497,4809.49074426
c081,0,4,9,54409,55287,52842,5400.039284542,5410.526989999
c081,0,4,10,46590,47339,45077,6000.081505123,6011.509996531
c081,0,4,11,43040,43910,41927,6600.0819931900005,6612.395108045
# search time: 6600.082s
# total time: 6612.881s
c081,1,4,1,831222,831224,764237,600.000665921,600.511583609
c081,1,4,2,317580,319807,309624,1200.0013986489998,1200.907990399
c081,1,4,3,217486,218450,210027,1800.002326248,1801.19614194
c081,1,4,4,132648,133433,126672,2400.005344163,2401.444892077
c081,1,4,5,103786,104570,99121,3000.0062380279996,3001.680396617
c081,1,4,6,96286,97061,92967,3600.0144156559995,3602.044433166
c081,1,4,7,82060,82910,79444,4200.015040605,4202.473964124
c081,1,4,8,69161,70026,66928,4800.021222964,4802.828400356
c081,1,4,9,57138,57925,55313,5400.02916482,5403.270160835
c081,1,4,10,46850,47587,45480,6000.053941937,6003.694388031
c081,1,4,11,42547,43207,41226,6600.054207034,6604.087524278
# search time: 6600.054s
# total time: 13217.355s
c081,2,4,1,821015,821017,755501,600.000505226,600.368507971
c081,2,4,2,321557,323993,314034,1200.001856464,1200.63827124
c081,2,4,3,215029,216095,207742,1800.00287768,1800.84844509
c081,2,4,4,130550,131326,124763,2400.003693693,2401.009127155
c081,2,4,5,101786,102587,97404,3000.005505357,3001.219013659
c081,2,4,6,94174,94950,90934,3600.009912938,3601.503789054
c081,2,4,7,80389,81295,77774,4200.015390652,4201.775698262
c081,2,4,8,69226,70131,66962,4800.021027424,4802.04384306
c081,2,4,9,56326,57084,54577,5400.046462304,5402.386452581
c081,2,4,10,47551,48477,46233,6000.05405818,6002.694892492
c081,2,4,11,43972,44755,42687,6600.057787819,6603.059121552
# search time: 6600.058s
# total time: 19820.869s
c081,3,4,1,889911,889913,837295,600.000062246,600.398892094
c081,3,4,2,323716,325333,314862,1200.00082037,1200.630548628
c081,3,4,3,216387,217452,209058,1800.0016214369998,1800.787071467
c081,3,4,4,122806,123723,117997,2400.013862894,2400.932458278
c081,3,4,5,93980,94829,90034,3000.0144962199997,3001.077302836
c081,3,4,6,95327,96163,92019,3600.017914271,3601.253803711
c081,3,4,7,80186,81118,77786,4200.0223137739995,4201.467402247
c081,3,4,8,67932,68841,65778,4800.024418542999,4801.665140624
c081,3,4,9,56497,57396,54747,5400.039060330999,5401.8772607
c081,3,4,10,47077,47889,45707,6000.062602903999,6002.161811929
c081,3,4,11,43997,44752,42665,6600.073657507999,6602.404804343
# search time: 6600.074s
# total time: 26423.687s
c081,4,4,1,802158,802160,730917,600.000526978,600.271699398
c081,4,4,2,313165,315392,305805,1200.001397639,1200.455539844
c081,4,4,3,214823,215883,207939,1800.0023144380002,1800.632525421
c081,4,4,4,140503,141352,134645,2400.0047024130004,2400.76088722
c081,4,4,5,101356,102153,96835,3000.0105359730005,3000.88491583
c081,4,4,6,95499,96326,92196,3600.0127591260007,3601.018156005
c081,4,4,7,81632,82466,78999,4200.0164690990005,4201.177067396
c081,4,4,8,69726,70554,67422,4800.032146826001,4801.393222094
c081,4,4,9,57362,58229,55537,5400.034218363001,5401.571166354
c081,4,4,10,47710,48493,46164,6000.044333908001,6001.744706677
c081,4,4,11,44310,45131,42896,6600.048899555001,6601.971343409
# search time: 6600.049s
# total time: 33026.187s
