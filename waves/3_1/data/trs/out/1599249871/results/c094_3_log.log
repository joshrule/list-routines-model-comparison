    Finished release [optimized + debuginfo] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c094_3.json out/1599249871/results/c094_3_best.csv out/1599249871/results/c094_3_predictions.csv out/1599249871/results/c094_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1, 99, 66, 4]), o: IntList([99, 66, 4, 1, 4]) }
#   Datum { i: IntList([6, 35, 46, 67, 7, 7]), o: IntList([46, 67, 6, 35, 7, 7]) }
#   Datum { i: IntList([68, 90, 68, 31, 68, 58, 90]), o: IntList([68, 31, 68, 90, 68, 58, 90]) }
#   Datum { i: IntList([96, 35, 63, 96, 63, 52, 96, 95, 37, 95]), o: IntList([63, 96, 96, 35, 63, 52, 96, 95, 37, 95]) }
#   Datum { i: IntList([73, 73, 5, 5, 73, 5, 5, 5, 5]), o: IntList([5, 5, 73, 73, 73, 5, 5, 5, 5]) }
#   Datum { i: IntList([88, 46, 88, 88]), o: IntList([88, 88, 88, 46]) }
#   Datum { i: IntList([80, 94, 67, 6, 59]), o: IntList([67, 6, 80, 94, 59]) }
#   Datum { i: IntList([6, 4, 5, 7, 7, 33, 93, 93]), o: IntList([5, 7, 6, 4, 7, 33, 93, 93]) }
#   Datum { i: IntList([5, 5, 5, 65, 65, 65]), o: IntList([5, 65, 5, 5, 65, 65]) }
#   Datum { i: IntList([82, 82, 27, 0, 2, 80, 7, 0, 8]), o: IntList([27, 0, 82, 82, 2, 80, 7, 0, 8]) }
#   Datum { i: IntList([36, 17, 5, 40, 3, 40, 3, 9, 55, 33]), o: IntList([5, 40, 36, 17, 3, 40, 3, 9, 55, 33]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c094,0,3,1,823079,823081,760390,600.003206899,604.327125637
c094,0,3,2,196315,198286,192528,1200.003848246,1205.133155684
c094,0,3,3,109980,110866,108490,1800.01231517,1805.632638807
c094,0,3,4,68202,69013,66758,2400.0219759789998,2406.029927078
c094,0,3,5,40089,40874,39692,3000.0330242479995,3006.349961282
c094,0,3,6,33447,34228,33129,3600.0337848249997,3606.696379293
c094,0,3,7,26351,26909,26324,4200.060882279,4207.455976316
c094,0,3,8,24166,24814,24160,4800.077500299,4808.200550371
c094,0,3,9,23471,24084,23390,5400.111285005,5408.983357672
c094,0,3,10,20527,21179,20591,6000.11365501,6009.633571994
c094,0,3,11,17262,17978,17475,6600.124663663,6610.466983655
# search time: 6600.125s
# total time: 6610.809s
c094,1,3,1,865919,865921,785808,600.001458987,600.596258592
c094,1,3,2,200142,202571,197429,1200.01372896,1200.96423896
c094,1,3,3,106467,107524,105300,1800.015802507,1801.203191812
c094,1,3,4,67232,67946,65760,2400.019982199,2401.415720756
c094,1,3,5,39145,39929,38883,3000.037690158,3001.591816819
c094,1,3,6,35241,36002,34697,3600.0617813319996,3601.819860308
c094,1,3,7,27711,28338,27644,4200.063979594,4202.326569778
c094,1,3,8,24943,25664,24996,4800.080847259,4802.743149071
c094,1,3,9,24102,24788,24076,5400.0911980089995,5403.203539235
c094,1,3,10,21356,22102,21481,6000.095963776,6003.631511966
c094,1,3,11,18589,19261,18696,6600.1215656389995,6604.077459026
# search time: 6600.122s
# total time: 13215.218s
c094,2,3,1,824830,824832,760126,600.00024845,600.396055188
c094,2,3,2,197140,199213,193833,1200.0009408659998,1200.627589054
c094,2,3,3,106790,107854,105379,1800.0050377009998,1800.768988224
c094,2,3,4,66972,67860,65525,2400.008383976,2400.892431414
c094,2,3,5,40260,40981,39824,3000.016841704,3001.006929631
c094,2,3,6,32169,32887,31737,3600.022166061,3601.102403894
c094,2,3,7,25337,26073,25474,4200.023603573,4201.330652378
c094,2,3,8,23249,23647,23080,4800.03220724,4801.573443973
c094,2,3,9,21864,22478,21867,5400.059836063,5401.80442242
c094,2,3,10,19390,20028,19424,6000.061464223,6002.03870065
c094,2,3,11,16231,16896,16410,6600.072650274,6602.299078808
# search time: 6600.073s
# total time: 19817.870s
c094,3,3,1,814254,814256,754035,600.000236857,600.356380635
c094,3,3,2,196350,198459,192968,1200.000242325,1200.551281695
c094,3,3,3,106442,107453,104936,1800.006353999,1800.675848032
c094,3,3,4,66129,66912,64698,2400.0163386470003,2400.784618093
c094,3,3,5,38130,38883,37829,3000.023354879,3000.862204949
c094,3,3,6,31834,32597,31523,3600.044187857,3600.982196338
c094,3,3,7,25374,26101,25463,4200.071339302,4201.169148824
c094,3,3,8,23383,24009,23374,4800.089718810999,4801.40358248
c094,3,3,9,22323,22988,22346,5400.104852261999,5401.573910611
c094,3,3,10,19072,19720,19192,6000.124785939999,6001.838139469
c094,3,3,11,16533,17142,16611,6600.171733984999,6602.108924957
# search time: 6600.172s
# total time: 26420.334s
c094,4,3,1,914813,914815,862724,600.001000003,600.444732454
c094,4,3,2,198280,200369,195171,1200.002933409,1200.630386665
c094,4,3,3,107135,107985,105612,1800.006388066,1800.747786393
c094,4,3,4,67951,68677,66396,2400.00678172,2400.847112381
c094,4,3,5,39016,39787,38662,3000.0266351070004,3000.953722947
c094,4,3,6,34168,34895,33709,3600.031716796,3601.083584849
c094,4,3,7,26469,27209,26576,4200.060895325,4201.254850702
c094,4,3,8,24593,25234,24546,4800.097129246,4801.531609113
c094,4,3,9,23594,24230,23540,5400.122033852,5401.682902649
c094,4,3,10,21050,21687,21065,6000.144373116,6001.891190127
c094,4,3,11,18065,18725,18151,6600.214696055,6602.15113474
# search time: 6600.215s
# total time: 33023.024s
