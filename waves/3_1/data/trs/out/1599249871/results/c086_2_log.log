    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized + debuginfo] target(s) in 0.20s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c086_2.json out/1599249871/results/c086_2_best.csv out/1599249871/results/c086_2_predictions.csv out/1599249871/results/c086_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([72, 14, 74, 16, 27]), o: IntList([16, 14, 74, 72, 27]) }
#   Datum { i: IntList([56, 0, 49, 15, 49, 80, 18, 80, 18]), o: IntList([15, 0, 49, 56, 49, 80, 18, 80, 18]) }
#   Datum { i: IntList([1, 35, 35, 9, 8, 41, 1, 85, 41, 7]), o: IntList([9, 35, 35, 1, 8, 41, 1, 85, 41, 7]) }
#   Datum { i: IntList([1, 5, 1, 5, 50, 1, 50]), o: IntList([5, 5, 1, 1, 50, 1, 50]) }
#   Datum { i: IntList([69, 3, 39, 51, 8, 51, 3, 3]), o: IntList([51, 3, 39, 69, 8, 51, 3, 3]) }
#   Datum { i: IntList([0, 29, 0, 96, 32, 5, 88, 0, 29, 88]), o: IntList([96, 29, 0, 0, 32, 5, 88, 0, 29, 88]) }
#   Datum { i: IntList([97, 3, 97, 62, 27, 62, 3]), o: IntList([62, 3, 97, 97, 27, 62, 3]) }
#   Datum { i: IntList([20, 4, 63, 68]), o: IntList([68, 4, 63, 20]) }
#   Datum { i: IntList([0, 8, 12, 84, 18, 23, 22, 30]), o: IntList([84, 8, 12, 0, 18, 23, 22, 30]) }
#   Datum { i: IntList([37, 9, 7, 20, 7, 2]), o: IntList([20, 9, 7, 37, 7, 2]) }
#   Datum { i: IntList([67, 52, 58, 46, 57, 57, 2, 67, 3]), o: IntList([46, 52, 58, 67, 57, 57, 2, 67, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c086,0,2,1,772690,772692,731955,600.000129859,605.205572992
c086,0,2,2,157827,159737,155256,1200.001856038,1206.035571589
c086,0,2,3,71387,72315,70514,1800.006313486,1806.544752368
c086,0,2,4,49130,49884,48161,2400.009972293,2406.980848053
c086,0,2,5,39264,40035,39113,3000.02149792,3007.723038517
c086,0,2,6,32917,33617,32799,3600.024530889,3608.560588594
c086,0,2,7,26114,26799,26162,4200.026585641,4209.358326054
c086,0,2,8,21647,22390,21689,4800.040511290999,4809.764018672
c086,0,2,9,22046,22685,22067,5400.068036203999,5410.53533102
c086,0,2,10,19192,19860,19310,6000.094230203,6011.110059899
c086,0,2,11,17755,18358,17807,6600.109082655999,6611.817214362
# search time: 6600.109s
# total time: 6612.279s
c086,1,2,1,836561,836563,781117,600.00074372,600.62334991
c086,1,2,2,158287,159373,154856,1200.001251698,1200.972414927
c086,1,2,3,69753,70764,69367,1800.0013251,1801.268296028
c086,1,2,4,50398,51124,49358,2400.016878732,2401.527084926
c086,1,2,5,39974,40695,39725,3000.031070308,3001.890776226
c086,1,2,6,33301,34097,33248,3600.043933071,3602.26892962
c086,1,2,7,27607,28376,27674,4200.0515335420005,4202.703860792
c086,1,2,8,23872,24478,23736,4800.053997912,4802.916757646
c086,1,2,9,23245,23857,23203,5400.098938616,5403.419148335
c086,1,2,10,20027,20654,20054,6000.12240477,6003.817190781
c086,1,2,11,18591,19254,18720,6600.123308636,6604.156101577
# search time: 6600.123s
# total time: 13216.789s
c086,2,2,1,841436,841438,779102,600.000512615,600.438534492
c086,2,2,2,157345,159770,155561,1200.007929506,1200.668266992
c086,2,2,3,70927,71879,70280,1800.0119879650001,1800.804186709
c086,2,2,4,49271,50070,48289,2400.0195558,2400.938956926
c086,2,2,5,38350,39072,38126,3000.024399557,3001.143051177
c086,2,2,6,32056,32825,32041,3600.034938525,3601.426472593
c086,2,2,7,26211,26961,26399,4200.047033823,4201.722091744
c086,2,2,8,22911,23537,22744,4800.051065265,4801.882076433
c086,2,2,9,22050,22721,22101,5400.0543050960005,5402.148803657
c086,2,2,10,19153,19835,19232,6000.06413536,6002.383747245
c086,2,2,11,17950,18637,18050,6600.075784206,6602.707046859
# search time: 6600.076s
# total time: 19819.835s
c086,3,2,1,803617,803619,745793,600.007201597,600.34921901
c086,3,2,2,157796,160163,155880,1200.010642816,1200.563729001
c086,3,2,3,70970,71891,70082,1800.013832522,1800.69170233
c086,3,2,4,48726,49543,47846,2400.0197433430003,2400.825158559
c086,3,2,5,38005,38772,37848,3000.024311256,3001.012974443
c086,3,2,6,32165,32907,32075,3600.0299830430004,3601.213889487
c086,3,2,7,26145,26868,26261,4200.048336383001,4201.378811263
c086,3,2,8,22345,23030,22276,4800.048473965001,4801.480502548
c086,3,2,9,22269,22853,22233,5400.072707896001,5401.700453685
c086,3,2,10,19530,20109,19510,6000.078936224001,6001.933300506
c086,3,2,11,17933,18633,18055,6600.135819314001,6602.26638527
# search time: 6600.136s
# total time: 26422.499s
c086,4,2,1,863832,863834,800368,600.006344319,600.39898921
c086,4,2,2,160167,162530,158201,1200.009103545,1200.586555178
c086,4,2,3,70281,71251,69678,1800.010285677,1800.711174732
c086,4,2,4,48554,49391,47791,2400.011669514,2400.835585595
c086,4,2,5,38980,39719,38738,3000.033733533,3001.000888948
c086,4,2,6,33094,33804,33037,3600.034319343,3601.163713979
c086,4,2,7,26567,27198,26554,4200.042659408,4201.376192902
c086,4,2,8,24063,24831,23977,4800.052577455,4801.488340346
c086,4,2,9,22439,23106,22489,5400.072923764999,5401.692722596
c086,4,2,10,19516,20195,19659,6000.106191825,6001.911994852
c086,4,2,11,18192,18784,18196,6600.162883789,6602.170360057
# search time: 6600.163s
# total time: 33024.955s
