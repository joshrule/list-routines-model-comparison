    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized + debuginfo] target(s) in 0.22s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c087_2.json out/1599249871/results/c087_2_best.csv out/1599249871/results/c087_2_predictions.csv out/1599249871/results/c087_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([36, 77, 25, 3, 1]), o: IntList([36, 25, 77, 3, 1]) }
#   Datum { i: IntList([21, 94, 56, 2, 0, 0, 21, 94]), o: IntList([21, 56, 94, 2, 0, 0, 21, 94]) }
#   Datum { i: IntList([26, 71, 7, 31, 5, 21, 55, 4, 87]), o: IntList([26, 7, 71, 31, 5, 21, 55, 4, 87]) }
#   Datum { i: IntList([72, 88, 72, 88, 45, 88, 72, 85, 45, 79]), o: IntList([72, 72, 88, 88, 45, 88, 72, 85, 45, 79]) }
#   Datum { i: IntList([0, 9, 0, 68, 68, 9]), o: IntList([0, 0, 9, 68, 68, 9]) }
#   Datum { i: IntList([69, 69, 1, 94, 24, 2, 52, 56, 44]), o: IntList([69, 1, 69, 94, 24, 2, 52, 56, 44]) }
#   Datum { i: IntList([46, 46, 87, 66]), o: IntList([46, 87, 46, 66]) }
#   Datum { i: IntList([93, 68, 96]), o: IntList([93, 96, 68]) }
#   Datum { i: IntList([67, 18, 67, 67, 67, 18]), o: IntList([67, 67, 18, 67, 67, 18]) }
#   Datum { i: IntList([15, 3, 67, 50, 50, 77, 77, 7, 8, 50]), o: IntList([15, 67, 3, 50, 50, 77, 77, 7, 8, 50]) }
#   Datum { i: IntList([9, 0, 16, 16, 9, 2, 9]), o: IntList([9, 16, 0, 16, 9, 2, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c087,0,2,1,917277,917279,852739,600.216258921,604.69248726
c087,0,2,2,187480,189441,184556,1200.217282919,1205.414735819
c087,0,2,3,89770,90628,88645,1800.2256973119997,1805.866078822
c087,0,2,4,56674,57500,55405,2400.2286658699995,2406.305970232
c087,0,2,5,36537,37304,36205,3000.2408861119993,3006.691216478
c087,0,2,6,29536,30222,29530,3600.258748435999,3607.546843259
c087,0,2,7,25980,26664,25805,4200.265801703999,4207.987852592
c087,0,2,8,25229,25900,24934,4800.299821209,4808.473509693
c087,0,2,9,21711,22564,21965,5400.309088757,5409.276143414
c087,0,2,10,19651,20349,19777,6000.320654651,6010.212970261
c087,0,2,11,16599,17289,16778,6600.332597612,6611.040169045
# search time: 6600.333s
# total time: 6611.461s
c087,1,2,1,846929,846931,788229,600.003830902,600.72672363
c087,1,2,2,181653,183977,179172,1200.004676387,1201.091872893
c087,1,2,3,89126,90016,87911,1800.007956465,1801.311205539
c087,1,2,4,57781,58399,56381,2400.015958298,2401.515923265
c087,1,2,5,35311,36148,35005,3000.019611359,3001.693938082
c087,1,2,6,29345,30023,29369,3600.032916532,3602.15824592
c087,1,2,7,26918,27545,26570,4200.062227141,4202.393484242
c087,1,2,8,24642,25326,24526,4800.076023584001,4802.63265869
c087,1,2,9,22204,22697,22120,5400.105992381001,5403.067748389
c087,1,2,10,19736,20400,19861,6000.172452877001,6003.542883966
c087,1,2,11,16623,17317,16820,6600.195181738001,6604.056218293
# search time: 6600.195s
# total time: 13215.950s
c087,2,2,1,794625,794627,723808,600.00089733,600.522104555
c087,2,2,2,183000,184991,180236,1200.0026187990002,1200.784343974
c087,2,2,3,86486,87393,85540,1800.0097685120002,1800.976767034
c087,2,2,4,54520,55370,53628,2400.0144714890002,2401.108347549
c087,2,2,5,34339,35099,34038,3000.015714045,3001.251492756
c087,2,2,6,29160,29900,29220,3600.053279195,3601.606504413
c087,2,2,7,26307,27029,26044,4200.05611823,4201.7410637
c087,2,2,8,23658,24358,23563,4800.074538845,4801.932683416
c087,2,2,9,21800,22276,21762,5400.081245996999,5402.482380541
c087,2,2,10,19240,19952,19423,6000.088563081999,6002.922481289
c087,2,2,11,16281,16926,16446,6600.093701336999,6603.102070762
# search time: 6600.094s
# total time: 19819.417s
c087,3,2,1,801714,801716,756403,600.002031444,600.390055034
c087,3,2,2,185755,187121,182323,1200.002344819,1200.610223098
c087,3,2,3,87469,88392,86470,1800.011369467,1800.777829632
c087,3,2,4,55437,56306,54393,2400.014847524,2400.919027912
c087,3,2,5,35079,35867,34792,3000.038410286,3001.067938822
c087,3,2,6,28910,29620,29014,3600.083615057,3601.367815835
c087,3,2,7,25727,26419,25572,4200.088103722,4201.484713782
c087,3,2,8,23643,24192,23535,4800.1211493109995,4801.619061573
c087,3,2,9,21258,21931,21429,5400.144145118999,5402.030958501
c087,3,2,10,19304,19998,19462,6000.172327967,6002.346715121
c087,3,2,11,16137,16846,16369,6600.177169594999,6602.602165353
# search time: 6600.177s
# total time: 26422.321s
c087,4,2,1,813141,813143,755538,600.005693151,600.396760576
c087,4,2,2,186600,188760,184015,1200.006413637,1200.589022824
c087,4,2,3,87018,87969,86186,1800.0181930499998,1800.732361231
c087,4,2,4,55649,56380,54557,2400.020801181,2400.857447159
c087,4,2,5,35210,35949,34857,3000.026736729,3000.972224449
c087,4,2,6,29524,29977,29302,3600.0316171599998,3601.199220755
c087,4,2,7,25824,26504,25598,4200.053323347,4201.316002935
c087,4,2,8,24132,24901,24102,4800.084907363,4801.515182982
c087,4,2,9,21791,22467,21915,5400.0931273529995,5401.685652664
c087,4,2,10,19366,20068,19565,6000.125963889,6001.982281341
c087,4,2,11,16174,16853,16374,6600.1344413629995,6602.260009107
# search time: 6600.134s
# total time: 33024.966s
