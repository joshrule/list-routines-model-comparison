    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c038_5.json out/1595515534/results/c038_5_best.csv out/1595515534/results/c038_5_predictions.csv out/1595515534/results/c038_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c038,0,5,1,1413412,1413414,1303512,600.004598965,601.994499089
c038,0,5,2,432470,434713,422638,1200.005150336,1202.453730592
c038,0,5,3,204120,205216,203081,1800.0072819020002,1802.810776439
c038,0,5,4,93199,94011,93419,2400.012889256,2403.08446402
c038,0,5,5,70370,71070,70670,3000.023506066,3003.320324081
c038,0,5,6,51363,52125,51678,3600.025775049,3603.554726994
c038,0,5,7,37910,38598,38282,4200.0324869,4203.829720386
c038,0,5,8,32555,33248,32922,4800.044972262,4804.115541309
c038,0,5,9,30893,31532,31158,5400.049484227,5404.421620115
c038,0,5,10,27057,27760,27419,6000.051384331,6004.648229773
c038,0,5,11,25284,25954,25695,6600.057545104,6604.883148267
# search time: 6600.058s
# total time: 6605.192s
c038,1,5,1,1433456,1433458,1328438,600.003420147,600.33430375
c038,1,5,2,420930,423225,411658,1200.005969585,1200.546934388
c038,1,5,3,202463,203558,201391,1800.0137172250002,1800.718275553
c038,1,5,4,91641,92360,91820,2400.0182854060004,2400.8913224
c038,1,5,5,68246,68951,68525,3000.022550723,3001.012709201
c038,1,5,6,50659,51387,50901,3600.0266463020002,3601.12453155
c038,1,5,7,37492,38259,37930,4200.029335276,4201.250466574
c038,1,5,8,32026,32677,32390,4800.03645949,4801.383302379
c038,1,5,9,30031,30710,30370,5400.0514474970005,5401.563182865
c038,1,5,10,26692,27355,27039,6000.054100343001,6001.707144674
c038,1,5,11,25151,25771,25494,6600.082272446,6601.898287025
# search time: 6600.082s
# total time: 13207.330s
c038,2,5,1,1350053,1350055,1248395,600.000177455,600.241994119
c038,2,5,2,422852,425043,413113,1200.00101551,1200.399907242
c038,2,5,3,203901,205101,202962,1800.001979049,1800.522676002
c038,2,5,4,92479,93270,92686,2400.009712201,2400.643296248
c038,2,5,5,68549,69324,68928,3000.0253857240004,3000.752155062
c038,2,5,6,50432,51146,50741,3600.0283206270005,3600.83638402
c038,2,5,7,37705,38396,38081,4200.03916025,4200.952255382
c038,2,5,8,31750,32477,32189,4800.044224992001,4801.099820726
c038,2,5,9,30389,31038,30705,5400.091577008001,5401.240198967
c038,2,5,10,27029,27679,27360,6000.103720397001,6001.327607781
c038,2,5,11,25211,25839,25562,6600.119888765001,6601.413970191
# search time: 6600.120s
# total time: 19809.136s
c038,3,5,1,1314865,1314867,1225455,600.000315438,600.202309795
c038,3,5,2,421323,423286,411416,1200.0013557500001,1200.337750111
c038,3,5,3,201195,202394,200241,1800.001599738,1800.441616651
c038,3,5,4,91598,92367,91812,2400.0048325380003,2400.533806408
c038,3,5,5,68638,69274,68852,3000.0138760380005,3000.637624113
c038,3,5,6,50555,51274,50808,3600.0325658170004,3600.72397115
c038,3,5,7,37481,38094,37738,4200.034275983,4200.806097833
c038,3,5,8,31970,32670,32358,4800.043405788,4800.882732065
c038,3,5,9,29784,30481,30103,5400.049691833,5400.967155639
c038,3,5,10,26820,27423,27134,6000.052845853,6001.062024984
c038,3,5,11,24907,25494,25254,6600.05316158,6601.12446534
# search time: 6600.053s
# total time: 26410.658s
c038,4,5,1,1390925,1390927,1282387,600.000464102,600.20611673
c038,4,5,2,421922,423087,411297,1200.000597653,1200.319294141
c038,4,5,3,208332,209392,207033,1800.002029018,1800.402244426
c038,4,5,4,95120,95986,95282,2400.012155387,2400.483028168
c038,4,5,5,71219,71966,71434,3000.014897298,3000.548760357
c038,4,5,6,51368,52031,51525,3600.023836981,3600.616177987
c038,4,5,7,35851,36469,36253,4200.041506153,4200.696843379
c038,4,5,8,30240,30728,30497,4800.056707043001,4800.786829021
c038,4,5,9,28302,28950,28673,5400.076319687,5400.895403854
c038,4,5,10,26109,26694,26476,6000.107421939,6001.031784677
c038,4,5,11,24360,25040,24826,6600.131039957,6601.102976586
# search time: 6600.131s
# total time: 33012.132s
