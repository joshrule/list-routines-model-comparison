    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c028_5.json out/1595515534/results/c028_5_best.csv out/1595515534/results/c028_5_predictions.csv out/1595515534/results/c028_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 8, 0, 1, 0, 3]), o: IntList([7, 8, 1, 0, 3]) }
#   Datum { i: IntList([3, 5, 0, 7, 9, 2, 8, 4]), o: IntList([3, 5, 7, 9, 2, 8, 4]) }
#   Datum { i: IntList([3, 0, 7, 6, 9, 4]), o: IntList([3, 7, 6, 9, 4]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 3, 6, 8, 1]), o: IntList([2, 4, 9, 5, 3, 6, 8, 1]) }
#   Datum { i: IntList([1, 2, 0, 6]), o: IntList([1, 2, 6]) }
#   Datum { i: IntList([3, 1, 4]), o: IntList([3, 4]) }
#   Datum { i: IntList([4, 2, 9, 1, 8, 7, 6]), o: IntList([4, 9, 1, 8, 7, 6]) }
#   Datum { i: IntList([5, 7, 1, 9, 0, 6, 2, 8, 4, 7]), o: IntList([5, 7, 9, 0, 6, 2, 8, 4, 7]) }
#   Datum { i: IntList([5, 2, 7, 9, 6, 4, 1, 0, 8, 3]), o: IntList([5, 7, 9, 6, 4, 1, 0, 8, 3]) }
#   Datum { i: IntList([5, 0, 6, 1, 2]), o: IntList([5, 6, 1, 2]) }
#   Datum { i: IntList([3, 2, 5, 8, 0, 9, 5]), o: IntList([3, 5, 8, 0, 9, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c028,0,5,1,1117041,1117043,1044577,600.000423571,601.870547632
c028,0,5,2,279651,281630,273836,1200.000666856,1202.406894853
c028,0,5,3,137162,138258,134604,1800.0050144,1802.80655267
c028,0,5,4,87965,88805,87880,2400.0061380839998,2403.180910361
c028,0,5,5,63510,64365,63782,3000.0148642689996,3003.461897988
c028,0,5,6,62163,62806,62174,3600.0219267589996,3603.732528324
c028,0,5,7,56231,56987,55460,4200.023512416,4203.975833559
c028,0,5,8,59498,60342,58113,4800.033860077,4804.305239304
c028,0,5,9,31505,32312,31947,5400.038518787,5404.644795846
c028,0,5,10,25129,25832,25594,6000.051725685,6004.993327796
c028,0,5,11,23839,24420,24180,6600.077923303,6605.330198544
# search time: 6600.078s
# total time: 6605.566s
c028,1,5,1,1237945,1237947,1131580,600.000079601,600.314329979
c028,1,5,2,271866,272660,264939,1200.000268897,1200.558550029
c028,1,5,3,133126,134132,130512,1800.006791247,1800.72795328
c028,1,5,4,86941,87794,86850,2400.008311344,2400.937335337
c028,1,5,5,61866,62710,62128,3000.009836529,3001.124107364
c028,1,5,6,60939,61623,60959,3600.010825521,3601.251357149
c028,1,5,7,55101,55760,54349,4200.016983691,4201.393710899
c028,1,5,8,58440,59151,57067,4800.036136678,4801.558746088
c028,1,5,9,30402,31345,30981,5400.041516538,5401.719128334
c028,1,5,10,24682,25437,25182,6000.06614246,6001.923057396
c028,1,5,11,23353,23931,23700,6600.0846700560005,6602.139520652
# search time: 6600.085s
# total time: 13208.102s
c028,2,5,1,1215323,1215325,1120192,600.001468282,600.231748828
c028,2,5,2,272820,275254,267429,1200.002603085,1200.390732414
c028,2,5,3,135200,136140,132234,1800.005407014,1800.519236104
c028,2,5,4,85526,86327,85478,2400.008906781,2400.639894315
c028,2,5,5,64318,65072,64605,3000.015285652,3000.736190175
c028,2,5,6,58493,59218,58770,3600.01914286,3600.842554485
c028,2,5,7,54972,55672,54299,4200.02964584,4200.942389372
c028,2,5,8,58500,59228,57099,4800.033400595,4801.053975551
c028,2,5,9,30639,31405,31084,5400.041567026,5401.171366083
c028,2,5,10,24817,25567,25329,6000.043949071,6001.315136365
c028,2,5,11,23130,23811,23578,6600.048776901999,6601.415605384
# search time: 6600.049s
# total time: 19809.908s
c028,3,5,1,1196401,1196403,1098970,600.004096581,600.216860524
c028,3,5,2,272547,275009,267440,1200.0052830529999,1200.353024864
c028,3,5,3,131288,132222,128380,1800.0087796099997,1800.453330407
c028,3,5,4,87947,88780,87901,2400.009723063,2400.571100568
c028,3,5,5,63255,64037,63542,3000.014698561,3000.669971342
c028,3,5,6,60843,61568,60872,3600.015335393,3600.744204373
c028,3,5,7,54353,55218,53808,4200.01862339,4200.822392823
c028,3,5,8,58275,59012,56927,4800.018867938001,4800.907574323
c028,3,5,9,30711,31610,31227,5400.026130946001,5401.026497906
c028,3,5,10,24686,25348,25117,6000.049724266001,6001.120032545
c028,3,5,11,23105,23778,23567,6600.073951848001,6601.249069609
# search time: 6600.074s
# total time: 26411.545s
c028,4,5,1,1211116,1211118,1112975,600.00137277,600.190084862
c028,4,5,2,274298,276483,268682,1200.0016029449998,1200.306762611
c028,4,5,3,134528,135461,131575,1800.002309431,1800.390158673
c028,4,5,4,87184,87964,87080,2400.003128421,2400.480578364
c028,4,5,5,60244,61034,60472,3000.00531382,3000.576650385
c028,4,5,6,58304,59063,58532,3600.010951914,3600.659348971
c028,4,5,7,52762,53530,52139,4200.022267132,4200.738649132
c028,4,5,8,58289,58962,56812,4800.023139876,4800.806996166
c028,4,5,9,29725,30521,30208,5400.032251393,5400.883017398
c028,4,5,10,23982,24703,24502,6000.049488123999,6000.976019094
c028,4,5,11,22074,22729,22492,6600.070263817999,6601.095094963
# search time: 6600.070s
# total time: 33013.035s
