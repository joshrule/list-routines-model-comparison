    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c023_5.json out/1595515534/results/c023_5_best.csv out/1595515534/results/c023_5_predictions.csv out/1595515534/results/c023_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([1, 5, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([7, 4, 5, 9, 9, 5, 8]), o: IntList([7, 5, 4, 5, 9, 9, 5, 8]) }
#   Datum { i: IntList([2, 0, 5, 4]), o: IntList([2, 8, 0, 5, 4]) }
#   Datum { i: IntList([3, 7, 3, 7, 3, 3, 2, 2, 7, 3]), o: IntList([3, 5, 7, 3, 7, 3, 3, 2, 2, 7, 3]) }
#   Datum { i: IntList([9, 7, 6, 1, 2]), o: IntList([9, 5, 7, 6, 1, 2]) }
#   Datum { i: IntList([0, 2, 7, 9, 5, 8, 6, 3, 0, 9]), o: IntList([0, 5, 2, 7, 9, 5, 8, 6, 3, 0, 9]) }
#   Datum { i: IntList([9, 7, 2, 3, 0, 1, 6, 8, 4]), o: IntList([9, 5, 7, 2, 3, 0, 1, 6, 8, 4]) }
#   Datum { i: IntList([7, 0, 2]), o: IntList([7, 8, 0, 2]) }
#   Datum { i: IntList([0, 2, 9, 8, 0, 0, 5, 9, 2, 9]), o: IntList([0, 5, 2, 9, 8, 0, 0, 5, 9, 2, 9]) }
#   Datum { i: IntList([5, 2, 2, 6, 1, 9, 4, 2]), o: IntList([5, 5, 2, 2, 6, 1, 9, 4, 2]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c023,0,5,1,1106927,1106929,1024460,600.001190715,601.998896512
c023,0,5,2,204879,206888,201121,1200.002687508,1202.592715436
c023,0,5,3,109824,110858,107414,1800.0058290739998,1803.006389468
c023,0,5,4,86639,87488,86441,2400.0149410149997,2403.275045658
c023,0,5,5,58526,59280,58755,3000.01743739,3003.506043413
c023,0,5,6,49169,49855,49281,3600.027852781,3604.001569881
c023,0,5,7,38993,39732,39312,4200.031011042,4204.501062928
c023,0,5,8,28126,28750,28510,4800.054976304,4804.768318659
c023,0,5,9,27865,28596,27800,5400.0636506579995,5405.228474469
c023,0,5,10,24632,25333,24593,6000.097127837,6005.679499255
c023,0,5,11,19034,19763,19329,6600.104678068999,6606.025794993
# search time: 6600.105s
# total time: 6606.243s
c023,1,5,1,1077416,1077418,989979,600.000139292,600.308517807
c023,1,5,2,201409,203686,198159,1200.006806198,1200.580350308
c023,1,5,3,106606,107687,104628,1800.009409853,1800.762455599
c023,1,5,4,83865,84757,83765,2400.009812652,2400.9239113
c023,1,5,5,56969,57782,57282,3000.014672753,3001.066260642
c023,1,5,6,49073,49732,49156,3600.0369825059997,3601.357731587
c023,1,5,7,38849,39583,39125,4200.047754391,4201.737263021
c023,1,5,8,27381,28032,27781,4800.067563359,4801.9425324
c023,1,5,9,27751,28414,27619,5400.072624236,5402.141878969
c023,1,5,10,24975,25560,24737,6000.078062162,6002.387184795
c023,1,5,11,18678,19318,18870,6600.103415066999,6602.549969286
# search time: 6600.103s
# total time: 13209.129s
c023,2,5,1,1030200,1030202,955434,600.001065984,600.239838544
c023,2,5,2,197410,199668,194084,1200.003254699,1200.416954768
c023,2,5,3,109278,110438,107129,1800.0065802160002,1800.546532955
c023,2,5,4,84627,85445,84511,2400.009570364,2400.653904813
c023,2,5,5,57428,58085,57530,3000.014996228,3000.743116276
c023,2,5,6,48450,49182,48688,3600.02304782,3600.962847732
c023,2,5,7,38575,39349,38945,4200.02903722,4201.095793547
c023,2,5,8,27660,28403,28154,4800.036392365,4801.166933349
c023,2,5,9,27775,28519,27684,5400.0595741960005,5401.341239585
c023,2,5,10,24793,25373,24552,6000.091264628,6001.547630074
c023,2,5,11,18598,19358,18918,6600.100668121,6601.719200241
# search time: 6600.101s
# total time: 19811.165s
c023,3,5,1,1047051,1047053,950994,600.015164579,600.21375328
c023,3,5,2,197149,199350,194013,1200.016929094,1200.352462066
c023,3,5,3,108659,109788,106414,1800.020120487,1800.4724965
c023,3,5,4,85502,86065,85129,2400.0212576080003,2400.559915014
c023,3,5,5,57012,57818,57254,3000.028507889,3000.641609997
c023,3,5,6,48190,48972,48443,3600.031061404,3600.762687315
c023,3,5,7,38738,39388,38954,4200.036618162,4200.903885132
c023,3,5,8,27718,28432,28205,4800.052452839001,4801.039812293
c023,3,5,9,27957,28646,27705,5400.061289431001,5401.170188131
c023,3,5,10,24584,25253,24448,6000.084238720001,6001.34311362
c023,3,5,11,18602,19321,18856,6600.084784214001,6601.465359833
# search time: 6600.085s
# total time: 26412.940s
c023,4,5,1,1059131,1059133,972485,600.000160272,600.169492837
c023,4,5,2,195433,197724,192252,1200.0003857709999,1200.28462861
c023,4,5,3,106494,107523,104302,1800.0139861359999,1800.400555524
c023,4,5,4,89004,89771,88774,2400.016075966,2400.47216707
c023,4,5,5,64315,65173,64551,3000.0280081109995,3000.543710512
c023,4,5,6,55129,55615,54909,3600.0331563389996,3600.675055216
c023,4,5,7,43097,43844,43346,4200.037957048,4200.787175242
c023,4,5,8,31191,31928,31648,4800.040944683,4800.88196973
c023,4,5,9,31289,32003,31060,5400.059997382,5400.979996423
c023,4,5,10,26392,27138,26204,6000.074457826,6001.141253517
c023,4,5,11,20348,21066,20559,6600.094071714,6601.24446796
# search time: 6600.094s
# total time: 33014.514s
