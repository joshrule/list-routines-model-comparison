    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c040_4.json out/1595515534/results/c040_4_best.csv out/1595515534/results/c040_4_predictions.csv out/1595515534/results/c040_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 8, 2, 9, 0, 0]), o: IntList([5, 8, 2, 9, 0, 0, 9]) }
#   Datum { i: IntList([6]), o: IntList([6]) }
#   Datum { i: IntList([3, 8, 5]), o: IntList([3, 8, 5, 3]) }
#   Datum { i: IntList([4, 7, 4, 3]), o: IntList([4, 7, 4, 3, 3]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([5, 7, 7, 3, 0, 2, 0, 6, 1]), o: IntList([5, 7, 7, 3, 0, 2, 0, 6, 1, 3]) }
#   Datum { i: IntList([7, 0]), o: IntList([7, 0]) }
#   Datum { i: IntList([4, 8, 9, 2, 5, 7, 1, 0, 6, 2]), o: IntList([4, 8, 9, 2, 5, 7, 1, 0, 6, 2, 9]) }
#   Datum { i: IntList([4, 8, 3, 7, 8]), o: IntList([4, 8, 3, 7, 8, 3]) }
#   Datum { i: IntList([9, 1, 1, 5, 1, 6, 5, 6]), o: IntList([9, 1, 1, 5, 1, 6, 5, 6, 9]) }
#   Datum { i: IntList([4, 2, 2, 6, 8, 9, 4]), o: IntList([4, 2, 2, 6, 8, 9, 4, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c040,0,4,1,1388959,1388961,1303793,600.000246871,601.959811809
c040,0,4,2,264938,266978,259306,1200.003700713,1202.472738282
c040,0,4,3,234980,235940,231572,1800.005221106,1802.801545575
c040,0,4,4,155599,156417,154711,2400.006038004,2403.075399721
c040,0,4,5,124205,125090,123631,3000.006041005,3003.351224296
c040,0,4,6,124475,125205,120593,3600.0069407299998,3603.571019199
c040,0,4,7,65920,66747,64926,4200.010760555,4203.83317531
c040,0,4,8,62423,63095,61499,4800.0113499750005,4804.067004596
c040,0,4,9,46753,47498,46290,5400.02182694,5404.291583021
c040,0,4,10,41831,42651,41498,6000.031244583,6004.544622927
c040,0,4,11,34052,34581,33674,6600.033746889,6604.78440163
# search time: 6600.034s
# total time: 6605.047s
c040,1,4,1,1346188,1346190,1255082,600.000379224,600.30475921
c040,1,4,2,263157,264407,257050,1200.000550876,1200.528565016
c040,1,4,3,232709,233766,229438,1800.002532085,1800.679992815
c040,1,4,4,152772,153553,151984,2400.004610844,2400.815409444
c040,1,4,5,122620,123461,122118,3000.005584974,3000.943234638
c040,1,4,6,122735,123455,118992,3600.00604439,3601.061303993
c040,1,4,7,64705,65437,63575,4200.010003652,4201.191821605
c040,1,4,8,60509,61221,59629,4800.019578873,4801.306987865
c040,1,4,9,45344,46058,44832,5400.025704672,5401.435742689
c040,1,4,10,40800,41583,40518,6000.030373845,6001.558354377
c040,1,4,11,33986,34698,33754,6600.047767831,6601.698151464
# search time: 6600.048s
# total time: 13207.270s
c040,2,4,1,1325578,1325580,1235070,600.00122247,600.227930167
c040,2,4,2,259092,261481,254451,1200.002714056,1200.377590835
c040,2,4,3,222628,223661,218808,1800.005948,1800.498023524
c040,2,4,4,144938,145868,144829,2400.007837371,2400.605021224
c040,2,4,5,111153,111934,110749,3000.0094376529996,3000.707556261
c040,2,4,6,121970,122744,118561,3600.010077266,3600.80393334
c040,2,4,7,68587,69416,67262,4200.014166595,4200.92746286
c040,2,4,8,66868,67578,65601,4800.015220474999,4801.001680667
c040,2,4,9,48920,49665,48235,5400.019425078,5401.094162564
c040,2,4,10,42052,42875,41717,6000.023483833999,6001.18992443
c040,2,4,11,35168,35911,34825,6600.034125496999,6601.278067254
# search time: 6600.034s
# total time: 19808.819s
c040,3,4,1,1414283,1414285,1311220,600.000243298,600.229966885
c040,3,4,2,258571,260846,254085,1200.001245302,1200.349049735
c040,3,4,3,228202,229298,224498,1800.003334372,1800.451190986
c040,3,4,4,145308,146155,145272,2400.0081960979996,2400.551207962
c040,3,4,5,110517,111312,110178,3000.0091527639997,3000.645528032
c040,3,4,6,121976,122693,118547,3600.0127988389995,3600.715521187
c040,3,4,7,69427,70204,68023,4200.012999827999,4200.79626732
c040,3,4,8,67283,67959,66027,4800.016428907999,4800.860637176
c040,3,4,9,47959,48760,47293,5400.022421293999,5400.935159639
c040,3,4,10,42971,43742,42433,6000.02544463,6001.003701125
c040,3,4,11,35746,36527,35472,6600.034354542,6601.074545622
# search time: 6600.034s
# total time: 26410.351s
c040,4,4,1,1339756,1339758,1227792,600.000196963,600.189736796
c040,4,4,2,256382,258654,251625,1200.001563371,1200.277580039
c040,4,4,3,219561,220706,215922,1800.003774474,1800.358268989
c040,4,4,4,138424,139254,138479,2400.006361327,2400.439482935
c040,4,4,5,109126,109844,108751,3000.01216124,3000.511405503
c040,4,4,6,120030,120812,116848,3600.012646546,3600.573079671
c040,4,4,7,68635,69431,67321,4200.026370305,4200.657189003
c040,4,4,8,65936,66795,64886,4800.028314949999,4800.718208868
c040,4,4,9,47417,48256,46814,5400.035551736999,5400.765569432
c040,4,4,10,43104,43815,42430,6000.047856950999,6000.840547999
c040,4,4,11,35357,36197,35108,6600.052737066999,6600.905740154
# search time: 6600.053s
# total time: 33011.732s
