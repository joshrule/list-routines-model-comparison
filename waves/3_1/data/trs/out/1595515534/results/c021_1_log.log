    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.17s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c021_1.json out/1595515534/results/c021_1_best.csv out/1595515534/results/c021_1_predictions.csv out/1595515534/results/c021_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 6, 9, 3]), o: IntList([1, 8, 6, 9, 3]) }
#   Datum { i: IntList([7, 4]), o: IntList([7, 8, 4]) }
#   Datum { i: IntList([0, 2, 3]), o: IntList([0, 8, 2, 3]) }
#   Datum { i: IntList([7, 9, 1, 2, 6, 3, 0, 4, 7, 5]), o: IntList([7, 8, 9, 1, 2, 6, 3, 0, 4, 7, 5]) }
#   Datum { i: IntList([0, 8, 6, 4, 0]), o: IntList([0, 8, 8, 6, 4, 0]) }
#   Datum { i: IntList([4, 9, 5, 1, 7, 3]), o: IntList([4, 8, 9, 5, 1, 7, 3]) }
#   Datum { i: IntList([1, 8, 1, 1, 6, 2, 1, 4, 4, 3]), o: IntList([1, 8, 8, 1, 1, 6, 2, 1, 4, 4, 3]) }
#   Datum { i: IntList([2, 9, 1, 7, 4, 6, 0]), o: IntList([2, 8, 9, 1, 7, 4, 6, 0]) }
#   Datum { i: IntList([9, 2, 1, 9, 3, 3, 1, 8, 9, 2]), o: IntList([9, 8, 2, 1, 9, 3, 3, 1, 8, 9, 2]) }
#   Datum { i: IntList([5, 5, 5, 5, 5, 5, 5, 5]), o: IntList([5, 8, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([6, 6, 0, 5, 2, 6, 0, 3, 2]), o: IntList([6, 8, 6, 0, 5, 2, 6, 0, 3, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c021,0,1,1,949481,949483,884609,600.000236576,602.320951851
c021,0,1,2,229397,231314,225201,1200.002761922,1202.95648608
c021,0,1,3,183339,184302,178231,1800.003854381,1803.330451602
c021,0,1,4,139583,140523,135373,2400.0049685060003,2403.648505802
c021,0,1,5,71309,72211,69568,3000.009805638,3004.004401306
c021,0,1,6,61019,61856,59785,3600.0101169040004,3604.348453611
c021,0,1,7,50305,51182,49491,4200.016538349,4204.680655961
c021,0,1,8,39362,40168,38850,4800.026524051,4805.06252505
c021,0,1,9,33470,34275,33102,5400.05731585,5405.486401444
c021,0,1,10,26792,27552,26724,6000.063081097,6005.864437613
c021,0,1,11,23021,23824,23034,6600.075036951999,6606.387889206
# search time: 6600.075s
# total time: 6606.572s
c021,1,1,1,832283,832285,775483,600.002033175,600.451660679
c021,1,1,2,194786,196866,191326,1200.002975015,1200.701201185
c021,1,1,3,171072,172145,165746,1800.004579842,1800.879083773
c021,1,1,4,135341,136377,131088,2400.005275385,2401.024650223
c021,1,1,5,70329,71367,68904,3000.012208079,3001.21309096
c021,1,1,6,61050,61969,59976,3600.0181780680005,3601.390877117
c021,1,1,7,49684,50559,48943,4200.025064220001,4201.567499105
c021,1,1,8,38868,39613,38389,4800.038682888001,4801.786102732
c021,1,1,9,32877,33574,32473,5400.058355283001,5401.971355546
c021,1,1,10,26704,27385,26474,6000.059158102002,6002.195790935
c021,1,1,11,22828,23604,22799,6600.084202518002,6602.469249346
# search time: 6600.084s
# total time: 13209.328s
c021,2,1,1,944028,944030,872586,600.002994054,600.228454363
c021,2,1,2,226811,229025,222858,1200.0034604520001,1200.397127736
c021,2,1,3,166891,167963,160248,1800.0106429880002,1800.520674187
c021,2,1,4,133520,134727,128820,2400.014459681,2400.632371299
c021,2,1,5,70243,71278,68483,3000.022438932,3000.734476613
c021,2,1,6,62514,63349,61074,3600.026288686,3600.867122992
c021,2,1,7,52404,53301,51351,4200.029026809,4200.972182285
c021,2,1,8,40888,41669,40144,4800.029899529,4801.103675416
c021,2,1,9,34282,35032,33866,5400.039388866,5401.281621327
c021,2,1,10,27589,28334,27342,6000.063274687,6001.452921721
c021,2,1,11,23884,24556,23710,6600.078596752,6601.634793809
# search time: 6600.079s
# total time: 19811.187s
c021,3,1,1,968988,968990,899975,600.000132308,600.208224153
c021,3,1,2,237607,239494,232554,1200.0031591460001,1200.348992592
c021,3,1,3,181370,182389,174862,1800.0046753850002,1800.439637374
c021,3,1,4,144584,145602,140366,2400.006671422,2400.538413985
c021,3,1,5,73869,74883,72244,3000.008583952,3000.62497115
c021,3,1,6,64354,65272,62888,3600.0108379350004,3600.724840497
c021,3,1,7,58692,59349,57303,4200.012211066,4200.816274595
c021,3,1,8,46383,47106,45459,4800.020638524001,4800.913093161
c021,3,1,9,38489,39308,37942,5400.028849014001,5401.008742611
c021,3,1,10,31274,31965,30924,6000.038600906001,6001.135739574
c021,3,1,11,26964,27670,26761,6600.041288544001,6601.299516783
# search time: 6600.041s
# total time: 26412.664s
c021,4,1,1,1095487,1095489,1009988,600.000527359,600.31364442
c021,4,1,2,258614,260903,253868,1200.001526768,1200.443614548
c021,4,1,3,199895,200969,192813,1800.004369853,1800.524630195
c021,4,1,4,160388,161429,154322,2400.0049344,2400.601391546
c021,4,1,5,82112,83075,79994,3000.0104131589997,3000.677411316
c021,4,1,6,70766,71617,69214,3600.015964028,3600.767952231
c021,4,1,7,58694,59626,57555,4200.025139753,4200.845093849
c021,4,1,8,44740,45362,43752,4800.041612798,4800.942147248
c021,4,1,9,37869,38610,37291,5400.061268875999,5401.053347166
c021,4,1,10,30660,31359,30361,6000.0744532339995,6001.158803954
c021,4,1,11,25863,26494,25708,6600.078091169999,6601.247952524
# search time: 6600.078s
# total time: 33014.190s
