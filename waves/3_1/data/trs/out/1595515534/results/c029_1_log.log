    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c029_1.json out/1595515534/results/c029_1_best.csv out/1595515534/results/c029_1_predictions.csv out/1595515534/results/c029_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 1, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([2, 2]), o: IntList([]) }
#   Datum { i: IntList([5, 1, 0, 0, 5, 8, 1, 8, 3, 0]), o: IntList([0, 0, 5, 8, 1, 8, 3, 0]) }
#   Datum { i: IntList([6, 6, 6]), o: IntList([6]) }
#   Datum { i: IntList([7, 0, 4, 1, 7]), o: IntList([4, 1, 7]) }
#   Datum { i: IntList([5, 9, 1, 3, 0, 0, 3]), o: IntList([1, 3, 0, 0, 3]) }
#   Datum { i: IntList([5, 2, 2, 2, 5, 2]), o: IntList([2, 2, 5, 2]) }
#   Datum { i: IntList([2, 3, 1, 6, 0, 9, 5, 7, 4, 8]), o: IntList([1, 6, 0, 9, 5, 7, 4, 8]) }
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([7, 5, 1, 9, 4, 4, 4, 8]), o: IntList([1, 9, 4, 4, 4, 8]) }
#   Datum { i: IntList([2, 7, 6, 2, 0, 6, 7, 6, 5]), o: IntList([6, 2, 0, 6, 7, 6, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c029,0,1,1,1346472,1346474,1243419,600.000045494,601.985956726
c029,0,1,2,465028,467427,454230,1200.00022992,1202.490629214
c029,0,1,3,451198,452311,435890,1800.0007676740001,1802.796228201
c029,0,1,4,152850,154308,148811,2400.001672368,2403.052044064
c029,0,1,5,139732,140869,135662,3000.007550059,3003.325454596
c029,0,1,6,99470,100558,96660,3600.009248119,3603.591674684
c029,0,1,7,92458,93478,89770,4200.009532078,4203.875557819
c029,0,1,8,82573,83416,80140,4800.016124313001,4804.205815233
c029,0,1,9,63896,64761,62174,5400.017362445001,5404.552029223
c029,0,1,10,61391,62266,59612,6000.028277648001,6004.87468818
c029,0,1,11,53659,54361,51976,6600.038759283001,6605.204421693
# search time: 6600.039s
# total time: 6605.454s
c029,1,1,1,1307283,1307285,1196107,600.000156882,600.284436727
c029,1,1,2,449792,452299,439603,1200.000977637,1200.499107039
c029,1,1,3,456468,457565,441527,1800.001353121,1800.664230004
c029,1,1,4,152928,154350,149008,2400.0088851339997,2400.817255457
c029,1,1,5,138960,140088,134850,3000.010272616,3000.959044959
c029,1,1,6,98235,99345,95563,3600.010591059,3601.118683772
c029,1,1,7,90937,91965,88313,4200.014741626,4201.272161504
c029,1,1,8,81458,82243,78888,4800.017393587,4801.428362353
c029,1,1,9,63614,64454,61798,5400.025874621,5401.631152917
c029,1,1,10,60580,61215,58679,6000.0261817400005,6001.757595165
c029,1,1,11,52685,53474,51219,6600.033274169001,6601.9542529
# search time: 6600.033s
# total time: 13207.778s
c029,2,1,1,1330867,1330869,1225993,600.000242478,600.23419827
c029,2,1,2,458122,460552,447738,1200.00846376,1200.402822938
c029,2,1,3,458061,459281,443137,1800.010660868,1800.530915839
c029,2,1,4,151635,152995,147434,2400.0118296620003,2400.648024251
c029,2,1,5,138833,140061,134880,3000.014415216,3000.748422141
c029,2,1,6,98112,99252,95435,3600.017672587,3600.840777316
c029,2,1,7,91347,92213,88529,4200.023068922,4200.961563311
c029,2,1,8,81564,82449,79168,4800.035315712,4801.088745857
c029,2,1,9,63662,64573,61874,5400.045383031,5401.198270004
c029,2,1,10,59840,60626,58168,6000.055743606999,6001.322439172
c029,2,1,11,51727,52582,50349,6600.066676078,6601.462424606
# search time: 6600.067s
# total time: 19809.588s
c029,3,1,1,1262435,1262437,1159433,600.000126207,600.182707577
c029,3,1,2,458455,460725,447640,1200.00237509,1200.314327615
c029,3,1,3,455505,456661,440669,1800.002801362,1800.425740727
c029,3,1,4,149624,151098,145657,2400.007928876,2400.511359214
c029,3,1,5,137794,138966,133847,3000.013372474,3000.610533952
c029,3,1,6,99112,100258,96361,3600.017793618,3600.698230001
c029,3,1,7,90613,91472,87802,4200.017993581,4200.801463739
c029,3,1,8,80815,81733,78501,4800.023700556,4800.899227616
c029,3,1,9,62566,63515,60926,5400.0260832740005,5401.026393445
c029,3,1,10,59896,60677,58073,6000.027344475,6001.117562566
c029,3,1,11,52507,53153,50849,6600.0301964,6601.209566423
# search time: 6600.030s
# total time: 26411.157s
c029,4,1,1,1249871,1249873,1167791,600.000019138,600.186837907
c029,4,1,2,453807,455921,442883,1200.001375049,1200.309800368
c029,4,1,3,465197,466392,450052,1800.0015453820001,1800.410990569
c029,4,1,4,149063,150491,144966,2400.004837768,2400.487885488
c029,4,1,5,135745,136949,132039,3000.00675602,3000.558729744
c029,4,1,6,97106,98195,94377,3600.010212173,3600.629385712
c029,4,1,7,89900,90921,87375,4200.013905225,4200.716781286
c029,4,1,8,80357,81359,78000,4800.014206428,4800.807589818
c029,4,1,9,61971,62881,60267,5400.024481102,5400.904420136
c029,4,1,10,59179,60019,57395,6000.03343922,6001.003015663
c029,4,1,11,51897,52717,50366,6600.0352244840005,6601.091574051
# search time: 6600.035s
# total time: 33012.619s
