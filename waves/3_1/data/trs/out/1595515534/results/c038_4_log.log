    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c038_4.json out/1595515534/results/c038_4_best.csv out/1595515534/results/c038_4_predictions.csv out/1595515534/results/c038_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c038,0,4,1,1283035,1283037,1181724,600.000270136,601.906509686
c038,0,4,2,225556,227530,221791,1200.002743824,1202.553219845
c038,0,4,3,171683,172621,170835,1800.0037947269998,1802.909082977
c038,0,4,4,90018,90847,90235,2400.005868843,2403.264755693
c038,0,4,5,57618,58444,57883,3000.008014322,3003.636138517
c038,0,4,6,44126,44811,44353,3600.018397932,3604.022527836
c038,0,4,7,41364,42073,41617,4200.033698661,4204.351497615
c038,0,4,8,35941,36611,36216,4800.039941398,4804.65812123
c038,0,4,9,34250,34891,34500,5400.04738558,5404.940913553
c038,0,4,10,26896,27640,27331,6000.086122039,6005.252108987
c038,0,4,11,25022,25618,25392,6600.089641402999,6605.548470456
# search time: 6600.090s
# total time: 6605.796s
c038,1,4,1,1269424,1269426,1159481,600.000044291,600.301231532
c038,1,4,2,218944,221021,215398,1200.002767856,1200.565980686
c038,1,4,3,168762,169818,168068,1800.0036866199998,1800.76592036
c038,1,4,4,88851,89566,89068,2400.004020383,2400.944514796
c038,1,4,5,56348,57059,56529,3000.004617837,3001.111555777
c038,1,4,6,44210,44875,44364,3600.007031411,3601.31554521
c038,1,4,7,39906,40569,40161,4200.022158834,4201.505704724
c038,1,4,8,34497,35130,34748,4800.02246108,4801.696392371
c038,1,4,9,32831,33533,33153,5400.028835579,5401.884427387
c038,1,4,10,25831,26490,26210,6000.044445842,6002.096387011
c038,1,4,11,24491,25086,24902,6600.065801436,6602.285692872
# search time: 6600.066s
# total time: 13208.473s
c038,2,4,1,1101906,1101908,1030055,600.000687527,600.202657158
c038,2,4,2,222799,224740,218804,1200.001517658,1200.384624203
c038,2,4,3,174351,175121,172996,1800.00531982,1800.508379129
c038,2,4,4,93027,93834,93044,2400.0188147950003,2400.619839903
c038,2,4,5,52690,53437,52993,3000.024379458,3000.748600079
c038,2,4,6,42299,42962,42559,3600.025520687,3600.891436017
c038,2,4,7,38646,39154,38804,4200.039014608,4201.055263978
c038,2,4,8,33934,34585,34251,4800.047537,4801.166815592
c038,2,4,9,31836,32609,32302,5400.053992663001,5401.328990229
c038,2,4,10,25858,26477,26256,6000.058006365,6001.481235285
c038,2,4,11,24384,25035,24843,6600.06772378,6601.597889368
# search time: 6600.068s
# total time: 19810.464s
c038,3,4,1,1235618,1235620,1138560,600.000216894,600.208496676
c038,3,4,2,226586,227815,221850,1200.000924276,1200.350089854
c038,3,4,3,173865,174688,172404,1800.00108426,1800.449315196
c038,3,4,4,93848,94723,93920,2400.003985363,2400.544942945
c038,3,4,5,53544,54357,53716,3000.014094873,3000.657550251
c038,3,4,6,42035,42573,42175,3600.0192895709997,3600.794779982
c038,3,4,7,38493,39130,38813,4200.029241706,4200.907686337
c038,3,4,8,33916,34491,34180,4800.040990248,4801.032539989
c038,3,4,9,31563,32170,31865,5400.058846172,5401.166579211
c038,3,4,10,25411,26123,25901,6000.070430861,6001.296167658
c038,3,4,11,24384,25017,24810,6600.095510497,6601.42851533
# search time: 6600.096s
# total time: 26412.260s
c038,4,4,1,1171095,1171097,1098128,600.000054139,600.174052449
c038,4,4,2,221906,223844,218205,1200.008379366,1200.296289116
c038,4,4,3,167852,168860,167105,1800.008959188,1800.387689034
c038,4,4,4,88882,89610,89068,2400.009667403,2400.455521702
c038,4,4,5,57026,57818,57262,3000.0218491260002,3000.546850288
c038,4,4,6,44712,45447,44970,3600.0269831990004,3600.617797341
c038,4,4,7,41006,41776,41364,4200.027877115001,4200.709284955
c038,4,4,8,35310,35957,35569,4800.046425774,4800.789506061
c038,4,4,9,33425,34137,33766,5400.064989349001,5400.907299637
c038,4,4,10,26307,27056,26741,6000.081909485001,6001.043784653
c038,4,4,11,24628,25420,25210,6600.083425949001,6601.12860776
# search time: 6600.083s
# total time: 33013.768s
