    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.20s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c023_1.json out/1595515534/results/c023_1_best.csv out/1595515534/results/c023_1_predictions.csv out/1595515534/results/c023_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 0, 5, 4]), o: IntList([2, 8, 0, 5, 4]) }
#   Datum { i: IntList([0, 2, 7, 9, 5, 8, 6, 3, 0, 9]), o: IntList([0, 5, 2, 7, 9, 5, 8, 6, 3, 0, 9]) }
#   Datum { i: IntList([9, 7, 6, 1, 2]), o: IntList([9, 5, 7, 6, 1, 2]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([7, 0, 2]), o: IntList([7, 8, 0, 2]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([1, 5, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([3, 7, 3, 7, 3, 3, 2, 2, 7, 3]), o: IntList([3, 5, 7, 3, 7, 3, 3, 2, 2, 7, 3]) }
#   Datum { i: IntList([9, 7, 2, 3, 0, 1, 6, 8, 4]), o: IntList([9, 5, 7, 2, 3, 0, 1, 6, 8, 4]) }
#   Datum { i: IntList([7, 4, 5, 9, 9, 5, 8]), o: IntList([7, 5, 4, 5, 9, 9, 5, 8]) }
#   Datum { i: IntList([0, 2, 9, 8, 0, 0, 5, 9, 2, 9]), o: IntList([0, 5, 2, 9, 8, 0, 0, 5, 9, 2, 9]) }
#   Datum { i: IntList([5, 2, 2, 6, 1, 9, 4, 2]), o: IntList([5, 5, 2, 2, 6, 1, 9, 4, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c023,0,1,1,981695,981697,904887,600.000170582,602.329338629
c023,0,1,2,225453,227537,221337,1200.001460016,1202.964799363
c023,0,1,3,77506,78621,78086,1800.005590123,1803.380133377
c023,0,1,4,70503,71215,70603,2400.010440917,2403.691852536
c023,0,1,5,64103,64555,63027,3000.0122593759997,3004.011206107
c023,0,1,6,49989,50737,49906,3600.0308907149997,3604.503340185
c023,0,1,7,43178,43908,43141,4200.045516083999,4205.01978931
c023,0,1,8,29790,30581,30131,4800.049158516999,4805.648974008
c023,0,1,9,26504,26966,26464,5400.060853143999,5405.979286811
c023,0,1,10,22669,23380,22898,6000.080025419999,6006.299440123
c023,0,1,11,18831,19516,19142,6600.08049194,6606.685521373
# search time: 6600.080s
# total time: 6606.908s
c023,1,1,1,1009547,1009549,929885,600.000466697,600.340443648
c023,1,1,2,239609,241741,235022,1200.0008909859998,1200.59880317
c023,1,1,3,80187,81222,80757,1800.0054310359997,1800.798568287
c023,1,1,4,73707,74462,73772,2400.0063108249997,2400.954375154
c023,1,1,5,61712,62465,60861,3000.0145495409997,3001.133232041
c023,1,1,6,47048,47786,47060,3600.0240534359996,3601.375024843
c023,1,1,7,40971,41705,41028,4200.027117107,4201.65539199
c023,1,1,8,28060,28943,28522,4800.050812867,4802.024930845
c023,1,1,9,25031,25631,25147,5400.051374769,5402.228422382
c023,1,1,10,21269,21892,21490,6000.06681597,6002.386974393
c023,1,1,11,17325,17933,17589,6600.091413809,6602.607164366
# search time: 6600.091s
# total time: 13209.830s
c023,2,1,1,977405,977407,911890,600.000016179,600.236273033
c023,2,1,2,233066,235022,228434,1200.00093707,1200.407036232
c023,2,1,3,78045,79078,78521,1800.014757799,1800.562674222
c023,2,1,4,72537,73295,72533,2400.0172026580003,2400.666133455
c023,2,1,5,59032,59850,58713,3000.0273166270003,3000.805469812
c023,2,1,6,49261,50006,49246,3600.037233113,3600.929817613
c023,2,1,7,42333,43079,42425,4200.037956279,4201.101316672
c023,2,1,8,29416,30129,29732,4800.045341209,4801.308723182
c023,2,1,9,24133,24753,24387,5400.07439554,5401.472563952
c023,2,1,10,21775,22454,22184,6000.086446265001,6001.616410505
c023,2,1,11,17643,18355,18078,6600.129389813001,6601.82853894
# search time: 6600.129s
# total time: 19811.954s
c023,3,1,1,1113968,1113970,1025489,600.000184778,600.198691121
c023,3,1,2,260743,262911,255635,1200.000793185,1200.326909936
c023,3,1,3,87340,88438,87730,1800.002279336,1800.431396748
c023,3,1,4,80425,81267,80593,2400.006783088,2400.521780251
c023,3,1,5,68742,69503,67861,3000.0128186439997,3000.602810048
c023,3,1,6,54146,54948,54028,3600.022544054,3600.736220078
c023,3,1,7,48417,49230,48435,4200.027229949,4200.88488337
c023,3,1,8,33095,33833,33363,4800.053946266999,4801.080566559
c023,3,1,9,29796,30440,29836,5400.066700726999,5401.17309718
c023,3,1,10,25689,26348,25787,6000.086923798,6001.305365798
c023,3,1,11,20628,21295,20921,6600.112426909,6601.429592118
# search time: 6600.112s
# total time: 26413.707s
c023,4,1,1,1136464,1136466,1062889,600.003342262,600.199503845
c023,4,1,2,270756,272405,264800,1200.004527792,1200.332121255
c023,4,1,3,93186,94170,93229,1800.0066621270003,1800.41135955
c023,4,1,4,86119,86827,85942,2400.0068380320004,2400.479672785
c023,4,1,5,70057,70951,69566,3000.008628038,3000.553676328
c023,4,1,6,55216,56076,55206,3600.0107319480003,3600.645638243
c023,4,1,7,48360,49106,48320,4200.0107871420005,4200.770507063
c023,4,1,8,32934,33636,33164,4800.017942007001,4800.919459016
c023,4,1,9,27087,27750,27365,5400.037405998,5401.046415787
c023,4,1,10,23369,24082,23722,6000.044947337001,6001.147947497
c023,4,1,11,19384,20042,19740,6600.049007424001,6601.238197108
# search time: 6600.049s
# total time: 33015.329s
