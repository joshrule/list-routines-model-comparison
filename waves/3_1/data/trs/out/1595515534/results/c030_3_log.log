    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c030_3.json out/1595515534/results/c030_3_best.csv out/1595515534/results/c030_3_predictions.csv out/1595515534/results/c030_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 4, 8, 1, 0]), o: IntList([6, 4, 8]) }
#   Datum { i: IntList([9, 7, 4, 3, 8, 1]), o: IntList([9, 7, 4, 3]) }
#   Datum { i: IntList([2, 5, 7, 8, 2, 2, 9, 3, 1, 0]), o: IntList([2, 5, 7, 8, 2, 2, 9, 3]) }
#   Datum { i: IntList([5, 4, 5, 0]), o: IntList([5, 4]) }
#   Datum { i: IntList([6, 2, 9, 7, 8, 3, 8, 5, 0]), o: IntList([6, 2, 9, 7, 8, 3, 8]) }
#   Datum { i: IntList([5, 3]), o: IntList([]) }
#   Datum { i: IntList([6, 4, 1, 6, 7, 2, 5, 8]), o: IntList([6, 4, 1, 6, 7, 2]) }
#   Datum { i: IntList([0, 0, 3, 3, 0, 3, 0]), o: IntList([0, 0, 3, 3, 0]) }
#   Datum { i: IntList([5, 7, 1, 8, 9, 4, 1, 6, 2, 3]), o: IntList([5, 7, 1, 8, 9, 4, 1, 6]) }
#   Datum { i: IntList([9, 7, 2, 5, 9, 4, 6, 8, 4]), o: IntList([9, 7, 2, 5, 9, 4, 6]) }
#   Datum { i: IntList([1, 0, 1]), o: IntList([1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,3,1,1175002,1175004,1073567,600.000280439,601.986643027
c030,0,3,2,366491,368644,358346,1200.000986797,1202.566445567
c030,0,3,3,175387,176489,174619,1800.0018882509999,1802.981774016
c030,0,3,4,87469,88207,87710,2400.002905125,2403.267576778
c030,0,3,5,74665,75354,74883,3000.007464164,3003.625980514
c030,0,3,6,55679,56334,56021,3600.009348056,3603.923414913
c030,0,3,7,61281,62039,59800,4200.013570722,4204.226240849
c030,0,3,8,47172,47848,45793,4800.0199725249995,4804.521025118
c030,0,3,9,41499,42228,40548,5400.029179536999,5404.845420045
c030,0,3,10,34376,35079,33699,6000.030589155,6005.116492255
c030,0,3,11,30259,30990,29696,6600.032461418,6605.387753565
# search time: 6600.032s
# total time: 6605.617s
c030,1,3,1,1260448,1260450,1156289,600.000211742,600.311863236
c030,1,3,2,370347,371861,361375,1200.0014934780002,1200.560205545
c030,1,3,3,169510,170496,168562,1800.0015844110003,1800.753845149
c030,1,3,4,86213,86987,86470,2400.003603815,2400.910399895
c030,1,3,5,72940,73736,73210,3000.0142950150002,3001.074141526
c030,1,3,6,53596,54320,54074,3600.020481204,3601.246144672
c030,1,3,7,59511,60147,58114,4200.025984511,4201.431502335
c030,1,3,8,46534,47213,45051,4800.0359565300005,4801.613481913
c030,1,3,9,40187,40831,38986,5400.038872278001,5401.763961308
c030,1,3,10,33477,34197,32614,6000.039085339001,6001.956349206
c030,1,3,11,29086,29814,28546,6600.050456449001,6602.178390654
# search time: 6600.050s
# total time: 13208.180s
c030,2,3,1,1160349,1160351,1082929,600.000225922,600.221812185
c030,2,3,2,360500,361797,351644,1200.001904595,1200.393787083
c030,2,3,3,168990,170075,168123,1800.0027430700002,1800.519783467
c030,2,3,4,85649,86458,85992,2400.004864253,2400.637214667
c030,2,3,5,72991,73746,73257,3000.0166894060003,3000.757979378
c030,2,3,6,53924,54544,54290,3600.0279958590004,3600.873337378
c030,2,3,7,60014,60691,58595,4200.0297683750005,4201.008237297
c030,2,3,8,45989,46793,44803,4800.042646033,4801.136733516
c030,2,3,9,40978,41713,40079,5400.043644476,5401.242552771
c030,2,3,10,33300,34128,32725,6000.052782324,6001.370439364
c030,2,3,11,29036,29764,28534,6600.056688594,6601.517742696
# search time: 6600.057s
# total time: 19810.071s
c030,3,3,1,1227411,1227413,1119981,600.000167431,600.192874074
c030,3,3,2,363444,364257,354401,1200.001057957,1200.326125811
c030,3,3,3,172000,172948,171091,1800.0043925290001,1800.430646731
c030,3,3,4,86632,87412,86938,2400.008042218,2400.523424981
c030,3,3,5,72931,73691,73246,3000.0080799899997,3000.623020809
c030,3,3,6,53919,54594,54289,3600.011297966,3600.712174023
c030,3,3,7,59352,60102,58037,4200.018567614,4200.812788943
c030,3,3,8,46507,47296,45209,4800.020894354,4800.907336538
c030,3,3,9,40825,41608,39955,5400.031318373,5401.015685331
c030,3,3,10,33868,34591,33189,6000.035153508001,6001.136540643
c030,3,3,11,28832,29635,28405,6600.059127432,6601.258585102
# search time: 6600.059s
# total time: 26411.696s
c030,4,3,1,1237004,1237006,1135713,600.000030024,600.182877653
c030,4,3,2,361298,363714,353784,1200.000171421,1200.302170261
c030,4,3,3,171226,172274,170416,1800.0006638,1800.387460985
c030,4,3,4,84363,85190,84559,2400.002932252,2400.469068444
c030,4,3,5,69816,70621,70182,3000.004719279,3000.560549046
c030,4,3,6,51832,52507,52222,3600.015924991,3600.658269894
c030,4,3,7,57418,58246,56176,4200.016742483,4200.756090942
c030,4,3,8,45715,46578,44596,4800.021238685999,4800.854903947
c030,4,3,9,39721,40254,38599,5400.025048635,5400.937042157
c030,4,3,10,31366,32214,30695,6000.032302797,6001.061013603
c030,4,3,11,27405,28123,26923,6600.03812441,6601.155976334
# search time: 6600.038s
# total time: 33013.220s
