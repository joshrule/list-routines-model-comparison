    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c027_3.json out/1595515534/results/c027_3_best.csv out/1595515534/results/c027_3_predictions.csv out/1595515534/results/c027_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 6, 1]), o: IntList([6, 1]) }
#   Datum { i: IntList([6, 5, 8, 0, 4, 8, 1, 9, 3, 2]), o: IntList([6, 5, 0, 4, 8, 1, 9, 3, 2]) }
#   Datum { i: IntList([5, 7, 6, 1, 0, 8, 3]), o: IntList([5, 7, 1, 0, 8, 3]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 6, 6, 7, 2]), o: IntList([9, 7, 7, 7, 6, 6, 7, 2]) }
#   Datum { i: IntList([8, 8, 4, 1, 8, 4, 1, 4]), o: IntList([8, 4, 1, 8, 4, 1, 4]) }
#   Datum { i: IntList([0, 0, 9, 0]), o: IntList([0, 9, 0]) }
#   Datum { i: IntList([9, 4, 0, 5, 9, 4, 5, 0, 0]), o: IntList([9, 4, 5, 9, 4, 5, 0, 0]) }
#   Datum { i: IntList([2, 3, 9, 9, 8, 3, 8, 6]), o: IntList([2, 3, 9, 8, 3, 8, 6]) }
#   Datum { i: IntList([1, 2, 5, 1, 3, 2, 5]), o: IntList([1, 2, 1, 3, 2, 5]) }
#   Datum { i: IntList([5, 5, 7, 7, 2]), o: IntList([5, 7, 7, 2]) }
#   Datum { i: IntList([6, 4, 6, 2, 3, 3]), o: IntList([6, 4, 2, 3, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c027,0,3,1,1197698,1197700,1093243,600.000306892,602.169784602
c027,0,3,2,525728,527922,507821,1200.000757017,1202.583401107
c027,0,3,3,117598,118857,117021,1800.000802189,1802.907054418
c027,0,3,4,84340,85058,84125,2400.006701382,2403.212007918
c027,0,3,5,72525,73187,71102,3000.017080173,3003.434312444
c027,0,3,6,59094,60133,58548,3600.026469898,3603.674899379
c027,0,3,7,42807,43722,42781,4200.032920437,4204.000758355
c027,0,3,8,43216,43921,42733,4800.038084815,4804.236835731
c027,0,3,9,34147,34798,33728,5400.0612734549995,5404.583787657
c027,0,3,10,29124,29885,28896,6000.061567756,6004.89905641
c027,0,3,11,24050,24762,24156,6600.06978997,6605.20427475
# search time: 6600.070s
# total time: 6605.422s
c027,1,3,1,1087126,1087128,1014770,600.000181345,600.272936876
c027,1,3,2,498147,499982,478566,1200.0015749660001,1200.455510263
c027,1,3,3,119142,120643,118786,1800.001823515,1800.619268486
c027,1,3,4,83323,84014,83057,2400.01864905,2400.793287805
c027,1,3,5,71308,72021,69913,3000.023457095,3000.903030354
c027,1,3,6,59095,59987,58192,3600.0236014,3601.012825217
c027,1,3,7,41935,42856,41939,4200.038366945,4201.16072687
c027,1,3,8,43238,43933,42703,4800.060089936001,4801.310476751
c027,1,3,9,33533,34272,33244,5400.062895301001,5401.45581661
c027,1,3,10,28787,29527,28564,6000.063618830001,6001.637367248
c027,1,3,11,23625,24348,23738,6600.070054900001,6601.91194075
# search time: 6600.070s
# total time: 13207.662s
c027,2,3,1,1157126,1157128,1067072,600.000110023,600.21176586
c027,2,3,2,507007,509103,487795,1200.000176532,1200.343943546
c027,2,3,3,118050,119945,118272,1800.0006086160001,1800.451688843
c027,2,3,4,83541,84364,83440,2400.010476985,2400.576268814
c027,2,3,5,71804,72501,70315,3000.011965126,3000.655180608
c027,2,3,6,59279,60233,58452,3600.0217594690002,3600.743817242
c027,2,3,7,42675,43598,42658,4200.026952381,4200.847187143
c027,2,3,8,42514,43285,41891,4800.037286981,4800.932644593
c027,2,3,9,34030,34775,33630,5400.045122818,5401.047949352
c027,2,3,10,29221,29903,28975,6000.056151944,6001.234314671
c027,2,3,11,22453,23218,22709,6600.075042007,6601.415048756
# search time: 6600.075s
# total time: 19809.412s
c027,3,3,1,1178512,1178514,1095386,600.000566219,600.217008996
c027,3,3,2,500529,501514,478599,1200.0006930280001,1200.326330952
c027,3,3,3,114865,116213,114481,1800.005447599,1800.431467925
c027,3,3,4,81937,82599,81655,2400.0155724240003,2400.532673385
c027,3,3,5,70573,71277,69420,3000.0202488010004,3000.598161821
c027,3,3,6,58745,59647,57848,3600.0236795910005,3600.663208266
c027,3,3,7,42183,43063,42156,4200.025369748,4200.761672134
c027,3,3,8,42208,42927,41643,4800.041338608,4800.844328453
c027,3,3,9,33215,33941,33009,5400.049443707,5401.006930028
c027,3,3,10,28732,29406,28549,6000.049727209,6001.141214334
c027,3,3,11,23231,23980,23415,6600.056132588999,6601.253120038
# search time: 6600.056s
# total time: 26411.005s
c027,4,3,1,1144050,1144052,1053359,600.000523544,600.176032765
c027,4,3,2,495349,497422,475762,1200.001092513,1200.280277198
c027,4,3,3,116149,118092,116364,1800.0023995239999,1800.34412425
c027,4,3,4,81958,82781,81862,2400.003081341,2400.407226881
c027,4,3,5,70328,71043,68949,3000.0119370069997,3000.466726924
c027,4,3,6,58112,59073,57295,3600.0155776939996,3600.534009095
c027,4,3,7,42027,42833,41967,4200.022798862,4200.61641262
c027,4,3,8,41879,42596,41333,4800.04206528,4800.692614267
c027,4,3,9,33347,34095,33068,5400.051822868,5400.78267548
c027,4,3,10,28664,29291,28425,6000.060888762,6000.892362211
c027,4,3,11,23196,23971,23429,6600.102627741,6600.998244391
# search time: 6600.103s
# total time: 33012.344s
