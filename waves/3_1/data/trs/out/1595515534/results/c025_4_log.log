    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c025_4.json out/1595515534/results/c025_4_best.csv out/1595515534/results/c025_4_predictions.csv out/1595515534/results/c025_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 2, 4, 2, 7, 2]), o: IntList([1, 4, 2, 7, 2]) }
#   Datum { i: IntList([3, 3, 3]), o: IntList([3, 3]) }
#   Datum { i: IntList([3, 6, 7, 5, 8, 4, 2, 0]), o: IntList([3, 7, 5, 8, 4, 2, 0]) }
#   Datum { i: IntList([7, 2, 5, 0, 8, 4, 1]), o: IntList([7, 5, 0, 8, 4, 1]) }
#   Datum { i: IntList([6, 6, 6, 9, 6, 9, 9, 6, 9, 9]), o: IntList([6, 6, 9, 6, 9, 9, 6, 9, 9]) }
#   Datum { i: IntList([2, 6]), o: IntList([2]) }
#   Datum { i: IntList([3, 0, 4, 9, 5]), o: IntList([3, 4, 9, 5]) }
#   Datum { i: IntList([7, 1, 0, 8, 5, 1, 4]), o: IntList([7, 0, 8, 5, 1, 4]) }
#   Datum { i: IntList([7, 2, 9, 8, 2, 0, 1, 1, 2]), o: IntList([7, 9, 8, 2, 0, 1, 1, 2]) }
#   Datum { i: IntList([1, 6, 6, 0, 8, 3, 9, 0, 7, 9]), o: IntList([1, 6, 0, 8, 3, 9, 0, 7, 9]) }
#   Datum { i: IntList([1, 1, 4, 5]), o: IntList([1, 4, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c025,0,4,1,1099481,1099483,1007739,600.000140864,602.168052501
c025,0,4,2,248601,250694,244112,1200.001026939,1202.798113085
c025,0,4,3,215440,216535,208777,1800.0016642159999,1803.114359489
c025,0,4,4,118311,119380,115646,2400.00391735,2403.499925941
c025,0,4,5,94132,95129,91623,3000.009777096,3003.92813259
c025,0,4,6,63391,64277,62027,3600.014207305,3604.257948671
c025,0,4,7,66837,67599,65261,4200.021157776,4204.663415516
c025,0,4,8,55258,56072,54413,4800.029893631,4805.075815196
c025,0,4,9,46463,47280,45899,5400.03125982,5405.513402912
c025,0,4,10,41298,41983,40690,6000.048338805,6005.872894979
c025,0,4,11,34979,35678,34619,6600.048378744999,6606.254183194
# search time: 6600.048s
# total time: 6606.481s
c025,1,4,1,1170664,1170666,1098254,600.00009793,600.304872728
c025,1,4,2,291289,292483,284621,1200.002205581,1200.547487724
c025,1,4,3,235183,236209,227762,1800.00228698,1800.725297241
c025,1,4,4,113007,114126,110361,2400.007796057,2400.931175753
c025,1,4,5,90077,90986,87692,3000.012384791,3001.089766856
c025,1,4,6,59868,60885,58853,3600.014748998,3601.223514498
c025,1,4,7,65735,66490,64143,4200.021221822,4201.415108797
c025,1,4,8,54229,55037,53445,4800.023977686001,4801.605221639
c025,1,4,9,45181,46039,44647,5400.0271904090005,5401.809156607
c025,1,4,10,36839,37613,36485,6000.030061714,6002.002162575
c025,1,4,11,29974,30771,29844,6600.050875673,6602.279831791
# search time: 6600.051s
# total time: 13209.103s
c025,2,4,1,1085042,1085044,997812,600.000119854,600.201931328
c025,2,4,2,246133,248311,241857,1200.002071894,1200.366838751
c025,2,4,3,213916,214884,207274,1800.003341643,1800.485077588
c025,2,4,4,115096,116232,112245,2400.006067691,2400.62037016
c025,2,4,5,91833,92838,89628,3000.0079755630004,3000.773266072
c025,2,4,6,61594,62460,60356,3600.0134143470004,3600.879597621
c025,2,4,7,65944,66548,64227,4200.020401042,4201.041135692
c025,2,4,8,54909,55791,54085,4800.021382679,4801.147738534
c025,2,4,9,45489,46278,44889,5400.031034279001,5401.277411922
c025,2,4,10,36820,37549,36362,6000.0317731820005,6001.399580864
c025,2,4,11,30827,31623,30630,6600.042368990001,6601.544504576
# search time: 6600.042s
# total time: 19810.976s
c025,3,4,1,1101546,1101548,1011812,600.000008652,600.181372963
c025,3,4,2,253405,254553,247528,1200.002134565,1200.298989719
c025,3,4,3,213021,213974,206259,1800.003498193,1800.383510899
c025,3,4,4,115782,116906,113045,2400.005605333,2400.489599843
c025,3,4,5,91965,92978,89492,3000.0131167669997,3000.585668118
c025,3,4,6,62277,63175,61061,3600.0165512259996,3600.656468811
c025,3,4,7,64677,65374,62822,4200.018997208999,4200.768362126
c025,3,4,8,52799,53589,52129,4800.024001923999,4800.897384486
c025,3,4,9,44374,45083,43704,5400.0293630529995,5401.00666805
c025,3,4,10,35367,36121,35008,6000.051997809999,6001.158181187
c025,3,4,11,29387,30114,29192,6600.078357524999,6601.291350246
# search time: 6600.078s
# total time: 26412.596s
c025,4,4,1,1032991,1032993,961303,600.000065096,600.164600884
c025,4,4,2,248063,250140,243523,1200.003985978,1200.270455936
c025,4,4,3,209458,210605,203057,1800.004897606,1800.349758461
c025,4,4,4,113909,115070,111249,2400.007435698,2400.430123681
c025,4,4,5,91109,92109,88743,3000.0112345919997,3000.509732079
c025,4,4,6,61564,62439,60257,3600.030374002,3600.6127809
c025,4,4,7,65404,66186,63822,4200.03663639,4200.689861012
c025,4,4,8,54525,55340,53602,4800.039302854,4800.762677919
c025,4,4,9,45132,45969,44515,5400.0429683170005,5400.842634802
c025,4,4,10,37195,37714,36650,6000.048254328,6000.957715139
c025,4,4,11,30994,31686,30830,6600.049058642,6601.057570423
# search time: 6600.049s
# total time: 33013.967s
