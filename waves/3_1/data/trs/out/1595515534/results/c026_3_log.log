    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c026_3.json out/1595515534/results/c026_3_best.csv out/1595515534/results/c026_3_predictions.csv out/1595515534/results/c026_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 7, 7, 4, 6]), o: IntList([0, 7, 4, 6]) }
#   Datum { i: IntList([2, 2, 4, 3, 9, 0, 6, 7]), o: IntList([2, 2, 3, 9, 0, 6, 7]) }
#   Datum { i: IntList([5, 0, 4, 7, 8, 9]), o: IntList([5, 0, 7, 8, 9]) }
#   Datum { i: IntList([9, 8, 4, 1, 4, 7, 9, 3, 5, 1]), o: IntList([9, 8, 1, 4, 7, 9, 3, 5, 1]) }
#   Datum { i: IntList([1, 1, 3, 2, 2, 3, 3]), o: IntList([1, 1, 2, 2, 3, 3]) }
#   Datum { i: IntList([8, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8]) }
#   Datum { i: IntList([1, 0, 0, 1, 4, 6, 4]), o: IntList([1, 0, 1, 4, 6, 4]) }
#   Datum { i: IntList([8, 3, 9]), o: IntList([8, 3]) }
#   Datum { i: IntList([4, 2, 2, 5]), o: IntList([4, 2, 5]) }
#   Datum { i: IntList([5, 3, 9, 8, 6, 4, 7, 2, 1]), o: IntList([5, 3, 8, 6, 4, 7, 2, 1]) }
#   Datum { i: IntList([3, 9, 8, 1, 6, 2, 0, 4, 5, 7]), o: IntList([3, 9, 1, 6, 2, 0, 4, 5, 7]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c026,0,3,1,1209852,1209854,1112680,600.000094689,601.944836248
c026,0,3,2,327734,329881,320911,1200.001434701,1202.469064651
c026,0,3,3,160055,161059,155011,1800.0060821280001,1802.797496471
c026,0,3,4,120768,121825,117310,2400.009262191,2403.096274821
c026,0,3,5,84068,85138,81877,3000.026698493,3003.451127946
c026,0,3,6,65012,65857,63991,3600.033010579,3603.79737622
c026,0,3,7,53331,54184,52764,4200.036525729,4204.383219382
c026,0,3,8,37514,38402,37277,4800.03956484,4804.766308745
c026,0,3,9,45805,46421,44929,5400.055484934,5405.24205576
c026,0,3,10,42386,43090,41562,6000.065847537,6005.750160467
c026,0,3,11,34160,34924,33756,6600.072052202,6606.153863735
# search time: 6600.072s
# total time: 6606.377s
c026,1,3,1,1097419,1097421,1006153,600.000026625,600.276096904
c026,1,3,2,281896,284018,276162,1200.001149679,1200.500208397
c026,1,3,3,137030,138138,131897,1800.01245044,1800.666287067
c026,1,3,4,105885,106963,102759,2400.013594636,2400.817340233
c026,1,3,5,74902,75743,72480,3000.0238637700004,3001.010782356
c026,1,3,6,55954,56884,54950,3600.0287220730006,3601.180780564
c026,1,3,7,47066,47820,46464,4200.031598055,4201.449498206
c026,1,3,8,37469,38196,36946,4800.034410691001,4801.642854161
c026,1,3,9,46133,46890,45261,5400.045984997001,5401.915299778
c026,1,3,10,41243,42039,40613,6000.062947207001,6002.212133149
c026,1,3,11,34264,34827,33687,6600.063863501002,6602.494836868
# search time: 6600.064s
# total time: 13209.181s
c026,2,3,1,1079059,1079061,989989,600.001565252,600.210390469
c026,2,3,2,273997,276297,268296,1200.002655086,1200.377114429
c026,2,3,3,137533,138495,132612,1800.004728038,1800.481659123
c026,2,3,4,105444,106520,102130,2400.0058321799997,2400.593548502
c026,2,3,5,75259,76029,73076,3000.0098767319996,3000.711405244
c026,2,3,6,55793,56745,54761,3600.0247308719995,3600.877845373
c026,2,3,7,45684,46534,45409,4200.030581331999,4201.044710711
c026,2,3,8,37527,38042,36796,4800.037283960999,4801.185044483
c026,2,3,9,46168,46871,45250,5400.045146860999,5401.354294336
c026,2,3,10,41537,42266,40908,6000.060520175999,6001.55930684
c026,2,3,11,34089,34870,33695,6600.069024000999,6601.746190052
# search time: 6600.069s
# total time: 19811.227s
c026,3,3,1,1103115,1103117,1032399,600.002792086,600.189090352
c026,3,3,2,283213,285281,277126,1200.003450099,1200.314070208
c026,3,3,3,139512,140510,134965,1800.006988716,1800.408203161
c026,3,3,4,105940,107024,102828,2400.007216079,2400.494163734
c026,3,3,5,74728,75712,72767,3000.010203073,3000.597062179
c026,3,3,6,56901,57719,55695,3600.012563317,3600.722523476
c026,3,3,7,47939,48769,47541,4200.018434232,4200.87164162
c026,3,3,8,37862,38603,37415,4800.039436737,4801.009973512
c026,3,3,9,45901,46527,44959,5400.044559917,5401.11133011
c026,3,3,10,41576,42343,40917,6000.057911901,6001.276958556
c026,3,3,11,33967,34748,33619,6600.064268346,6601.453414981
# search time: 6600.064s
# total time: 26412.988s
c026,4,3,1,1098653,1098655,1028574,600.005849953,600.179504917
c026,4,3,2,276917,278946,271293,1200.006363381,1200.287876273
c026,4,3,3,136120,137211,131717,1800.0072739880002,1800.354243644
c026,4,3,4,103763,104681,100132,2400.008763963,2400.424308053
c026,4,3,5,74166,74962,72511,3000.020945279,3000.513232413
c026,4,3,6,56116,56898,55295,3600.0259397199998,3600.594453568
c026,4,3,7,46759,47686,46369,4200.039644528,4200.737879403
c026,4,3,8,36165,37039,35870,4800.04235479,4800.817765935
c026,4,3,9,45173,45960,44463,5400.04567303,5400.882684001
c026,4,3,10,40646,41351,39986,6000.054033014,6001.002086471
c026,4,3,11,33288,34101,32936,6600.068433787001,6601.093694833
# search time: 6600.068s
# total time: 33014.386s
