    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.25s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c022_3.json out/1595515534/results/c022_3_best.csv out/1595515534/results/c022_3_predictions.csv out/1595515534/results/c022_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 2, 6]), o: IntList([0, 5, 2, 6]) }
#   Datum { i: IntList([1, 1]), o: IntList([1, 5, 1]) }
#   Datum { i: IntList([6, 0, 2, 0, 4, 8, 1, 7, 5, 3]), o: IntList([6, 5, 0, 2, 0, 4, 8, 1, 7, 5, 3]) }
#   Datum { i: IntList([7, 6, 1, 9, 6, 8, 3, 6]), o: IntList([7, 5, 6, 1, 9, 6, 8, 3, 6]) }
#   Datum { i: IntList([7, 4, 3, 1, 2, 1, 8]), o: IntList([7, 5, 4, 3, 1, 2, 1, 8]) }
#   Datum { i: IntList([9, 8, 6, 1, 5, 1, 4, 4, 3, 2]), o: IntList([9, 5, 8, 6, 1, 5, 1, 4, 4, 3, 2]) }
#   Datum { i: IntList([6, 4, 9, 5, 2, 7, 8, 2, 4]), o: IntList([6, 5, 4, 9, 5, 2, 7, 8, 2, 4]) }
#   Datum { i: IntList([8, 4, 4, 4, 8, 4]), o: IntList([8, 5, 4, 4, 4, 8, 4]) }
#   Datum { i: IntList([1, 9, 0, 9, 1]), o: IntList([1, 5, 9, 0, 9, 1]) }
#   Datum { i: IntList([6, 5, 3, 3]), o: IntList([6, 5, 5, 3, 3]) }
#   Datum { i: IntList([1, 7, 3, 0, 1, 2, 1, 3, 0, 3]), o: IntList([1, 5, 7, 3, 0, 1, 2, 1, 3, 0, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c022,0,3,1,1039272,1039274,950712,600.000149972,602.509553945
c022,0,3,2,258859,261087,254121,1200.001009495,1203.121770119
c022,0,3,3,185857,186958,179684,1800.002394303,1803.445202869
c022,0,3,4,99185,100209,96416,2400.0060150990003,2403.718509105
c022,0,3,5,70766,71689,69319,3000.01765684,3003.990637753
c022,0,3,6,42019,42927,41741,3600.0255945790004,3604.303080798
c022,0,3,7,34452,35204,34162,4200.029389071,4204.946053052
c022,0,3,8,28283,29120,28321,4800.039266179,4805.40264371
c022,0,3,9,26102,26804,26114,5400.060878374,5405.933443992
c022,0,3,10,25234,25910,24941,6000.088101299,6006.36721517
c022,0,3,11,19859,20508,19899,6600.095611752,6606.760935807
# search time: 6600.096s
# total time: 6606.956s
c022,1,3,1,880831,880833,819491,600.001406041,600.298411853
c022,1,3,2,262184,264078,256690,1200.001545513,1200.545668051
c022,1,3,3,181564,182568,175828,1800.003500316,1800.720810769
c022,1,3,4,95436,96459,92752,2400.005334209,2400.878364398
c022,1,3,5,68763,69619,67060,3000.009991098,3000.996944277
c022,1,3,6,41493,42365,41131,3600.01046689,3601.195729267
c022,1,3,7,34025,34726,33693,4200.017352286,4201.407940491
c022,1,3,8,28343,29019,28210,4800.0225428389995,4801.626145255
c022,1,3,9,25388,26010,25216,5400.0392807749995,5401.90425345
c022,1,3,10,24785,25540,24595,6000.039411274,6002.128903685
c022,1,3,11,19590,20269,19676,6600.060125835999,6602.365708095
# search time: 6600.060s
# total time: 13209.622s
c022,2,3,1,947120,947122,885114,600.000212482,600.228737074
c022,2,3,2,260410,261235,253844,1200.010940574,1200.415939824
c022,2,3,3,179742,180800,173897,1800.011966754,1800.528816621
c022,2,3,4,94432,95584,91927,2400.0123175119998,2400.626174045
c022,2,3,5,68228,69218,66363,3000.0192526719998,3000.729043558
c022,2,3,6,42984,43906,42688,3600.0264469689996,3600.936445433
c022,2,3,7,36280,36998,35886,4200.042608547,4201.126811075
c022,2,3,8,29735,30548,29704,4800.048539931,4801.276866373
c022,2,3,9,27052,27726,26898,5400.068623104,5401.450807257
c022,2,3,10,26056,26687,25805,6000.088177336,6001.581770456
c022,2,3,11,20227,20942,20331,6600.092968076,6601.765951334
# search time: 6600.093s
# total time: 19811.572s
c022,3,3,1,983276,983278,926253,600.000113374,600.210147363
c022,3,3,2,272011,273897,266748,1200.000232285,1200.351184159
c022,3,3,3,190086,190663,183505,1800.002578953,1800.446713253
c022,3,3,4,102268,103291,99455,2400.004364885,2400.525461255
c022,3,3,5,72576,73409,70507,3000.011712635,3000.618051925
c022,3,3,6,43313,44123,42977,3600.0139113220002,3600.735064358
c022,3,3,7,39993,40709,39537,4200.021489553001,4200.850514149
c022,3,3,8,33498,34322,33299,4800.029883730001,4800.984258304
c022,3,3,9,30151,30830,29944,5400.0554265440005,5401.153409426
c022,3,3,10,29391,30055,29028,6000.067172445,6001.246257695
c022,3,3,11,22919,23642,22995,6600.073099729,6601.418522319
# search time: 6600.073s
# total time: 26413.264s
c022,4,3,1,1125288,1125290,1032726,600.000208417,600.184523243
c022,4,3,2,298635,300676,292797,1200.0073618689999,1200.311236103
c022,4,3,3,208320,209338,200682,1800.0077927559998,1800.391145935
c022,4,3,4,113073,114226,109834,2400.0109095919997,2400.448217207
c022,4,3,5,79366,80242,76959,3000.015184309,3000.511560955
c022,4,3,6,47897,48861,47446,3600.029809878,3600.620832336
c022,4,3,7,39930,40641,39521,4200.044554895,4200.742796508
c022,4,3,8,33136,33859,32902,4800.081397395,4800.885326231
c022,4,3,9,29519,30202,29354,5400.103682449,5400.998649323
c022,4,3,10,28769,29516,28474,6000.118834375,6001.141188638
c022,4,3,11,22306,23023,22316,6600.152793911,6601.275536931
# search time: 6600.153s
# total time: 33014.828s
