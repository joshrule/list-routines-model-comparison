    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.26s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c022_5.json out/1595515534/results/c022_5_best.csv out/1595515534/results/c022_5_predictions.csv out/1595515534/results/c022_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1]), o: IntList([1, 5, 1]) }
#   Datum { i: IntList([7, 6, 1, 9, 6, 8, 3, 6]), o: IntList([7, 5, 6, 1, 9, 6, 8, 3, 6]) }
#   Datum { i: IntList([9, 8, 6, 1, 5, 1, 4, 4, 3, 2]), o: IntList([9, 5, 8, 6, 1, 5, 1, 4, 4, 3, 2]) }
#   Datum { i: IntList([6, 4, 9, 5, 2, 7, 8, 2, 4]), o: IntList([6, 5, 4, 9, 5, 2, 7, 8, 2, 4]) }
#   Datum { i: IntList([6, 5, 3, 3]), o: IntList([6, 5, 5, 3, 3]) }
#   Datum { i: IntList([1, 9, 0, 9, 1]), o: IntList([1, 5, 9, 0, 9, 1]) }
#   Datum { i: IntList([6, 0, 2, 0, 4, 8, 1, 7, 5, 3]), o: IntList([6, 5, 0, 2, 0, 4, 8, 1, 7, 5, 3]) }
#   Datum { i: IntList([0, 2, 6]), o: IntList([0, 5, 2, 6]) }
#   Datum { i: IntList([7, 4, 3, 1, 2, 1, 8]), o: IntList([7, 5, 4, 3, 1, 2, 1, 8]) }
#   Datum { i: IntList([1, 7, 3, 0, 1, 2, 1, 3, 0, 3]), o: IntList([1, 5, 7, 3, 0, 1, 2, 1, 3, 0, 3]) }
#   Datum { i: IntList([8, 4, 4, 4, 8, 4]), o: IntList([8, 5, 4, 4, 4, 8, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c022,0,5,1,1034840,1034842,941915,600.000176804,602.39179175
c022,0,5,2,315734,317186,307911,1200.001097499,1202.936280951
c022,0,5,3,133273,134420,129448,1800.0040520090001,1803.243717307
c022,0,5,4,79088,79823,76789,2400.010590101,2403.497147074
c022,0,5,5,60006,60852,58418,3000.013307743,3003.782551875
c022,0,5,6,43436,44190,42921,3600.015027007,3604.117419319
c022,0,5,7,43999,44736,43242,4200.020039804,4204.525934515
c022,0,5,8,30217,31014,29995,4800.0212651659995,4805.024309156
c022,0,5,9,28251,29019,28202,5400.026417396999,5405.579023681
c022,0,5,10,24813,25477,24707,6000.039277938999,6006.041891741
c022,0,5,11,20931,21621,21004,6600.071349893999,6606.432950445
# search time: 6600.071s
# total time: 6606.620s
c022,1,5,1,1086586,1086588,1001930,600.000027743,600.315955722
c022,1,5,2,322546,324832,316207,1200.001046924,1200.554150482
c022,1,5,3,134426,135498,129523,1800.0046934020002,1800.705915287
c022,1,5,4,83129,84226,80830,2400.005072774,2400.832558826
c022,1,5,5,60760,61653,59459,3000.010643138,3000.975598119
c022,1,5,6,41558,42437,41277,3600.011550137,3601.173322101
c022,1,5,7,44173,44977,43224,4200.015981581,4201.366117598
c022,1,5,8,30347,31098,30096,4800.026868823,4801.600378344
c022,1,5,9,28552,29307,28379,5400.032937847,5401.80970489
c022,1,5,10,25130,25834,25030,6000.051205137999,6002.071549235
c022,1,5,11,20977,21718,20995,6600.077597185999,6602.3021892
# search time: 6600.078s
# total time: 13209.201s
c022,2,5,1,1079543,1079545,993264,600.004573991,600.234666747
c022,2,5,2,325648,326947,317630,1200.005227958,1200.408827264
c022,2,5,3,137465,138622,133485,1800.0088341219998,1800.521146506
c022,2,5,4,84013,85016,81900,2400.011184475,2400.61680906
c022,2,5,5,61100,61980,59591,3000.020850625,3000.700908047
c022,2,5,6,44320,45267,43933,3600.0346630900003,3600.841974788
c022,2,5,7,48415,49181,47410,4200.048791018,4201.007525837
c022,2,5,8,33554,34290,33214,4800.056333538,4801.224759144
c022,2,5,9,31243,31949,31033,5400.061342231,5401.45225723
c022,2,5,10,27625,28342,27428,6000.094845879,6001.630039331
c022,2,5,11,23616,24346,23540,6600.132038926,6601.822858986
# search time: 6600.132s
# total time: 19811.312s
c022,3,5,1,1107130,1107132,1034578,600.000193258,600.193153558
c022,3,5,2,362491,364623,354444,1200.0011482730001,1200.330905436
c022,3,5,3,153378,154512,148580,1800.005498898,1800.415876663
c022,3,5,4,94634,95743,91884,2400.008027027,2400.484629257
c022,3,5,5,69977,71002,68214,3000.01358784,3000.555404976
c022,3,5,6,48652,49508,48144,3600.0210379630003,3600.671083057
c022,3,5,7,50765,51458,49593,4200.022007664,4200.776537444
c022,3,5,8,34133,34985,33900,4800.022311865,4800.933918475
c022,3,5,9,31992,32797,31859,5400.026781169,5401.062576318
c022,3,5,10,28199,28973,28142,6000.035772513,6001.244702696
c022,3,5,11,23712,24439,23681,6600.055509895999,6601.353869855
# search time: 6600.056s
# total time: 26412.954s
c022,4,5,1,1219547,1219549,1127425,600.000118029,600.212515003
c022,4,5,2,360698,362737,352780,1200.0006312579999,1200.353997623
c022,4,5,3,152640,153699,147525,1800.0022517789998,1800.424183785
c022,4,5,4,94495,95541,91717,2400.0096846389997,2400.50367107
c022,4,5,5,69798,70774,67827,3000.0160401699995,3000.581782897
c022,4,5,6,48522,49471,48135,3600.0165956109995,3600.66441968
c022,4,5,7,49652,50394,48572,4200.02331875,4200.743429715
c022,4,5,8,34092,34834,33661,4800.035613198,4800.872853267
c022,4,5,9,31356,32133,31174,5400.047967338,5400.969499813
c022,4,5,10,27826,28511,27683,6000.060348655999,6001.084084833
c022,4,5,11,24635,24870,24125,6600.069291696999,6601.249922522
# search time: 6600.069s
# total time: 33014.513s
