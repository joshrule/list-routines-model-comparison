    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c039_5.json out/1595515534/results/c039_5_best.csv out/1595515534/results/c039_5_predictions.csv out/1595515534/results/c039_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5, 6, 5, 5]), o: IntList([0, 5, 6, 5, 5]) }
#   Datum { i: IntList([0, 0, 6, 6, 0, 0]), o: IntList([0, 0, 6, 6, 0, 0]) }
#   Datum { i: IntList([7, 2, 4, 4, 9, 5, 7, 2, 3]), o: IntList([7, 2, 4, 4, 9, 5, 7, 2, 3, 9]) }
#   Datum { i: IntList([9, 3, 6]), o: IntList([9, 3, 6, 3]) }
#   Datum { i: IntList([7, 8, 4, 6, 3, 5, 1]), o: IntList([7, 8, 4, 6, 3, 5, 1]) }
#   Datum { i: IntList([4, 5, 8, 4, 0, 2, 8, 7, 2]), o: IntList([4, 5, 8, 4, 0, 2, 8, 7, 2, 9]) }
#   Datum { i: IntList([3, 8, 6]), o: IntList([3, 8, 6, 3]) }
#   Datum { i: IntList([1, 5, 7, 3, 4, 8, 6, 9, 2]), o: IntList([1, 5, 7, 3, 4, 8, 6, 9, 2, 9]) }
#   Datum { i: IntList([2, 1, 0, 1, 7, 8, 1, 8, 7]), o: IntList([2, 1, 0, 1, 7, 8, 1, 8, 7, 9]) }
#   Datum { i: IntList([2, 1, 9]), o: IntList([2, 1, 9, 3]) }
#   Datum { i: IntList([9, 1, 4]), o: IntList([9, 1, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c039,0,5,1,1236126,1236128,1149508,600.000174376,601.836379226
c039,0,5,2,367517,369486,344216,1200.000615243,1202.555306184
c039,0,5,3,230087,231031,216231,1800.001011558,1802.973975258
c039,0,5,4,88242,89138,88170,2400.005530536,2403.2780433
c039,0,5,5,73662,74416,74006,3000.013906346,3003.594946819
c039,0,5,6,54356,55004,54666,3600.01613269,3603.895553445
c039,0,5,7,41563,42314,41925,4200.018971098,4204.159461762
c039,0,5,8,37281,37926,37498,4800.020263564,4804.507235446
c039,0,5,9,29770,30395,30097,5400.02291734,5404.99185609
c039,0,5,10,23661,24256,24040,6000.023796948,6005.443403696
c039,0,5,11,23772,24470,24115,6600.04867835,6605.746884216
# search time: 6600.049s
# total time: 6605.973s
c039,1,5,1,1280316,1280318,1192356,600.00019697,600.317576422
c039,1,5,2,372991,375109,348991,1200.001516888,1200.607470011
c039,1,5,3,223383,224369,210927,1800.002247345,1800.795417415
c039,1,5,4,88996,89738,88465,2400.00356878,2400.941202744
c039,1,5,5,72967,73770,73282,3000.005318311,3001.097684717
c039,1,5,6,54602,55345,54964,3600.012683526,3601.268336077
c039,1,5,7,40324,41065,40683,4200.017121903,4201.404248813
c039,1,5,8,36768,37379,36978,4800.027841624,4801.56797167
c039,1,5,9,29405,30081,29787,5400.05034943,5401.768497051
c039,1,5,10,23574,24331,24106,6000.067872856,6001.977111706
c039,1,5,11,23384,23944,23640,6600.070517141,6602.168129653
# search time: 6600.071s
# total time: 13208.487s
c039,2,5,1,1262438,1262440,1177712,600.000132759,600.229341439
c039,2,5,2,369035,371216,344874,1200.000771465,1200.417685904
c039,2,5,3,219413,220525,207059,1800.0008952130001,1800.557398194
c039,2,5,4,89306,90080,89042,2400.003978823,2400.661760169
c039,2,5,5,73320,74093,73755,3000.0051826060003,3000.752101806
c039,2,5,6,51001,51763,51462,3600.0065480250005,3600.874250357
c039,2,5,7,40237,41015,40650,4200.021587864,4201.032367821
c039,2,5,8,35953,36626,36261,4800.030508291,4801.167344701
c039,2,5,9,29073,29745,29443,5400.032152124,5401.319384641
c039,2,5,10,24079,24800,24591,6000.042414021,6001.424225321
c039,2,5,11,23337,23996,23667,6600.0526212489995,6601.528911942
# search time: 6600.053s
# total time: 19810.351s
c039,3,5,1,1230602,1230604,1148217,600.000554896,600.188334605
c039,3,5,2,368468,370146,345036,1200.0020950930002,1200.348944078
c039,3,5,3,221061,222011,208844,1800.002910179,1800.453273211
c039,3,5,4,88804,89648,88659,2400.0082104880003,2400.536147296
c039,3,5,5,73332,74048,73741,3000.00927128,3000.606552662
c039,3,5,6,59027,59836,59509,3600.0141202610002,3600.700006546
c039,3,5,7,40283,40968,40619,4200.018539844,4200.799533991
c039,3,5,8,39179,39851,39320,4800.039949098,4800.879460405
c039,3,5,9,29503,30178,29855,5400.048990376999,5400.997229363
c039,3,5,10,23521,24184,23988,6000.064619139,6001.115477668
c039,3,5,11,25046,25650,25281,6600.0723234649995,6601.229152508
# search time: 6600.072s
# total time: 26412.004s
c039,4,5,1,1268540,1268542,1182954,600.003815023,600.182058032
c039,4,5,2,362723,365031,339997,1200.0038669619998,1200.314579422
c039,4,5,3,227973,229065,214586,1800.0047406999997,1800.413966557
c039,4,5,4,90013,90975,89880,2400.011962605,2400.485569411
c039,4,5,5,73401,74121,73762,3000.014346024,3000.540024049
c039,4,5,6,54395,55148,54888,3600.020645474,3600.628291794
c039,4,5,7,40068,40754,40393,4200.026385847,4200.701161837
c039,4,5,8,36549,37177,36783,4800.0482318819995,4800.813971299
c039,4,5,9,29266,30004,29701,5400.052289353999,5400.91530038
c039,4,5,10,23964,24634,24407,6000.079046601999,6001.037224308
c039,4,5,11,22842,23520,23202,6600.103331411999,6601.120830007
# search time: 6600.103s
# total time: 33013.340s
