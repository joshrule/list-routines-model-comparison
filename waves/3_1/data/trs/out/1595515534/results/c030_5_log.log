    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c030_5.json out/1595515534/results/c030_5_best.csv out/1595515534/results/c030_5_predictions.csv out/1595515534/results/c030_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 7, 4, 3, 8, 1]), o: IntList([9, 7, 4, 3]) }
#   Datum { i: IntList([1, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([9, 7, 2, 5, 9, 4, 6, 8, 4]), o: IntList([9, 7, 2, 5, 9, 4, 6]) }
#   Datum { i: IntList([6, 4, 1, 6, 7, 2, 5, 8]), o: IntList([6, 4, 1, 6, 7, 2]) }
#   Datum { i: IntList([5, 4, 5, 0]), o: IntList([5, 4]) }
#   Datum { i: IntList([6, 4, 8, 1, 0]), o: IntList([6, 4, 8]) }
#   Datum { i: IntList([6, 2, 9, 7, 8, 3, 8, 5, 0]), o: IntList([6, 2, 9, 7, 8, 3, 8]) }
#   Datum { i: IntList([5, 7, 1, 8, 9, 4, 1, 6, 2, 3]), o: IntList([5, 7, 1, 8, 9, 4, 1, 6]) }
#   Datum { i: IntList([2, 5, 7, 8, 2, 2, 9, 3, 1, 0]), o: IntList([2, 5, 7, 8, 2, 2, 9, 3]) }
#   Datum { i: IntList([0, 0, 3, 3, 0, 3, 0]), o: IntList([0, 0, 3, 3, 0]) }
#   Datum { i: IntList([5, 3]), o: IntList([]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,5,1,1199038,1199040,1114153,600.00137321,601.797947916
c030,0,5,2,317108,319182,310178,1200.001828247,1202.314340814
c030,0,5,3,217200,218273,215978,1800.002577811,1802.731924989
c030,0,5,4,99059,99970,99343,2400.013613395,2403.082139396
c030,0,5,5,70329,71019,70585,3000.015703609,3003.414679774
c030,0,5,6,63613,64321,63866,3600.020819941,3603.67358449
c030,0,5,7,55781,56435,55869,4200.028047226,4204.038138662
c030,0,5,8,45012,45809,45491,4800.029085163,4804.374256632
c030,0,5,9,34317,35085,34707,5400.0329318799995,5404.712326166
c030,0,5,10,28388,28995,28781,6000.048854868,6005.071774599
c030,0,5,11,26127,26776,26607,6600.062878905,6605.368908495
# search time: 6600.063s
# total time: 6605.609s
c030,1,5,1,1189308,1189310,1106370,600.000009172,600.291723356
c030,1,5,2,300898,302922,293979,1200.0017196039998,1200.551097814
c030,1,5,3,221008,222100,219692,1800.0026280509999,1800.7588110679999
c030,1,5,4,99611,100477,100002,2400.006454083,2400.924676311
c030,1,5,5,69579,70262,69956,3000.007246932,3001.082802354
c030,1,5,6,61883,62601,62164,3600.013483452,3601.238842088
c030,1,5,7,54314,55042,54503,4200.026503811,4201.451555276
c030,1,5,8,44197,44842,44556,4800.047602095,4801.643919903
c030,1,5,9,33773,34445,34166,5400.071036314,5401.872562154
c030,1,5,10,28212,28878,28736,6000.105355512,6002.115824347
c030,1,5,11,25354,26080,25920,6600.107546239,6602.254685381
# search time: 6600.108s
# total time: 13208.249s
c030,2,5,1,1220375,1220377,1119239,600.000297395,600.238422932
c030,2,5,2,310584,312880,304130,1200.0015475609998,1200.398122623
c030,2,5,3,224855,226006,223796,1800.001637678,1800.525777031
c030,2,5,4,97853,98688,98094,2400.006350011,2400.647107799
c030,2,5,5,68805,69504,69051,3000.007597452,3000.759278154
c030,2,5,6,62193,62882,62525,3600.012990638,3600.875915346
c030,2,5,7,54559,55380,54691,4200.0205780139995,4201.037240124
c030,2,5,8,44817,45495,45175,4800.024893108999,4801.159875153
c030,2,5,9,33894,34667,34346,5400.043784983,5401.297235593
c030,2,5,10,28107,28766,28569,6000.068032681,6001.52515347
c030,2,5,11,25156,25841,25648,6600.091873355999,6601.705808472
# search time: 6600.092s
# total time: 19810.342s
c030,3,5,1,1211767,1211769,1113917,600.000543763,600.199565478
c030,3,5,2,308776,311077,302120,1200.0009943999999,1200.325719435
c030,3,5,3,223453,224482,222282,1800.002320908,1800.436950491
c030,3,5,4,99213,100111,99498,2400.006701001,2400.535538025
c030,3,5,5,70256,71043,70628,3000.009090742,3000.622623231
c030,3,5,6,62661,63372,62947,3600.011479628,3600.705308444
c030,3,5,7,54452,55121,54541,4200.0124463600005,4200.831401374
c030,3,5,8,44208,44964,44654,4800.021823721,4800.92820517
c030,3,5,9,33421,34105,33769,5400.036426146,5401.060819036
c030,3,5,10,28349,28955,28766,6000.044569633,6001.211096962
c030,3,5,11,25454,26105,25953,6600.050989175999,6601.348761551
# search time: 6600.051s
# total time: 26412.075s
c030,4,5,1,1171111,1171113,1070160,600.004794123,600.176754991
c030,4,5,2,296110,298102,289647,1200.006217335,1200.290470765
c030,4,5,3,210800,211743,209638,1800.0077360340001,1800.38389805
c030,4,5,4,93830,94615,94034,2400.011406072,2400.474280556
c030,4,5,5,66412,67169,66797,3000.0164370720004,3000.546686855
c030,4,5,6,59244,60015,59676,3600.0185399980005,3600.633411029
c030,4,5,7,51875,52593,52064,4200.028422608,4200.741417348
c030,4,5,8,41594,42250,41939,4800.036362933,4800.854294787
c030,4,5,9,31665,32389,32060,5400.093412256,5401.008321968
c030,4,5,10,24623,25125,24977,6000.11576952,6001.134499239
c030,4,5,11,23836,24288,24097,6600.117659422,6601.2171003
# search time: 6600.118s
# total time: 33013.671s
