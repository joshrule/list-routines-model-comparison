    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.31s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c023_2.json out/1595515534/results/c023_2_best.csv out/1595515534/results/c023_2_predictions.csv out/1595515534/results/c023_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 0, 2]), o: IntList([7, 8, 0, 2]) }
#   Datum { i: IntList([9, 7, 2, 3, 0, 1, 6, 8, 4]), o: IntList([9, 5, 7, 2, 3, 0, 1, 6, 8, 4]) }
#   Datum { i: IntList([7, 4, 5, 9, 9, 5, 8]), o: IntList([7, 5, 4, 5, 9, 9, 5, 8]) }
#   Datum { i: IntList([0, 2, 7, 9, 5, 8, 6, 3, 0, 9]), o: IntList([0, 5, 2, 7, 9, 5, 8, 6, 3, 0, 9]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([1, 5, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([3, 7, 3, 7, 3, 3, 2, 2, 7, 3]), o: IntList([3, 5, 7, 3, 7, 3, 3, 2, 2, 7, 3]) }
#   Datum { i: IntList([9, 7, 6, 1, 2]), o: IntList([9, 5, 7, 6, 1, 2]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([2, 0, 5, 4]), o: IntList([2, 8, 0, 5, 4]) }
#   Datum { i: IntList([5, 2, 2, 6, 1, 9, 4, 2]), o: IntList([5, 5, 2, 2, 6, 1, 9, 4, 2]) }
#   Datum { i: IntList([0, 2, 9, 8, 0, 0, 5, 9, 2, 9]), o: IntList([0, 5, 2, 9, 8, 0, 0, 5, 9, 2, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c023,0,2,1,1057964,1057966,972690,600.005795935,602.385792579
c023,0,2,2,274636,276758,268659,1200.006565105,1202.965023175
c023,0,2,3,91849,92868,92234,1800.0122025179999,1803.312590451
c023,0,2,4,62875,63603,62984,2400.0158962749997,2403.690195435
c023,0,2,5,44462,45235,44884,3000.0252243669997,3004.044073173
c023,0,2,6,42341,42981,42461,3600.0304009379997,3604.443410755
c023,0,2,7,28149,28866,28587,4200.051715897,4204.859251598
c023,0,2,8,26321,27030,26790,4800.061522450999,4805.219684387
c023,0,2,9,24310,25040,24519,5400.076821592,5405.58379051
c023,0,2,10,21343,21925,21499,6000.095462052,6006.002678933
c023,0,2,11,19192,19904,19528,6600.117325894999,6606.427395578
# search time: 6600.117s
# total time: 6606.654s
c023,1,2,1,1048486,1048488,961370,600.004739397,600.33512955
c023,1,2,2,278019,280107,272588,1200.012577566,1200.605634411
c023,1,2,3,92242,93336,92741,1800.0151639819999,1800.796718161
c023,1,2,4,63931,64677,64058,2400.023548496,2401.020587421
c023,1,2,5,43194,43967,43643,3000.0582334289998,3001.20893654
c023,1,2,6,40730,41359,40934,3600.062564203,3601.417779989
c023,1,2,7,27260,28026,27764,4200.073116127,4201.631398464
c023,1,2,8,25419,26157,25948,4800.090597185,4801.800366565
c023,1,2,9,22918,23732,23221,5400.092419896,5401.972696293
c023,1,2,10,21440,22028,21601,6000.099543439001,6002.130571466
c023,1,2,11,18459,19217,18828,6600.122738975,6602.318070562
# search time: 6600.123s
# total time: 13209.285s
c023,2,2,1,1032571,1032573,949385,600.000169511,600.23977595
c023,2,2,2,263986,266177,259050,1200.001500801,1200.427854241
c023,2,2,3,89248,90337,89723,1800.005130003,1800.576977339
c023,2,2,4,61061,61803,61134,2400.0093904240002,2400.709456346
c023,2,2,5,42662,43424,43000,3000.015388754,3000.837367928
c023,2,2,6,42260,43079,42588,3600.017924058,3600.966530458
c023,2,2,7,28037,28751,28459,4200.03967901,4201.112058792
c023,2,2,8,26418,27042,26842,4800.063183509001,4801.250130069
c023,2,2,9,21378,22035,21852,5400.078621810001,5401.359820243
c023,2,2,10,20854,21575,21388,6000.091211196001,6001.479708965
c023,2,2,11,17726,18295,18128,6600.111123689001,6601.63879425
# search time: 6600.111s
# total time: 19811.219s
c023,3,2,1,1105864,1105866,1032479,600.003256529,600.206251674
c023,3,2,2,307504,309436,300698,1200.003526608,1200.33873802
c023,3,2,3,102872,103869,102873,1800.004593404,1800.432914856
c023,3,2,4,69696,70501,69801,2400.048538825,2400.584774277
c023,3,2,5,47744,48573,48036,3000.053772234,3000.688744151
c023,3,2,6,45760,46457,45953,3600.063864703,3600.812238118
c023,3,2,7,32518,33212,32828,4200.064978709,4200.898485929
c023,3,2,8,29386,30068,29807,4800.068388600999,4801.018235972
c023,3,2,9,24006,24560,24179,5400.076890072999,5401.13610506
c023,3,2,10,22806,23413,23107,6000.079745714999,6001.257620589
c023,3,2,11,19396,19978,19696,6600.087796184,6601.367393157
# search time: 6600.088s
# total time: 26412.913s
c023,4,2,1,1161614,1161616,1069096,600.000053217,600.187278374
c023,4,2,2,314806,315527,306765,1200.0022301059998,1200.306539019
c023,4,2,3,103775,104964,104261,1800.0035179429997,1800.388350055
c023,4,2,4,71723,72496,71747,2400.0045375199998,2400.486547625
c023,4,2,5,49593,50320,49852,3000.015521506,3000.579908283
c023,4,2,6,47107,47800,47288,3600.025915883,3600.693523321
c023,4,2,7,31404,32205,31845,4200.029516876,4200.777256471
c023,4,2,8,29202,29959,29728,4800.038235559,4800.861064298
c023,4,2,9,27374,28033,27498,5400.048335576,5400.958074152
c023,4,2,10,24950,25665,25199,6000.06992567,6001.066090501
c023,4,2,11,21791,22343,21883,6600.128846832,6601.226754347
# search time: 6600.129s
# total time: 33014.482s
