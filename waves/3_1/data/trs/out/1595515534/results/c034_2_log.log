    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c034_2.json out/1595515534/results/c034_2_best.csv out/1595515534/results/c034_2_predictions.csv out/1595515534/results/c034_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 8, 0, 0]) }
#   Datum { i: IntList([6, 1, 2, 7, 4]), o: IntList([6, 2, 1, 7, 4]) }
#   Datum { i: IntList([5, 9, 3, 5, 7, 5, 1, 1, 2, 6]), o: IntList([5, 3, 9, 5, 7, 5, 1, 1, 2, 6]) }
#   Datum { i: IntList([9, 0, 2]), o: IntList([9, 2, 0]) }
#   Datum { i: IntList([3, 3, 4, 4, 6, 4, 3, 4]), o: IntList([3, 4, 3, 4, 6, 4, 3, 4]) }
#   Datum { i: IntList([3, 1, 4, 2, 6, 5, 9, 7, 0, 8]), o: IntList([3, 4, 1, 2, 6, 5, 9, 7, 0, 8]) }
#   Datum { i: IntList([3, 0, 8, 7, 2, 1]), o: IntList([3, 8, 0, 7, 2, 1]) }
#   Datum { i: IntList([0, 8, 3, 1, 4, 9, 5, 9, 5]), o: IntList([0, 3, 8, 1, 4, 9, 5, 9, 5]) }
#   Datum { i: IntList([1, 9, 1, 4]), o: IntList([1, 1, 9, 4]) }
#   Datum { i: IntList([7, 1, 8, 6, 3, 5, 9, 4]), o: IntList([7, 8, 1, 6, 3, 5, 9, 4]) }
#   Datum { i: IntList([9, 7, 6, 6, 9, 7, 6]), o: IntList([9, 6, 7, 6, 9, 7, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c034,0,2,1,1207052,1207054,1123450,600.00206027,601.953267472
c034,0,2,2,337437,339367,329783,1200.002371115,1202.50354
c034,0,2,3,194218,195319,187798,1800.0107296219999,1802.825986384
c034,0,2,4,104540,105680,102569,2400.011726458,2403.108641122
c034,0,2,5,95328,96199,92444,3000.0149061439997,3003.464031498
c034,0,2,6,75242,76171,73820,3600.0163829669996,3603.906875785
c034,0,2,7,52317,53115,51618,4200.025697589999,4204.309779834
c034,0,2,8,42839,43682,42574,4800.031565836,4804.693406691
c034,0,2,9,38777,39444,38291,5400.0378871289995,5405.129996032
c034,0,2,10,36198,36878,35761,6000.037979184,6005.582089228
c034,0,2,11,31359,32119,31228,6600.053068769,6605.947492314
# search time: 6600.053s
# total time: 6606.166s
c034,1,2,1,1315193,1315195,1211145,600.007120698,600.314341264
c034,1,2,2,334263,336630,326949,1200.01593464,1200.557441364
c034,1,2,3,191816,192885,185395,1800.0161729390002,1800.707572519
c034,1,2,4,103226,104283,100976,2400.0269970030004,2400.860982045
c034,1,2,5,91159,91902,88590,3000.0295847690004,3001.039366219
c034,1,2,6,71948,72749,70583,3600.0420327970005,3601.246250674
c034,1,2,7,50449,51286,49709,4200.046338185,4201.444689784
c034,1,2,8,41346,42250,41119,4800.055123458001,4801.636640895
c034,1,2,9,37154,37832,36727,5400.066909836,5401.859780442
c034,1,2,10,36113,36894,35818,6000.072607733,6002.11711809
c034,1,2,11,31578,32314,31358,6600.0801375890005,6602.331983396
# search time: 6600.080s
# total time: 13208.817s
c034,2,2,1,1257974,1257976,1177724,600.001143017,600.251639191
c034,2,2,2,337172,337922,328521,1200.001896209,1200.418622686
c034,2,2,3,194130,195268,187557,1800.004034347,1800.531630159
c034,2,2,4,105777,106724,103197,2400.006049444,2400.633412236
c034,2,2,5,96919,97642,94850,3000.015457142,3000.774918413
c034,2,2,6,75372,76230,73956,3600.02654726,3600.94043449
c034,2,2,7,52214,53044,51548,4200.033339011,4201.100224102
c034,2,2,8,43750,44396,43204,4800.050226603,4801.245463331
c034,2,2,9,38961,39714,38566,5400.081964307999,5401.453624465
c034,2,2,10,36364,37066,36032,6000.111043163999,6001.647816566
c034,2,2,11,31555,32255,31293,6600.120105007999,6601.799027842
# search time: 6600.120s
# total time: 19810.943s
c034,3,2,1,1185923,1185925,1109096,600.000044395,600.196034124
c034,3,2,2,337772,338857,329341,1200.001739552,1200.337389767
c034,3,2,3,190083,191175,183332,1800.0025855129998,1800.4285322
c034,3,2,4,105508,106638,103175,2400.005075742,2400.517849625
c034,3,2,5,95117,95848,92889,3000.01291083,3000.620583356
c034,3,2,6,74552,75504,73231,3600.026380934,3600.754575417
c034,3,2,7,52017,52836,51101,4200.040991940999,4200.872948867
c034,3,2,8,43662,44464,43203,4800.047516862,4800.967439656
c034,3,2,9,38701,39401,38357,5400.051794809,5401.108662855
c034,3,2,10,36055,36834,35849,6000.068305608,6001.248935415
c034,3,2,11,31604,32279,31350,6600.075178405,6601.388411989
# search time: 6600.075s
# total time: 26412.651s
c034,4,2,1,1242644,1242646,1162879,600.000244758,600.186134536
c034,4,2,2,335493,337411,328105,1200.0020437560001,1200.298717134
c034,4,2,3,191890,193023,185359,1800.0034871390003,1800.374444131
c034,4,2,4,107078,108146,104156,2400.0048191600004,2400.44287682
c034,4,2,5,96716,97402,94408,3000.0125742170003,3000.542774086
c034,4,2,6,75346,76202,74003,3600.0182488200003,3600.65582418
c034,4,2,7,52942,53912,52383,4200.020493172,4200.754025871
c034,4,2,8,43784,44474,43293,4800.0435304210005,4800.887323366
c034,4,2,9,38464,39324,38174,5400.044420788001,5400.977625885
c034,4,2,10,36255,36996,35943,6000.047151393001,6001.070522158
c034,4,2,11,31313,31985,31040,6600.05481252,6601.193525703
# search time: 6600.055s
# total time: 33014.177s
