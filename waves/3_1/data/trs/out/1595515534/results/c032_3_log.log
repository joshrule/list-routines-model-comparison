    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c032_3.json out/1595515534/results/c032_3_best.csv out/1595515534/results/c032_3_predictions.csv out/1595515534/results/c032_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 9, 9]), o: IntList([8]) }
#   Datum { i: IntList([0, 8, 5, 4, 6, 1]), o: IntList([0, 8, 5, 4]) }
#   Datum { i: IntList([9, 8, 2, 9, 3, 6, 5, 8, 1]), o: IntList([2, 9, 3, 6, 5, 8, 1]) }
#   Datum { i: IntList([6, 3, 2, 9, 9, 2, 6, 2]), o: IntList([2, 9, 9, 2, 6, 2]) }
#   Datum { i: IntList([3, 7, 0, 5, 1, 4, 8, 6, 2, 9]), o: IntList([3, 7, 0, 5, 1, 4, 8, 6]) }
#   Datum { i: IntList([0, 9, 4, 6, 8, 2, 5, 7, 1]), o: IntList([0, 9, 4, 6, 8, 2, 5]) }
#   Datum { i: IntList([0, 1, 7, 9, 3]), o: IntList([0, 1, 7]) }
#   Datum { i: IntList([7, 6, 4, 4, 1, 8, 3]), o: IntList([4, 4, 1, 8, 3]) }
#   Datum { i: IntList([4, 7, 3, 3]), o: IntList([3, 3]) }
#   Datum { i: IntList([7, 7, 5, 5, 0, 7, 0, 5]), o: IntList([5, 5, 0, 7, 0, 5]) }
#   Datum { i: IntList([7, 2, 6, 0, 1, 1, 3, 4, 9, 8]), o: IntList([7, 2, 6, 0, 1, 1, 3, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c032,0,3,1,1296312,1296314,1184666,600.001689227,602.048417743
c032,0,3,2,568993,571102,553975,1200.0019160870002,1202.586468379
c032,0,3,3,213369,214493,212012,1800.0027601710003,1802.95735413
c032,0,3,4,100646,101487,100861,2400.003732297,2403.181506716
c032,0,3,5,82976,83769,83286,3000.005890287,3003.369593283
c032,0,3,6,51368,52113,51747,3600.010463059,3603.602247405
c032,0,3,7,40525,41227,40960,4200.01515814,4203.815077849
c032,0,3,8,35559,36292,36087,4800.017727957,4804.027888011
c032,0,3,9,28821,29534,29339,5400.023371503999,5404.262249902
c032,0,3,10,28416,29126,28897,6000.033541692999,6004.577894153
c032,0,3,11,24932,25703,25513,6600.081052744999,6604.869869286
# search time: 6600.081s
# total time: 6605.104s
c032,1,3,1,1310263,1310265,1234143,600.000472698,600.296255717
c032,1,3,2,565521,567544,549945,1200.000527104,1200.532952604
c032,1,3,3,225936,227047,224354,1800.003624817,1800.683353987
c032,1,3,4,105125,106007,105139,2400.0063399,2400.812979739
c032,1,3,5,85963,86782,86031,3000.0148182410003,3000.926607703
c032,1,3,6,54594,55433,55002,3600.030567273,3601.083334328
c032,1,3,7,42749,43493,43176,4200.03333166,4201.2584338
c032,1,3,8,34756,35471,35270,4800.037947619,4801.418862016
c032,1,3,9,27962,28690,28472,5400.038807532,5401.599960598
c032,1,3,10,26638,27333,27126,6000.038928196,6001.806489143
c032,1,3,11,23637,24399,24220,6600.088306633,6602.063543013
# search time: 6600.088s
# total time: 13207.534s
c032,2,3,1,1238753,1238755,1152680,600.000535552,600.224691655
c032,2,3,2,562372,564426,547233,1200.000910534,1200.403738481
c032,2,3,3,224668,225878,223100,1800.00395304,1800.524546828
c032,2,3,4,104896,105765,104853,2400.007300248,2400.61603784
c032,2,3,5,85758,86522,85820,3000.0085209999997,3000.693452647
c032,2,3,6,55434,56173,55766,3600.0087555799996,3600.767824391
c032,2,3,7,42398,43289,42996,4200.021118717999,4200.862632081
c032,2,3,8,34878,35608,35398,4800.021565837999,4800.983944946
c032,2,3,9,28377,29067,28825,5400.032329874999,5401.097783128
c032,2,3,10,26399,27149,26969,6000.0555899599985,6001.216662127
c032,2,3,11,23389,23961,23767,6600.083297570998,6601.352017888
# search time: 6600.083s
# total time: 19809.252s
c032,3,3,1,1299862,1299864,1172041,600.000115924,600.204682703
c032,3,3,2,553989,556310,539806,1200.0029960450001,1200.381534902
c032,3,3,3,220119,221212,218803,1800.002997607,1800.485894104
c032,3,3,4,101019,101815,101170,2400.007925063,2400.560721188
c032,3,3,5,81658,82370,81922,3000.011759696,3000.629669921
c032,3,3,6,48513,49269,49018,3600.013797644,3600.734233284
c032,3,3,7,40394,41097,40815,4200.017466384,4200.818961915
c032,3,3,8,34234,35030,34815,4800.024823363,4800.920309356
c032,3,3,9,28751,29549,29354,5400.043663775,5401.027882724
c032,3,3,10,27492,28190,27974,6000.052992387,6001.11164386
c032,3,3,11,24145,24672,24516,6600.065265239,6601.220824749
# search time: 6600.065s
# total time: 26410.800s
c032,4,3,1,1244506,1244508,1149869,600.000009649,600.181850999
c032,4,3,2,536372,538490,521613,1200.000071088,1200.310356078
c032,4,3,3,210654,211762,209102,1800.0004843059999,1800.388213885
c032,4,3,4,100119,100940,99969,2400.007599318,2400.463145948
c032,4,3,5,80461,81366,80616,3000.036151042,3000.542238374
c032,4,3,6,51977,52759,52364,3600.0445026079997,3600.611568734
c032,4,3,7,40402,41081,40798,4200.047489496999,4200.675046526
c032,4,3,8,32573,33157,32968,4800.056406301,4800.747843749
c032,4,3,9,25660,26341,26139,5400.0688130749995,5400.840832244
c032,4,3,10,25014,25658,25470,6000.07627326,6000.952171024
c032,4,3,11,21552,22303,22104,6600.099094077999,6601.039253317
# search time: 6600.099s
# total time: 33012.194s
