    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c024_1.json out/1595515534/results/c024_1_best.csv out/1595515534/results/c024_1_predictions.csv out/1595515534/results/c024_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 7, 4, 1]), o: IntList([8, 5, 7, 4, 1]) }
#   Datum { i: IntList([0, 8, 3]), o: IntList([0, 8, 8, 3]) }
#   Datum { i: IntList([9, 9, 4, 9, 6, 1]), o: IntList([9, 5, 9, 4, 9, 6, 1]) }
#   Datum { i: IntList([7, 6, 0, 7, 6]), o: IntList([7, 5, 6, 0, 7, 6]) }
#   Datum { i: IntList([5, 2]), o: IntList([5, 5, 2]) }
#   Datum { i: IntList([6, 7, 1, 3, 5, 6, 9, 0, 4, 3]), o: IntList([6, 5, 7, 1, 3, 5, 6, 9, 0, 4, 3]) }
#   Datum { i: IntList([9, 9, 2, 0, 0, 1, 2, 8, 4, 2]), o: IntList([9, 5, 9, 2, 0, 0, 1, 2, 8, 4, 2]) }
#   Datum { i: IntList([4, 3, 4, 3, 8, 4, 4, 3]), o: IntList([4, 8, 3, 4, 3, 8, 4, 4, 3]) }
#   Datum { i: IntList([0, 9, 9, 2, 6, 0, 1, 4, 6]), o: IntList([0, 8, 9, 9, 2, 6, 0, 1, 4, 6]) }
#   Datum { i: IntList([6, 0, 6, 5, 0, 5, 7]), o: IntList([6, 5, 0, 6, 5, 0, 5, 7]) }
#   Datum { i: IntList([3, 1, 6, 8, 2, 9, 4, 5, 0, 7]), o: IntList([3, 8, 1, 6, 8, 2, 9, 4, 5, 0, 7]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c024,0,1,1,1173841,1173843,1085033,600.000716192,601.93423253
c024,0,1,2,271018,273208,265692,1200.0014943400001,1202.465457171
c024,0,1,3,158604,159635,157861,1800.0032292260003,1802.882713176
c024,0,1,4,103710,104494,103582,2400.0046333030004,2403.183270247
c024,0,1,5,79433,80182,79436,3000.0053697010003,3003.431652534
c024,0,1,6,80143,80963,79914,3600.015115395,3603.69365503
c024,0,1,7,56856,57684,56977,4200.0245019270005,4203.912996686
c024,0,1,8,39040,39812,39378,4800.031697564001,4804.242306761
c024,0,1,9,22909,23535,23399,5400.053806388001,5404.548231634
c024,0,1,10,20843,21524,21367,6000.0603303980015,6004.851165583
c024,0,1,11,18321,19058,18893,6600.070757107002,6605.083763073
# search time: 6600.071s
# total time: 6605.302s
c024,1,1,1,1203216,1203218,1109359,600.001695283,600.283540698
c024,1,1,2,299860,302008,293877,1200.00384433,1200.531018822
c024,1,1,3,179760,180884,178957,1800.005573728,1800.705093626
c024,1,1,4,116925,117732,116779,2400.008406443,2400.866290383
c024,1,1,5,90639,91395,90550,3000.0094523969997,3001.001493205
c024,1,1,6,91030,91780,90416,3600.015386315,3601.13184435
c024,1,1,7,64643,65427,64701,4200.018471624,4201.230773509
c024,1,1,8,43661,44394,43932,4800.018520311,4801.351976319
c024,1,1,9,25628,26412,26273,5400.047964745,5401.537227883
c024,1,1,10,23508,24122,23940,6000.053123642,6001.689507885
c024,1,1,11,20980,21655,21440,6600.074635609,6601.851468598
# search time: 6600.075s
# total time: 13207.561s
c024,2,1,1,1234186,1234188,1146161,600.000187208,600.249131921
c024,2,1,2,314976,316480,307591,1200.001184159,1200.405957568
c024,2,1,3,187303,188365,185629,1800.001734095,1800.533988153
c024,2,1,4,126336,127348,125761,2400.002684603,2400.631326457
c024,2,1,5,96906,97745,96543,3000.004941055,3000.719055577
c024,2,1,6,87447,88242,87069,3600.006153977,3600.804452263
c024,2,1,7,60338,61121,60379,4200.01002637,4200.865748556
c024,2,1,8,38956,39805,39408,4800.016802929999,4800.978324746
c024,2,1,9,26273,27001,26767,5400.023382885,5401.115545654
c024,2,1,10,23505,24196,23980,6000.058965116,6001.239824464
c024,2,1,11,20714,21353,21160,6600.095618409,6601.368500006
# search time: 6600.096s
# total time: 19809.145s
c024,3,1,1,1286860,1286862,1203147,600.000023559,600.225770001
c024,3,1,2,315979,317902,308695,1200.0006357430002,1200.344838127
c024,3,1,3,190141,191033,188734,1800.0017509040003,1800.436989943
c024,3,1,4,126423,127293,125855,2400.004869927,2400.510998346
c024,3,1,5,96555,97336,96126,3000.005536885,3000.583236537
c024,3,1,6,87267,88000,86791,3600.0127492519996,3600.65648037
c024,3,1,7,60393,61181,60501,4200.015440048999,4200.714779729
c024,3,1,8,39396,40117,39734,4800.024268097999,4800.805152432
c024,3,1,9,26467,27064,26854,5400.036212490999,5400.895362918
c024,3,1,10,23365,23999,23817,6000.051878138999,6001.022129069
c024,3,1,11,20364,20996,20821,6600.1001059949995,6601.145769542
# search time: 6600.100s
# total time: 26410.664s
c024,4,1,1,1284431,1284433,1185188,600.000379837,600.182213079
c024,4,1,2,302533,304786,296575,1200.001217944,1200.289151927
c024,4,1,3,178610,179658,177763,1800.002385382,1800.371715394
c024,4,1,4,115733,116477,115456,2400.003698271,2400.430976806
c024,4,1,5,88718,89547,88707,3000.008162803,3000.500241347
c024,4,1,6,88798,89588,88541,3600.0134329909997,3600.565535663
c024,4,1,7,63240,64037,63235,4200.015808853,4200.625253654
c024,4,1,8,42637,43363,42907,4800.01715636,4800.701525747
c024,4,1,9,24890,25623,25481,5400.028138999,5400.76582013
c024,4,1,10,23440,24062,23894,6000.047953306999,6000.896916951
c024,4,1,11,20656,21323,21149,6600.061456644999,6600.969776926
# search time: 6600.061s
# total time: 33011.943s
