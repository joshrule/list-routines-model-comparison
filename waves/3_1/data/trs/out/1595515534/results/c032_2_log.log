    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c032_2.json out/1595515534/results/c032_2_best.csv out/1595515534/results/c032_2_predictions.csv out/1595515534/results/c032_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 1, 7, 9, 3]), o: IntList([0, 1, 7]) }
#   Datum { i: IntList([7, 6, 4, 4, 1, 8, 3]), o: IntList([4, 4, 1, 8, 3]) }
#   Datum { i: IntList([6, 3, 2, 9, 9, 2, 6, 2]), o: IntList([2, 9, 9, 2, 6, 2]) }
#   Datum { i: IntList([0, 9, 4, 6, 8, 2, 5, 7, 1]), o: IntList([0, 9, 4, 6, 8, 2, 5]) }
#   Datum { i: IntList([3, 7, 0, 5, 1, 4, 8, 6, 2, 9]), o: IntList([3, 7, 0, 5, 1, 4, 8, 6]) }
#   Datum { i: IntList([8, 9, 9]), o: IntList([8]) }
#   Datum { i: IntList([0, 8, 5, 4, 6, 1]), o: IntList([0, 8, 5, 4]) }
#   Datum { i: IntList([4, 7, 3, 3]), o: IntList([3, 3]) }
#   Datum { i: IntList([9, 8, 2, 9, 3, 6, 5, 8, 1]), o: IntList([2, 9, 3, 6, 5, 8, 1]) }
#   Datum { i: IntList([7, 7, 5, 5, 0, 7, 0, 5]), o: IntList([5, 5, 0, 7, 0, 5]) }
#   Datum { i: IntList([7, 2, 6, 0, 1, 1, 3, 4, 9, 8]), o: IntList([7, 2, 6, 0, 1, 1, 3, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c032,0,2,1,1265252,1265254,1181813,600.00298101,601.921493074
c032,0,2,2,376558,378738,368437,1200.0040144270001,1202.483159447
c032,0,2,3,161667,162768,161610,1800.0087901400002,1802.822246256
c032,0,2,4,112079,112951,111544,2400.0216873550003,2403.131826387
c032,0,2,5,64902,65865,65417,3000.0300706800003,3003.459293467
c032,0,2,6,47839,48599,48332,3600.0301155080006,3603.75822141
c032,0,2,7,44103,44945,44649,4200.035950653,4203.997321303
c032,0,2,8,36140,36928,36669,4800.043313463,4804.311075922
c032,0,2,9,34701,35474,35181,5400.04719403,5404.639118724
c032,0,2,10,28938,29654,29411,6000.077382808,6004.99072922
c032,0,2,11,25598,26275,26090,6600.08633181,6605.361956358
# search time: 6600.086s
# total time: 6605.622s
c032,1,2,1,1304421,1304423,1190682,600.000209258,600.323843732
c032,1,2,2,364427,366550,356081,1200.0044071040002,1200.590568458
c032,1,2,3,160094,161159,159938,1800.0047548440002,1800.777997505
c032,1,2,4,112333,113119,111664,2400.0057391950004,2400.928705569
c032,1,2,5,64654,65625,65156,3000.0119160490003,3001.112178089
c032,1,2,6,46148,46962,46650,3600.02360609,3601.280509097
c032,1,2,7,44672,45374,45081,4200.033194398,4201.444967753
c032,1,2,8,37038,37809,37530,4800.039999487,4801.60840416
c032,1,2,9,33190,33709,33460,5400.054737472001,5401.786165476
c032,1,2,10,28433,29186,29009,6000.065298363001,6001.989300154
c032,1,2,11,24805,25570,25404,6600.0691886760005,6602.133028059
# search time: 6600.069s
# total time: 13208.125s
c032,2,2,1,1289087,1289089,1179994,600.00014759,600.244080343
c032,2,2,2,376960,379379,368988,1200.000811052,1200.41054797
c032,2,2,3,160737,161796,160634,1800.0014023630001,1800.538274606
c032,2,2,4,112095,113015,111510,2400.002473167,2400.638906375
c032,2,2,5,64370,65211,64751,3000.00521606,3000.754762742
c032,2,2,6,46360,47031,46692,3600.018512788,3600.893913705
c032,2,2,7,44017,44686,44387,4200.021601429,4200.992573872
c032,2,2,8,35878,36571,36302,4800.028771392,4801.117175244
c032,2,2,9,34792,35359,35026,5400.081690053999,5401.258445467
c032,2,2,10,29390,30094,29847,6000.083267184,6001.397485115
c032,2,2,11,25562,26395,26191,6600.1018115199995,6601.539459044
# search time: 6600.102s
# total time: 19810.100s
c032,3,2,1,1248597,1248599,1166133,600.001193219,600.214137671
c032,3,2,2,375134,377047,366796,1200.00203251,1200.354854522
c032,3,2,3,158472,159564,158529,1800.005679249,1800.468630716
c032,3,2,4,112756,113566,112264,2400.007836168,2400.56644431
c032,3,2,5,63618,64498,63996,3000.017780741,3000.671245733
c032,3,2,6,46450,47155,46796,3600.018412504,3600.758824695
c032,3,2,7,44220,44898,44571,4200.0344370210005,4200.845190723
c032,3,2,8,36439,37162,36899,4800.038081507,4800.946462881
c032,3,2,9,34502,35251,34957,5400.0548991040005,5401.049201739
c032,3,2,10,28786,29464,29263,6000.075617740001,6001.163171165
c032,3,2,11,24930,25495,25366,6600.085285517001,6601.261451927
# search time: 6600.085s
# total time: 26411.587s
c032,4,2,1,1219672,1219674,1136821,600.000251754,600.181289173
c032,4,2,2,373346,374336,363819,1200.008457826,1200.310034396
c032,4,2,3,160354,161348,160277,1800.0147321680001,1800.404311212
c032,4,2,4,110603,111496,110157,2400.015082837,2400.482122121
c032,4,2,5,62349,63174,62692,3000.017608712,3000.545091971
c032,4,2,6,45276,46072,45763,3600.022466106,3600.619469404
c032,4,2,7,42721,43461,43115,4200.036685458001,4200.697283875
c032,4,2,8,35480,36236,35966,4800.048133756,4800.790017009
c032,4,2,9,33496,34242,33948,5400.061100921001,5400.880709146
c032,4,2,10,27603,28393,28151,6000.061462425001,6000.968574649
c032,4,2,11,24278,25015,24863,6600.085557219001,6601.073576001
# search time: 6600.086s
# total time: 33013.088s
