    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.28s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c022_1.json out/1595515534/results/c022_1_best.csv out/1595515534/results/c022_1_predictions.csv out/1595515534/results/c022_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 5, 3, 3]), o: IntList([6, 5, 5, 3, 3]) }
#   Datum { i: IntList([8, 4, 4, 4, 8, 4]), o: IntList([8, 5, 4, 4, 4, 8, 4]) }
#   Datum { i: IntList([1, 1]), o: IntList([1, 5, 1]) }
#   Datum { i: IntList([0, 2, 6]), o: IntList([0, 5, 2, 6]) }
#   Datum { i: IntList([1, 9, 0, 9, 1]), o: IntList([1, 5, 9, 0, 9, 1]) }
#   Datum { i: IntList([1, 7, 3, 0, 1, 2, 1, 3, 0, 3]), o: IntList([1, 5, 7, 3, 0, 1, 2, 1, 3, 0, 3]) }
#   Datum { i: IntList([7, 6, 1, 9, 6, 8, 3, 6]), o: IntList([7, 5, 6, 1, 9, 6, 8, 3, 6]) }
#   Datum { i: IntList([7, 4, 3, 1, 2, 1, 8]), o: IntList([7, 5, 4, 3, 1, 2, 1, 8]) }
#   Datum { i: IntList([6, 4, 9, 5, 2, 7, 8, 2, 4]), o: IntList([6, 5, 4, 9, 5, 2, 7, 8, 2, 4]) }
#   Datum { i: IntList([6, 0, 2, 0, 4, 8, 1, 7, 5, 3]), o: IntList([6, 5, 0, 2, 0, 4, 8, 1, 7, 5, 3]) }
#   Datum { i: IntList([9, 8, 6, 1, 5, 1, 4, 4, 3, 2]), o: IntList([9, 5, 8, 6, 1, 5, 1, 4, 4, 3, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c022,0,1,1,991131,991133,915032,600.00032265,602.372268204
c022,0,1,2,234793,236842,230351,1200.0011098670002,1202.982144167
c022,0,1,3,122926,123876,120024,1800.0039099780001,1803.436544805
c022,0,1,4,118582,119374,112953,2400.005891023,2403.756053776
c022,0,1,5,102441,103461,98672,3000.016632503,3004.061982931
c022,0,1,6,73152,74131,71524,3600.01949469,3604.448976137
c022,0,1,7,47239,48064,46548,4200.023222531,4204.829524332
c022,0,1,8,40595,41370,40128,4800.024971977,4805.229366368
c022,0,1,9,34439,35147,34182,5400.040972861,5405.686836108
c022,0,1,10,28898,29622,28739,6000.086784918,6006.217444962
c022,0,1,11,23605,24295,23587,6600.101363701,6606.714203949
# search time: 6600.101s
# total time: 6606.961s
c022,1,1,1,1017244,1017246,929679,600.001862875,600.309764197
c022,1,1,2,240563,242387,236160,1200.002238384,1200.568981844
c022,1,1,3,126411,127477,123806,1800.006981429,1800.754646143
c022,1,1,4,128086,128618,124527,2400.0108519200003,2400.908986196
c022,1,1,5,103095,104056,99635,3000.0150703060003,3001.051067392
c022,1,1,6,70972,71812,69437,3600.016348511,3601.227044486
c022,1,1,7,46652,47358,46034,4200.022458118,4201.405794784
c022,1,1,8,40590,41269,40094,4800.028417073,4801.602212062
c022,1,1,9,34542,35276,34211,5400.040102664,5401.838178531
c022,1,1,10,28309,29118,28258,6000.084348504,6002.077991153
c022,1,1,11,23732,24436,23649,6600.09433695,6602.298612974
# search time: 6600.094s
# total time: 13209.442s
c022,2,1,1,1051930,1051932,963231,600.000174625,600.213482656
c022,2,1,2,237935,240038,233664,1200.00175603,1200.383206344
c022,2,1,3,125785,126779,123013,1800.004743488,1800.502256061
c022,2,1,4,127055,127836,123435,2400.006253239,2400.611708448
c022,2,1,5,103929,104915,99984,3000.007506672,3000.701361156
c022,2,1,6,75811,76691,74070,3600.0132412330004,3600.808426727
c022,2,1,7,51858,52654,51108,4200.024399358001,4200.965922487
c022,2,1,8,44984,45691,44223,4800.041498679001,4801.101649021
c022,2,1,9,38101,38884,37713,5400.045202957001,5401.232636022
c022,2,1,10,31966,32779,31722,6000.057422083,6001.416732059
c022,2,1,11,26470,27187,26333,6600.058208739,6601.576150842
# search time: 6600.058s
# total time: 19811.300s
c022,3,1,1,1129178,1129180,1035534,600.000060499,600.192817315
c022,3,1,2,269513,271511,264278,1200.001062972,1200.316957261
c022,3,1,3,140866,142016,137751,1800.008368057,1800.421199374
c022,3,1,4,141174,142004,136987,2400.015766752,2400.510691952
c022,3,1,5,118923,119798,115674,3000.0179247140004,3000.592144659
c022,3,1,6,82004,82927,80115,3600.0224473360004,3600.697826473
c022,3,1,7,53124,53959,52457,4200.02523197,4200.800181111
c022,3,1,8,45720,46486,45099,4800.0267690010005,4800.903123274
c022,3,1,9,38053,38774,37702,5400.033804840001,5401.02726604
c022,3,1,10,31620,32380,31467,6000.052150345001,6001.140481245
c022,3,1,11,26149,26834,26074,6600.0624290840005,6601.305041639
# search time: 6600.062s
# total time: 26412.900s
c022,4,1,1,1130774,1130776,1031739,600.000218399,600.170453964
c022,4,1,2,268605,270773,263917,1200.0050726,1200.288985603
c022,4,1,3,142861,144035,139874,1800.022126482,1800.386581236
c022,4,1,4,143268,144066,139428,2400.022600068,2400.458841026
c022,4,1,5,119051,119955,115399,3000.030257425,3000.53037958
c022,4,1,6,82834,83702,80727,3600.039230059,3600.603255844
c022,4,1,7,53996,54776,53250,4200.042624088001,4200.663975568
c022,4,1,8,45730,46475,45060,4800.047146753001,4800.75402374
c022,4,1,9,38922,39686,38566,5400.0494177890005,5400.811820173
c022,4,1,10,31518,32331,31396,6000.061926258,6000.877486093
c022,4,1,11,26203,26895,26129,6600.078752221,6601.004022971
# search time: 6600.079s
# total time: 33014.190s
