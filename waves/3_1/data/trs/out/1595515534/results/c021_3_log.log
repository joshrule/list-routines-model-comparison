    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.16s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c021_3.json out/1595515534/results/c021_3_best.csv out/1595515534/results/c021_3_predictions.csv out/1595515534/results/c021_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 2, 3]), o: IntList([0, 8, 2, 3]) }
#   Datum { i: IntList([4, 9, 5, 1, 7, 3]), o: IntList([4, 8, 9, 5, 1, 7, 3]) }
#   Datum { i: IntList([6, 6, 0, 5, 2, 6, 0, 3, 2]), o: IntList([6, 8, 6, 0, 5, 2, 6, 0, 3, 2]) }
#   Datum { i: IntList([2, 9, 1, 7, 4, 6, 0]), o: IntList([2, 8, 9, 1, 7, 4, 6, 0]) }
#   Datum { i: IntList([1, 8, 1, 1, 6, 2, 1, 4, 4, 3]), o: IntList([1, 8, 8, 1, 1, 6, 2, 1, 4, 4, 3]) }
#   Datum { i: IntList([7, 9, 1, 2, 6, 3, 0, 4, 7, 5]), o: IntList([7, 8, 9, 1, 2, 6, 3, 0, 4, 7, 5]) }
#   Datum { i: IntList([1, 6, 9, 3]), o: IntList([1, 8, 6, 9, 3]) }
#   Datum { i: IntList([0, 8, 6, 4, 0]), o: IntList([0, 8, 8, 6, 4, 0]) }
#   Datum { i: IntList([5, 5, 5, 5, 5, 5, 5, 5]), o: IntList([5, 8, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([7, 4]), o: IntList([7, 8, 4]) }
#   Datum { i: IntList([9, 2, 1, 9, 3, 3, 1, 8, 9, 2]), o: IntList([9, 8, 2, 1, 9, 3, 3, 1, 8, 9, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c021,0,3,1,1041123,1041125,954894,600.000108726,602.305401244
c021,0,3,2,262674,265076,257927,1200.0017275589998,1202.91574892
c021,0,3,3,127713,128793,121673,1800.0023757289998,1803.225845898
c021,0,3,4,81189,82292,78808,2400.0028255529996,2403.555778214
c021,0,3,5,55066,55878,54210,3000.0029268459994,3004.030332551
c021,0,3,6,41541,42320,41022,3600.0197374539994,3604.589665279
c021,0,3,7,33512,34299,33282,4200.023379232,4205.143793844
c021,0,3,8,32139,32952,31948,4800.038545818999,4805.584622711
c021,0,3,9,30428,31111,30142,5400.047085038999,5405.975269856
c021,0,3,10,22228,23063,22380,6000.049346204999,6006.249239513
c021,0,3,11,24469,25230,24394,6600.052969043999,6606.673107693
# search time: 6600.053s
# total time: 6606.953s
c021,1,3,1,1048772,1048774,966713,600.000001349,600.340154877
c021,1,3,2,277950,280215,272621,1200.001698215,1200.600985174
c021,1,3,3,138357,139461,133998,1800.008791238,1800.777319272
c021,1,3,4,85411,86360,83039,2400.009290906,2400.975388795
c021,1,3,5,51956,52860,51345,3000.010886086,3001.219282197
c021,1,3,6,37710,38505,37537,3600.016596355,3601.513116036
c021,1,3,7,28842,29594,28843,4200.018018676999,4201.826063394
c021,1,3,8,29377,30119,29197,4800.043157626999,4802.153615337
c021,1,3,9,26836,27567,26645,5400.0701205079995,5402.396432818
c021,1,3,10,21280,21960,21303,6000.088843517,6002.560508203
c021,1,3,11,22815,23345,22488,6600.100358808,6602.839388056
# search time: 6600.100s
# total time: 13210.067s
c021,2,3,1,936358,936360,862751,600.000148366,600.263752757
c021,2,3,2,262049,264469,257307,1200.003016861,1200.444848636
c021,2,3,3,124419,125410,119562,1800.006831313,1800.561984662
c021,2,3,4,76188,77145,73175,2400.018583402,2400.673599065
c021,2,3,5,49730,50533,48969,3000.0229050919997,3000.863425609
c021,2,3,6,38611,39470,38344,3600.0476259099996,3601.066034823
c021,2,3,7,31460,32217,31261,4200.062850605999,4201.25232749
c021,2,3,8,30635,31331,30458,4800.068537415999,4801.39898744
c021,2,3,9,29581,30341,29334,5400.092201246999,5401.602170276
c021,2,3,10,23269,24012,23272,6000.098875371999,6001.67809364
c021,2,3,11,24338,24955,24196,6600.099571121999,6601.850668685
# search time: 6600.100s
# total time: 19812.192s
c021,3,3,1,956854,956856,897474,600.000178034,600.202229425
c021,3,3,2,272532,274606,267409,1200.0023171120001,1200.341519194
c021,3,3,3,136469,137711,132446,1800.0041467700003,1800.432687168
c021,3,3,4,83112,84219,80364,2400.0054263220004,2400.539699418
c021,3,3,5,52975,53933,52403,3000.0086934990004,3000.664093811
c021,3,3,6,39301,40089,39003,3600.0308106440007,3600.843092622
c021,3,3,7,34603,35406,34319,4200.0359530000005,4201.080325509
c021,3,3,8,35210,35976,34876,4800.037492309,4801.220305516
c021,3,3,9,33225,33961,32711,5400.042636203,5401.327502705
c021,3,3,10,24510,25237,24494,6000.058635804,6001.464303458
c021,3,3,11,27186,27861,26943,6600.0706542259995,6601.582341231
# search time: 6600.071s
# total time: 26414.025s
c021,4,3,1,1103365,1103367,1031211,600.001742894,600.185940681
c021,4,3,2,307631,309960,301749,1200.003255042,1200.308555652
c021,4,3,3,152851,154049,148079,1800.009062773,1800.395068118
c021,4,3,4,94823,95853,91700,2400.014893507,2400.493959768
c021,4,3,5,58722,59523,57533,3000.015007668,3000.588974057
c021,4,3,6,43664,44436,43302,3600.017458284,3600.713667752
c021,4,3,7,34620,35342,34453,4200.02941215,4200.86051595
c021,4,3,8,34550,35204,34151,4800.02990759,4800.971325339
c021,4,3,9,33254,34023,32849,5400.032462141,5401.068326418
c021,4,3,10,24977,25620,24829,6000.039815249,6001.139270872
c021,4,3,11,26823,27507,26631,6600.044538098,6601.216471279
# search time: 6600.045s
# total time: 33015.478s
