    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c036_2.json out/1595515534/results/c036_2_best.csv out/1595515534/results/c036_2_predictions.csv out/1595515534/results/c036_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4, 0, 4]), o: IntList([1, 0, 4, 4]) }
#   Datum { i: IntList([6, 0, 8, 2, 5, 2, 1, 7, 3, 4]), o: IntList([2, 0, 8, 6, 5, 2, 1, 7, 3, 4]) }
#   Datum { i: IntList([9, 6, 9, 6, 9, 6]), o: IntList([6, 6, 9, 9, 9, 6]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 6, 1]), o: IntList([5, 5, 8, 8, 3, 6, 1]) }
#   Datum { i: IntList([0, 4, 1, 9, 7]), o: IntList([0, 1, 4, 9, 7]) }
#   Datum { i: IntList([5, 3, 2, 9, 7, 3, 3, 0]), o: IntList([5, 2, 3, 9, 7, 3, 3, 0]) }
#   Datum { i: IntList([7, 0, 4, 1, 2, 9, 8, 6, 5]), o: IntList([1, 0, 4, 7, 2, 9, 8, 6, 5]) }
#   Datum { i: IntList([5, 3, 3, 2, 4]), o: IntList([2, 3, 3, 5, 4]) }
#   Datum { i: IntList([6, 2, 9, 1, 4, 3, 0]), o: IntList([1, 2, 9, 6, 4, 3, 0]) }
#   Datum { i: IntList([8, 8, 7, 8]), o: IntList([8, 7, 8, 8]) }
#   Datum { i: IntList([7, 5, 0, 7, 1, 2]), o: IntList([7, 0, 5, 7, 1, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c036,0,2,1,1370684,1370686,1271373,600.000263505,601.857160518
c036,0,2,2,341263,342452,332676,1200.00358484,1202.36651363
c036,0,2,3,124450,125521,124511,1800.029126398,1802.690170491
c036,0,2,4,99167,100101,99191,2400.03653356,2402.955151233
c036,0,2,5,68594,69450,68800,3000.036847369,3003.178873619
c036,0,2,6,60672,61407,59977,3600.054711538,3603.510712002
c036,0,2,7,48867,49576,48449,4200.065513159,4203.772284049
c036,0,2,8,33610,34331,34105,4800.073766396,4804.013936329
c036,0,2,9,29549,30244,29975,5400.079965236,5404.28848014
c036,0,2,10,23025,23636,23546,6000.090696868,6004.618161667
c036,0,2,11,22892,23426,23196,6600.095012881,6604.870335374
# search time: 6600.095s
# total time: 6605.096s
c036,1,2,1,1299541,1299543,1192834,600.000107992,600.303267417
c036,1,2,2,338553,340938,330872,1200.001084738,1200.510856682
c036,1,2,3,123536,124569,123575,1800.00663313,1800.6614575
c036,1,2,4,96734,97566,96698,2400.008712194,2400.782549541
c036,1,2,5,66379,67168,66643,3000.015220782,3000.916642776
c036,1,2,6,59821,60552,59256,3600.0245393940004,3601.056420295
c036,1,2,7,47862,48561,47531,4200.056259491001,4201.204157187
c036,1,2,8,33075,33878,33626,4800.072629932,4801.383275884
c036,1,2,9,29212,29888,29634,5400.0982902040005,5401.591520982
c036,1,2,10,23468,24081,23974,6000.104539136,6001.77496901
c036,1,2,11,23539,24246,24093,6600.116093119001,6601.98806964
# search time: 6600.116s
# total time: 13207.434s
c036,2,2,1,1186912,1186914,1105238,600.003396705,600.228035857
c036,2,2,2,340851,342778,332788,1200.004623649,1200.389288301
c036,2,2,3,123674,124685,123807,1800.008395347,1800.507747802
c036,2,2,4,97586,98318,97435,2400.008990937,2400.600204674
c036,2,2,5,66939,67494,66697,3000.01365701,3000.700101806
c036,2,2,6,60549,61310,59805,3600.0159212089998,3600.822606524
c036,2,2,7,47596,48519,47469,4200.0362897899995,4200.936414824
c036,2,2,8,32851,33621,33381,4800.044970194,4801.028549412
c036,2,2,9,29411,30183,29910,5400.0453682219995,5401.157102182
c036,2,2,10,23362,24091,23987,6000.048154487,6001.260643953
c036,2,2,11,23695,24338,24200,6600.0647197299995,6601.390598008
# search time: 6600.065s
# total time: 19809.191s
c036,3,2,1,1284735,1284737,1197665,600.000440423,600.217799245
c036,3,2,2,338032,339938,330302,1200.0036453369999,1200.34777882
c036,3,2,3,123643,124659,123738,1800.0114853549999,1800.436925972
c036,3,2,4,96131,96849,96015,2400.01396325,2400.515629615
c036,3,2,5,67743,68481,67880,3000.014679432,3000.577497904
c036,3,2,6,59650,60444,59112,3600.0150610759997,3600.676788775
c036,3,2,7,47698,48442,47393,4200.029731189,4200.776166377
c036,3,2,8,32827,33634,33423,4800.0557254039995,4800.885347084
c036,3,2,9,29335,30097,29828,5400.056586133999,5400.989198622
c036,3,2,10,22997,23613,23515,6000.078486393999,6001.082966027
c036,3,2,11,23549,24153,24020,6600.093960886999,6601.18587318
# search time: 6600.094s
# total time: 26410.750s
c036,4,2,1,1245643,1245645,1158244,600.000221314,600.178298001
c036,4,2,2,331374,333391,323973,1200.00093176,1200.341522534
c036,4,2,3,121793,122793,121838,1800.001064907,1800.416889382
c036,4,2,4,95183,95942,95122,2400.001175595,2400.499699425
c036,4,2,5,67317,68102,67457,3000.002603514,3000.563335143
c036,4,2,6,58908,59745,58331,3600.0067886059996,3600.637155948
c036,4,2,7,47259,47993,47006,4200.0158896679995,4200.726177601
c036,4,2,8,32432,33240,32988,4800.052979042,4800.864362529
c036,4,2,9,28809,29541,29258,5400.056899544999,5400.919552526
c036,4,2,10,22756,23409,23323,6000.068977045999,6001.032801805
c036,4,2,11,24058,24671,24518,6600.074864171,6601.078072262
# search time: 6600.075s
# total time: 33012.208s
