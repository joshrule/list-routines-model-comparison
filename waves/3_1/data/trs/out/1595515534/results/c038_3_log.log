    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c038_3.json out/1595515534/results/c038_3_best.csv out/1595515534/results/c038_3_predictions.csv out/1595515534/results/c038_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c038,0,3,1,1363424,1363426,1253236,600.000065205,601.943459001
c038,0,3,2,356938,359226,349480,1200.0004594840002,1202.414798193
c038,0,3,3,116779,117953,117030,1800.0030424970003,1802.802478092
c038,0,3,4,96670,97376,96838,2400.0059773890002,2403.094315309
c038,0,3,5,68431,69129,68689,3000.0059947360005,3003.390289941
c038,0,3,6,62867,63546,63175,3600.0126195980006,3603.65141884
c038,0,3,7,46077,46754,46388,4200.016012496,4203.949932918
c038,0,3,8,36541,37245,36873,4800.016718607,4804.276979988
c038,0,3,9,31571,32208,31790,5400.028457018,5404.658010409
c038,0,3,10,25934,26599,26225,6000.052223371,6004.991806175
c038,0,3,11,24042,24648,24324,6600.070963665999,6605.285687081
# search time: 6600.071s
# total time: 6605.593s
c038,1,3,1,1341652,1341654,1247829,600.001045696,600.326966808
c038,1,3,2,355358,357323,347557,1200.00119943,1200.528104713
c038,1,3,3,122848,123969,122647,1800.0049822320002,1800.676704498
c038,1,3,4,100774,101593,100776,2400.0111912300003,2400.834274825
c038,1,3,5,72874,73643,72988,3000.0113352160006,3000.953910446
c038,1,3,6,64791,65510,64979,3600.0122103590006,3601.090930145
c038,1,3,7,47501,48211,47795,4200.023879998001,4201.230875514
c038,1,3,8,36454,37220,36841,4800.038142262,4801.395505375
c038,1,3,9,31643,32319,31912,5400.048305285,5401.548324288
c038,1,3,10,25190,25853,25543,6000.070430338001,6001.779917524
c038,1,3,11,23174,23673,23379,6600.080720609001,6601.905455965
# search time: 6600.081s
# total time: 13207.726s
c038,2,3,1,1256665,1256667,1169092,600.001296863,600.237713952
c038,2,3,2,356289,358573,348755,1200.002393883,1200.396716068
c038,2,3,3,120870,121992,120755,1800.0030087559999,1800.515759184
c038,2,3,4,99347,100075,99261,2400.0046051219997,2400.624764589
c038,2,3,5,71403,72154,71496,3000.0047706349997,3000.726657869
c038,2,3,6,64962,65702,65172,3600.0157776859996,3600.827401732
c038,2,3,7,47600,48366,47937,4200.025840179999,4200.942690057
c038,2,3,8,35963,36551,36182,4800.032169634,4801.034642622
c038,2,3,9,31268,31878,31483,5400.039934087999,5401.187696776
c038,2,3,10,25195,25654,25338,6000.0500588899995,6001.307128697
c038,2,3,11,23655,24281,23970,6600.062244358,6601.396789185
# search time: 6600.062s
# total time: 19809.478s
c038,3,3,1,1346330,1346332,1240956,600.00016008,600.222682337
c038,3,3,2,346759,348955,339612,1200.005122213,1200.35123363
c038,3,3,3,111337,112512,111618,1800.007025949,1800.466059112
c038,3,3,4,95357,96098,95604,2400.011210745,2400.559547818
c038,3,3,5,68715,69460,69023,3000.012383186,3000.6654127
c038,3,3,6,61846,62502,62093,3600.017404282,3600.758280598
c038,3,3,7,45542,46289,45966,4200.0234013869995,4200.855299851
c038,3,3,8,35782,36488,36107,4800.044321470999,4800.968243485
c038,3,3,9,31132,31823,31395,5400.053117689,5401.092823629
c038,3,3,10,25090,25801,25448,6000.079121051,6001.235716158
c038,3,3,11,23740,24340,24011,6600.080572272,6601.358555035
# search time: 6600.081s
# total time: 26411.227s
c038,4,3,1,1328136,1328138,1238281,600.000233827,600.206963528
c038,4,3,2,359099,361187,351404,1200.001505798,1200.319899211
c038,4,3,3,115079,116053,115142,1800.0033128619998,1800.406319025
c038,4,3,4,93761,94435,93936,2400.005138622,2400.469260053
c038,4,3,5,66713,67486,67073,3000.010162919,3000.563746683
c038,4,3,6,60814,61474,61098,3600.0150781579996,3600.646487158
c038,4,3,7,44153,44927,44615,4200.020045788,4200.727529973
c038,4,3,8,35137,35946,35570,4800.029854423,4800.836060807
c038,4,3,9,30707,31356,30946,5400.035404844,5400.947680902
c038,4,3,10,24599,25306,24946,6000.042659985001,6001.049368803
c038,4,3,11,23254,23871,23563,6600.065038502001,6601.161030523
# search time: 6600.065s
# total time: 33012.781s
