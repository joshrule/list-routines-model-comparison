    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c029_3.json out/1595515534/results/c029_3_best.csv out/1595515534/results/c029_3_predictions.csv out/1595515534/results/c029_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 0, 4, 1, 7]), o: IntList([4, 1, 7]) }
#   Datum { i: IntList([2, 7, 6, 2, 0, 6, 7, 6, 5]), o: IntList([6, 2, 0, 6, 7, 6, 5]) }
#   Datum { i: IntList([2, 3, 1, 6, 0, 9, 5, 7, 4, 8]), o: IntList([1, 6, 0, 9, 5, 7, 4, 8]) }
#   Datum { i: IntList([5, 9, 1, 3, 0, 0, 3]), o: IntList([1, 3, 0, 0, 3]) }
#   Datum { i: IntList([2, 2]), o: IntList([]) }
#   Datum { i: IntList([8, 1, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([5, 1, 0, 0, 5, 8, 1, 8, 3, 0]), o: IntList([0, 0, 5, 8, 1, 8, 3, 0]) }
#   Datum { i: IntList([5, 2, 2, 2, 5, 2]), o: IntList([2, 2, 5, 2]) }
#   Datum { i: IntList([7, 5, 1, 9, 4, 4, 4, 8]), o: IntList([1, 9, 4, 4, 4, 8]) }
#   Datum { i: IntList([6, 6, 6]), o: IntList([6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c029,0,3,1,1262406,1262408,1175960,600.000055717,601.874800476
c029,0,3,2,378144,379542,369604,1200.000074614,1202.377930608
c029,0,3,3,171197,172325,165701,1800.001026084,1802.69496978
c029,0,3,4,86670,87671,85254,2400.002328048,2403.114210101
c029,0,3,5,80672,81568,78979,3000.002572894,3003.420721105
c029,0,3,6,78551,79250,76285,3600.005753984,3603.860258397
c029,0,3,7,74087,74999,72115,4200.010057483,4204.299330645
c029,0,3,8,71913,72612,69381,4800.019879417,4804.736566799
c029,0,3,9,56708,57508,54945,5400.022190034,5405.12370015
c029,0,3,10,50957,51918,49695,6000.0269484870005,6005.587430694
c029,0,3,11,47337,48157,46057,6600.03817762,6606.041760775
# search time: 6600.038s
# total time: 6606.287s
c029,1,3,1,1236587,1236589,1152325,600.000123089,600.278208294
c029,1,3,2,374565,376319,366564,1200.0010252,1200.514663919
c029,1,3,3,171913,173079,166428,1800.0065614129999,1800.650948751
c029,1,3,4,86671,87724,85162,2400.0156178419998,2400.859350548
c029,1,3,5,78757,79738,77111,3000.019490918,3001.000623445
c029,1,3,6,78145,78842,75950,3600.022157537,3601.181160047
c029,1,3,7,74112,74984,72199,4200.032964534,4201.392411199
c029,1,3,8,71420,72249,69383,4800.042573658,4801.594415214
c029,1,3,9,55985,56836,54416,5400.045261217,5401.826367459
c029,1,3,10,50174,50993,48764,6000.04855014,6002.017683522
c029,1,3,11,46718,47562,45437,6600.060517862,6602.242844184
# search time: 6600.061s
# total time: 13208.869s
c029,2,3,1,1266054,1266056,1171751,600.000067179,600.232066006
c029,2,3,2,371616,373005,363383,1200.005671768,1200.392828142
c029,2,3,3,171960,173033,166345,1800.006482196,1800.499799997
c029,2,3,4,85362,86490,83721,2400.008637823,2400.65633669
c029,2,3,5,79687,80705,78203,3000.0130074599997,3000.796395052
c029,2,3,6,79084,79824,76891,3600.0136480759998,3600.93672601
c029,2,3,7,74428,75460,72601,4200.017479194999,4201.109675907
c029,2,3,8,71197,71984,68998,4800.018623300999,4801.234397819
c029,2,3,9,56583,57370,55079,5400.024239000999,5401.388076137
c029,2,3,10,49959,50784,48654,6000.026108874999,6001.536963682
c029,2,3,11,46852,47824,45824,6600.039696718999,6601.752221084
# search time: 6600.040s
# total time: 19810.959s
c029,3,3,1,1299883,1299885,1207519,600.000390444,600.2254462
c029,3,3,2,371237,373445,363946,1200.000896404,1200.367712923
c029,3,3,3,171405,172645,166149,1800.003353641,1800.453086674
c029,3,3,4,86346,87461,84723,2400.004606239,2400.563018458
c029,3,3,5,79126,79880,77507,3000.01205474,3000.664879269
c029,3,3,6,78812,79450,76403,3600.019689045,3600.778331714
c029,3,3,7,72948,73792,70949,4200.021702832,4200.873359539
c029,3,3,8,70887,71784,68981,4800.022545772001,4800.997585957
c029,3,3,9,56077,56968,54528,5400.030920250001,5401.108397391
c029,3,3,10,50510,51312,49105,6000.039800815001,6001.241340144
c029,3,3,11,45922,46791,44880,6600.060171061002,6601.394711535
# search time: 6600.060s
# total time: 26412.704s
c029,4,3,1,1255076,1255078,1151103,600.000119753,600.189286236
c029,4,3,2,371490,373728,363831,1200.002096282,1200.306902841
c029,4,3,3,170064,171155,164525,1800.0041110309999,1800.389317456
c029,4,3,4,83558,84607,82069,2400.0114387959998,2400.509040681
c029,4,3,5,77758,78724,76276,3000.017829254,3000.591129217
c029,4,3,6,78106,78950,75983,3600.019818149,3600.665764087
c029,4,3,7,72848,73607,70713,4200.035983265,4200.781572228
c029,4,3,8,69857,70746,67927,4800.053110827001,4800.889728177
c029,4,3,9,54856,55753,53463,5400.060560336001,5400.996140399
c029,4,3,10,49404,50240,48117,6000.068671005001,6001.076426553
c029,4,3,11,44897,45728,43782,6600.074923114002,6601.175207597
# search time: 6600.075s
# total time: 33014.223s
