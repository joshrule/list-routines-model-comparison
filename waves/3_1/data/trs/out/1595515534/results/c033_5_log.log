    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c033_5.json out/1595515534/results/c033_5_best.csv out/1595515534/results/c033_5_predictions.csv out/1595515534/results/c033_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 4, 6, 4, 8, 8, 5]), o: IntList([4, 4, 6, 6, 8, 8, 5]) }
#   Datum { i: IntList([7, 8, 4, 6, 1, 2, 9, 5]), o: IntList([6, 8, 4, 7, 1, 2, 9, 5]) }
#   Datum { i: IntList([8, 3, 8, 3]), o: IntList([3, 3, 8, 8]) }
#   Datum { i: IntList([8, 1, 8, 5, 5, 2]), o: IntList([5, 1, 8, 8, 5, 2]) }
#   Datum { i: IntList([0, 3, 2, 1, 0, 0, 1, 7, 4]), o: IntList([1, 3, 2, 0, 0, 0, 1, 7, 4]) }
#   Datum { i: IntList([7, 0, 2, 2, 7]), o: IntList([2, 0, 2, 7, 7]) }
#   Datum { i: IntList([2, 1, 9, 9, 3, 9, 3, 2]), o: IntList([9, 1, 9, 2, 3, 9, 3, 2]) }
#   Datum { i: IntList([1, 9, 6, 2]), o: IntList([2, 9, 6, 1]) }
#   Datum { i: IntList([2, 3, 1, 0, 1, 3, 4, 1, 0, 4]), o: IntList([0, 3, 1, 2, 1, 3, 4, 1, 0, 4]) }
#   Datum { i: IntList([7, 9, 1, 5, 6, 3, 0]), o: IntList([5, 9, 1, 7, 6, 3, 0]) }
#   Datum { i: IntList([7, 8, 6, 5, 6, 7, 7, 5, 6, 5]), o: IntList([5, 8, 6, 7, 6, 7, 7, 5, 6, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c033,0,5,1,1202783,1202785,1102571,600.00016865,601.849600569
c033,0,5,2,227669,229834,223583,1200.004247096,1202.376909677
c033,0,5,3,121263,122262,118482,1800.006004895,1802.777804341
c033,0,5,4,112958,113460,109378,2400.00829143,2403.109731576
c033,0,5,5,82006,82960,80144,3000.012958376,3003.518905225
c033,0,5,6,64854,65716,63566,3600.017172816,3603.9896787
c033,0,5,7,57806,58652,56662,4200.021087374,4204.488776266
c033,0,5,8,46537,47326,45937,4800.0263368099995,4804.913418524
c033,0,5,9,44517,45205,43688,5400.048744186,5405.370293759
c033,0,5,10,38181,38894,37544,6000.081693251,6005.829270899
c033,0,5,11,31603,32273,31189,6600.083180607,6606.385378751
# search time: 6600.083s
# total time: 6606.598s
c033,1,5,1,1211265,1211267,1095295,600.000164666,600.286717397
c033,1,5,2,228027,228838,222869,1200.001112772,1200.517907517
c033,1,5,3,118355,119336,115899,1800.001760185,1800.697921936
c033,1,5,4,110920,111700,108197,2400.004943029,2400.863330247
c033,1,5,5,82865,83891,81300,3000.021594086,3001.057222277
c033,1,5,6,64864,65661,63551,3600.0221469549997,3601.269599707
c033,1,5,7,57914,58708,56852,4200.026613532999,4201.49224766
c033,1,5,8,45866,46728,45354,4800.037739232999,4801.725574509
c033,1,5,9,44456,45273,43798,5400.047272053,5401.9659432
c033,1,5,10,37546,38235,37005,6000.05766695,6002.184999944
c033,1,5,11,30750,31462,30467,6600.063916974999,6602.470924191
# search time: 6600.064s
# total time: 13209.404s
c033,2,5,1,1207716,1207718,1111388,600.002650547,600.227155855
c033,2,5,2,223637,225905,219551,1200.005545232,1200.388905984
c033,2,5,3,119341,120359,116709,1800.026279869,1800.532661956
c033,2,5,4,109352,110213,106788,2400.026326238,2400.654866946
c033,2,5,5,82230,83017,80280,3000.028242434,3000.814491004
c033,2,5,6,64473,65265,62866,3600.0301544159997,3600.940280694
c033,2,5,7,57578,58426,56505,4200.034970444,4201.108280063
c033,2,5,8,45644,46170,44832,4800.03588566,4801.256826113
c033,2,5,9,44346,45198,43724,5400.038805886999,5401.450289058
c033,2,5,10,36688,37491,36352,6000.050464087999,6001.64410041
c033,2,5,11,30324,31113,30184,6600.0530794179995,6601.784554846
# search time: 6600.053s
# total time: 19811.480s
c033,3,5,1,1204531,1204533,1107202,600.001866183,600.192305325
c033,3,5,2,220027,222079,215568,1200.0040258959998,1200.316852367
c033,3,5,3,118313,119432,115879,1800.0056300009996,1800.409402372
c033,3,5,4,108300,109002,105310,2400.0082632539998,2400.518681753
c033,3,5,5,81396,82285,79460,3000.008922314,3000.614082146
c033,3,5,6,63793,64595,62110,3600.011915914,3600.733071042
c033,3,5,7,57442,58225,56147,4200.018897609,4200.83050363
c033,3,5,8,46184,47010,45580,4800.024433338001,4800.934803158
c033,3,5,9,45094,45910,44453,5400.0271793,5401.045743901
c033,3,5,10,38166,38905,37687,6000.028003016,6001.182898427
c033,3,5,11,31552,32334,31296,6600.033795339,6601.363450681
# search time: 6600.034s
# total time: 26413.231s
c033,4,5,1,1217381,1217383,1115680,600.000172603,600.184263548
c033,4,5,2,221522,223703,217081,1200.001566546,1200.295615328
c033,4,5,3,120826,121837,118098,1800.004429191,1800.390400427
c033,4,5,4,108931,109683,104877,2400.004614583,2400.463574292
c033,4,5,5,81789,82635,79766,3000.009143648,3000.553465188
c033,4,5,6,64433,65234,62798,3600.0170822890004,3600.65631201
c033,4,5,7,57424,58146,56304,4200.028100075,4200.757820397
c033,4,5,8,45914,46756,45332,4800.030921936001,4800.859069235
c033,4,5,9,45481,46194,44638,5400.036328977,5400.958863031
c033,4,5,10,38156,38884,37581,6000.070545527,6001.097899901
c033,4,5,11,30729,31427,30434,6600.074994837,6601.234565033
# search time: 6600.075s
# total time: 33014.749s
