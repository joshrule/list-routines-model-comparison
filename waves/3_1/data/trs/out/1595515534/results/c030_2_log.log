    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c030_2.json out/1595515534/results/c030_2_best.csv out/1595515534/results/c030_2_predictions.csv out/1595515534/results/c030_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 0, 1]), o: IntList([1]) }
#   Datum { i: IntList([2, 5, 7, 8, 2, 2, 9, 3, 1, 0]), o: IntList([2, 5, 7, 8, 2, 2, 9, 3]) }
#   Datum { i: IntList([5, 3]), o: IntList([]) }
#   Datum { i: IntList([9, 7, 2, 5, 9, 4, 6, 8, 4]), o: IntList([9, 7, 2, 5, 9, 4, 6]) }
#   Datum { i: IntList([6, 4, 8, 1, 0]), o: IntList([6, 4, 8]) }
#   Datum { i: IntList([5, 7, 1, 8, 9, 4, 1, 6, 2, 3]), o: IntList([5, 7, 1, 8, 9, 4, 1, 6]) }
#   Datum { i: IntList([6, 4, 1, 6, 7, 2, 5, 8]), o: IntList([6, 4, 1, 6, 7, 2]) }
#   Datum { i: IntList([5, 4, 5, 0]), o: IntList([5, 4]) }
#   Datum { i: IntList([0, 0, 3, 3, 0, 3, 0]), o: IntList([0, 0, 3, 3, 0]) }
#   Datum { i: IntList([6, 2, 9, 7, 8, 3, 8, 5, 0]), o: IntList([6, 2, 9, 7, 8, 3, 8]) }
#   Datum { i: IntList([9, 7, 4, 3, 8, 1]), o: IntList([9, 7, 4, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,2,1,1156119,1156121,1063188,600.000005928,602.563753693
c030,0,2,2,489491,491377,476774,1200.001001818,1203.154039896
c030,0,2,3,129288,130456,129441,1800.0069026190001,1803.5218162
c030,0,2,4,138919,139673,135868,2400.010113398,2403.803421919
c030,0,2,5,70743,71567,69450,3000.0109193010003,3004.194726892
c030,0,2,6,58026,58712,56952,3600.0182685190002,3604.472139362
c030,0,2,7,50191,51044,49424,4200.026180908,4204.865571538
c030,0,2,8,44105,44825,42907,4800.026564952001,4805.169098851
c030,0,2,9,41385,42154,40457,5400.035905791001,5405.48495159
c030,0,2,10,36339,37104,35574,6000.038057560001,6005.839924054
c030,0,2,11,31034,31810,30576,6600.0444111000015,6606.203990357
# search time: 6600.044s
# total time: 6606.450s
c030,1,2,1,1263399,1263401,1169416,600.000304567,600.339016787
c030,1,2,2,545006,547141,531401,1200.001664456,1200.602196726
c030,1,2,3,142223,143391,142161,1800.004871189,1800.798464519
c030,1,2,4,157812,158554,154236,2400.007650268,2400.934395833
c030,1,2,5,80131,81103,78800,3000.019219738,3001.111921926
c030,1,2,6,65453,66170,64259,3600.02365194,3601.272734942
c030,1,2,7,53317,54160,52378,4200.029226269,4201.450708415
c030,1,2,8,43307,43894,42031,4800.047478287,4801.688100752
c030,1,2,9,40790,41401,39618,5400.060117012,5401.84455354
c030,1,2,10,34758,35591,34063,6000.068736007,6002.02639351
c030,1,2,11,29936,30794,29571,6600.072074809999,6602.207933667
# search time: 6600.072s
# total time: 13209.132s
c030,2,2,1,1274372,1274374,1190937,600.000276458,600.262467313
c030,2,2,2,552327,554437,538731,1200.0009378280001,1200.453834321
c030,2,2,3,147637,148713,147443,1800.0037569830001,1800.568775509
c030,2,2,4,158021,158814,154627,2400.013429736,2400.676201743
c030,2,2,5,80105,81122,78796,3000.020340629,3000.811853404
c030,2,2,6,65434,66173,64176,3600.0383880950003,3600.93867579
c030,2,2,7,53943,54733,52996,4200.049949293,4201.096376923
c030,2,2,8,43669,44474,42716,4800.058021094001,4801.246817429
c030,2,2,9,40939,41685,40052,5400.068913241001,5401.392791281
c030,2,2,10,36102,36822,35394,6000.076380818001,6001.508416254
c030,2,2,11,30584,31417,30265,6600.095401123001,6601.691797101
# search time: 6600.095s
# total time: 19811.056s
c030,3,2,1,1266995,1266997,1170302,600.000070859,600.201679282
c030,3,2,2,544092,546274,530809,1200.001070654,1200.363059116
c030,3,2,3,139821,140998,139785,1800.003082058,1800.471645178
c030,3,2,4,157953,158729,154537,2400.003774293,2400.553962131
c030,3,2,5,80790,81787,79478,3000.004916779,3000.655924165
c030,3,2,6,65227,65963,64066,3600.014633509,3600.741879077
c030,3,2,7,52529,53351,51666,4200.01659992,4200.859880671
c030,3,2,8,43819,44663,42879,4800.022124309,4800.969944106
c030,3,2,9,40099,40960,39266,5400.024003403,5401.077900435
c030,3,2,10,35494,36246,34717,6000.0285653460005,6001.177455156
c030,3,2,11,30481,31240,30020,6600.029568648,6601.269708416
# search time: 6600.030s
# total time: 26412.698s
c030,4,2,1,1261410,1261412,1177494,600.000509016,600.196665278
c030,4,2,2,557208,558303,541209,1200.000921163,1200.347531502
c030,4,2,3,148372,149610,148145,1800.003277548,1800.426602518
c030,4,2,4,152325,153079,148656,2400.003367711,2400.494436253
c030,4,2,5,82670,83631,80786,3000.005597364,3000.567300443
c030,4,2,6,67957,68641,66393,3600.00966894,3600.641072498
c030,4,2,7,50366,51169,49707,4200.01836806,4200.749667604
c030,4,2,8,41617,42268,40626,4800.025911292,4800.857037105
c030,4,2,9,38316,39094,37496,5400.0313473960005,5400.968798212
c030,4,2,10,33651,34401,32992,6000.039332042001,6001.082775617
c030,4,2,11,28744,29392,28212,6600.0442718330005,6601.187034566
# search time: 6600.044s
# total time: 33014.270s
