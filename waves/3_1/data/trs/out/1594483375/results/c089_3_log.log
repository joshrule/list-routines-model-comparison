    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.12s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c089_3.json out/1594483375/results/c089_3_best.csv out/1594483375/results/c089_3_predictions.csv out/1594483375/results/c089_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([13, 69, 48, 34, 8, 60]), o: IntList([13, 48, 69, 34, 8, 60]) }
#   Datum { i: IntList([44, 94, 66, 61, 88, 6, 1, 46, 84]), o: IntList([44, 66, 94, 61, 88, 6, 1, 46, 84]) }
#   Datum { i: IntList([71, 86, 86, 52, 27, 27, 71, 52]), o: IntList([52, 86, 86, 71, 27, 27, 71, 52]) }
#   Datum { i: IntList([90, 7, 14, 59, 53, 24, 25]), o: IntList([59, 7, 14, 90, 53, 24, 25]) }
#   Datum { i: IntList([78, 97, 77, 93, 64, 3, 38, 18, 0, 24]), o: IntList([78, 77, 97, 93, 64, 3, 38, 18, 0, 24]) }
#   Datum { i: IntList([28, 99, 6, 43, 41, 28]), o: IntList([28, 6, 99, 43, 41, 28]) }
#   Datum { i: IntList([45, 25, 54, 3, 54, 0, 56, 92, 55, 1]), o: IntList([3, 25, 54, 45, 54, 0, 56, 92, 55, 1]) }
#   Datum { i: IntList([58, 65, 32, 63]), o: IntList([58, 32, 65, 63]) }
#   Datum { i: IntList([96, 8, 51, 44, 20]), o: IntList([44, 8, 51, 96, 20]) }
#   Datum { i: IntList([23, 5, 98, 7, 4, 1, 42, 16]), o: IntList([7, 5, 98, 23, 4, 1, 42, 16]) }
#   Datum { i: IntList([57, 62, 7, 87, 35, 2, 70, 51, 33]), o: IntList([57, 7, 62, 87, 35, 2, 70, 51, 33]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c089,0,3,1,920364,920365,835785,600.000089434,602.848862601
c089,0,3,2,238598,238766,232314,1200.000237061,1204.242210139
c089,0,3,3,124797,124971,121595,1800.0009923329999,1805.15768687
c089,0,3,4,83837,84006,83258,2400.005706255,2405.946937749
c089,0,3,5,64894,65060,63086,3000.00767721,3006.584561224
c089,0,3,6,46029,46198,45611,3600.0134519040002,3607.476779438
c089,0,3,7,40912,41080,40473,4200.019280179,4208.179431488
c089,0,3,8,31751,31917,31495,4800.020596709,4808.851970615
c089,0,3,9,30539,30722,30377,5400.027252139,5409.502794081
c089,0,3,10,29495,29668,29280,6000.027676936999,6009.941539213
c089,0,3,11,26174,26350,25975,6600.044023641999,6610.632945225
# search time: 6600.044s
# total time: 6610.940s
c089,1,3,1,750810,750811,666196,600.000862966,600.363529618
c089,1,3,2,247186,247344,240930,1200.00302291,1200.936325626
c089,1,3,3,127562,127719,124154,1800.005367885,1801.401814523
c089,1,3,4,86274,86438,85696,2400.011203627,2401.769948394
c089,1,3,5,66655,66817,64614,3000.011627764,3002.111002743
c089,1,3,6,47416,47577,46951,3600.033824543,3602.455378231
c089,1,3,7,42234,42403,41747,4200.047307564,4202.820485785
c089,1,3,8,34859,35030,34547,4800.053827037,4803.126227249
c089,1,3,9,32035,32202,31777,5400.081639397999,5403.450029217
c089,1,3,10,30422,30590,30174,6000.085829864999,6003.763759297
c089,1,3,11,26867,27025,26638,6600.109085335999,6604.180914732
# search time: 6600.109s
# total time: 13215.644s
c089,2,3,1,763596,763597,676994,600.000259296,600.263618331
c089,2,3,2,243816,243987,237305,1200.003579918,1200.651929404
c089,2,3,3,127961,128125,124581,1800.006245944,1800.960092103
c089,2,3,4,87243,87402,86461,2400.010634595,2401.19657716
c089,2,3,5,66229,66397,64337,3000.0133877929998,3001.413509632
c089,2,3,6,47069,47239,46632,3600.022936196,3601.783811546
c089,2,3,7,40344,40515,40027,4200.02437499,4202.115738186
c089,2,3,8,34054,34219,33746,4800.033453179,4802.395669843
c089,2,3,9,32770,32938,32499,5400.0721717940005,5402.652838769
c089,2,3,10,29008,29175,28889,6000.096534165001,6002.986528348
c089,2,3,11,25610,25772,25377,6600.096549812,6603.216965512
# search time: 6600.097s
# total time: 19819.400s
c089,3,3,1,783868,783869,699619,600.000360915,600.241830682
c089,3,3,2,252907,253078,246357,1200.001735738,1200.54800527
c089,3,3,3,123134,123301,119838,1800.005650156,1800.757472965
c089,3,3,4,83956,84133,83228,2400.011748414,2400.933109873
c089,3,3,5,64977,65150,63197,3000.0139827450002,3001.064175168
c089,3,3,6,44911,45080,44508,3600.01429232,3601.205766228
c089,3,3,7,38781,38953,38461,4200.018643108,4201.442371431
c089,3,3,8,32651,32821,32359,4800.031461492,4801.751733008
c089,3,3,9,31275,31455,31030,5400.033752904999,5401.917358745
c089,3,3,10,29149,29324,28966,6000.034514953999,6002.08991203
c089,3,3,11,25516,25691,25327,6600.075873919999,6602.34523967
# search time: 6600.076s
# total time: 26422.284s
c089,4,3,1,719605,719606,630209,600.004731552,600.189221526
c089,4,3,2,243370,243549,237136,1200.0052462869999,1200.445896105
c089,4,3,3,130152,130323,126729,1800.005645606,1800.611079171
c089,4,3,4,87118,87291,86369,2400.016813665,2400.773613703
c089,4,3,5,67034,67211,65192,3000.027631215,3000.919528679
c089,4,3,6,48986,49162,48507,3600.02925784,3601.082138177
c089,4,3,7,41505,41692,41092,4200.039987833,4201.217282801
c089,4,3,8,34548,34722,34235,4800.053431154,4801.497000718
c089,4,3,9,32280,32462,32050,5400.067084752,5401.645163743
c089,4,3,10,29934,30113,29764,6000.07278608,6001.827086377
c089,4,3,11,26374,26550,26159,6600.093801507,6602.01636783
# search time: 6600.094s
# total time: 33024.828s
