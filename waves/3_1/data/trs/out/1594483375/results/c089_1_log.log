    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.19s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c089_1.json out/1594483375/results/c089_1_best.csv out/1594483375/results/c089_1_predictions.csv out/1594483375/results/c089_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([58, 65, 32, 63]), o: IntList([58, 32, 65, 63]) }
#   Datum { i: IntList([78, 97, 77, 93, 64, 3, 38, 18, 0, 24]), o: IntList([78, 77, 97, 93, 64, 3, 38, 18, 0, 24]) }
#   Datum { i: IntList([13, 69, 48, 34, 8, 60]), o: IntList([13, 48, 69, 34, 8, 60]) }
#   Datum { i: IntList([57, 62, 7, 87, 35, 2, 70, 51, 33]), o: IntList([57, 7, 62, 87, 35, 2, 70, 51, 33]) }
#   Datum { i: IntList([23, 5, 98, 7, 4, 1, 42, 16]), o: IntList([7, 5, 98, 23, 4, 1, 42, 16]) }
#   Datum { i: IntList([90, 7, 14, 59, 53, 24, 25]), o: IntList([59, 7, 14, 90, 53, 24, 25]) }
#   Datum { i: IntList([28, 99, 6, 43, 41, 28]), o: IntList([28, 6, 99, 43, 41, 28]) }
#   Datum { i: IntList([44, 94, 66, 61, 88, 6, 1, 46, 84]), o: IntList([44, 66, 94, 61, 88, 6, 1, 46, 84]) }
#   Datum { i: IntList([45, 25, 54, 3, 54, 0, 56, 92, 55, 1]), o: IntList([3, 25, 54, 45, 54, 0, 56, 92, 55, 1]) }
#   Datum { i: IntList([96, 8, 51, 44, 20]), o: IntList([44, 8, 51, 96, 20]) }
#   Datum { i: IntList([71, 86, 86, 52, 27, 27, 71, 52]), o: IntList([52, 86, 86, 71, 27, 27, 71, 52]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c089,0,1,1,763016,763017,679034,600.000060508,603.815891163
c089,0,1,2,304915,305078,295975,1200.004277575,1205.352682939
c089,0,1,3,124590,124762,122078,1800.005738549,1806.452593907
c089,0,1,4,96736,96917,93757,2400.006438454,2407.227864711
c089,0,1,5,68953,69123,66988,3000.0103895310003,3007.991876425
c089,0,1,6,54105,54278,53711,3600.0183115960003,3608.853893014
c089,0,1,7,50934,51105,49367,4200.020200684,4209.335535816
c089,0,1,8,45324,45490,43816,4800.032038046,4809.808529275
c089,0,1,9,35302,35469,34433,5400.040045818,5410.351504492
c089,0,1,10,28869,29033,28221,6000.0403928430005,6010.795371681
c089,0,1,11,31012,31184,29944,6600.049651418,6611.262229593
# search time: 6600.050s
# total time: 6611.541s
c089,1,1,1,781874,781875,703573,600.000407937,600.41648511
c089,1,1,2,304536,304701,295900,1200.006762748,1201.011536764
c089,1,1,3,127433,127600,124519,1800.0091868680001,1801.441237559
c089,1,1,4,95031,95203,92260,2400.0127445000003,2401.877657114
c089,1,1,5,69651,69816,67567,3000.017884964,3002.213327607
c089,1,1,6,55441,55605,54936,3600.022510412,3602.557114418
c089,1,1,7,50335,50501,48719,4200.025938546,4202.803573171
c089,1,1,8,45090,45262,43582,4800.028302205001,4803.059459188
c089,1,1,9,34298,34473,33439,5400.037786031001,5403.301183848
c089,1,1,10,28603,28778,27968,6000.051323216001,6003.693675111
c089,1,1,11,30923,31098,29903,6600.055227311001,6603.905111592
# search time: 6600.055s
# total time: 13215.698s
c089,2,1,1,836746,836747,713605,600.001078681,600.203293645
c089,2,1,2,313261,313439,304446,1200.001905742,1200.570296691
c089,2,1,3,123611,123783,120964,1800.0053243779998,1800.844608975
c089,2,1,4,93271,93446,90692,2400.005809156,2401.081238497
c089,2,1,5,69390,69552,67299,3000.008066341,3001.296204111
c089,2,1,6,54969,55138,54475,3600.011154171,3601.502940338
c089,2,1,7,50159,50326,48512,4200.018516854,4201.688081301
c089,2,1,8,44590,44759,43152,4800.020002081,4801.845537083
c089,2,1,9,33873,34041,33066,5400.034225674,5402.00760909
c089,2,1,10,29130,29300,28469,6000.043310601999,6002.167542197
c089,2,1,11,30484,30650,29538,6600.045538966999,6602.392217507
# search time: 6600.046s
# total time: 19818.391s
c089,3,1,1,710047,710048,629123,600.001185616,600.231324289
c089,3,1,2,306962,307117,298392,1200.002077841,1200.535792018
c089,3,1,3,122786,122944,120511,1800.006319523,1800.759412174
c089,3,1,4,95869,96027,92922,2400.008991296,2400.965212363
c089,3,1,5,69717,69875,67642,3000.015380418,3001.11272789
c089,3,1,6,53504,53662,53061,3600.0208067559997,3601.297241802
c089,3,1,7,50187,50345,48634,4200.021556146,4201.431873419
c089,3,1,8,44810,44972,43360,4800.0284590579995,4801.578509548
c089,3,1,9,34110,34271,33260,5400.02966503,5401.674288493
c089,3,1,10,28235,28396,27663,6000.0380241249995,6001.831475085
c089,3,1,11,30651,30815,29699,6600.050020029999,6601.956110688
# search time: 6600.050s
# total time: 26420.621s
c089,4,1,1,706551,706552,625719,600.000113153,600.199510386
c089,4,1,2,303310,303473,294892,1200.0002139090002,1200.461111586
c089,4,1,3,123122,123283,120861,1800.0007006120002,1800.630825114
c089,4,1,4,96149,96315,93263,2400.016883024,2400.804692747
c089,4,1,5,69309,69464,67219,3000.01825577,3000.947868267
c089,4,1,6,54784,54942,54318,3600.019509888,3601.050160649
c089,4,1,7,49983,50142,48444,4200.020520148,4201.17788898
c089,4,1,8,44684,44844,43191,4800.028471835,4801.305968631
c089,4,1,9,34017,34179,33194,5400.0577433240005,5401.488563728
c089,4,1,10,29126,29286,28487,6000.078032615001,6001.64321546
c089,4,1,11,30438,30599,29432,6600.088369617,6601.745275013
# search time: 6600.088s
# total time: 33022.654s
