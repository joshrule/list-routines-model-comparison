    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.12s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c088_5.json out/1594483375/results/c088_5_best.csv out/1594483375/results/c088_5_predictions.csv out/1594483375/results/c088_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([19, 1, 99, 19, 20, 99, 20]), o: IntList([19, 99, 1, 19, 20, 99, 20]) }
#   Datum { i: IntList([95, 31, 31, 4, 39, 5, 32, 0]), o: IntList([4, 31, 31, 95, 39, 5, 32, 0]) }
#   Datum { i: IntList([15, 53, 53, 95]), o: IntList([95, 53, 53, 15]) }
#   Datum { i: IntList([84, 86, 3, 84, 3, 89]), o: IntList([84, 3, 86, 84, 3, 89]) }
#   Datum { i: IntList([17, 41, 41, 85, 25, 2, 17, 25, 17, 10]), o: IntList([85, 41, 41, 17, 25, 2, 17, 25, 17, 10]) }
#   Datum { i: IntList([74, 4, 40, 74]), o: IntList([74, 40, 4, 74]) }
#   Datum { i: IntList([5, 77, 77, 52, 6, 35, 90, 57, 27]), o: IntList([52, 77, 77, 5, 6, 35, 90, 57, 27]) }
#   Datum { i: IntList([66, 16, 16, 38, 11, 85, 88]), o: IntList([38, 16, 16, 66, 11, 85, 88]) }
#   Datum { i: IntList([96, 96, 8, 96, 51]), o: IntList([96, 8, 96, 96, 51]) }
#   Datum { i: IntList([76, 51, 51, 24, 2, 7, 48, 91, 67, 24]), o: IntList([24, 51, 51, 76, 2, 7, 48, 91, 67, 24]) }
#   Datum { i: IntList([56, 9, 34, 56, 90, 59, 6, 8, 6]), o: IntList([56, 34, 9, 56, 90, 59, 6, 8, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c088,0,5,1,736333,736334,645701,600.000158088,603.546084854
c088,0,5,2,213228,213389,207867,1200.001711008,1205.237986735
c088,0,5,3,127851,128018,124966,1800.0048898270002,1806.466667782
c088,0,5,4,108837,109004,105956,2400.0099994830002,2407.399983377
c088,0,5,5,68897,69058,66900,3000.01015356,3008.812267399
c088,0,5,6,47427,47594,46369,3600.018394967,3610.402028221
c088,0,5,7,51747,51913,50249,4200.022291883,4211.443431474
c088,0,5,8,34011,34176,33240,4800.04443624,4813.285168816
c088,0,5,9,28586,28750,27992,5400.079269524001,5414.938584003
c088,0,5,10,26381,26543,25838,6000.08154539,6016.268513426
c088,0,5,11,21591,21760,21124,6600.14876523,6618.251812312
# search time: 6600.149s
# total time: 6618.390s
c088,1,5,1,710638,710639,630316,600.000534394,600.37427357
c088,1,5,2,221221,221392,215853,1200.0025099600002,1200.993532633
c088,1,5,3,131709,131881,128841,1800.0116531290003,1801.462737062
c088,1,5,4,112282,112455,109222,2400.0120871710005,2401.91703519
c088,1,5,5,70757,70926,68763,3000.0129051210006,3002.725498253
c088,1,5,6,49438,49609,48447,3600.0206524010005,3603.542806033
c088,1,5,7,56119,56292,54440,4200.0206842140005,4203.920006778
c088,1,5,8,35030,35201,34211,4800.038087223001,4804.626892391
c088,1,5,9,29083,29248,28515,5400.049238415001,5405.482586355
c088,1,5,10,27476,27646,26830,6000.074967523001,6006.436167481
c088,1,5,11,22425,22596,22021,6600.0783021120005,6607.714224408
# search time: 6600.078s
# total time: 13226.326s
c088,2,5,1,706205,706206,618413,600.000149397,600.255666238
c088,2,5,2,213064,213232,207682,1200.0008039509999,1200.729589937
c088,2,5,3,130629,130799,127926,1800.0028096809997,1801.064239788
c088,2,5,4,112827,112995,109636,2400.0041239599996,2401.371122507
c088,2,5,5,70157,70326,68191,3000.00414518,3001.829223159
c088,2,5,6,48933,49097,47842,3600.0075531969997,3602.137918215
c088,2,5,7,52808,52976,51338,4200.009743201999,4202.422953489
c088,2,5,8,34809,34974,33950,4800.011189049999,4802.967208421
c088,2,5,9,29281,29450,28585,5400.014169879999,5403.608703721
c088,2,5,10,26508,26681,25977,6000.033623705999,6004.136218021
c088,2,5,11,21980,22148,21492,6600.059806611,6604.721804599
# search time: 6600.060s
# total time: 19831.297s
c088,3,5,1,748928,748929,667051,600.003415285,600.248195611
c088,3,5,2,206248,206422,200881,1200.0049946899999,1200.579893032
c088,3,5,3,123159,123335,120740,1800.0066149289999,1800.8572765
c088,3,5,4,107864,108048,104900,2400.008797267,2401.106238141
c088,3,5,5,67204,67378,65304,3000.0123989159997,3001.468048383
c088,3,5,6,46921,47091,45900,3600.0290172829996,3601.800320532
c088,3,5,7,50976,51142,49617,4200.035451725,4202.153374068
c088,3,5,8,33487,33667,32664,4800.059467702999,4802.68155977
c088,3,5,9,27971,28150,27364,5400.065640864,5403.106396859
c088,3,5,10,25930,26107,25406,6000.070915149,6003.534152198
c088,3,5,11,21259,21435,20866,6600.078956288,6603.776024045
# search time: 6600.079s
# total time: 26435.270s
c088,4,5,1,740548,740549,660290,600.007488553,600.21115436
c088,4,5,2,209780,209947,204236,1200.008888592,1200.478383094
c088,4,5,3,131366,131543,128514,1800.015335085,1800.629254383
c088,4,5,4,113780,113952,110495,2400.017839254,2400.796182349
c088,4,5,5,68961,69131,66918,3000.022576247,3001.062890046
c088,4,5,6,48316,48485,47302,3600.0233651589997,3601.359105611
c088,4,5,7,53138,53308,51572,4200.048527618999,4201.535861003
c088,4,5,8,34155,34317,33436,4800.052089581999,4801.794604604
c088,4,5,9,28997,29164,28319,5400.084432887999,5402.23865957
c088,4,5,10,26690,26860,26148,6000.085738513999,6002.566548291
c088,4,5,11,21325,21491,20925,6600.121559918999,6602.853210065
# search time: 6600.122s
# total time: 33038.353s
