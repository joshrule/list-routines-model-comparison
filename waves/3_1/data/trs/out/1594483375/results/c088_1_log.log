    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.09s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c088_1.json out/1594483375/results/c088_1_best.csv out/1594483375/results/c088_1_predictions.csv out/1594483375/results/c088_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([15, 53, 53, 95]), o: IntList([95, 53, 53, 15]) }
#   Datum { i: IntList([66, 16, 16, 38, 11, 85, 88]), o: IntList([38, 16, 16, 66, 11, 85, 88]) }
#   Datum { i: IntList([95, 31, 31, 4, 39, 5, 32, 0]), o: IntList([4, 31, 31, 95, 39, 5, 32, 0]) }
#   Datum { i: IntList([76, 51, 51, 24, 2, 7, 48, 91, 67, 24]), o: IntList([24, 51, 51, 76, 2, 7, 48, 91, 67, 24]) }
#   Datum { i: IntList([56, 9, 34, 56, 90, 59, 6, 8, 6]), o: IntList([56, 34, 9, 56, 90, 59, 6, 8, 6]) }
#   Datum { i: IntList([74, 4, 40, 74]), o: IntList([74, 40, 4, 74]) }
#   Datum { i: IntList([5, 77, 77, 52, 6, 35, 90, 57, 27]), o: IntList([52, 77, 77, 5, 6, 35, 90, 57, 27]) }
#   Datum { i: IntList([96, 96, 8, 96, 51]), o: IntList([96, 8, 96, 96, 51]) }
#   Datum { i: IntList([17, 41, 41, 85, 25, 2, 17, 25, 17, 10]), o: IntList([85, 41, 41, 17, 25, 2, 17, 25, 17, 10]) }
#   Datum { i: IntList([84, 86, 3, 84, 3, 89]), o: IntList([84, 3, 86, 84, 3, 89]) }
#   Datum { i: IntList([19, 1, 99, 19, 20, 99, 20]), o: IntList([19, 99, 1, 19, 20, 99, 20]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c088,0,1,1,758468,758469,676225,600.00358944,603.872822862
c088,0,1,2,297562,297723,288953,1200.007504704,1205.515856856
c088,0,1,3,160678,160847,156255,1800.008554125,1806.524174148
c088,0,1,4,108141,108303,104586,2400.010832979,2407.236484322
c088,0,1,5,68797,68961,66844,3000.015308342,3007.92211976
c088,0,1,6,40958,41120,40178,3600.018870963,3609.433128374
c088,0,1,7,45871,46032,44479,4200.034292216,4210.131942115
c088,0,1,8,38848,39006,37677,4800.042032013,4810.85300879
c088,0,1,9,27776,27940,27248,5400.046704918,5412.301197667
c088,0,1,10,21190,21358,20783,6000.117492521,6013.985520132
c088,0,1,11,20916,21080,20410,6600.137126111,6615.570521831
# search time: 6600.137s
# total time: 6615.717s
c088,1,1,1,738264,738265,661075,600.001842843,600.394315556
c088,1,1,2,306205,306363,297423,1200.001903825,1200.9917872
c088,1,1,3,160752,160915,156111,1800.005716845,1801.420969396
c088,1,1,4,106439,106601,102989,2400.006344812,2401.72878626
c088,1,1,5,68521,68681,66602,3000.010473106,3002.053606936
c088,1,1,6,40811,40977,40019,3600.013613746,3602.831655762
c088,1,1,7,48739,48905,47102,4200.021731249,4203.182098349
c088,1,1,8,37113,37277,35896,4800.024213212,4803.535505217
c088,1,1,9,28112,28276,27532,5400.042360686,5404.331203989
c088,1,1,10,21208,21373,20769,6000.044888882,6005.098001178
c088,1,1,11,21125,21288,20713,6600.092083058,6606.208374145
# search time: 6600.092s
# total time: 13222.148s
c088,2,1,1,753227,753228,675891,600.004697393,600.294134236
c088,2,1,2,301522,301684,292682,1200.012649764,1200.707650359
c088,2,1,3,157202,157372,153154,1800.0155333419998,1801.026364764
c088,2,1,4,105251,105418,101859,2400.015929286,2401.240893841
c088,2,1,5,66644,66807,64868,3000.016231489,3001.458163331
c088,2,1,6,40299,40463,39566,3600.021692958,3602.001030912
c088,2,1,7,47709,47874,46100,4200.029154485001,4202.206430672
c088,2,1,8,37019,37180,35846,4800.043344760001,4802.520915385
c088,2,1,9,27679,27845,27143,5400.051008792001,5402.968001479
c088,2,1,10,20246,20405,19973,6000.074297701001,6003.414392556
c088,2,1,11,20140,20308,19769,6600.105949723002,6604.035608956
# search time: 6600.106s
# total time: 19826.400s
c088,3,1,1,667263,667264,569259,600.000117507,600.214966075
c088,3,1,2,188425,188589,183272,1200.0027945900001,1200.523686969
c088,3,1,3,93886,94059,91184,1800.0056025420001,1800.767053393
c088,3,1,4,62435,62607,60299,2400.013171206,2400.955433984
c088,3,1,5,40210,40383,39079,3000.0163469560002,3001.132313942
c088,3,1,6,24342,24512,23959,3600.02254552,3601.421186193
c088,3,1,7,27465,27639,26506,4200.039132777,4201.546568131
c088,3,1,8,22669,22839,22051,4800.048325897,4801.779876424
c088,3,1,9,17002,17178,16721,5400.0489346019995,5402.212218058
c088,3,1,10,12047,12217,11835,6000.052419602999,6002.699892533
c088,3,1,11,11910,12082,11706,6600.071810449999,6602.978491071
# search time: 6600.072s
# total time: 26429.601s
c088,4,1,1,464318,464319,397414,600.018500273,600.167682813
c088,4,1,2,187164,187340,181855,1200.019102403,1200.438902743
c088,4,1,3,95810,95984,93104,1800.021638928,1800.597246154
c088,4,1,4,84582,84760,81748,2400.0253548319997,2400.736104531
c088,4,1,5,66613,66791,64718,3000.0259214459998,3000.889333603
c088,4,1,6,39541,39720,38937,3600.0262811469997,3601.224752668
c088,4,1,7,47736,47914,46124,4200.047808879,4201.386995961
c088,4,1,8,36716,36891,35568,4800.04989726,4801.54058398
c088,4,1,9,26963,27140,26488,5400.051579842,5401.868275925
c088,4,1,10,20801,20979,20364,6000.087573759,6002.491904349
c088,4,1,11,20153,20331,19694,6600.103837764001,6602.972396582
# search time: 6600.104s
# total time: 33032.765s
