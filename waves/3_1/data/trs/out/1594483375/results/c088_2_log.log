    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.10s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c088_2.json out/1594483375/results/c088_2_best.csv out/1594483375/results/c088_2_predictions.csv out/1594483375/results/c088_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([74, 4, 40, 74]), o: IntList([74, 40, 4, 74]) }
#   Datum { i: IntList([17, 41, 41, 85, 25, 2, 17, 25, 17, 10]), o: IntList([85, 41, 41, 17, 25, 2, 17, 25, 17, 10]) }
#   Datum { i: IntList([96, 96, 8, 96, 51]), o: IntList([96, 8, 96, 96, 51]) }
#   Datum { i: IntList([19, 1, 99, 19, 20, 99, 20]), o: IntList([19, 99, 1, 19, 20, 99, 20]) }
#   Datum { i: IntList([5, 77, 77, 52, 6, 35, 90, 57, 27]), o: IntList([52, 77, 77, 5, 6, 35, 90, 57, 27]) }
#   Datum { i: IntList([84, 86, 3, 84, 3, 89]), o: IntList([84, 3, 86, 84, 3, 89]) }
#   Datum { i: IntList([95, 31, 31, 4, 39, 5, 32, 0]), o: IntList([4, 31, 31, 95, 39, 5, 32, 0]) }
#   Datum { i: IntList([56, 9, 34, 56, 90, 59, 6, 8, 6]), o: IntList([56, 34, 9, 56, 90, 59, 6, 8, 6]) }
#   Datum { i: IntList([15, 53, 53, 95]), o: IntList([95, 53, 53, 15]) }
#   Datum { i: IntList([66, 16, 16, 38, 11, 85, 88]), o: IntList([38, 16, 16, 66, 11, 85, 88]) }
#   Datum { i: IntList([76, 51, 51, 24, 2, 7, 48, 91, 67, 24]), o: IntList([24, 51, 51, 76, 2, 7, 48, 91, 67, 24]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c088,0,2,1,799654,799655,710326,600.019361016,604.029805252
c088,0,2,2,332327,332491,323156,1200.019699709,1205.489736769
c088,0,2,3,127990,128156,124133,1800.021552342,1806.510393482
c088,0,2,4,107770,107938,104185,2400.023615796,2407.127113391
c088,0,2,5,81549,81717,79028,3000.0281914429997,3007.744269236
c088,0,2,6,63021,63186,60637,3600.0313044429995,3608.216839048
c088,0,2,7,51879,52043,50161,4200.032009019,4208.822199529
c088,0,2,8,32396,32560,31684,4800.035696002,4810.233855747
c088,0,2,9,27801,27967,27239,5400.0530714609995,5411.552938895
c088,0,2,10,25068,25237,24580,6000.076139854,6012.952277371
c088,0,2,11,21884,22050,21503,6600.098793311,6614.598032566
# search time: 6600.099s
# total time: 6614.740s
c088,1,2,1,750444,750445,673090,600.000259539,600.403434416
c088,1,2,2,320210,320382,311066,1200.000611689,1201.006745741
c088,1,2,3,126030,126204,122318,1800.001532788,1801.452324558
c088,1,2,4,106103,106279,102464,2400.0032441840003,2401.78472353
c088,1,2,5,80235,80407,77761,3000.0087020440005,3002.078279441
c088,1,2,6,64440,64611,62670,3600.0127944540004,3602.343350826
c088,1,2,7,50500,50671,48930,4200.017304642,4202.670048781
c088,1,2,8,26729,26901,26154,4800.026009296001,4803.33512268
c088,1,2,9,26669,26839,26120,5400.027350419001,5404.242568616
c088,1,2,10,24432,24603,23974,6000.044324406001,6005.016054565
c088,1,2,11,22142,22312,21711,6600.055834891001,6606.019334488
# search time: 6600.056s
# total time: 13220.975s
c088,2,2,1,865747,865748,740233,600.000141097,600.217696682
c088,2,2,2,319122,319306,310350,1200.006909064,1200.614503131
c088,2,2,3,98272,98454,95479,1800.010768309,1800.942943402
c088,2,2,4,60793,60978,58779,2400.014273159,2401.158197196
c088,2,2,5,71544,71730,69340,3000.015003669,3001.341837321
c088,2,2,6,61690,61874,59485,3600.0207615910003,3601.521408962
c088,2,2,7,50141,50323,48579,4200.027838019,4201.716582592
c088,2,2,8,31955,32137,31267,4800.031995219,4802.204239664
c088,2,2,9,26706,26888,26195,5400.044416765,5402.775411812
c088,2,2,10,20909,21093,20524,6000.092653304,6003.665543633
c088,2,2,11,12466,12642,12271,6600.104371618,6604.217374777
# search time: 6600.104s
# total time: 19825.494s
c088,3,2,1,634457,634458,557603,600.000483683,600.179537044
c088,3,2,2,321398,321566,312339,1200.00689001,1200.487068104
c088,3,2,3,128648,128819,124916,1800.012793184,1800.71166683
c088,3,2,4,106973,107144,103561,2400.014762829,2400.877027638
c088,3,2,5,79147,79313,76576,3000.015688824,3001.023703057
c088,3,2,6,61237,61410,59076,3600.022733971,3601.188427913
c088,3,2,7,50300,50466,48684,4200.033662852,4201.397346958
c088,3,2,8,31930,32100,31186,4800.037339611,4801.702870008
c088,3,2,9,25987,26156,25546,5400.060003275999,5402.285130141
c088,3,2,10,25231,25396,24768,6000.07593492,6002.712687927
c088,3,2,11,21910,22080,21502,6600.076095517,6603.197805692
# search time: 6600.076s
# total time: 26428.880s
c088,4,2,1,699517,699518,622007,600.00032113,600.208776011
c088,4,2,2,320704,320868,311948,1200.000689798,1200.461266232
c088,4,2,3,128857,129019,125111,1800.001967819,1800.65172226
c088,4,2,4,111199,111368,108251,2400.00204334,2400.792088802
c088,4,2,5,78885,79048,76578,3000.0044327670003,3000.935768873
c088,4,2,6,61513,61673,59192,3600.007093913,3601.053185448
c088,4,2,7,49586,49748,48021,4200.009969708,4201.249598074
c088,4,2,8,32094,32251,31367,4800.0146013,4801.611504115
c088,4,2,9,27030,27191,26486,5400.058540117,5402.053218665
c088,4,2,10,24696,24860,24217,6000.090462445,6002.411787074
c088,4,2,11,22155,22317,21681,6600.099295633,6602.71011528
# search time: 6600.099s
# total time: 33031.810s
