    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.18s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3_1/json/c089_2.json out/1594483375/results/c089_2_best.csv out/1594483375/results/c089_2_predictions.csv out/1594483375/results/c089_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([96, 8, 51, 44, 20]), o: IntList([44, 8, 51, 96, 20]) }
#   Datum { i: IntList([23, 5, 98, 7, 4, 1, 42, 16]), o: IntList([7, 5, 98, 23, 4, 1, 42, 16]) }
#   Datum { i: IntList([57, 62, 7, 87, 35, 2, 70, 51, 33]), o: IntList([57, 7, 62, 87, 35, 2, 70, 51, 33]) }
#   Datum { i: IntList([45, 25, 54, 3, 54, 0, 56, 92, 55, 1]), o: IntList([3, 25, 54, 45, 54, 0, 56, 92, 55, 1]) }
#   Datum { i: IntList([28, 99, 6, 43, 41, 28]), o: IntList([28, 6, 99, 43, 41, 28]) }
#   Datum { i: IntList([13, 69, 48, 34, 8, 60]), o: IntList([13, 48, 69, 34, 8, 60]) }
#   Datum { i: IntList([71, 86, 86, 52, 27, 27, 71, 52]), o: IntList([52, 86, 86, 71, 27, 27, 71, 52]) }
#   Datum { i: IntList([78, 97, 77, 93, 64, 3, 38, 18, 0, 24]), o: IntList([78, 77, 97, 93, 64, 3, 38, 18, 0, 24]) }
#   Datum { i: IntList([44, 94, 66, 61, 88, 6, 1, 46, 84]), o: IntList([44, 66, 94, 61, 88, 6, 1, 46, 84]) }
#   Datum { i: IntList([90, 7, 14, 59, 53, 24, 25]), o: IntList([59, 7, 14, 90, 53, 24, 25]) }
#   Datum { i: IntList([58, 65, 32, 63]), o: IntList([58, 32, 65, 63]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c089,0,2,1,740101,740102,658142,600.003702514,603.645515186
c089,0,2,2,279966,280133,272573,1200.004965224,1205.234768914
c089,0,2,3,157015,157182,152538,1800.0055458440002,1806.274060864
c089,0,2,4,93240,93410,92353,2400.008732281,2407.115011261
c089,0,2,5,65429,65602,64862,3000.016326822,3007.89470754
c089,0,2,6,59743,59916,57898,3600.019569123,3608.474070879
c089,0,2,7,45708,45871,45323,4200.022901317,4209.19333951
c089,0,2,8,37727,37889,37480,4800.026256722,4810.015863875
c089,0,2,9,29270,29439,29285,5400.0428579869995,5410.751176973
c089,0,2,10,26984,27143,26885,6000.05426895,6011.390041868
c089,0,2,11,24287,24456,24209,6600.062238194,6611.864686134
# search time: 6600.062s
# total time: 6612.140s
c089,1,2,1,771918,771919,692239,600.000298684,600.443339447
c089,1,2,2,291014,291189,283604,1200.001477372,1201.021322295
c089,1,2,3,156468,156638,152223,1800.00365584,1801.420271527
c089,1,2,4,90484,90655,89801,2400.009761554,2401.82228626
c089,1,2,5,62648,62818,62142,3000.016621798,3002.280150143
c089,1,2,6,59122,59315,57260,3600.021956475,3602.554926984
c089,1,2,7,43378,43558,43135,4200.022441528,4202.934675962
c089,1,2,8,35978,36160,35851,4800.031147758,4803.294397097
c089,1,2,9,29021,29198,29058,5400.034046576,5403.713685729
c089,1,2,10,26580,26767,26504,6000.040782271,6004.064181293
c089,1,2,11,23845,24028,23765,6600.076050722,6604.395888528
# search time: 6600.076s
# total time: 13217.073s
c089,2,2,1,713420,713421,609452,600.003976269,600.197844542
c089,2,2,2,275854,276025,268452,1200.0066195,1200.618543201
c089,2,2,3,153495,153664,149133,1800.007253187,1800.915572674
c089,2,2,4,91984,92161,91110,2400.013177355,2401.197916197
c089,2,2,5,62146,62322,61655,3000.01363882,3001.437123569
c089,2,2,6,58134,58314,56315,3600.016093364,3601.611291752
c089,2,2,7,42814,42989,42550,4200.024781722,4201.874413973
c089,2,2,8,36002,36181,35841,4800.0334846529995,4802.15385697
c089,2,2,9,28733,28911,28768,5400.042277250999,5402.476467153
c089,2,2,10,24488,24666,24475,6000.048609618999,6002.732731266
c089,2,2,11,22421,22593,22414,6600.057676702999,6602.901910017
# search time: 6600.058s
# total time: 19820.535s
c089,3,2,1,681116,681117,579027,600.00002675,600.158842167
c089,3,2,2,280654,280829,273436,1200.000776629,1200.47565112
c089,3,2,3,156531,156705,152080,1800.003852821,1800.715547344
c089,3,2,4,89966,90139,89263,2400.007595725,2400.91132881
c089,3,2,5,63743,63920,63169,3000.01375957,3001.115884618
c089,3,2,6,58486,58670,56597,3600.0226965129996,3601.273351955
c089,3,2,7,44617,44789,44244,4200.032714884,4201.477901285
c089,3,2,8,36913,37086,36699,4800.035093986,4801.658846053
c089,3,2,9,30186,30363,30091,5400.040228129,5401.788374949
c089,3,2,10,26347,26522,26252,6000.041095494,6001.918696641
c089,3,2,11,22091,22264,22117,6600.060045251,6602.105467144
# search time: 6600.060s
# total time: 26423.560s
c089,4,2,1,699473,699474,614015,600.006625216,600.198756749
c089,4,2,2,273767,273937,266707,1200.0066678429998,1200.459222198
c089,4,2,3,156687,156859,152241,1800.008094416,1800.630917599
c089,4,2,4,91543,91713,90694,2400.015266902,2400.802587471
c089,4,2,5,63770,63948,63200,3000.015605835,3000.919201135
c089,4,2,6,58824,58998,57086,3600.026854837,3601.038370277
c089,4,2,7,44456,44628,44081,4200.031558547,4201.173819515
c089,4,2,8,36389,36557,36228,4800.051980593,4801.343652262
c089,4,2,9,30362,30532,30265,5400.064047600999,5401.482257107
c089,4,2,10,26110,26279,26029,6000.069294055,6001.669886387
c089,4,2,11,23119,23294,23058,6600.069304656,6601.941438052
# search time: 6600.069s
# total time: 33025.781s
