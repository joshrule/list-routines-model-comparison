i_N,n_seen,accuracy,input,correct,predicted
0,0,0,"C (CONS (DIGIT 8) (CONS (DECC (DIGIT 1) 9) (CONS (DECC (DIGIT 5) 5) (CONS (DIGIT 0) (CONS (DECC (DIGIT 1) 3) (CONS (DIGIT 9) []))))))","CONS (DECC (DIGIT 1) 9) (CONS (DECC (DIGIT 5) 5) (CONS (DIGIT 0) (CONS (DECC (DIGIT 1) 3) (CONS (DIGIT 9) []))))","C (CONS (DIGIT 8) (CONS (DECC (DIGIT 1) 9) (CONS (DECC (DIGIT 5) 5) (CONS (DIGIT 0) (CONS (DECC (DIGIT 1) 3) (CONS (DIGIT 9) []))))))"
1,3000,1,"C (CONS (DIGIT 2) (CONS (DIGIT 7) (CONS (DIGIT 4) (CONS (DIGIT 2) (CONS (DIGIT 7) (CONS (DIGIT 3) (CONS (DIGIT 5) (CONS (DIGIT 8) (CONS (DIGIT 5) [])))))))))","CONS (DIGIT 7) (CONS (DIGIT 4) (CONS (DIGIT 2) (CONS (DIGIT 7) (CONS (DIGIT 3) (CONS (DIGIT 5) (CONS (DIGIT 8) (CONS (DIGIT 5) [])))))))","CONS (DIGIT 7) (CONS (DIGIT 4) (CONS (DIGIT 2) (CONS (DIGIT 7) (CONS (DIGIT 3) (CONS (DIGIT 5) (CONS (DIGIT 8) (CONS (DIGIT 5) [])))))))"
2,2010,1,"C (CONS (DECC (DIGIT 3) 1) (CONS (DECC (DIGIT 1) 3) (CONS (DIGIT 8) (CONS (DECC (DIGIT 3) 4) []))))","CONS (DECC (DIGIT 1) 3) (CONS (DIGIT 8) (CONS (DECC (DIGIT 3) 4) []))","CONS (DECC (DIGIT 1) 3) (CONS (DIGIT 8) (CONS (DECC (DIGIT 3) 4) []))"
3,1350,1,"C (CONS (DECC (DIGIT 1) 0) [])","[]","[]"
4,910,1,"C (CONS (DECC (DIGIT 1) 1) (CONS (DIGIT 1) (CONS (DIGIT 9) [])))","CONS (DIGIT 1) (CONS (DIGIT 9) [])","CONS (DIGIT 1) (CONS (DIGIT 9) [])"
5,610,1,"C (CONS (DECC (DIGIT 5) 0) (CONS (DIGIT 6) (CONS (DECC (DIGIT 7) 7) (CONS (DIGIT 4) (CONS (DECC (DIGIT 1) 4) [])))))","CONS (DIGIT 6) (CONS (DECC (DIGIT 7) 7) (CONS (DIGIT 4) (CONS (DECC (DIGIT 1) 4) [])))","CONS (DIGIT 6) (CONS (DECC (DIGIT 7) 7) (CONS (DIGIT 4) (CONS (DECC (DIGIT 1) 4) [])))"
6,410,1,"C (CONS (DECC (DIGIT 1) 0) (CONS (DIGIT 3) []))","CONS (DIGIT 3) []","CONS (DIGIT 3) []"
7,280,1,"C (CONS (DIGIT 4) (CONS (DECC (DIGIT 7) 1) (CONS (DIGIT 3) (CONS (DECC (DIGIT 4) 7) (CONS (DECC (DIGIT 8) 9) (CONS (DIGIT 0) (CONS (DECC (DIGIT 6) 8) [])))))))","CONS (DECC (DIGIT 7) 1) (CONS (DIGIT 3) (CONS (DECC (DIGIT 4) 7) (CONS (DECC (DIGIT 8) 9) (CONS (DIGIT 0) (CONS (DECC (DIGIT 6) 8) [])))))","CONS (DECC (DIGIT 7) 1) (CONS (DIGIT 3) (CONS (DECC (DIGIT 4) 7) (CONS (DECC (DIGIT 8) 9) (CONS (DIGIT 0) (CONS (DECC (DIGIT 6) 8) [])))))"
8,190,1,"C (CONS (DECC (DIGIT 8) 2) (CONS (DECC (DIGIT 1) 3) (CONS (DECC (DIGIT 7) 5) (CONS (DIGIT 0) (CONS (DIGIT 7) [])))))","CONS (DECC (DIGIT 1) 3) (CONS (DECC (DIGIT 7) 5) (CONS (DIGIT 0) (CONS (DIGIT 7) [])))","CONS (DECC (DIGIT 1) 3) (CONS (DECC (DIGIT 7) 5) (CONS (DIGIT 0) (CONS (DIGIT 7) [])))"
9,130,1,"C (CONS (DECC (DIGIT 8) 1) [])","[]","[]"
10,90,1,"C (CONS (DIGIT 8) (CONS (DIGIT 5) (CONS (DECC (DIGIT 9) 1) (CONS (DIGIT 8) (CONS (DECC (DIGIT 4) 7) (CONS (DIGIT 8) (CONS (DIGIT 8) (CONS (DIGIT 7) (CONS (DECC (DIGIT 1) 0) (CONS (DIGIT 9) []))))))))))","CONS (DIGIT 5) (CONS (DECC (DIGIT 9) 1) (CONS (DIGIT 8) (CONS (DECC (DIGIT 4) 7) (CONS (DIGIT 8) (CONS (DIGIT 8) (CONS (DIGIT 7) (CONS (DECC (DIGIT 1) 0) (CONS (DIGIT 9) []))))))))","CONS (DIGIT 5) (CONS (DECC (DIGIT 9) 1) (CONS (DIGIT 8) (CONS (DECC (DIGIT 4) 7) (CONS (DIGIT 8) (CONS (DIGIT 8) (CONS (DIGIT 7) (CONS (DECC (DIGIT 1) 0) (CONS (DIGIT 9) []))))))))"
11,70,1,"C (CONS (DECC (DIGIT 6) 7) (CONS (DECC (DIGIT 9) 6) (CONS (DIGIT 5) (CONS (DIGIT 8) []))))","CONS (DECC (DIGIT 9) 6) (CONS (DIGIT 5) (CONS (DIGIT 8) []))","CONS (DECC (DIGIT 9) 6) (CONS (DIGIT 5) (CONS (DIGIT 8) []))"
12,50,1,"C (CONS (DECC (DIGIT 3) 5) (CONS (DECC (DIGIT 9) 5) (CONS (DIGIT 2) (CONS (DECC (DIGIT 8) 3) (CONS (DECC (DIGIT 6) 8) (CONS (DECC (DIGIT 6) 8) (CONS (DIGIT 1) (CONS (DIGIT 3) []))))))))","CONS (DECC (DIGIT 9) 5) (CONS (DIGIT 2) (CONS (DECC (DIGIT 8) 3) (CONS (DECC (DIGIT 6) 8) (CONS (DECC (DIGIT 6) 8) (CONS (DIGIT 1) (CONS (DIGIT 3) []))))))","CONS (DECC (DIGIT 9) 5) (CONS (DIGIT 2) (CONS (DECC (DIGIT 8) 3) (CONS (DECC (DIGIT 6) 8) (CONS (DECC (DIGIT 6) 8) (CONS (DIGIT 1) (CONS (DIGIT 3) []))))))"
13,40,1,"C (CONS (DECC (DIGIT 3) 1) (CONS (DECC (DIGIT 2) 6) (CONS (DIGIT 4) (CONS (DIGIT 3) (CONS (DIGIT 5) (CONS (DECC (DIGIT 1) 0) []))))))","CONS (DECC (DIGIT 2) 6) (CONS (DIGIT 4) (CONS (DIGIT 3) (CONS (DIGIT 5) (CONS (DECC (DIGIT 1) 0) []))))","CONS (DECC (DIGIT 2) 6) (CONS (DIGIT 4) (CONS (DIGIT 3) (CONS (DIGIT 5) (CONS (DECC (DIGIT 1) 0) []))))"
14,30,1,"C (CONS (DIGIT 9) (CONS (DECC (DIGIT 5) 6) (CONS (DIGIT 8) [])))","CONS (DECC (DIGIT 5) 6) (CONS (DIGIT 8) [])","CONS (DECC (DIGIT 5) 6) (CONS (DIGIT 8) [])"
15,30,1,"C (CONS (DECC (DIGIT 3) 3) (CONS (DIGIT 2) (CONS (DECC (DIGIT 7) 8) (CONS (DECC (DIGIT 4) 6) []))))","CONS (DIGIT 2) (CONS (DECC (DIGIT 7) 8) (CONS (DECC (DIGIT 4) 6) []))","CONS (DIGIT 2) (CONS (DECC (DIGIT 7) 8) (CONS (DECC (DIGIT 4) 6) []))"
16,30,1,"C (CONS (DIGIT 8) (CONS (DIGIT 0) (CONS (DIGIT 5) (CONS (DIGIT 8) (CONS (DIGIT 8) [])))))","CONS (DIGIT 0) (CONS (DIGIT 5) (CONS (DIGIT 8) (CONS (DIGIT 8) [])))","CONS (DIGIT 0) (CONS (DIGIT 5) (CONS (DIGIT 8) (CONS (DIGIT 8) [])))"
17,30,1,"C (CONS (DIGIT 9) (CONS (DECC (DIGIT 2) 6) (CONS (DECC (DIGIT 7) 1) (CONS (DECC (DIGIT 9) 3) (CONS (DIGIT 6) [])))))","CONS (DECC (DIGIT 2) 6) (CONS (DECC (DIGIT 7) 1) (CONS (DECC (DIGIT 9) 3) (CONS (DIGIT 6) [])))","CONS (DECC (DIGIT 2) 6) (CONS (DECC (DIGIT 7) 1) (CONS (DECC (DIGIT 9) 3) (CONS (DIGIT 6) [])))"
18,30,1,"C (CONS (DECC (DIGIT 2) 9) (CONS (DIGIT 6) (CONS (DIGIT 5) [])))","CONS (DIGIT 6) (CONS (DIGIT 5) [])","CONS (DIGIT 6) (CONS (DIGIT 5) [])"
19,30,1,"C (CONS (DIGIT 3) (CONS (DECC (DIGIT 2) 0) (CONS (DECC (DIGIT 8) 1) (CONS (DIGIT 0) []))))","CONS (DECC (DIGIT 2) 0) (CONS (DECC (DIGIT 8) 1) (CONS (DIGIT 0) []))","CONS (DECC (DIGIT 2) 0) (CONS (DECC (DIGIT 8) 1) (CONS (DIGIT 0) []))"
