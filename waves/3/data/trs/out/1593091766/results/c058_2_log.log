    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c058_2.json out/1593091766/results/c058_2_best.csv out/1593091766/results/c058_2_predictions.csv out/1593091766/results/c058_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 6, 2, 3, 2, 3, 6]), o: IntList([]) }
#   Datum { i: IntList([2, 8, 6, 3, 9, 5, 7, 6, 4]), o: IntList([6, 4]) }
#   Datum { i: IntList([9, 0, 5, 1, 1, 0, 5, 1]), o: IntList([1]) }
#   Datum { i: IntList([9, 8, 9, 8, 9, 8, 5, 0, 2, 5]), o: IntList([0, 2, 5]) }
#   Datum { i: IntList([5, 1, 1, 2, 8, 5, 7, 5, 4, 7]), o: IntList([5, 4, 7]) }
#   Datum { i: IntList([5, 7, 4, 9, 1, 0, 3, 5, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([9, 2, 4, 8, 0, 5, 3, 1, 7]), o: IntList([1, 7]) }
#   Datum { i: IntList([1, 9, 8, 2, 0, 4, 6, 7]), o: IntList([7]) }
#   Datum { i: IntList([7, 2, 9, 5, 3, 6, 4, 5]), o: IntList([5]) }
#   Datum { i: IntList([3, 0, 1, 4, 8, 2, 7]), o: IntList([]) }
#   Datum { i: IntList([8, 2, 9, 1, 5, 3, 4, 0, 8, 6]), o: IntList([0, 8, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c058,0,2,1,1289193,1127662,1255375,1255375,600.000202201,601.897261443
c058,0,2,2,863732,792732,837852,837852,1200.001074492,1203.198557674
c058,0,2,3,539594,497375,519486,519486,1800.001075605,1804.152202178
c058,0,2,4,297598,277178,287383,287383,2400.004219812,2405.289081829
c058,0,2,5,207249,192476,199720,199720,3000.004561785,3006.513542287
c058,0,2,6,150599,139263,144719,144719,3600.006708577,3607.615388299
c058,0,2,7,119458,110039,114532,114532,4200.0103907600005,4208.765906837
c058,0,2,8,97884,89459,93215,93215,4800.011390712,4809.921346422
c058,0,2,9,83842,76572,79854,79854,5400.016898324,5411.107826911
c058,0,2,10,72110,65684,68587,68587,6000.021051025,6012.453185013
c058,0,2,11,66145,60034,62849,62849,6600.030095409,6613.50035042
# search time: 6600.030s
# total time: 6613.783s
c058,1,2,1,1210188,1027537,1169963,1169963,600.000478657,600.280659149
c058,1,2,2,886617,811511,858840,858840,1200.000776923,1200.830502594
c058,1,2,3,536181,494522,515770,515770,1800.00112416,1801.277363733
c058,1,2,4,301645,280566,291014,291014,2400.001780473,2401.770238492
c058,1,2,5,212058,196573,204202,204202,3000.002954335,3002.256686998
c058,1,2,6,154066,142295,148061,148061,3600.0034088780003,3602.79138125
c058,1,2,7,121170,111693,116181,116181,4200.003560957,4203.363408331
c058,1,2,8,99459,90975,94807,94807,4800.007516372,4803.864080527
c058,1,2,9,84428,76946,80357,80357,5400.017318043,5404.463353038
c058,1,2,10,74301,67612,70658,70658,6000.019139649,6004.860167792
c058,1,2,11,68240,61915,64878,64878,6600.030608266,6605.317358407
# search time: 6600.031s
# total time: 13219.542s
c058,2,2,1,1210563,987264,1160049,1160049,600.00399685,600.17572932
c058,2,2,2,852890,784880,827924,827924,1200.0112558390001,1200.540472446
c058,2,2,3,532982,491676,513282,513282,1800.015753358,1800.815737461
c058,2,2,4,293577,274392,284007,284007,2400.017089041,2401.153914015
c058,2,2,5,204723,190058,197197,197197,3000.018462741,3001.556122521
c058,2,2,6,149005,137644,143143,143143,3600.020545678,3601.907405225
c058,2,2,7,118667,109295,113789,113789,4200.025031173,4202.320111796
c058,2,2,8,96481,88362,91924,91924,4800.030705325,4802.662775074
c058,2,2,9,82275,74869,78203,78203,5400.033507198,5402.973010836
c058,2,2,10,71099,64763,67636,67636,6000.058360567999,6003.366604806
c058,2,2,11,65386,59413,62071,62071,6600.060894937999,6603.789151208
# search time: 6600.061s
# total time: 19823.763s
c058,3,2,1,1297798,1135076,1264398,1264398,600.000039888,600.259459116
c058,3,2,2,856327,786561,830649,830649,1200.000278991,1200.562572043
c058,3,2,3,537184,495692,517169,517169,1800.000939355,1800.817786149
c058,3,2,4,300117,279459,289749,289749,2400.002207266,2401.094500379
c058,3,2,5,208336,193307,200648,200648,3000.003023141,3001.361115141
c058,3,2,6,152481,141180,146528,146528,3600.003926777,3601.716207449
c058,3,2,7,117526,108616,112881,112881,4200.009328434,4202.016106945
c058,3,2,8,97437,88924,92734,92734,4800.018733813,4802.339935057
c058,3,2,9,84183,76641,80087,80087,5400.025120414,5402.657889592
c058,3,2,10,73388,66695,69735,69735,6000.037460921,6002.977502942
c058,3,2,11,67935,61687,64673,64673,6600.051730966,6603.353916206
# search time: 6600.052s
# total time: 26427.562s
c058,4,2,1,1307727,1147901,1280454,1280454,600.000123126,600.289804214
c058,4,2,2,875224,802064,848080,848080,1200.006079736,1200.561320217
c058,4,2,3,538828,496635,518631,518631,1800.008162997,1800.768858622
c058,4,2,4,297927,277172,287609,287609,2400.008332936,2401.000433695
c058,4,2,5,212696,197642,204920,204920,3000.0089532350003,3001.266551452
c058,4,2,6,151067,139721,145299,145299,3600.016024982,3601.504775245
c058,4,2,7,119139,109704,114202,114202,4200.026824668,4201.691440515
c058,4,2,8,97632,89334,92968,92968,4800.0352376129995,4801.928426625
c058,4,2,9,82400,75213,78484,78484,5400.036492576999,5402.098500117
c058,4,2,10,73175,66511,69524,69524,6000.038539427999,6002.314220027
c058,4,2,11,68194,61900,64852,64852,6600.040897032999,6602.521719039
# search time: 6600.041s
# total time: 33030.542s
