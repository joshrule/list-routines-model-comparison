    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.47s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c001_4.json out/1593091766/results/c001_4_best.csv out/1593091766/results/c001_4_predictions.csv out/1593091766/results/c001_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 9, 3, 4]), o: IntList([3]) }
#   Datum { i: IntList([5, 3, 6]), o: IntList([6]) }
#   Datum { i: IntList([8, 1, 8]), o: IntList([8]) }
#   Datum { i: IntList([7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([2, 4, 3, 2]), o: IntList([3]) }
#   Datum { i: IntList([2, 2, 2, 8]), o: IntList([2]) }
#   Datum { i: IntList([0, 0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([0, 6, 4, 4, 0, 6, 4]), o: IntList([4]) }
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([9, 6, 9, 8, 6]), o: IntList([9]) }
#   Datum { i: IntList([5, 7, 5, 7, 5]), o: IntList([5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c001,0,4,1,1193616,1010303,1153188,1153188,600.00033607,601.846930789
c001,0,4,2,815592,769377,791544,791544,1200.000680542,1202.984152919
c001,0,4,3,566098,528347,548844,548844,1800.000899113,1803.54672283
c001,0,4,4,495916,461265,479971,479971,2400.00921391,2404.023112185
c001,0,4,5,404176,378294,392115,392115,3000.0094765860003,3004.63283692
c001,0,4,6,341655,315978,329270,329270,3600.0104556410006,3605.246931062
c001,0,4,7,299260,277061,289347,289347,4200.0105081520005,4205.790074211
c001,0,4,8,258609,238309,249473,249473,4800.011486210001,4806.364303822
c001,0,4,9,226768,208346,218273,218273,5400.013467251001,5406.94728436
c001,0,4,10,201359,184310,193378,193378,6000.014337898001,6007.524765351
c001,0,4,11,176085,160902,169253,169253,6600.015348537001,6608.065730511
# search time: 6600.015s
# total time: 6608.496s
c001,1,4,1,1328982,1173284,1296391,1296391,600.002415344,600.410042165
c001,1,4,2,861220,811227,835148,835148,1200.002879631,1200.796122407
c001,1,4,3,582739,544085,565155,565155,1800.003746539,1801.067899586
c001,1,4,4,514986,480332,498711,498711,2400.004157587,2401.322815541
c001,1,4,5,396423,369960,384374,384374,3000.0047975039997,3001.599662938
c001,1,4,6,339987,314586,327761,327761,3600.0059623089996,3601.929780427
c001,1,4,7,296153,274638,286411,286411,4200.006515646,4202.280490127
c001,1,4,8,258644,238309,249494,249494,4800.007956666999,4802.634738034
c001,1,4,9,226736,208273,218197,218197,5400.008261761,5402.948213716
c001,1,4,10,200180,183298,192385,192385,6000.009278379,6003.263816846
c001,1,4,11,173175,158360,166379,166379,6600.013177612,6603.584107888
# search time: 6600.013s
# total time: 13212.709s
c001,2,4,1,1307611,1130208,1269150,1269150,600.004008262,600.286676418
c001,2,4,2,841569,793709,816719,816719,1200.004460767,1200.581724384
c001,2,4,3,589708,550085,571450,571450,1800.005641586,1800.783578371
c001,2,4,4,510755,475173,494523,494523,2400.006183092,2400.993391114
c001,2,4,5,402525,375610,390115,390115,3000.014950628,3001.213305665
c001,2,4,6,341201,315997,328830,328830,3600.0152712219997,3601.451426745
c001,2,4,7,299032,277098,289205,289205,4200.018245837,4201.682396508
c001,2,4,8,259636,239149,250389,250389,4800.019524261,4801.903559231
c001,2,4,9,227183,209330,218875,218875,5400.020364296,5402.174587217
c001,2,4,10,200265,183300,192419,192419,6000.021100952999,6002.395734253
c001,2,4,11,176097,160823,169078,169078,6600.021384938,6602.591882816
# search time: 6600.021s
# total time: 19815.933s
c001,3,4,1,1319222,1163545,1286794,1286794,600.029591419,600.309775827
c001,3,4,2,860388,811343,834619,834619,1200.029667892,1200.575186624
c001,3,4,3,583525,543706,565072,565072,1800.030280842,1800.791104332
c001,3,4,4,513446,478485,497261,497261,2400.030879771,2400.967034408
c001,3,4,5,422099,394857,409108,409108,3000.0315280249997,3001.158626974
c001,3,4,6,338450,312982,326139,326139,3600.039932584,3601.356559514
c001,3,4,7,295919,274514,286332,286332,4200.040198169,4201.547841865
c001,3,4,8,262612,242259,253330,253330,4800.042162527,4801.737183446
c001,3,4,9,223313,205517,215034,215034,5400.044007411,5401.910559182
c001,3,4,10,200214,183094,192371,192371,6000.04412449,6002.076473888
c001,3,4,11,176406,161207,169537,169537,6600.047109849001,6602.252232126
# search time: 6600.047s
# total time: 26419.008s
c001,4,4,1,1194820,973672,1144756,1144756,600.00576301,600.168993553
c001,4,4,2,861113,809337,834053,834053,1200.006371048,1200.395631496
c001,4,4,3,589210,550255,571254,571254,1800.006765309,1800.559461334
c001,4,4,4,510183,475774,494296,494296,2400.007449501,2400.704321549
c001,4,4,5,394314,368140,382372,382372,3000.0125928569996,3000.857668739
c001,4,4,6,343714,318342,331455,331455,3600.0131699689996,3601.025460281
c001,4,4,7,300006,278049,290083,290083,4200.019316293,4201.17284263
c001,4,4,8,257428,237437,248470,248470,4800.019680133,4801.30521155
c001,4,4,9,227036,208615,218527,218527,5400.0230956390005,5401.45724618
c001,4,4,10,196738,180221,189138,189138,6000.026457746,6001.592882637
c001,4,4,11,176998,161672,170059,170059,6600.027333722001,6601.728839863
# search time: 6600.027s
# total time: 33021.379s
