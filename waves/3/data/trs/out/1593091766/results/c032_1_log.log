    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c032_1.json out/1593091766/results/c032_1_best.csv out/1593091766/results/c032_1_predictions.csv out/1593091766/results/c032_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 5, 5, 5]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 3, 1, 7, 6, 9, 2]), o: IntList([7, 6, 9, 2]) }
#   Datum { i: IntList([3, 7, 6, 9, 1, 8, 2]), o: IntList([1, 8, 2]) }
#   Datum { i: IntList([1, 4, 0, 4, 0]), o: IntList([0]) }
#   Datum { i: IntList([2, 0, 9, 4, 0, 5]), o: IntList([0, 5]) }
#   Datum { i: IntList([8, 0, 5, 2, 5, 8, 5, 6, 6, 3]), o: IntList([5, 2, 5, 8, 5, 6, 6, 3]) }
#   Datum { i: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), o: IntList([0, 0, 0, 0, 0, 0]) }
#   Datum { i: IntList([4, 7, 1, 4, 7, 0, 9, 5, 5]), o: IntList([7, 0, 9, 5, 5]) }
#   Datum { i: IntList([6, 0, 1, 2, 8, 4, 6, 4, 3]), o: IntList([1, 2, 8, 4, 6, 4, 3]) }
#   Datum { i: IntList([9, 6, 6, 6, 9, 0, 9, 7]), o: IntList([9, 0, 9, 7]) }
#   Datum { i: IntList([9, 3, 9, 9, 3, 3]), o: IntList([3, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c032,0,1,1,710419,613930,689444,689444,600.001791057,603.01090416
c032,0,1,2,522384,482561,508477,508477,1200.008469854,1204.083910405
c032,0,1,3,514284,470899,490524,490524,1800.0112534109999,1805.28980252
c032,0,1,4,293577,273686,282183,282183,2400.013327408,2406.396680923
c032,0,1,5,273997,254112,263783,263783,3000.016452628,3007.360492691
c032,0,1,6,224183,207152,215532,215532,3600.017376005,3608.325607246
c032,0,1,7,140790,131319,135354,135354,4200.018373871,4209.020276232
c032,0,1,8,104482,97145,100521,100521,4800.018810704,4809.783902599
c032,0,1,9,86818,80668,83589,83589,5400.026967725,5410.538404736
c032,0,1,10,65302,60238,63041,63041,6000.027868052,6011.301720732
c032,0,1,11,55186,50532,53185,53185,6600.034164256999,6612.030897188
# search time: 6600.034s
# total time: 6612.389s
c032,1,1,1,1286090,1109206,1247575,1247575,600.001836298,600.39341845
c032,1,1,2,908835,842827,886423,886423,1200.003281435,1200.866121672
c032,1,1,3,510557,467773,486900,486900,1800.003517476,1801.260434984
c032,1,1,4,291437,271746,280260,280260,2400.006378998,2401.679793561
c032,1,1,5,272752,253136,262699,262699,3000.00649227,3002.055606625
c032,1,1,6,219991,203911,211795,211795,3600.0077856079997,3602.473809698
c032,1,1,7,141061,131508,135611,135611,4200.013371078,4202.798875714
c032,1,1,8,102695,95268,98682,98682,4800.014551031,4803.131326421
c032,1,1,9,84958,78926,82005,82005,5400.017114347001,5403.449173103
c032,1,1,10,64078,59299,62109,62109,6000.024766055,6003.756203204
c032,1,1,11,55767,51291,54044,54044,6600.028049359,6604.21266874
# search time: 6600.028s
# total time: 13217.334s
c032,2,1,1,1250446,1061019,1208789,1208789,600.000048745,600.272345556
c032,2,1,2,856660,795065,836293,836293,1200.001150735,1200.575165962
c032,2,1,3,510836,468207,487482,487482,1800.002785122,1800.846694707
c032,2,1,4,286475,266610,275331,275331,2400.003537763,2401.106105797
c032,2,1,5,269793,250559,259927,259927,3000.004454975,3001.375277724
c032,2,1,6,226197,209234,217360,217360,3600.004598363,3601.660429173
c032,2,1,7,146910,137419,141739,141739,4200.005024854,4201.857088145
c032,2,1,8,104426,96877,100096,100096,4800.0071035930005,4802.079252914
c032,2,1,9,85555,79477,82389,82389,5400.014926771,5402.311618924
c032,2,1,10,64629,59809,62540,62540,6000.014934547,6002.530564156
c032,2,1,11,55167,50635,53294,53294,6600.025311263,6602.789032592
# search time: 6600.025s
# total time: 19821.200s
c032,3,1,1,1333040,1159840,1295936,1295936,600.002302084,600.287137216
c032,3,1,2,876268,813999,855313,855313,1200.00620029,1200.555604138
c032,3,1,3,510194,467035,486396,486396,1800.009838455,1800.78493024
c032,3,1,4,287080,267842,276110,276110,2400.014964865,2400.986814391
c032,3,1,5,264752,245603,255066,255066,3000.016016645,3001.193349107
c032,3,1,6,219183,202559,210774,210774,3600.016995193,3601.39399692
c032,3,1,7,140990,131649,135792,135792,4200.020485434,4201.536441891
c032,3,1,8,103335,96100,99391,99391,4800.024607497,4801.753357291
c032,3,1,9,85483,79307,82125,82125,5400.031784253,5401.92331645
c032,3,1,10,64042,58977,61914,61914,6000.031887593001,6002.035977245
c032,3,1,11,55430,50716,53468,53468,6600.0438457010005,6602.225063655
# search time: 6600.044s
# total time: 26424.161s
c032,4,1,1,1317712,1147143,1281261,1281261,600.00068485,600.296691896
c032,4,1,2,899952,835544,877812,877812,1200.0018052599999,1200.545743398
c032,4,1,3,510759,467788,487322,487322,1800.003681788,1800.751774209
c032,4,1,4,291744,271761,280287,280287,2400.018949761,2400.951804521
c032,4,1,5,274121,254859,264023,264023,3000.019411886,3001.121258361
c032,4,1,6,222229,205455,213669,213669,3600.021030112,3601.283940332
c032,4,1,7,134661,125403,129877,129877,4200.022840154,4201.410503369
c032,4,1,8,103464,95928,99065,99065,4800.023573932,4801.592330187
c032,4,1,9,85239,78871,81820,81820,5400.024990141,5401.74506479
c032,4,1,10,63779,58826,61505,61505,6000.028504508,6001.879471498
c032,4,1,11,56443,52107,54758,54758,6600.036595582,6602.046195693
# search time: 6600.037s
# total time: 33026.925s
