    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c034_3.json out/1593091766/results/c034_3_best.csv out/1593091766/results/c034_3_predictions.csv out/1593091766/results/c034_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 1, 2, 7, 4]), o: IntList([6, 2, 1, 7, 4]) }
#   Datum { i: IntList([3, 0, 8, 7, 2, 1]), o: IntList([3, 8, 0, 7, 2, 1]) }
#   Datum { i: IntList([7, 1, 8, 6, 3, 5, 9, 4]), o: IntList([7, 8, 1, 6, 3, 5, 9, 4]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 8, 0, 0]) }
#   Datum { i: IntList([0, 8, 3, 1, 4, 9, 5, 9, 5]), o: IntList([0, 3, 8, 1, 4, 9, 5, 9, 5]) }
#   Datum { i: IntList([9, 7, 6, 6, 9, 7, 6]), o: IntList([9, 6, 7, 6, 9, 7, 6]) }
#   Datum { i: IntList([3, 3, 4, 4, 6, 4, 3, 4]), o: IntList([3, 4, 3, 4, 6, 4, 3, 4]) }
#   Datum { i: IntList([3, 1, 4, 2, 6, 5, 9, 7, 0, 8]), o: IntList([3, 4, 1, 2, 6, 5, 9, 7, 0, 8]) }
#   Datum { i: IntList([1, 9, 1, 4]), o: IntList([1, 1, 9, 4]) }
#   Datum { i: IntList([9, 0, 2]), o: IntList([9, 2, 0]) }
#   Datum { i: IntList([5, 9, 3, 5, 7, 5, 1, 1, 2, 6]), o: IntList([5, 3, 9, 5, 7, 5, 1, 1, 2, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c034,0,3,1,1304028,1137107,1268262,1268262,600.002101322,601.917879717
c034,0,3,2,484153,454139,466817,466817,1200.0029336880002,1202.899750561
c034,0,3,3,292664,268576,276228,276228,1800.0055761870003,1803.692744584
c034,0,3,4,191525,176481,180863,180863,2400.006333395,2404.330736968
c034,0,3,5,146694,137149,141503,141503,3000.0082471620003,3005.138881631
c034,0,3,6,108271,100424,103663,103663,3600.0126642200003,3605.924319899
c034,0,3,7,85984,79717,82147,82147,4200.014062237,4206.704535077
c034,0,3,8,77852,70737,73194,73194,4800.022222732,4807.512252608
c034,0,3,9,61083,55104,56685,56685,5400.025479774,5408.35522522
c034,0,3,10,60901,54751,56479,56479,6000.035573206,6008.905869379
c034,0,3,11,56183,50747,52180,52180,6600.0372934,6609.537714462
# search time: 6600.037s
# total time: 6609.843s
c034,1,3,1,1306133,1163384,1278617,1278617,600.000464554,600.4284278
c034,1,3,2,462213,433043,445933,445933,1200.0007091070001,1200.835199088
c034,1,3,3,297881,274809,282683,282683,1800.0010428990001,1801.156617544
c034,1,3,4,184881,169991,174116,174116,2400.0022501760004,2401.509600887
c034,1,3,5,144968,135595,139804,139804,3000.0055894310003,3001.876281107
c034,1,3,6,105966,98513,101600,101600,3600.0086607470002,3602.276230439
c034,1,3,7,85808,79276,81868,81868,4200.0107219110005,4202.697275657
c034,1,3,8,77969,71047,73314,73314,4800.014322453,4803.046637074
c034,1,3,9,61023,55108,56670,56670,5400.015451911,5403.373331317
c034,1,3,10,59535,53223,54888,54888,6000.022811247,6003.698134326
c034,1,3,11,56300,50787,52275,52275,6600.030153191001,6603.983687559
# search time: 6600.030s
# total time: 13214.321s
c034,2,3,1,1261260,1035351,1209668,1209668,600.007836023,600.225920189
c034,2,3,2,468559,438813,451788,451788,1200.012443737,1200.501895958
c034,2,3,3,298951,275456,283512,283512,1800.012805436,1800.738438451
c034,2,3,4,185376,170089,174460,174460,2400.014533566,2400.95932871
c034,2,3,5,143678,134475,138751,138751,3000.014843825,3001.205342601
c034,2,3,6,107312,99777,102688,102688,3600.014923322,3601.45551696
c034,2,3,7,84695,78088,80846,80846,4200.015801554,4201.716476056
c034,2,3,8,78338,71340,73498,73498,4800.019441771,4801.935451089
c034,2,3,9,61099,55174,56791,56791,5400.028348145,5402.174849501
c034,2,3,10,58003,52246,53786,53786,6000.041770129999,6002.447248347
c034,2,3,11,55352,49870,51319,51319,6600.047554219999,6602.697018955
# search time: 6600.048s
# total time: 19817.601s
c034,3,3,1,1269525,1091827,1230620,1230620,600.000027781,600.268063439
c034,3,3,2,466198,437062,449887,449887,1200.00075281,1200.501410287
c034,3,3,3,291606,267832,275559,275559,1800.000861391,1800.72623603
c034,3,3,4,190297,175048,179550,179550,2400.001579211,2400.894116225
c034,3,3,5,143698,134428,138725,138725,3000.002648402,3001.076262738
c034,3,3,6,105346,97761,100883,100883,3600.0098093340002,3601.26792198
c034,3,3,7,85747,79499,81856,81856,4200.01286592,4201.43520527
c034,3,3,8,76909,70126,72379,72379,4800.020254227,4801.636147546
c034,3,3,9,60835,54940,56553,56553,5400.022376323,5401.826773315
c034,3,3,10,57659,51637,53165,53165,6000.027374843,6002.029621564
c034,3,3,11,55671,50255,51652,51652,6600.035768773,6602.211789076
# search time: 6600.036s
# total time: 26420.278s
c034,4,3,1,1250999,1027454,1200258,1200258,600.000047378,600.196346458
c034,4,3,2,464696,435452,448309,448309,1200.00385581,1200.387122763
c034,4,3,3,298606,275132,283076,283076,1800.007165713,1800.543020286
c034,4,3,4,190292,174749,179368,179368,2400.009446749,2400.69138577
c034,4,3,5,142674,132772,137541,137541,3000.010947658,3000.847162396
c034,4,3,6,104488,96634,100088,100088,3600.012023103,3601.011979907
c034,4,3,7,84877,78373,81009,81009,4200.014171064,4201.157253644
c034,4,3,8,77072,70204,72468,72468,4800.016131484,4801.292140134
c034,4,3,9,61106,55265,56771,56771,5400.02402678,5401.43411256
c034,4,3,10,59013,52919,54664,54664,6000.030430391,6001.561343086
c034,4,3,11,55191,49670,51045,51045,6600.034705331,6601.730082423
# search time: 6600.035s
# total time: 33022.454s
