    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c033_1.json out/1593091766/results/c033_1_best.csv out/1593091766/results/c033_1_predictions.csv out/1593091766/results/c033_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 3, 8, 3]), o: IntList([3, 3, 8, 8]) }
#   Datum { i: IntList([7, 0, 2, 2, 7]), o: IntList([2, 0, 2, 7, 7]) }
#   Datum { i: IntList([2, 3, 1, 0, 1, 3, 4, 1, 0, 4]), o: IntList([0, 3, 1, 2, 1, 3, 4, 1, 0, 4]) }
#   Datum { i: IntList([7, 9, 1, 5, 6, 3, 0]), o: IntList([5, 9, 1, 7, 6, 3, 0]) }
#   Datum { i: IntList([7, 8, 4, 6, 1, 2, 9, 5]), o: IntList([6, 8, 4, 7, 1, 2, 9, 5]) }
#   Datum { i: IntList([0, 3, 2, 1, 0, 0, 1, 7, 4]), o: IntList([1, 3, 2, 0, 0, 0, 1, 7, 4]) }
#   Datum { i: IntList([2, 1, 9, 9, 3, 9, 3, 2]), o: IntList([9, 1, 9, 2, 3, 9, 3, 2]) }
#   Datum { i: IntList([6, 4, 6, 4, 8, 8, 5]), o: IntList([4, 4, 6, 6, 8, 8, 5]) }
#   Datum { i: IntList([7, 8, 6, 5, 6, 7, 7, 5, 6, 5]), o: IntList([5, 8, 6, 7, 6, 7, 7, 5, 6, 5]) }
#   Datum { i: IntList([8, 1, 8, 5, 5, 2]), o: IntList([5, 1, 8, 8, 5, 2]) }
#   Datum { i: IntList([1, 9, 6, 2]), o: IntList([2, 9, 6, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c033,0,1,1,710746,580588,680963,680963,600.008739674,602.807557236
c033,0,1,2,292674,273787,281625,281625,1200.015371273,1204.557251736
c033,0,1,3,177268,162849,168946,168946,1800.0164505530001,1805.496079036
c033,0,1,4,87063,80282,83058,83058,2400.016937536,2406.812196734
c033,0,1,5,72172,65538,67809,67809,3000.019002258,3008.033612556
c033,0,1,6,53243,48287,49756,49756,3600.022319955,3608.786463475
c033,0,1,7,72243,65665,67795,67795,4200.026506261,4210.044105799
c033,0,1,8,60211,54197,55985,55985,4800.030016692,4811.245035961
c033,0,1,9,52761,47569,49049,49049,5400.036256321,5412.434061806
c033,0,1,10,43137,38959,40005,40005,6000.046322393,6013.859057183
c033,0,1,11,40160,36133,37175,37175,6600.04700977,6615.151549394
# search time: 6600.047s
# total time: 6615.371s
c033,1,1,1,1171775,1030289,1142323,1142323,600.000826081,600.438676536
c033,1,1,2,464366,435827,447950,447950,1200.003245909,1200.929983581
c033,1,1,3,287313,265274,275167,275167,1800.004739474,1801.269012977
c033,1,1,4,141396,131008,135401,135401,2400.007386475,2401.756170943
c033,1,1,5,120728,110139,113836,113836,3000.00920402,3002.164682476
c033,1,1,6,87680,79463,82313,82313,3600.0111946730003,3602.684970453
c033,1,1,7,72361,65773,67792,67792,4200.015503951,4203.135584468
c033,1,1,8,59448,53879,55534,55534,4800.017066403,4803.574423558
c033,1,1,9,51792,46405,47964,47964,5400.020705783,5404.007592671
c033,1,1,10,43751,39420,40569,40569,6000.0263851770005,6004.41140072
c033,1,1,11,40112,36010,37067,37067,6600.049485511001,6604.884362793
# search time: 6600.049s
# total time: 13220.659s
c033,2,1,1,1151273,996341,1117756,1117756,600.000106546,600.272212445
c033,2,1,2,480222,449751,462431,462431,1200.002884135,1200.587630352
c033,2,1,3,285846,263156,274316,274316,1800.0041782869998,1800.793320463
c033,2,1,4,142426,132088,136229,136229,2400.009368534,2401.11917237
c033,2,1,5,120662,110205,113791,113791,3000.009927616,3001.37062105
c033,2,1,6,88364,80386,82945,82945,3600.020764953,3601.664875288
c033,2,1,7,71077,64327,66756,66756,4200.020914199,4201.942033427
c033,2,1,8,58931,53398,55030,55030,4800.028597193,4802.289600446
c033,2,1,9,52339,47123,48639,48639,5400.037592721,5402.617119053
c033,2,1,10,43910,39584,40788,40788,6000.052087257,6002.929365751
c033,2,1,11,39539,35403,36393,36393,6600.058305044,6603.256938859
# search time: 6600.058s
# total time: 19824.328s
c033,3,1,1,1154873,1000144,1121595,1121595,600.000645913,600.253101902
c033,3,1,2,459376,430569,442816,442816,1200.0011356969999,1200.504470232
c033,3,1,3,284063,262714,272456,272456,1800.0013873619998,1800.665076015
c033,3,1,4,143798,133392,137432,137432,2400.0071694199996,2400.896473999
c033,3,1,5,118819,108475,112166,112166,3000.013223614,3001.10305549
c033,3,1,6,88136,80079,82635,82635,3600.023572258,3601.272772188
c033,3,1,7,71341,64811,66868,66868,4200.026596887,4201.493316424
c033,3,1,8,59886,53956,55703,55703,4800.031718404,4801.670304661
c033,3,1,9,51761,46640,48081,48081,5400.032595504,5401.910585483
c033,3,1,10,42879,38633,39787,39787,6000.0513322589995,6002.173551082
c033,3,1,11,38952,35017,35959,35959,6600.072046345999,6602.43190207
# search time: 6600.072s
# total time: 26427.209s
c033,4,1,1,1117185,914443,1070664,1070664,600.012999559,600.192166464
c033,4,1,2,474846,444446,457450,457450,1200.013308055,1200.421556969
c033,4,1,3,284198,262676,272438,272438,1800.017089712,1800.568252241
c033,4,1,4,141903,131424,135634,135634,2400.020626974,2400.726533118
c033,4,1,5,119258,108857,112363,112363,3000.0261020380003,3000.891168285
c033,4,1,6,88588,80423,83037,83037,3600.0346945260003,3601.056230498
c033,4,1,7,72108,65525,67619,67619,4200.043854675,4201.177206819
c033,4,1,8,59896,54221,55888,55888,4800.053765726,4801.365301925
c033,4,1,9,51556,46572,48026,48026,5400.054307175,5401.527214182
c033,4,1,10,43202,38908,40071,40071,6000.056484590999,6001.725549322
c033,4,1,11,40010,35909,36940,36940,6600.062646408999,6601.968701596
# search time: 6600.063s
# total time: 33029.571s
