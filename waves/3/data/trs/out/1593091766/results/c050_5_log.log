    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c050_5.json out/1593091766/results/c050_5_best.csv out/1593091766/results/c050_5_predictions.csv out/1593091766/results/c050_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 6, 9, 7, 5, 9]), o: IntList([6, 6, 6, 9, 7, 5, 9]) }
#   Datum { i: IntList([6, 0, 3, 0, 5, 2, 9, 7, 8, 1]), o: IntList([6, 6, 0, 3, 0, 5, 2, 9, 7, 8, 1]) }
#   Datum { i: IntList([7, 9, 6, 6, 9, 2, 9, 9, 2, 9]), o: IntList([7, 7, 9, 6, 6, 9, 2, 9, 9, 2, 9]) }
#   Datum { i: IntList([3, 7]), o: IntList([3, 3, 7]) }
#   Datum { i: IntList([3, 2, 3, 0, 2, 0, 4, 3]), o: IntList([3, 3, 2, 3, 0, 2, 0, 4, 3]) }
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
#   Datum { i: IntList([2, 4, 9, 3]), o: IntList([2, 2, 4, 9, 3]) }
#   Datum { i: IntList([5, 8, 5, 5, 5, 8, 8]), o: IntList([5, 5, 8, 5, 5, 5, 8, 8]) }
#   Datum { i: IntList([4, 6, 7]), o: IntList([4, 4, 6, 7]) }
#   Datum { i: IntList([0, 4, 8, 4, 0]), o: IntList([0, 0, 4, 8, 4, 0]) }
#   Datum { i: IntList([4, 2, 6, 1, 5, 3, 1, 8, 9]), o: IntList([4, 4, 2, 6, 1, 5, 3, 1, 8, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c050,0,5,1,670224,580459,650892,650892,600.000000466,602.984079665
c050,0,5,2,216920,198586,205094,205094,1200.005287031,1204.759607446
c050,0,5,3,93397,83491,85542,85542,1800.0083347620002,1806.168934823
c050,0,5,4,62413,56557,58300,58300,2400.013021357,2407.341631486
c050,0,5,5,56726,51091,52668,52668,3000.023887659,3008.687724462
c050,0,5,6,48291,43333,44670,44670,3600.024426339,3609.653029469
c050,0,5,7,47780,42767,44170,44170,4200.031603227,4210.5761247
c050,0,5,8,43206,38702,39988,39988,4800.034391389,4811.606069679
c050,0,5,9,37464,33096,34236,34236,5400.034692952,5412.557608246
c050,0,5,10,35608,31507,32466,32466,6000.091835235,6013.576987102
c050,0,5,11,32177,28451,29369,29369,6600.096931979,6614.426477306
# search time: 6600.097s
# total time: 6614.645s
c050,1,5,1,630559,515367,604483,604483,600.001605711,600.298395003
c050,1,5,2,211720,193418,199920,199920,1200.007175845,1201.031120439
c050,1,5,3,95515,84947,87011,87011,1800.01016657,1801.628796066
c050,1,5,4,62137,56353,58115,58115,2400.014875174,2402.216579429
c050,1,5,5,56461,50972,52439,52439,3000.0191936869996,3002.840179187
c050,1,5,6,47892,43309,44717,44717,3600.0571942939996,3603.306138473
c050,1,5,7,48082,43028,44368,44368,4200.068945245,4203.77250067
c050,1,5,8,43401,38877,40109,40109,4800.075840967,4804.24298302
c050,1,5,9,37336,33126,34157,34157,5400.088055509999,5404.660939937
c050,1,5,10,35117,31024,31955,31955,6000.100537990999,6005.156143012
c050,1,5,11,32183,28323,29247,29247,6600.106978966,6605.699946622
# search time: 6600.107s
# total time: 13220.683s
c050,2,5,1,650134,553205,628536,628536,600.000228257,600.301418798
c050,2,5,2,215837,197350,204063,204063,1200.002037879,1200.771821644
c050,2,5,3,96609,86410,88392,88392,1800.0050629739999,1801.114343274
c050,2,5,4,62144,56262,58033,58033,2400.011535826,2401.485016538
c050,2,5,5,59712,53925,55552,55552,3000.017043887,3001.786868627
c050,2,5,6,83675,74740,77054,77054,3600.021472796,3602.137315033
c050,2,5,7,80633,73007,75431,75431,4200.040061339,4202.4595299
c050,2,5,8,74579,67537,69587,69587,4800.04062356,4802.791808339
c050,2,5,9,63292,56614,58404,58404,5400.05235556,5403.071358331
c050,2,5,10,59461,53225,54976,54976,6000.061616188001,6003.328763379
c050,2,5,11,53520,47913,49384,49384,6600.063368006001,6603.679350023
# search time: 6600.063s
# total time: 19824.902s
c050,3,5,1,1096824,898450,1051300,1051300,600.000226919,600.239583797
c050,3,5,2,354558,325142,335177,335177,1200.0007617330002,1200.553130957
c050,3,5,3,156233,139037,142304,142304,1800.0018259830003,1800.84319091
c050,3,5,4,106575,96584,99438,99438,2400.0035677110004,2401.082068849
c050,3,5,5,94795,86494,88980,88980,3000.0058980190006,3001.33856526
c050,3,5,6,83019,74359,76796,76796,3600.0117563530007,3601.539820104
c050,3,5,7,81120,73345,75881,75881,4200.0127664110005,4201.74416256
c050,3,5,8,73966,66411,68691,68691,4800.017737900001,4801.902131762
c050,3,5,9,62532,56080,57965,57965,5400.021520282001,5402.107593718
c050,3,5,10,59696,53227,55020,55020,6000.023766703001,6002.330734039
c050,3,5,11,54096,48131,49662,49662,6600.03306974,6602.545856878
# search time: 6600.033s
# total time: 26427.794s
c050,4,5,1,1100983,901881,1055495,1055495,600.000066661,600.178237068
c050,4,5,2,355265,325795,335996,335996,1200.001518114,1200.418753099
c050,4,5,3,157717,141025,144199,144199,1800.00324506,1800.646921724
c050,4,5,4,105540,95782,98546,98546,2400.003813304,2400.82830797
c050,4,5,5,93615,85095,87694,87694,3000.0062717069995,3001.060174002
c050,4,5,6,81998,73595,75912,75912,3600.0166308479993,3601.244929387
c050,4,5,7,81342,73712,75910,75910,4200.019946705999,4201.377047355
c050,4,5,8,74115,66487,68711,68711,4800.0204129369995,4801.507742147
c050,4,5,9,63030,56198,58129,58129,5400.026012165999,5401.683051063
c050,4,5,10,59480,53183,54856,54856,6000.0310363769995,6001.826763535
c050,4,5,11,52600,46329,48310,48310,6600.035206641999,6602.172077977
# search time: 6600.035s
# total time: 33030.445s
