    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c049_2.json out/1593091766/results/c049_2_best.csv out/1593091766/results/c049_2_predictions.csv out/1593091766/results/c049_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 6, 8]), o: IntList([6, 8]) }
#   Datum { i: IntList([9, 2, 1, 7, 0, 4, 7]), o: IntList([2, 1, 7, 0, 4, 7]) }
#   Datum { i: IntList([2]), o: IntList([]) }
#   Datum { i: IntList([4, 4]), o: IntList([4]) }
#   Datum { i: IntList([5, 1, 3, 5, 0, 9, 5, 2, 5]), o: IntList([1, 3, 5, 0, 9, 5, 2, 5]) }
#   Datum { i: IntList([7, 1, 4, 1, 0, 8]), o: IntList([1, 4, 1, 0, 8]) }
#   Datum { i: IntList([8, 2, 1, 7, 5, 9, 6, 0, 3, 2]), o: IntList([2, 1, 7, 5, 9, 6, 0, 3, 2]) }
#   Datum { i: IntList([1, 8, 0, 2, 4, 6, 7, 9]), o: IntList([8, 0, 2, 4, 6, 7, 9]) }
#   Datum { i: IntList([4, 9, 7, 6, 6, 4, 5]), o: IntList([9, 7, 6, 6, 4, 5]) }
#   Datum { i: IntList([3, 3, 3, 3]), o: IntList([3, 3, 3]) }
#   Datum { i: IntList([1, 0, 9, 0, 2]), o: IntList([0, 9, 0, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c049,0,2,1,1095649,931393,1059884,1059884,600.015184021,601.996432333
c049,0,2,2,703883,657476,679440,679440,1200.0155564460001,1202.921855645
c049,0,2,3,366753,337908,348588,348588,1800.017240318,1803.514647449
c049,0,2,4,291112,274863,283745,283745,2400.017985551,2404.143843353
c049,0,2,5,257686,241537,250085,250085,3000.0186111860003,3004.693823842
c049,0,2,6,156798,146475,151907,151907,3600.019298306,3605.257314322
c049,0,2,7,147504,137267,142938,142938,4200.02260761,4205.675098783
c049,0,2,8,104690,95982,100630,100630,4800.029551519,4806.092427886
c049,0,2,9,84555,77303,81175,81175,5400.031455555,5406.470271259
c049,0,2,10,74770,68147,71609,71609,6000.031675039,6006.804444433
c049,0,2,11,69295,63147,66505,66505,6600.051027564,6607.270171176
# search time: 6600.051s
# total time: 6607.586s
c049,1,2,1,1129287,966706,1093896,1093896,600.006806363,600.340013794
c049,1,2,2,707547,660812,682894,682894,1200.010842877,1200.698279434
c049,1,2,3,367326,338674,349525,349525,1800.012098389,1800.941503247
c049,1,2,4,295406,277884,287446,287446,2400.012861466,2401.212821794
c049,1,2,5,265385,248978,257536,257536,3000.0139241019997,3001.506886575
c049,1,2,6,154798,144629,150043,150043,3600.0159324449996,3601.781142855
c049,1,2,7,148896,138552,144288,144288,4200.018908624,4201.975335246
c049,1,2,8,106707,97987,102503,102503,4800.018939594,4802.17759963
c049,1,2,9,86786,79172,83148,83148,5400.022063975,5402.371422444
c049,1,2,10,75376,68662,72218,72218,6000.025013261999,6002.595403263
c049,1,2,11,70394,64097,67434,67434,6600.03409115,6602.841218069
# search time: 6600.034s
# total time: 13210.921s
c049,2,2,1,1131657,927143,1084875,1084875,600.010113724,600.198881551
c049,2,2,2,680097,636620,657028,657028,1200.0126831759999,1200.466208509
c049,2,2,3,339045,308645,317066,317066,1800.016442313,1800.708305321
c049,2,2,4,280330,264888,273176,273176,2400.016693862,2400.909747056
c049,2,2,5,256044,241404,248823,248823,3000.017906158,3001.114702705
c049,2,2,6,152269,142603,147502,147502,3600.018982979,3601.303252901
c049,2,2,7,145172,135549,140953,140953,4200.0193052310005,4201.443173844
c049,2,2,8,106081,97332,101844,101844,4800.019645884,4801.577091838
c049,2,2,9,86053,78611,82415,82415,5400.021426944,5401.728660184
c049,2,2,10,75164,68636,71955,71955,6000.025111259,6001.893139996
c049,2,2,11,69052,63171,66224,66224,6600.044831768,6602.114006903
# search time: 6600.045s
# total time: 19813.503s
c049,3,2,1,1098603,900195,1053527,1053527,600.002757667,600.17477301
c049,3,2,2,682963,639274,659766,659766,1200.009056116,1200.412263896
c049,3,2,3,340028,310063,318221,318221,1800.009840454,1800.596399316
c049,3,2,4,286893,270756,279405,279405,2400.011689048,2400.778758335
c049,3,2,5,261364,246187,253885,253885,3000.012744585,3000.943291151
c049,3,2,6,150722,140972,145979,145979,3600.013974125,3601.101184005
c049,3,2,7,144747,134381,140372,140372,4200.017682654,4201.234391763
c049,3,2,8,106892,98134,102567,102567,4800.017697566,4801.328869776
c049,3,2,9,86583,79275,83009,83009,5400.019208148,5401.450366175
c049,3,2,10,73558,67213,70531,70531,6000.022034244,6001.578521965
c049,3,2,11,67975,61913,65111,65111,6600.033507944,6601.729477244
# search time: 6600.034s
# total time: 26415.691s
c049,4,2,1,1168749,1009334,1134202,1134202,600.000027594,600.270566616
c049,4,2,2,699502,653307,675285,675285,1200.000188767,1200.473896372
c049,4,2,3,365440,336555,347445,347445,1800.0013252620001,1800.61711802
c049,4,2,4,294244,276699,286209,286209,2400.003448822,2400.745695251
c049,4,2,5,161784,151144,156610,156610,3000.013466543,3000.886197234
c049,4,2,6,93730,87147,90605,90605,3600.016186439,3601.017182032
c049,4,2,7,87032,80586,84288,84288,4200.023278991001,4201.127531308
c049,4,2,8,62145,56559,59520,59520,4800.033320491,4801.239684485
c049,4,2,9,49620,45253,47544,47544,5400.039297316001,5401.310543166
c049,4,2,10,42524,38790,40789,40789,6000.067779578,6001.452517525
c049,4,2,11,40322,36647,38631,38631,6600.068798978,6601.555494292
# search time: 6600.069s
# total time: 33017.710s
