    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c039_2.json out/1593091766/results/c039_2_best.csv out/1593091766/results/c039_2_predictions.csv out/1593091766/results/c039_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2, 2, 2, 2]), o: IntList([2, 2, 2, 2, 2, 9, 3]) }
#   Datum { i: IntList([0, 7, 0, 0, 0, 0, 7]), o: IntList([0, 7, 0, 0, 0, 0, 7, 3]) }
#   Datum { i: IntList([1, 9, 5, 5, 9, 1, 5, 5]), o: IntList([1, 9, 5, 5, 9, 1, 5, 5, 3]) }
#   Datum { i: IntList([7, 5, 8, 5]), o: IntList([7, 5, 8, 5]) }
#   Datum { i: IntList([8, 0, 6, 7, 4]), o: IntList([8, 0, 6, 7, 4]) }
#   Datum { i: IntList([2, 7, 7, 2, 7, 7, 7, 2]), o: IntList([2, 7, 7, 2, 7, 7, 7, 2, 9, 3]) }
#   Datum { i: IntList([9, 3, 6, 1]), o: IntList([9, 3, 6, 1]) }
#   Datum { i: IntList([4, 1, 1, 9, 0, 1, 8]), o: IntList([4, 1, 1, 9, 0, 1, 8, 9, 3]) }
#   Datum { i: IntList([8, 8, 3, 3, 3]), o: IntList([8, 8, 3, 3, 3]) }
#   Datum { i: IntList([4, 0, 0, 7, 3]), o: IntList([4, 0, 0, 7, 3, 9, 3]) }
#   Datum { i: IntList([5, 5, 4]), o: IntList([5, 5, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c039,0,2,1,1323424,1163443,1290902,1290902,600.000126825,601.945220648
c039,0,2,2,385575,362664,372688,372688,1200.001160387,1202.86672097
c039,0,2,3,214956,203888,205455,205455,1800.00227393,1803.732400763
c039,0,2,4,136251,129436,129982,129982,2400.003109945,2404.586884258
c039,0,2,5,122897,114623,115580,115580,3000.0033010179995,3005.316361036
c039,0,2,6,114431,108455,109558,109558,3600.0042004519996,3605.928476469
c039,0,2,7,84583,77158,77634,77634,4200.0056626119995,4206.606284328
c039,0,2,8,77106,69329,69789,69789,4800.00876483,4807.268569102
c039,0,2,9,65029,58511,58895,58895,5400.014300919999,5407.937503553
c039,0,2,10,59074,53168,53516,53516,6000.043518782999,6008.670468113
c039,0,2,11,52139,47553,47896,47896,6600.048622622999,6609.295440136
# search time: 6600.049s
# total time: 6609.677s
c039,1,2,1,1307276,1132950,1270094,1270094,600.000975884,600.351689016
c039,1,2,2,373456,351539,361370,361370,1200.0014933319999,1200.747094459
c039,1,2,3,213378,202300,203910,203910,1800.0041018949998,1801.151856003
c039,1,2,4,131723,124635,125048,125048,2400.009137701,2401.609424915
c039,1,2,5,119480,111298,112354,112354,3000.010103876,3001.978638902
c039,1,2,6,116409,110308,111424,111424,3600.013754139,3602.299060673
c039,1,2,7,83262,75911,76455,76455,4200.021447703,4202.611471036
c039,1,2,8,77186,69526,70040,70040,4800.023313532,4802.952764085
c039,1,2,9,64880,57941,58294,58294,5400.026510419,5403.23498157
c039,1,2,10,59446,54287,54664,54664,6000.029818705,6003.610950503
c039,1,2,11,50845,45635,45884,45884,6600.031221549,6603.99225078
# search time: 6600.031s
# total time: 13214.384s
c039,2,2,1,1219187,1034144,1178499,1178499,600.000333238,600.255810541
c039,2,2,2,371573,349578,359655,359655,1200.001213216,1200.547270262
c039,2,2,3,211575,200478,202058,202058,1800.001435722,1800.818113158
c039,2,2,4,135420,128747,129294,129294,2400.003452419,2401.057514228
c039,2,2,5,119803,111476,112461,112461,3000.0071936100003,3001.294973408
c039,2,2,6,113631,107646,108678,108678,3600.0072660450005,3601.52093614
c039,2,2,7,84076,76692,77170,77170,4200.011036950001,4201.774982753
c039,2,2,8,76759,69175,69589,69589,4800.013479857001,4802.005580601
c039,2,2,9,64475,58313,58694,58694,5400.013980245,5402.177918136
c039,2,2,10,58676,52746,53050,53050,6000.015893864001,6002.414972586
c039,2,2,11,51577,46448,46718,46718,6600.028160356001,6602.717094954
# search time: 6600.028s
# total time: 19817.730s
c039,3,2,1,1310845,1144282,1276086,1276086,600.000260097,600.286656748
c039,3,2,2,374076,351935,361938,361938,1200.0005927890002,1200.512023774
c039,3,2,3,212357,201139,202773,202773,1800.0025954430002,1800.734716052
c039,3,2,4,134890,128175,128758,128758,2400.0036230590003,2400.93517994
c039,3,2,5,119584,111499,112497,112497,3000.005925929,3001.097806152
c039,3,2,6,113719,107648,108763,108763,3600.009185832,3601.243896224
c039,3,2,7,83388,75890,76331,76331,4200.013073210001,4201.410323897
c039,3,2,8,76965,69520,70027,70027,4800.016589150001,4801.610815482
c039,3,2,9,64891,57973,58335,58335,5400.029759411001,5401.790042757
c039,3,2,10,58875,53680,54021,54021,6000.0306454930005,6001.920303169
c039,3,2,11,50950,46420,46740,46740,6600.036141740001,6602.133859878
# search time: 6600.036s
# total time: 26420.519s
c039,4,2,1,1308645,1136325,1271436,1271436,600.000465529,600.257042346
c039,4,2,2,379970,357056,367201,367201,1200.002958434,1200.467784469
c039,4,2,3,209612,198582,200206,200206,1800.004675518,1800.635255594
c039,4,2,4,134627,128079,128657,128657,2400.005267142,2400.821852165
c039,4,2,5,121826,113756,114759,114759,3000.014795858,3000.964020078
c039,4,2,6,113138,107381,108422,108422,3600.015491296,3601.107458927
c039,4,2,7,83449,75968,76474,76474,4200.017946019,4201.278694393
c039,4,2,8,75920,68081,68536,68536,4800.020964407,4801.424488575
c039,4,2,9,63843,56840,57152,57152,5400.028911738,5401.58081259
c039,4,2,10,59285,53990,54340,54340,6000.035178288999,6001.796187348
c039,4,2,11,51185,46720,47013,47013,6600.039020797999,6601.95278558
# search time: 6600.039s
# total time: 33023.396s
