    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c049_3.json out/1593091766/results/c049_3_best.csv out/1593091766/results/c049_3_predictions.csv out/1593091766/results/c049_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 0, 9, 0, 2]), o: IntList([0, 9, 0, 2]) }
#   Datum { i: IntList([1, 8, 0, 2, 4, 6, 7, 9]), o: IntList([8, 0, 2, 4, 6, 7, 9]) }
#   Datum { i: IntList([3, 3, 3, 3]), o: IntList([3, 3, 3]) }
#   Datum { i: IntList([5, 1, 3, 5, 0, 9, 5, 2, 5]), o: IntList([1, 3, 5, 0, 9, 5, 2, 5]) }
#   Datum { i: IntList([9, 2, 1, 7, 0, 4, 7]), o: IntList([2, 1, 7, 0, 4, 7]) }
#   Datum { i: IntList([4, 4]), o: IntList([4]) }
#   Datum { i: IntList([4, 9, 7, 6, 6, 4, 5]), o: IntList([9, 7, 6, 6, 4, 5]) }
#   Datum { i: IntList([2]), o: IntList([]) }
#   Datum { i: IntList([8, 2, 1, 7, 5, 9, 6, 0, 3, 2]), o: IntList([2, 1, 7, 5, 9, 6, 0, 3, 2]) }
#   Datum { i: IntList([7, 6, 8]), o: IntList([6, 8]) }
#   Datum { i: IntList([7, 1, 4, 1, 0, 8]), o: IntList([1, 4, 1, 0, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c049,0,3,1,676952,552649,648277,648277,600.010893195,602.731438168
c049,0,3,2,314372,291556,301198,301198,1200.0116080389998,1204.603276012
c049,0,3,3,154163,141176,145210,145210,1800.012724446,1805.996973402
c049,0,3,4,115565,106242,109714,109714,2400.016158547,2407.463804109
c049,0,3,5,82356,75587,78040,78040,3000.018453668,3008.707751862
c049,0,3,6,69525,63613,65676,65676,3600.019230866,3609.791883849
c049,0,3,7,65488,58772,60696,60696,4200.020131914,4210.891625945
c049,0,3,8,55033,49570,51086,51086,4800.021720938999,4811.96383346
c049,0,3,9,59662,54867,57826,57826,5400.022568210999,5412.515451689
c049,0,3,10,47094,42824,45170,45170,6000.080088510999,6013.245851628
c049,0,3,11,44943,41151,43381,43381,6600.084352598999,6613.850302396
# search time: 6600.084s
# total time: 6614.091s
c049,1,3,1,674306,578159,653193,653193,600.000304654,600.373806426
c049,1,3,2,321997,297447,308497,308497,1200.0036419930002,1200.934113785
c049,1,3,3,154223,141136,145184,145184,1800.0054867450003,1801.444390893
c049,1,3,4,117466,108068,111714,111714,2400.016806132,2402.007145155
c049,1,3,5,82334,75267,77750,77750,3000.025071588,3002.577185735
c049,1,3,6,70099,63810,66047,66047,3600.03230983,3603.034864127
c049,1,3,7,65524,59097,60873,60873,4200.043176433,4203.611956697
c049,1,3,8,55934,50326,51885,51885,4800.0472492399995,4804.132237698
c049,1,3,9,60123,55502,58233,58233,5400.049781338,5404.450483952
c049,1,3,10,47668,43679,45753,45753,6000.052177183999,6004.870227583
c049,1,3,11,44684,40937,43029,43029,6600.053849442,6605.207634547
# search time: 6600.054s
# total time: 13219.699s
c049,2,3,1,639082,520779,612151,612151,600.000033426,600.197267759
c049,2,3,2,316024,293102,302662,302662,1200.0008405419999,1200.630457225
c049,2,3,3,152687,139831,143097,143097,1800.0008652239999,1800.975471106
c049,2,3,4,114731,105760,109197,109197,2400.014362225,2401.371888625
c049,2,3,5,80345,73631,76108,76108,3000.0152942699997,3001.793862503
c049,2,3,6,70173,64109,66226,66226,3600.01952868,3602.081765146
c049,2,3,7,64861,58396,60321,60321,4200.03210742,4202.509137887
c049,2,3,8,51127,45608,46927,46927,4800.045635973,4802.945464589
c049,2,3,9,60801,56175,58948,58948,5400.047674515,5403.185095562
c049,2,3,10,47983,43888,46240,46240,6000.051652351,6003.429827359
c049,2,3,11,45381,41865,43778,43778,6600.060829767999,6603.636819755
# search time: 6600.061s
# total time: 19823.882s
c049,3,3,1,680864,585681,659978,659978,600.000373905,600.266489849
c049,3,3,2,319905,295402,306266,306266,1200.00154423,1200.565312096
c049,3,3,3,153537,140448,144469,144469,1800.0039049450002,1800.852103661
c049,3,3,4,116798,107493,111037,111037,2400.005396476,2401.15153609
c049,3,3,5,81891,74990,77440,77440,3000.017220536,3001.407244367
c049,3,3,6,70167,64065,66184,66184,3600.0199593859998,3601.648409752
c049,3,3,7,66025,59354,61267,61267,4200.0243771509995,4201.930732005
c049,3,3,8,55196,49898,51415,51415,4800.050317114,4802.216307176
c049,3,3,9,60586,56122,58758,58758,5400.050950794,5402.398048361
c049,3,3,10,47241,43091,45295,45295,6000.052473475,6002.596111276
c049,3,3,11,45247,41593,43625,43625,6600.062325627,6602.809721245
# search time: 6600.062s
# total time: 26427.088s
c049,4,3,1,661517,542146,634329,634329,600.021818312,600.203818659
c049,4,3,2,314274,291351,301018,301018,1200.022709257,1200.502828719
c049,4,3,3,153134,140256,143426,143426,1800.02295496,1800.729038847
c049,4,3,4,114852,105731,109227,109227,2400.0265391460002,2401.015979721
c049,4,3,5,80166,73489,76092,76092,3000.0298520720003,3001.227243428
c049,4,3,6,68773,62395,64497,64497,3600.0324232300004,3601.435631419
c049,4,3,7,65753,59237,61192,61192,4200.039225607001,4201.697045166
c049,4,3,8,52467,46860,48226,48226,4800.044936156,4801.929285384
c049,4,3,9,60879,56202,59036,59036,5400.0464457650005,5402.047702615
c049,4,3,10,48885,44461,46935,46935,6000.054646399,6002.251135327
c049,4,3,11,46198,42226,44523,44523,6600.060313502,6602.33571351
# search time: 6600.060s
# total time: 33029.801s
