    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c060_3.json out/1593091766/results/c060_3_best.csv out/1593091766/results/c060_3_predictions.csv out/1593091766/results/c060_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 8, 8, 5, 1, 4, 5]), o: IntList([0, 8, 0, 8, 8, 8, 4, 1, 5]) }
#   Datum { i: IntList([7, 7, 9, 9, 9, 9, 9, 7, 1]), o: IntList([7, 7, 7, 9, 7, 9, 4, 9, 9]) }
#   Datum { i: IntList([6, 5, 5, 5, 2, 2, 6, 5]), o: IntList([6, 5, 6, 5, 5, 5, 4, 2, 6]) }
#   Datum { i: IntList([2, 0, 7, 6, 4, 1, 3, 0, 9, 6]), o: IntList([2, 0, 2, 7, 0, 7, 4, 4, 3]) }
#   Datum { i: IntList([7, 0, 4, 6, 1, 8, 3]), o: IntList([7, 0, 7, 4, 0, 4, 4, 1, 3]) }
#   Datum { i: IntList([6, 4, 0, 4, 7, 7, 8, 1]), o: IntList([6, 4, 6, 0, 4, 0, 4, 7, 8]) }
#   Datum { i: IntList([8, 4, 6, 5, 3, 7, 2, 0, 0, 9]), o: IntList([8, 4, 8, 6, 4, 6, 4, 3, 2]) }
#   Datum { i: IntList([2, 1, 3, 9, 0, 6, 6]), o: IntList([2, 1, 2, 3, 1, 3, 4, 0, 6]) }
#   Datum { i: IntList([8, 8, 8, 8, 1, 1, 1, 8, 8, 1]), o: IntList([8, 8, 8, 8, 8, 8, 4, 1, 1]) }
#   Datum { i: IntList([3, 7, 2, 2, 4, 9, 4, 3]), o: IntList([3, 7, 3, 2, 7, 2, 4, 4, 4]) }
#   Datum { i: IntList([0, 3, 1, 8, 2, 8, 5, 2, 0, 3]), o: IntList([0, 3, 0, 1, 3, 1, 4, 2, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c060,0,3,1,671284,549250,643237,643237,600.013344936,602.758510589
c060,0,3,2,164566,153348,157465,157465,1200.0157237479998,1204.712680647
c060,0,3,3,93255,85489,87955,87955,1800.0213019999997,1806.319221225
c060,0,3,4,68465,62355,64539,64539,2400.0224891649996,2407.6092057
c060,0,3,5,51333,46931,48508,48508,3000.0281301739997,3008.989936745
c060,0,3,6,36601,33266,34121,34121,3600.0409131939996,3611.17451258
c060,0,3,7,30202,27410,28126,28126,4200.05713857,4213.256039886
c060,0,3,8,25522,23171,23756,23756,4800.076399076,4815.41483577
c060,0,3,9,22237,20189,20724,20724,5400.081435628,5417.349913903
c060,0,3,10,18906,17200,17662,17662,6000.128172,6019.468168538
c060,0,3,11,16318,14730,15131,15131,6600.154118449,6621.512843405
# search time: 6600.154s
# total time: 6621.684s
c060,1,3,1,661778,562071,639801,639801,600.000225056,600.440950315
c060,1,3,2,158887,148157,152103,152103,1200.003399766,1201.22149108
c060,1,3,3,90414,82913,85248,85248,1800.021221686,1801.922799663
c060,1,3,4,65398,59346,61726,61726,2400.034102887,2402.571400444
c060,1,3,5,50121,45797,47275,47275,3000.0421670509995,3003.203258224
c060,1,3,6,36516,33313,34140,34140,3600.0483538309995,3604.036526639
c060,1,3,7,30489,27677,28331,28331,4200.068260722999,4205.053403556
c060,1,3,8,25370,22945,23510,23510,4800.100175856999,4806.115164303
c060,1,3,9,21957,19786,20435,20435,5400.102945256,5407.430227531
c060,1,3,10,18783,16986,17430,17430,6000.121502956,6008.3713548
c060,1,3,11,17040,15410,15867,15867,6600.156246908,6609.503793025
# search time: 6600.156s
# total time: 13231.480s
c060,2,3,1,650088,530523,622614,622614,600.007591301,600.268788923
c060,2,3,2,159542,148714,152650,152650,1200.010075916,1200.778013043
c060,2,3,3,90252,82849,85146,85146,1800.017729003,1801.175604552
c060,2,3,4,66293,60324,62555,62555,2400.020005986,2401.588137036
c060,2,3,5,51482,47320,48588,48588,3000.026078714,3002.048495235
c060,2,3,6,35760,32566,33491,33491,3600.041555097,3602.688928866
c060,2,3,7,30083,27263,27938,27938,4200.065939084,4203.278130815
c060,2,3,8,25383,23026,23560,23560,4800.089600852,4803.919873755
c060,2,3,9,21664,19649,20125,20125,5400.107836526,5404.626921073
c060,2,3,10,18658,16894,17345,17345,6000.113079593,6005.422095445
c060,2,3,11,17001,15392,15844,15844,6600.139909323,6606.243315801
# search time: 6600.140s
# total time: 19837.966s
c060,3,3,1,655539,566711,636339,636339,600.002528037,600.286176747
c060,3,3,2,160990,149761,153803,153803,1200.002674683,1200.630520734
c060,3,3,3,87995,80427,82639,82639,1800.009008632,1801.046322671
c060,3,3,4,66210,60376,62558,62558,2400.009761202,2401.335347698
c060,3,3,5,49626,45250,46756,46756,3000.016898697,3001.721727709
c060,3,3,6,36134,33066,33907,33907,3600.0188944230003,3602.129245627
c060,3,3,7,30055,27264,27916,27916,4200.131492537001,4202.713925934
c060,3,3,8,25260,22872,23423,23423,4800.159188636,4803.16001899
c060,3,3,9,21916,19878,20397,20397,5400.182494087,5403.710208275
c060,3,3,10,18641,16884,17282,17282,6000.19924112,6004.232118908
c060,3,3,11,16261,14761,15233,15233,6600.230340833,6604.734710182
# search time: 6600.230s
# total time: 26442.962s
c060,4,3,1,658728,538734,630985,630985,600.00164175,600.193033658
c060,4,3,2,160555,149391,153536,153536,1200.002264828,1200.516741887
c060,4,3,3,90030,82542,84838,84838,1800.027193243,1800.827395145
c060,4,3,4,65236,59039,61436,61436,2400.035526616,2401.078743801
c060,4,3,5,49636,45054,46885,46885,3000.0469547909997,3001.323649979
c060,4,3,6,36571,33387,34252,34252,3600.0472859969996,3601.722658412
c060,4,3,7,29952,27133,27801,27801,4200.060611114,4202.130447552
c060,4,3,8,35252,32038,32804,32804,4800.077909361999,4802.384970253
c060,4,3,9,38905,35174,36122,36122,5400.0824244059995,5402.625079746
c060,4,3,10,33642,30347,31133,31133,6000.097742090999,6002.942806771
c060,4,3,11,28044,25598,26156,26156,6600.1237820119995,6603.757470963
# search time: 6600.124s
# total time: 33047.191s
