    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c073_4.json out/1593091766/results/c073_4_best.csv out/1593091766/results/c073_4_predictions.csv out/1593091766/results/c073_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 5, 5, 2, 2, 2]), o: IntList([6, 7, 8, 6, 7, 8]) }
#   Datum { i: IntList([1, 1, 1, 1, 0, 1, 0, 1, 0]), o: IntList([2, 3, 4, 5, 5, 7, 7, 9, 9]) }
#   Datum { i: IntList([8, 0, 1, 1, 1, 0, 0, 0]), o: IntList([9, 2, 4, 5, 6, 6, 7, 8]) }
#   Datum { i: IntList([2, 2, 1, 3, 1]), o: IntList([3, 4, 4, 7, 6]) }
#   Datum { i: IntList([8, 5, 1, 3, 0, 2, 0]), o: IntList([9, 7, 4, 7, 5, 8, 7]) }
#   Datum { i: IntList([6, 7, 6, 4, 4, 0]), o: IntList([7, 9, 9, 8, 9, 6]) }
#   Datum { i: IntList([1, 3, 3, 5, 3, 0, 0, 1, 0]), o: IntList([2, 5, 6, 9, 8, 6, 7, 9, 9]) }
#   Datum { i: IntList([2, 5, 5]), o: IntList([3, 7, 8]) }
#   Datum { i: IntList([1]), o: IntList([2]) }
#   Datum { i: IntList([4, 4, 4, 4]), o: IntList([5, 6, 7, 8]) }
#   Datum { i: IntList([3, 3]), o: IntList([4, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c073,0,4,1,685412,561776,656819,656819,600.00432288,602.7568022089999
c073,0,4,2,221990,208946,214914,214914,1200.016530894,1204.714426566
c073,0,4,3,104866,98963,99734,99734,1800.023939213,1806.55633926
c073,0,4,4,68609,65456,65635,65635,2400.028403773,2408.1683133
c073,0,4,5,59659,56490,56749,56749,3000.034402767,3009.61680807
c073,0,4,6,50403,46943,47225,47225,3600.042308754,3610.858290909
c073,0,4,7,40938,37258,37600,37600,4200.069417619,4212.35175549
c073,0,4,8,33942,31976,32179,32179,4800.082347055,4813.871725387
c073,0,4,9,32915,29866,30264,30264,5400.122571057001,5415.088742884
c073,0,4,10,31337,27076,27291,27291,6000.155011526001,6016.240669629
c073,0,4,11,29968,26117,26327,26327,6600.157507430001,6617.440977459
# search time: 6600.158s
# total time: 6617.707s
c073,1,4,1,685835,562816,657573,657573,600.002017618,600.350544349
c073,1,4,2,220388,207261,213164,213164,1200.004792626,1201.082204652
c073,1,4,3,102189,96244,97016,97016,1800.009872661,1801.850968159
c073,1,4,4,70332,67023,67279,67279,2400.011063262,2402.557408996
c073,1,4,5,59860,56623,56888,56888,3000.029603998,3003.213450688
c073,1,4,6,48183,44690,45081,45081,3600.0315550309997,3603.831954187
c073,1,4,7,41050,37416,37766,37766,4200.091181162999,4204.784959378
c073,1,4,8,33282,31359,31528,31528,4800.101200605999,4805.398937677
c073,1,4,9,31382,28436,28811,28811,5400.116233263999,5405.993118102
c073,1,4,10,31686,27507,27727,27727,6000.148389965999,6006.692539891
c073,1,4,11,29895,26213,26441,26441,6600.161787774999,6607.125818685
# search time: 6600.162s
# total time: 13225.343s
c073,2,4,1,701082,597970,678451,678451,600.01571773,600.340900159
c073,2,4,2,223204,209991,215963,215963,1200.017134751,1200.809593398
c073,2,4,3,105498,99169,99963,99963,1800.018968666,1801.093293342
c073,2,4,4,106497,101572,101981,101981,2400.0247992550003,2401.778940203
c073,2,4,5,57724,54451,54609,54609,3000.0249820670006,3002.256899395
c073,2,4,6,49828,46373,46633,46633,3600.0284273900006,3602.674044325
c073,2,4,7,70388,64468,65005,65005,4200.057705597001,4203.14898663
c073,2,4,8,59069,55259,55589,55589,4800.06353335,4803.540012704
c073,2,4,9,56012,50523,51074,51074,5400.072958026,5403.987103098
c073,2,4,10,53712,46437,46807,46807,6000.077972897,6004.273443205
c073,2,4,11,50527,44161,44518,44518,6600.079499707,6604.698892503
# search time: 6600.079s
# total time: 19830.540s
c073,3,4,1,1109611,907870,1063589,1063589,600.007429699,600.236115936
c073,3,4,2,364540,343134,352828,352828,1200.008111063,1200.551048687
c073,3,4,3,172054,161422,162749,162749,1800.008949604,1800.879647979
c073,3,4,4,120176,114417,114878,114878,2400.015958431,2401.170346999
c073,3,4,5,103358,97526,97957,97957,3000.018410455,3001.410617575
c073,3,4,6,85715,79713,80133,80133,3600.0244828209998,3601.649270313
c073,3,4,7,73511,67172,67727,67727,4200.033996671,4201.931550766
c073,3,4,8,61384,57263,57579,57579,4800.043090759,4802.236710449
c073,3,4,9,57844,52125,52754,52754,5400.043790049,5402.503483181
c073,3,4,10,55664,48251,48605,48605,6000.045745331,6002.729361677
c073,3,4,11,51825,45361,45674,45674,6600.054705607,6602.990679558
# search time: 6600.055s
# total time: 26434.129s
c073,4,4,1,1158670,947770,1110686,1110686,600.000157849,600.193843349
c073,4,4,2,367357,345939,355888,355888,1200.000864383,1200.45608559
c073,4,4,3,181859,171269,172689,172689,1800.0028002519998,1800.716112642
c073,4,4,4,125099,119166,119630,119630,2400.009912352,2400.931125292
c073,4,4,5,104341,98629,98907,98907,3000.0111591759996,3001.171340597
c073,4,4,6,88706,82486,82942,82942,3600.0137034819995,3601.429670083
c073,4,4,7,72541,65963,66492,66492,4200.019725863,4201.662851823
c073,4,4,8,61690,57644,57964,57964,4800.0210982339995,4801.855119464
c073,4,4,9,55549,50067,50680,50680,5400.026031965,5402.096960928
c073,4,4,10,55262,47763,48072,48072,6000.027430966,6002.294012011
c073,4,4,11,50405,44390,44697,44697,6600.028869378,6602.533294267
# search time: 6600.029s
# total time: 33037.326s
