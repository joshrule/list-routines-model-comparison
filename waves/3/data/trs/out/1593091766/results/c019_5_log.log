    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c019_5.json out/1593091766/results/c019_5_best.csv out/1593091766/results/c019_5_predictions.csv out/1593091766/results/c019_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 7, 2, 0, 4, 9, 8]), o: IntList([3, 7, 2, 0, 4, 3, 8]) }
#   Datum { i: IntList([1, 1, 8]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([4, 5, 5, 0, 4, 2]), o: IntList([4, 5, 5, 0, 4, 3]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6, 6, 6]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([8, 2, 6, 7, 9]), o: IntList([8, 2, 6, 7, 9]) }
#   Datum { i: IntList([7, 1, 8, 6, 5, 0, 4, 5, 3, 9]), o: IntList([7, 1, 8, 6, 5, 3, 4, 5, 3, 9]) }
#   Datum { i: IntList([4, 3, 5, 8, 3, 2, 7, 9, 1]), o: IntList([4, 3, 5, 8, 3, 3, 7, 9, 1]) }
#   Datum { i: IntList([9, 9, 9, 2, 0, 2, 3]), o: IntList([9, 9, 9, 2, 0, 3, 3]) }
#   Datum { i: IntList([1, 1, 7, 4, 0, 8, 9, 0]), o: IntList([1, 1, 7, 4, 0, 3, 9, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c019,0,5,1,1284394,1116576,1248251,1248251,600.00076547,601.900119471
c019,0,5,2,381337,356723,366181,366181,1200.0017574140002,1202.939919987
c019,0,5,3,310145,286569,292142,292142,1800.0032727850003,1803.794421033
c019,0,5,4,211100,196255,197622,197622,2400.007974592,2404.559606485
c019,0,5,5,171428,152100,155379,155379,3000.0088214290004,3005.328985771
c019,0,5,6,200250,178173,186234,186234,3600.011212787,3605.750694688
c019,0,5,7,188535,167410,175243,175243,4200.013445312,4206.122747158
c019,0,5,8,159681,138879,145711,145711,4800.021274547,4806.46438953
c019,0,5,9,105609,93824,98336,98336,5400.036297116,5406.911842343
c019,0,5,10,86403,75599,79628,79628,6000.0414872110005,6007.425245917
c019,0,5,11,74856,65727,69301,69301,6600.050886414,6607.861936017
# search time: 6600.051s
# total time: 6608.172s
c019,1,5,1,1236344,1012861,1185339,1185339,600.005256756,600.253538447
c019,1,5,2,388085,362484,372095,372095,1200.0056243469999,1200.650278434
c019,1,5,3,313661,291109,296077,296077,1800.0065564789998,1800.989641119
c019,1,5,4,218109,203099,204656,204656,2400.00737584,2401.312112847
c019,1,5,5,176138,157241,160703,160703,3000.009801465,3001.665444563
c019,1,5,6,200410,178329,186411,186411,3600.011598355,3601.857716713
c019,1,5,7,187009,165718,173843,173843,4200.014219404,4202.063805364
c019,1,5,8,158863,138860,145311,145311,4800.018167941,4802.25643052
c019,1,5,9,106724,94658,99304,99304,5400.02193087,5402.44620833
c019,1,5,10,85071,74678,78368,78368,6000.0282644809995,6002.654426603
c019,1,5,11,74824,65737,69324,69324,6600.032122594999,6602.87891256
# search time: 6600.032s
# total time: 13211.523s
c019,2,5,1,1244382,1019503,1193269,1193269,600.000212996,600.208667244
c019,2,5,2,373043,347651,357756,357756,1200.001093505,1200.474184796
c019,2,5,3,314901,292104,297152,297152,1800.002257693,1800.704760444
c019,2,5,4,209011,194059,195380,195380,2400.003757891,2400.911606531
c019,2,5,5,176571,157604,161070,161070,3000.007790562,3001.130252861
c019,2,5,6,198580,176340,184688,184688,3600.0112178520003,3601.261614512
c019,2,5,7,186394,165330,173245,173245,4200.014590350001,4201.418257771
c019,2,5,8,159479,138668,145452,145452,4800.017926832001,4801.55288519
c019,2,5,9,107303,94752,99467,99467,5400.0206082350005,5401.70755234
c019,2,5,10,85912,75221,79178,79178,6000.022648472001,6001.862254362
c019,2,5,11,74603,65609,69138,69138,6600.022978723001,6602.058836335
# search time: 6600.023s
# total time: 19814.074s
c019,3,5,1,1228331,1057464,1191196,1191196,600.023690229,600.261383569
c019,3,5,2,379236,353663,363478,363478,1200.024359211,1200.475500483
c019,3,5,3,313336,290519,295435,295435,1800.024844435,1800.670477388
c019,3,5,4,207267,192690,194032,194032,2400.024919003,2400.832426118
c019,3,5,5,175302,156354,159803,159803,3000.0250469019998,3001.000803063
c019,3,5,6,198939,176796,184898,184898,3600.0254442849996,3601.129532747
c019,3,5,7,185086,164079,171920,171920,4200.0376335949995,4201.261307934
c019,3,5,8,157640,137097,143758,143758,4800.042389390999,4801.384992092
c019,3,5,9,106608,94329,99044,99044,5400.044763571999,5401.519595427
c019,3,5,10,85331,74755,78660,78660,6000.052906135999,6001.684483639
c019,3,5,11,74365,65362,68981,68981,6600.059855037999,6601.8252345
# search time: 6600.060s
# total time: 26416.580s
c019,4,5,1,1262204,1093250,1225967,1225967,600.001600076,600.2607532009999
c019,4,5,2,393491,367130,377120,377120,1200.011245586,1200.443671853
c019,4,5,3,312060,289518,294488,294488,1800.0112959360001,1800.600704085
c019,4,5,4,216152,201188,202730,202730,2400.0141465310003,2400.761152849
c019,4,5,5,169415,150167,153400,153400,3000.017996417,3000.915012575
c019,4,5,6,199044,176809,184941,184941,3600.019374079,3601.019251541
c019,4,5,7,186660,165182,173192,173192,4200.02204429,4201.140060324
c019,4,5,8,157272,136716,143602,143602,4800.029274257,4801.268903021
c019,4,5,9,106268,94113,98827,98827,5400.029680037,5401.392007049
c019,4,5,10,85667,74994,78920,78920,6000.029858768,6001.484074221
c019,4,5,11,73873,64832,68372,68372,6600.035243634,6601.614471041
# search time: 6600.035s
# total time: 33018.668s
