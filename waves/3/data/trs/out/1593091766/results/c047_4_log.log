    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c047_4.json out/1593091766/results/c047_4_best.csv out/1593091766/results/c047_4_predictions.csv out/1593091766/results/c047_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([9, 6, 3, 8, 5, 1, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([9, 4, 8]), o: IntList([9, 6, 3, 8, 5, 9, 4, 8]) }
#   Datum { i: IntList([8, 3, 7, 9]), o: IntList([9, 6, 3, 8, 5, 8, 3, 7, 9]) }
#   Datum { i: IntList([2, 2, 7, 0, 6, 2, 2, 6]), o: IntList([9, 6, 3, 8, 5, 2, 2, 7, 0, 6, 2, 2, 6]) }
#   Datum { i: IntList([9, 0]), o: IntList([9, 6, 3, 8, 5, 9, 0]) }
#   Datum { i: IntList([5, 2, 0, 2, 4, 0, 3, 2, 4]), o: IntList([9, 6, 3, 8, 5, 5, 2, 0, 2, 4, 0, 3, 2, 4]) }
#   Datum { i: IntList([6]), o: IntList([9, 6, 3, 8, 5, 6]) }
#   Datum { i: IntList([]), o: IntList([9, 6, 3, 8, 5]) }
#   Datum { i: IntList([0, 3, 4, 5, 0, 0, 5]), o: IntList([9, 6, 3, 8, 5, 0, 3, 4, 5, 0, 0, 5]) }
#   Datum { i: IntList([4, 0, 7, 2, 1]), o: IntList([9, 6, 3, 8, 5, 4, 0, 7, 2, 1]) }
#   Datum { i: IntList([4, 6, 7, 0, 7, 7, 1, 9]), o: IntList([9, 6, 3, 8, 5, 4, 6, 7, 0, 7, 7, 1, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c047,0,4,1,1240180,1048599,1198080,1198080,600.000138698,601.743564994
c047,0,4,2,267290,241919,249334,249334,1200.001557718,1202.776755942
c047,0,4,3,198207,183384,190119,190119,1800.001974974,1803.330953563
c047,0,4,4,145626,134502,139246,139246,2400.004562367,2403.847642578
c047,0,4,5,100117,91306,93279,93279,3000.009230193,3004.48973427
c047,0,4,6,90915,83471,86462,86462,3600.012077556,3604.984119116
c047,0,4,7,67233,60907,62290,62290,4200.012959579,4205.519161265
c047,0,4,8,64808,57112,58510,58510,4800.016625485,4805.979106516
c047,0,4,9,64854,55457,57040,57040,5400.017684252,5406.340005424
c047,0,4,10,54982,47120,48257,48257,6000.024191806,6006.768654534
c047,0,4,11,49247,41404,42693,42693,6600.026683951,6607.24139896
# search time: 6600.027s
# total time: 6607.584s
c047,1,4,1,1308070,1148000,1274540,1274540,600.000070207,600.375686577
c047,1,4,2,268683,243476,250645,250645,1200.0014985120001,1200.784102715
c047,1,4,3,192076,177722,184548,184548,1800.0015735840002,1801.029803218
c047,1,4,4,142741,130796,136262,136262,2400.0046910610004,2401.281701261
c047,1,4,5,104269,94728,97021,97021,3000.009627577,3001.518837402
c047,1,4,6,90711,83498,86254,86254,3600.014604338,3601.731955562
c047,1,4,7,68704,62342,63736,63736,4200.0199897,4202.005445813
c047,1,4,8,64944,56814,58255,58255,4800.024377771,4802.246076591
c047,1,4,9,65138,56131,57350,57350,5400.025590674,5402.421501885
c047,1,4,10,54897,47013,48205,48205,6000.038755420001,6002.62039453
c047,1,4,11,49155,41371,42346,42346,6600.044162726001,6602.813445691
# search time: 6600.044s
# total time: 13210.758s
c047,2,4,1,1303167,1131987,1266626,1266626,600.000122019,600.335103728
c047,2,4,2,267147,241838,249117,249117,1200.000255549,1200.601084374
c047,2,4,3,194436,179529,186671,186671,1800.0018853000001,1800.771854316
c047,2,4,4,144562,133629,138308,138308,2400.004282282,2400.935447009
c047,2,4,5,99906,91072,93060,93060,3000.004506349,3001.135936838
c047,2,4,6,90269,82823,85944,85944,3600.0083413760003,3601.30962408
c047,2,4,7,66700,60373,61671,61671,4200.022192271001,4201.51209222
c047,2,4,8,64433,56537,57889,57889,4800.029292249001,4801.671460482
c047,2,4,9,64654,55572,56849,56849,5400.037183578001,5401.815907414
c047,2,4,10,54349,46085,47510,47510,6000.040300929,6001.990105699
c047,2,4,11,49231,41577,42665,42665,6600.059838778,6602.131554937
# search time: 6600.060s
# total time: 19813.313s
c047,3,4,1,1294234,1116435,1255824,1255824,600.00869402,600.280724911
c047,3,4,2,265941,240685,248017,248017,1200.0092378479999,1200.478193493
c047,3,4,3,197839,183583,190020,190020,1800.0123391879997,1800.621773018
c047,3,4,4,145938,134150,139484,139484,2400.0138282489997,2400.76091087
c047,3,4,5,100939,92170,94428,94428,3000.014495309,3000.905652445
c047,3,4,6,90542,83205,86011,86011,3600.017873637,3601.040322137
c047,3,4,7,66980,60551,61959,61959,4200.020055766,4201.168783638
c047,3,4,8,64304,56524,57880,57880,4800.021975433,4801.266907074
c047,3,4,9,64480,55274,56609,56609,5400.023086014,5401.382043657
c047,3,4,10,54411,46514,47699,47699,6000.028190519,6001.495903081
c047,3,4,11,48981,41183,42250,42250,6600.041889017,6601.604061102
# search time: 6600.042s
# total time: 26415.343s
c047,4,4,1,1254214,1029043,1202764,1202764,600.011524674,600.189065434
c047,4,4,2,262508,236560,244517,244517,1200.022904056,1200.369861212
c047,4,4,3,191434,176580,183788,183788,1800.024647698,1800.468035808
c047,4,4,4,146827,136472,140812,140812,2400.02464908,2400.574532549
c047,4,4,5,99594,90603,92707,92707,3000.0256199630003,3000.694135569
c047,4,4,6,89849,82688,85520,85520,3600.031689757,3600.812174834
c047,4,4,7,66646,60344,61805,61805,4200.034845113,4200.893413038
c047,4,4,8,63063,54944,56132,56132,4800.036655819,4801.006143329
c047,4,4,9,63830,54701,55966,55966,5400.044620889999,5401.106527556
c047,4,4,10,53934,46362,47527,47527,6000.050578533,6001.208484414
c047,4,4,11,48526,40843,41826,41826,6600.056486828999,6601.291057775
# search time: 6600.056s
# total time: 33017.050s
