    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c018_4.json out/1593091766/results/c018_4_best.csv out/1593091766/results/c018_4_predictions.csv out/1593091766/results/c018_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 7, 7, 7, 7, 7, 7]), o: IntList([7, 7, 7, 7, 7, 3, 7]) }
#   Datum { i: IntList([8, 8, 6, 8, 5, 1, 4, 0, 5]), o: IntList([8, 8, 6, 8, 5, 3, 4, 0, 5]) }
#   Datum { i: IntList([5, 3, 2, 8, 4, 6]), o: IntList([5, 3, 2, 8, 4, 3]) }
#   Datum { i: IntList([9, 9, 3, 0, 0, 9, 0, 0, 9, 3]), o: IntList([9, 9, 3, 0, 0, 3, 0, 0, 9, 3]) }
#   Datum { i: IntList([9, 3, 1, 8, 3, 9, 3, 3, 1]), o: IntList([9, 3, 1, 8, 3, 3, 3, 3, 1]) }
#   Datum { i: IntList([0, 6, 0, 6, 6, 6]), o: IntList([0, 6, 0, 6, 6, 3]) }
#   Datum { i: IntList([6, 1, 1, 6, 1, 6, 4]), o: IntList([6, 1, 1, 6, 1, 3, 4]) }
#   Datum { i: IntList([0, 9, 7, 8, 1, 4, 2, 5, 3, 8]), o: IntList([0, 9, 7, 8, 1, 3, 2, 5, 3, 8]) }
#   Datum { i: IntList([8, 8, 5, 0, 5, 8]), o: IntList([8, 8, 5, 0, 5, 3]) }
#   Datum { i: IntList([6, 5, 9, 6, 9, 9, 5, 8]), o: IntList([6, 5, 9, 6, 9, 3, 5, 8]) }
#   Datum { i: IntList([7, 5, 7, 7, 0, 5, 7, 5, 5]), o: IntList([7, 5, 7, 7, 0, 3, 7, 5, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c018,0,4,1,990874,808650,949635,949635,600.006558667,601.515743637
c018,0,4,2,369504,347152,356665,356665,1200.007000617,1202.820272241
c018,0,4,3,200179,183537,187261,187261,1800.007457013,1803.867469823
c018,0,4,4,166966,152783,158549,158549,2400.008978235,2404.507791952
c018,0,4,5,120947,109996,114359,114359,3000.0092013390004,3005.204653808
c018,0,4,6,80967,73738,75893,75893,3600.0166387350005,3606.480943592
c018,0,4,7,71672,65059,66933,66933,4200.024144101,4207.507025478
c018,0,4,8,62763,56669,58369,58369,4800.026495828,4808.521974561
c018,0,4,9,51721,46796,48094,48094,5400.027028133,5409.58433538
c018,0,4,10,48386,43484,45019,45019,6000.0382490950005,6010.658570634
c018,0,4,11,42731,38573,39816,39816,6600.057180125001,6611.688226388
# search time: 6600.057s
# total time: 6611.934s
c018,1,4,1,1248899,1022471,1197426,1197426,600.00005777,600.302476415
c018,1,4,2,362074,339551,349551,349551,1200.001970804,1200.760186918
c018,1,4,3,199731,183137,186904,186904,1800.003013312,1801.164509807
c018,1,4,4,165250,150886,156966,156966,2400.00425111,2401.464247447
c018,1,4,5,119927,109108,113304,113304,3000.006877285,3001.777683759
c018,1,4,6,80249,72663,75273,75273,3600.014190492,3602.276987663
c018,1,4,7,71791,65041,67025,67025,4200.0143459050005,4202.778902802
c018,1,4,8,61997,56002,57831,57831,4800.017197721,4803.19630189
c018,1,4,9,51525,46679,47932,47932,5400.018384231,5403.893624049
c018,1,4,10,47998,43325,44729,44729,6000.01946437,6004.425409936
c018,1,4,11,42268,38110,39377,39377,6600.026649589,6605.058372135
# search time: 6600.027s
# total time: 13217.533s
c018,2,4,1,1293787,1139804,1261559,1261559,600.000436639,600.343330787
c018,2,4,2,375373,351329,361580,361580,1200.0017640820001,1200.656491618
c018,2,4,3,200287,183871,187539,187539,1800.010101599,1800.931218484
c018,2,4,4,167800,153403,159235,159235,2400.013215325,2401.152563505
c018,2,4,5,120564,109509,113908,113908,3000.01898652,3001.350435032
c018,2,4,6,80693,73292,75663,75663,3600.024011103,3601.6285070120002
c018,2,4,7,72024,65227,67128,67128,4200.034848251,4201.990774615
c018,2,4,8,62899,56762,58492,58492,4800.046073018,4802.261046214
c018,2,4,9,52336,47221,48538,48538,5400.057766599,5402.590029196
c018,2,4,10,48058,43256,44637,44637,6000.069542463,6002.954194695
c018,2,4,11,42000,37876,39091,39091,6600.084502783,6603.448802633
# search time: 6600.085s
# total time: 19821.273s
c018,3,4,1,1198869,1017400,1159232,1159232,600.003738677,600.256589968
c018,3,4,2,360057,337114,347235,347235,1200.00882061,1200.506668985
c018,3,4,3,200111,183314,187143,187143,1800.0147409729998,1800.743892805
c018,3,4,4,162694,148094,154333,154333,2400.016253757,2400.879642035
c018,3,4,5,118942,108687,112758,112758,3000.016972422,3001.036986583
c018,3,4,6,79267,72193,74347,74347,3600.019206805,3601.31855624
c018,3,4,7,71055,64323,66256,66256,4200.045128503,4201.54225336
c018,3,4,8,62412,56371,57990,57990,4800.060178048,4801.775620887
c018,3,4,9,51421,46615,47817,47817,5400.0641832070005,5401.976633748
c018,3,4,10,48027,43174,44539,44539,6000.067140363,6002.189279678
c018,3,4,11,41946,37781,38983,38983,6600.0836019710005,6602.379125423
# search time: 6600.084s
# total time: 26424.052s
c018,4,4,1,1268351,1097352,1231196,1231196,600.000165027,600.264712857
c018,4,4,2,373031,349401,359292,359292,1200.007907172,1200.475808123
c018,4,4,3,207439,190088,194862,194862,1800.009355534,1800.633772321
c018,4,4,4,166361,152559,158106,158106,2400.009522838,2400.775861095
c018,4,4,5,118007,107424,111769,111769,3000.013230729,3000.917263672
c018,4,4,6,80072,72849,75163,75163,3600.016866337,3601.130059908
c018,4,4,7,71068,64318,66313,66313,4200.020312595,4201.335874147
c018,4,4,8,62848,56855,58419,58419,4800.033332540001,4801.517358736
c018,4,4,9,50909,46101,47459,47459,5400.038109713,5401.742707391
c018,4,4,10,47924,43106,44503,44503,6000.044686005001,6002.015815964
c018,4,4,11,42383,38189,39450,39450,6600.066474715,6602.175038775
# search time: 6600.066s
# total time: 33026.773s
