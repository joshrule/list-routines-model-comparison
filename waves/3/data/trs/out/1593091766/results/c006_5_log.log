    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.51s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c006_5.json out/1593091766/results/c006_5_best.csv out/1593091766/results/c006_5_predictions.csv out/1593091766/results/c006_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 3, 3, 5, 5]), o: IntList([4, 3]) }
#   Datum { i: IntList([5, 5, 1, 5, 7, 7]), o: IntList([5, 5]) }
#   Datum { i: IntList([9, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([7, 8, 5, 7]), o: IntList([7, 8]) }
#   Datum { i: IntList([0, 4, 0, 0, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([9, 7, 7]), o: IntList([9, 7]) }
#   Datum { i: IntList([8, 0, 8, 7, 4, 0, 4]), o: IntList([8, 0]) }
#   Datum { i: IntList([3, 1, 1, 1, 3, 1, 1]), o: IntList([3, 1]) }
#   Datum { i: IntList([6, 8, 5]), o: IntList([6, 8]) }
#   Datum { i: IntList([2, 0, 4, 6, 5]), o: IntList([2, 0]) }
#   Datum { i: IntList([2, 2, 2, 2, 2]), o: IntList([2, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c006,0,5,1,681756,587871,661282,661282,600.002564178,603.099056973
c006,0,5,2,377165,354842,364885,364885,1200.003489281,1205.211141922
c006,0,5,3,273749,252216,259881,259881,1800.007726486,1806.980878696
c006,0,5,4,214457,200321,206905,206905,2400.011206391,2407.900242001
c006,0,5,5,187573,174552,180750,180750,3000.018677514,3008.710002707
c006,0,5,6,153465,142064,147331,147331,3600.020447236,3609.444642463
c006,0,5,7,115606,107264,111441,111441,4200.022845509,4210.455992528
c006,0,5,8,96860,89568,93106,93106,4800.0246234549995,4811.669367558
c006,0,5,9,83497,77374,80374,80374,5400.028939239999,5412.793535404
c006,0,5,10,72339,66267,69691,69691,6000.030631790999,6013.816983467
c006,0,5,11,63962,58687,61802,61802,6600.042534465999,6614.937983209
# search time: 6600.043s
# total time: 6615.182s
c006,1,5,1,652230,532911,625034,625034,600.000436748,600.246119435
c006,1,5,2,384642,361873,371904,371904,1200.0033013359998,1200.870749753
c006,1,5,3,278082,256519,264632,264632,1800.005719841,1801.393800498
c006,1,5,4,215902,201676,208315,208315,2400.007258601,2401.785499397
c006,1,5,5,183115,170103,176387,176387,3000.00897232,3002.14741131
c006,1,5,6,151967,141100,146185,146185,3600.010504029,3602.507004586
c006,1,5,7,116341,107730,112078,112078,4200.010741637,4203.010372671
c006,1,5,8,96769,89430,93067,93067,4800.018223663,4803.606940346
c006,1,5,9,84555,78421,81371,81371,5400.018727744,5404.221588742
c006,1,5,10,72778,66591,70161,70161,6000.021243843,6004.83556185
c006,1,5,11,64467,59139,62322,62322,6600.032031746,6605.442998393
# search time: 6600.032s
# total time: 13221.086s
c006,2,5,1,658624,541362,631900,631900,600.002767794,600.215609494
c006,2,5,2,377282,355260,365086,365086,1200.003883424,1200.623880102
c006,2,5,3,276053,254583,262269,262269,1800.004946438,1800.854381533
c006,2,5,4,351993,330097,340832,340832,2400.011743809,2401.122515768
c006,2,5,5,296072,276770,286774,286774,3000.012292531,3001.380081954
c006,2,5,6,253587,235844,244180,244180,3600.013129415,3601.61171219
c006,2,5,7,194118,180927,187604,187604,4200.016705865,4201.928515082
c006,2,5,8,164923,153446,159042,159042,4800.021678,4802.274734142
c006,2,5,9,143134,132788,138007,138007,5400.0264086610005,5402.648212612
c006,2,5,10,126167,116218,121790,121790,6000.028853165,6003.02605146
c006,2,5,11,111035,102104,107282,107282,6600.035125374,6603.423926618
# search time: 6600.035s
# total time: 19824.796s
c006,3,5,1,1142120,992450,1110020,1110020,600.00391087,600.295575694
c006,3,5,2,603974,569146,584979,584979,1200.004096749,1200.562884994
c006,3,5,3,455083,420871,433335,433335,1800.0043305509998,1800.821753036
c006,3,5,4,346903,325696,336002,336002,2400.00521011,2401.006773307
c006,3,5,5,298265,278520,288385,288385,3000.011289267,3001.196739439
c006,3,5,6,252077,234372,242781,242781,3600.011868125,3601.364460248
c006,3,5,7,193568,180183,186979,186979,4200.013445709,4201.554458264
c006,3,5,8,164832,153319,159010,159010,4800.016805658,4801.755057329
c006,3,5,9,140616,130654,135754,135754,5400.021693938999,5401.985165878
c006,3,5,10,123337,113425,119105,119105,6000.027142104,6002.224535758
c006,3,5,11,110364,101529,106682,106682,6600.029697465,6602.45816612
# search time: 6600.030s
# total time: 26427.759s
c006,4,5,1,1077396,912203,1040987,1040987,600.001125701,600.235667405
c006,4,5,2,584011,550963,566595,566595,1200.001145887,1200.460168093
c006,4,5,3,456756,422082,434750,434750,1800.002529723,1800.68346958
c006,4,5,4,360740,338557,349340,349340,2400.0032749829998,2400.844641469
c006,4,5,5,295667,276235,286012,286012,3000.004189588,3000.983812305
c006,4,5,6,252637,234356,242963,242963,3600.017341754,3601.144033017
c006,4,5,7,194824,181464,188206,188206,4200.017901959,4201.327254854
c006,4,5,8,162345,150950,156474,156474,4800.018441007,4801.50652839
c006,4,5,9,142983,132926,137874,137874,5400.0210021679995,5401.704797006
c006,4,5,10,124599,114563,120169,120169,6000.022136629,6001.883341068
c006,4,5,11,111679,102537,107874,107874,6600.030597305,6602.177556073
# search time: 6600.031s
# total time: 33030.465s
