    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c033_5.json out/1593091766/results/c033_5_best.csv out/1593091766/results/c033_5_predictions.csv out/1593091766/results/c033_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 4, 6, 4, 8, 8, 5]), o: IntList([4, 4, 6, 6, 8, 8, 5]) }
#   Datum { i: IntList([7, 8, 4, 6, 1, 2, 9, 5]), o: IntList([6, 8, 4, 7, 1, 2, 9, 5]) }
#   Datum { i: IntList([8, 3, 8, 3]), o: IntList([3, 3, 8, 8]) }
#   Datum { i: IntList([8, 1, 8, 5, 5, 2]), o: IntList([5, 1, 8, 8, 5, 2]) }
#   Datum { i: IntList([0, 3, 2, 1, 0, 0, 1, 7, 4]), o: IntList([1, 3, 2, 0, 0, 0, 1, 7, 4]) }
#   Datum { i: IntList([7, 0, 2, 2, 7]), o: IntList([2, 0, 2, 7, 7]) }
#   Datum { i: IntList([2, 1, 9, 9, 3, 9, 3, 2]), o: IntList([9, 1, 9, 2, 3, 9, 3, 2]) }
#   Datum { i: IntList([1, 9, 6, 2]), o: IntList([2, 9, 6, 1]) }
#   Datum { i: IntList([2, 3, 1, 0, 1, 3, 4, 1, 0, 4]), o: IntList([0, 3, 1, 2, 1, 3, 4, 1, 0, 4]) }
#   Datum { i: IntList([7, 9, 1, 5, 6, 3, 0]), o: IntList([5, 9, 1, 7, 6, 3, 0]) }
#   Datum { i: IntList([7, 8, 6, 5, 6, 7, 7, 5, 6, 5]), o: IntList([5, 8, 6, 7, 6, 7, 7, 5, 6, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c033,0,5,1,1193588,1010059,1153181,1153181,600.000129231,601.749295725
c033,0,5,2,372190,346369,356774,356774,1200.000740302,1202.828954192
c033,0,5,3,221722,203978,209390,209390,1800.001405905,1803.755392142
c033,0,5,4,197753,181162,187473,187473,2400.004310749,2404.376803181
c033,0,5,5,142519,131362,135981,135981,3000.0056610290003,3005.128025534
c033,0,5,6,108533,99687,103195,103195,3600.00619138,3605.89183997
c033,0,5,7,94983,86792,89968,89968,4200.006212586,4206.651501211
c033,0,5,8,80587,73376,75819,75819,4800.011945721,4807.317953649
c033,0,5,9,72593,65097,68195,68195,5400.0156154920005,5408.017188923
c033,0,5,10,60996,54786,56828,56828,6000.020420183,6008.750934486
c033,0,5,11,49565,44585,45812,45812,6600.034322821,6609.622720677
# search time: 6600.034s
# total time: 6609.902s
c033,1,5,1,1248550,1086990,1214186,1214186,600.003660895,600.344619554
c033,1,5,2,384055,357823,367694,367694,1200.0054602750001,1200.741665697
c033,1,5,3,210576,192542,197696,197696,1800.0072818150002,1801.163771305
c033,1,5,4,194687,178645,184948,184948,2400.007735226,2401.421984073
c033,1,5,5,145012,134093,138160,138160,3000.007854665,3001.748174317
c033,1,5,6,108233,99650,102996,102996,3600.010998601,3602.108983627
c033,1,5,7,95343,86942,90278,90278,4200.014216444,4202.454251284
c033,1,5,8,79198,71932,74581,74581,4800.0193909810005,4802.828372333
c033,1,5,9,73496,66941,69129,69129,5400.028610578001,5403.189478839
c033,1,5,10,61443,55622,57338,57338,6000.033718729001,6003.553360483
c033,1,5,11,51122,45817,47292,47292,6600.062005787001,6603.896019361
# search time: 6600.062s
# total time: 13214.224s
c033,2,5,1,1269727,1101324,1233585,1233585,600.006390117,600.343744566
c033,2,5,2,389538,363085,372874,372874,1200.0155613910001,1200.639107302
c033,2,5,3,218838,200931,206468,206468,1800.0210828210002,1800.89128331
c033,2,5,4,195957,179697,185951,185951,2400.0226333630003,2401.080746832
c033,2,5,5,142264,131538,135684,135684,3000.0230165450002,3001.31219934
c033,2,5,6,108162,99472,102819,102819,3600.026846736,3601.519333238
c033,2,5,7,96896,88532,91527,91527,4200.03214386,4201.759480692
c033,2,5,8,78559,71684,73958,73958,4800.0331665,4801.972496613
c033,2,5,9,73382,66450,68912,68912,5400.034978575,5402.241998791
c033,2,5,10,60864,55099,56920,56920,6000.038641936,6002.559016923
c033,2,5,11,50629,45161,46829,46829,6600.043029482,6602.786079363
# search time: 6600.043s
# total time: 19817.487s
c033,3,5,1,1202811,1019578,1162498,1162498,600.005975466,600.244941199
c033,3,5,2,359883,336089,345627,345627,1200.006768552,1200.469806388
c033,3,5,3,217684,199905,205349,205349,1800.011591933,1800.667234587
c033,3,5,4,196292,179914,186142,186142,2400.018474495,2400.828432873
c033,3,5,5,141654,130566,134894,134894,3000.018985736,3001.008647835
c033,3,5,6,106029,96895,100651,100651,3600.0249308740003,3601.216297281
c033,3,5,7,94066,85701,88986,88986,4200.032128985,4201.405594491
c033,3,5,8,77856,70848,73180,73180,4800.035113992,4801.604369232
c033,3,5,9,73223,65576,68557,68557,5400.040198265,5401.750602034
c033,3,5,10,58374,53043,54715,54715,6000.044763063001,6001.959438345
c033,3,5,11,50817,45381,46919,46919,6600.068337428001,6602.193197308
# search time: 6600.068s
# total time: 26420.278s
c033,4,5,1,1248275,1088809,1214586,1214586,600.000382755,600.27854351
c033,4,5,2,362612,338579,348165,348165,1200.001691291,1200.483791168
c033,4,5,3,216903,199210,204563,204563,1800.0027996210001,1800.679071306
c033,4,5,4,197350,179451,187172,187172,2400.005392633,2400.826581475
c033,4,5,5,141626,130482,134924,134924,3000.00545634,3000.952648523
c033,4,5,6,107059,97947,101593,101593,3600.008147882,3601.112762119
c033,4,5,7,96845,88365,91410,91410,4200.009952538,4201.262062958
c033,4,5,8,78790,71934,74131,74131,4800.015550872,4801.460825013
c033,4,5,9,72102,65732,67773,67773,5400.02567212,5401.631180484
c033,4,5,10,58747,53264,54930,54930,6000.029001169,6001.821535005
c033,4,5,11,50894,45684,47109,47109,6600.033520955,6602.068480659
# search time: 6600.034s
# total time: 33022.637s
