    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c076_5.json out/1593091766/results/c076_5_best.csv out/1593091766/results/c076_5_predictions.csv out/1593091766/results/c076_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 0]), o: IntList([5]) }
#   Datum { i: IntList([0, 9, 5, 7, 3, 8, 6, 7]), o: IntList([6, 4, 5, 3, 4]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8, 8, 8, 8]), o: IntList([5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 9, 9, 7]), o: IntList([6, 6, 4, 4, 4, 6, 6, 4]) }
#   Datum { i: IntList([6, 2, 2, 2, 6, 3, 3, 6]), o: IntList([3, 3, 3]) }
#   Datum { i: IntList([7, 7, 0, 7, 6, 9, 2, 2, 7, 2]), o: IntList([4, 4, 4, 3, 6, 4]) }
#   Datum { i: IntList([4, 1, 4, 4, 1, 4]), o: IntList([]) }
#   Datum { i: IntList([6, 2, 3]), o: IntList([3]) }
#   Datum { i: IntList([7, 8, 4, 2, 5, 0, 1, 9, 7]), o: IntList([4, 5, 6, 4]) }
#   Datum { i: IntList([6, 0, 9, 7, 1, 0]), o: IntList([3, 6, 4]) }
#   Datum { i: IntList([0, 9, 4, 7]), o: IntList([6, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c076,0,5,1,1176650,1019229,1142725,1142725,600.000050193,602.049729032
c076,0,5,2,770116,726905,749075,749075,1200.000444287,1202.947696283
c076,0,5,3,316456,292544,295495,295495,1800.002935985,1804.062210201
c076,0,5,4,101321,90624,91271,91271,2400.005846661,2404.760925651
c076,0,5,5,72433,64437,64685,64685,3000.007186449,3005.406900044
c076,0,5,6,101841,91046,91520,91520,3600.007600753,3606.12369705
c076,0,5,7,81679,71630,71967,71967,4200.013938735,4206.933374809
c076,0,5,8,69612,65551,68367,68367,4800.016971455,4807.741239151
c076,0,5,9,63790,59709,62527,62527,5400.044359099,5408.58550342
c076,0,5,10,53682,50368,52884,52884,6000.047858804,6009.421871524
c076,0,5,11,48803,45378,47852,47852,6600.081503443,6610.342794766
# search time: 6600.082s
# total time: 6610.733s
c076,1,5,1,1146990,942976,1100715,1100715,600.000435814,600.24964744
c076,1,5,2,767608,725237,747052,747052,1200.000736774,1200.651020453
c076,1,5,3,365779,337653,341139,341139,1800.001699144,1801.020199889
c076,1,5,4,173127,155354,156465,156465,2400.003438005,2401.376829377
c076,1,5,5,113206,99339,99704,99704,3000.007235098,3001.786721156
c076,1,5,6,107148,95813,96217,96217,3600.007897918,3602.090024328
c076,1,5,7,83144,73672,73932,73932,4200.009116855999,4202.469082759
c076,1,5,8,70765,66598,69490,69490,4800.033959820999,4802.894445181
c076,1,5,9,66234,62091,65076,65076,5400.052896783999,5403.396355438
c076,1,5,10,56068,52664,55289,55289,6000.056556726999,6003.863008705
c076,1,5,11,53263,49815,52387,52387,6600.059917842998,6604.245288911
# search time: 6600.060s
# total time: 13215.663s
c076,2,5,1,1244563,1078583,1208787,1208787,600.000131511,600.285281661
c076,2,5,2,816713,771530,794456,794456,1200.00124761,1200.591052044
c076,2,5,3,372974,343265,346944,346944,1800.002197539,1800.86484042
c076,2,5,4,172722,155062,156102,156102,2400.002223239,2401.124888784
c076,2,5,5,126454,113473,113745,113745,3000.0037449640004,3001.301936653
c076,2,5,6,106970,95495,95862,95862,3600.0043448220003,3601.534660187
c076,2,5,7,85102,75140,75446,75446,4200.007618322001,4201.824981323
c076,2,5,8,70849,66620,69541,69541,4800.008636933001,4802.036972104
c076,2,5,9,66067,62037,64940,64940,5400.028489638001,5402.370513463
c076,2,5,10,54918,51507,54087,54087,6000.035385117001,6002.676201732
c076,2,5,11,51382,47667,50359,50359,6600.045346248001,6602.873353706
# search time: 6600.045s
# total time: 19819.366s
c076,3,5,1,1260935,1115079,1232386,1232386,600.000207348,600.281107415
c076,3,5,2,799599,756519,778548,778548,1200.0071710480001,1200.542084608
c076,3,5,3,415458,384188,388123,388123,1800.0078414470001,1800.759684932
c076,3,5,4,189607,170254,171417,171417,2400.00960047,2400.909698696
c076,3,5,5,138084,123292,123573,123573,3000.0134270999997,3001.044229749
c076,3,5,6,116548,104392,104802,104802,3600.0170700979997,3601.214771304
c076,3,5,7,93067,82315,82623,82623,4200.020424976,4201.413983295
c076,3,5,8,79353,74841,77963,77963,4800.022103443,4801.608455747
c076,3,5,9,72510,67876,70902,70902,5400.026903851,5401.814030792
c076,3,5,10,62313,58544,61473,61473,6000.032126278,6002.03384856
c076,3,5,11,56130,52227,54980,54980,6600.04556283,6602.320093172
# search time: 6600.046s
# total time: 26422.298s
c076,4,5,1,1342743,1154132,1301731,1301731,600.002231709,600.277122311
c076,4,5,2,867495,820179,844740,844740,1200.004181359,1200.528487046
c076,4,5,3,419682,387917,391821,391821,1800.005469588,1800.709548388
c076,4,5,4,192628,172636,173840,173840,2400.00833048,2400.864236312
c076,4,5,5,139465,125029,125309,125309,3000.008420234,3000.991780943
c076,4,5,6,133973,119986,120467,120467,3600.011347359,3601.129964661
c076,4,5,7,106987,95116,95548,95548,4200.012182453,4201.309256317
c076,4,5,8,89734,84474,87994,87994,4800.012572537,4801.495815642
c076,4,5,9,84524,79492,82927,82927,5400.019480057,5401.682194504
c076,4,5,10,70794,66566,69700,69700,6000.045319302,6001.86594613
c076,4,5,11,67318,62943,66126,66126,6600.051731158001,6602.023988588
# search time: 6600.052s
# total time: 33025.440s
