    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.32s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c001_1.json out/1593091766/results/c001_1_best.csv out/1593091766/results/c001_1_predictions.csv out/1593091766/results/c001_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2, 2, 8]), o: IntList([2]) }
#   Datum { i: IntList([5, 7, 5, 7, 5]), o: IntList([5]) }
#   Datum { i: IntList([8, 1, 8]), o: IntList([8]) }
#   Datum { i: IntList([0, 6, 4, 4, 0, 6, 4]), o: IntList([4]) }
#   Datum { i: IntList([7, 9, 3, 4]), o: IntList([3]) }
#   Datum { i: IntList([2, 4, 3, 2]), o: IntList([3]) }
#   Datum { i: IntList([0, 0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([9, 6, 9, 8, 6]), o: IntList([9]) }
#   Datum { i: IntList([7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([5, 3, 6]), o: IntList([6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c001,0,1,1,1266948,1036527,1214791,1214791,600.005613632,601.616079217
c001,0,1,2,818187,772306,794575,794575,1200.005893396,1202.667364384
c001,0,1,3,693708,636775,666299,666299,1800.006312941,1803.477352628
c001,0,1,4,550940,501279,525857,525857,2400.0084982030003,2404.117022987
c001,0,1,5,423887,393304,409162,409162,3000.0097028420005,3004.57677521
c001,0,1,6,375727,347856,362532,362532,3600.0128387060004,3605.024387894
c001,0,1,7,276461,255819,266885,266885,4200.01432036,4205.623168435
c001,0,1,8,236608,218149,228181,228181,4800.014452153,4806.191126946
c001,0,1,9,211208,193732,203225,203225,5400.0216276890005,5406.83732231
c001,0,1,10,183707,168056,176547,176547,6000.021654197,6007.430961445
c001,0,1,11,170779,156060,163999,163999,6600.024455347,6608.062197836
# search time: 6600.024s
# total time: 6608.519s
c001,1,1,1,1328241,1149144,1289579,1289579,600.000429938,600.347846169
c001,1,1,2,826667,778250,801682,801682,1200.001660721,1200.712844095
c001,1,1,3,692825,635319,665160,665160,1800.002084698,1801.066713116
c001,1,1,4,546697,497494,521852,521852,2400.002704357,2401.371504439
c001,1,1,5,419987,388687,404894,404894,3000.0032537839998,3001.627619774
c001,1,1,6,369695,342862,357118,357118,3600.006134108,3601.885124508
c001,1,1,7,277083,256194,267498,267498,4200.007261187,4202.193432206
c001,1,1,8,236415,218213,228178,228178,4800.008100222,4802.480341891
c001,1,1,9,211360,194227,203507,203507,5400.009332975001,5402.815051105
c001,1,1,10,183918,168432,176742,176742,6000.018292590001,6003.179946558
c001,1,1,11,170964,155908,164107,164107,6600.022548913001,6603.46810368
# search time: 6600.023s
# total time: 13212.640s
c001,2,1,1,1245699,1022167,1195235,1195235,600.000312359,600.195505848
c001,2,1,2,794145,750884,772372,772372,1200.000433809,1200.471990164
c001,2,1,3,689624,633036,662391,662391,1800.000581418,1800.728759182
c001,2,1,4,555474,505189,530934,530934,2400.000590198,2400.934349186
c001,2,1,5,419509,388896,405154,405154,3000.000944472,3001.120017125
c001,2,1,6,383714,356433,370757,370757,3600.002737742,3601.315595242
c001,2,1,7,274280,253319,264751,264751,4200.004453464,4201.531476305
c001,2,1,8,235883,217330,227605,227605,4800.007124923,4801.748149089
c001,2,1,9,209796,192813,201965,201965,5400.012503749001,5401.960203771
c001,2,1,10,182826,167558,175830,175830,6000.015389368001,6002.181747064
c001,2,1,11,169095,154635,162470,162470,6600.016471156001,6602.430923817
# search time: 6600.016s
# total time: 19815.597s
c001,3,1,1,1279979,1047823,1226961,1226961,600.003516461,600.175171416
c001,3,1,2,809922,764383,786498,786498,1200.01381969,1200.420175737
c001,3,1,3,690321,633315,663024,663024,1800.01827792,1800.642793497
c001,3,1,4,556304,506202,531968,531968,2400.046831543,2400.855779709
c001,3,1,5,416229,386012,402039,402039,3000.0478981419997,3001.007636577
c001,3,1,6,369040,342522,356860,356860,3600.04996761,3601.164589911
c001,3,1,7,277401,256647,267930,267930,4200.052322797,4201.3448877
c001,3,1,8,236677,218006,228303,228303,4800.054919744,4801.494697197
c001,3,1,9,210149,192883,202365,202365,5400.059130177,5401.656952841
c001,3,1,10,184181,168504,177039,177039,6000.062476581,6001.822748622
c001,3,1,11,170643,155869,163801,163801,6600.063797809,6601.972641851
# search time: 6600.064s
# total time: 26418.155s
c001,4,1,1,1297148,1129503,1261286,1261286,600.00004746,600.2588903
c001,4,1,2,825939,778431,801603,801603,1200.002001539,1200.476509118
c001,4,1,3,678704,623507,651782,651782,1800.002321896,1800.690022712
c001,4,1,4,532689,485194,508851,508851,2400.002530315,2400.873707654
c001,4,1,5,420860,389753,406021,406021,3000.00492211,3001.028714286
c001,4,1,6,368774,341917,356306,356306,3600.0049691639997,3601.1732367
c001,4,1,7,275542,254963,265998,265998,4200.0057227709995,4201.33557183
c001,4,1,8,236746,218474,228374,228374,4800.0073087559995,4801.492459713
c001,4,1,9,208465,191168,200680,200680,5400.009824051999,5401.642649385
c001,4,1,10,180851,165594,173816,173816,6000.011624081999,6001.818759188
c001,4,1,11,170132,155347,163314,163314,6600.0122559659985,6601.969526633
# search time: 6600.012s
# total time: 33020.726s
