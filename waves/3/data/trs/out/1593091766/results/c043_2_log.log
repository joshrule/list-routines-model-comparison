    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c043_2.json out/1593091766/results/c043_2_best.csv out/1593091766/results/c043_2_predictions.csv out/1593091766/results/c043_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 5, 5, 5, 5]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([4, 4, 6, 4, 6, 6, 6, 4, 6]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([0]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([9, 9, 9, 9, 9, 9, 9, 9]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 0, 6, 4, 5, 5, 9, 6, 4, 1]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 5, 5, 6, 6, 5, 6, 5, 6, 6]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([9, 3, 7, 8, 2, 1, 9, 0]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([8, 7, 8, 8, 4, 7]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([4, 1, 6, 4, 6, 1, 6, 3, 4]), o: IntList([8, 2, 7, 0, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c043,0,2,1,1265798,1036824,1213571,1213571,600.001215495,601.699144661
c043,0,2,2,461239,434546,446710,446710,1200.003168363,1202.730354984
c043,0,2,3,286372,271873,280076,280076,1800.004887033,1803.515757405
c043,0,2,4,178313,169309,173668,173668,2400.0057521159997,2404.640088622
c043,0,2,5,166262,156460,161885,161885,3000.0073214349995,3005.404956001
c043,0,2,6,126554,119843,122941,122941,3600.0101556209993,3606.31742854
c043,0,2,7,98297,93625,95945,95945,4200.014463914999,4207.304743409
c043,0,2,8,96860,90371,94664,94664,4800.015611354,4808.057932831
c043,0,2,9,82557,77106,79738,79738,5400.0177776909995,5408.886713193
c043,0,2,10,72150,66688,69201,69201,6000.021648391999,6009.672212975
c043,0,2,11,67731,63365,65226,65226,6600.022917766999,6610.261686456
# search time: 6600.023s
# total time: 6610.563s
c043,1,2,1,1228335,1041667,1187359,1187359,600.008046452,600.319315511
c043,1,2,2,449753,423621,435626,435626,1200.00822925,1200.705427805
c043,1,2,3,283748,268699,277472,277472,1800.008873356,1801.051034398
c043,1,2,4,176161,167277,171767,171767,2400.010742298,2401.554526135
c043,1,2,5,169320,160388,164851,164851,3000.014133957,3001.923236223
c043,1,2,6,125927,118485,122229,122229,3600.015271136,3602.32755365
c043,1,2,7,98757,93922,96362,96362,4200.016470008,4202.771164138
c043,1,2,8,98659,93381,96311,96311,4800.0169965430005,4803.186406219
c043,1,2,9,83323,78237,80473,80473,5400.018578755001,5403.541777667
c043,1,2,10,72317,67611,69381,69381,6000.024302910001,6003.970835059
c043,1,2,11,67069,62440,64343,64343,6600.025744692001,6604.488477421
# search time: 6600.026s
# total time: 13215.499s
c043,2,2,1,1231018,1006753,1180327,1180327,600.000187029,600.190037323
c043,2,2,2,457719,430381,442802,442802,1200.000770144,1200.445639289
c043,2,2,3,285218,270857,279013,279013,1800.006180842,1800.673547997
c043,2,2,4,176531,167800,172040,172040,2400.007304322,2401.015299073
c043,2,2,5,168945,159799,164541,164541,3000.0094090479997,3001.265117933
c043,2,2,6,126793,119229,123064,123064,3600.0123239219997,3601.508035831
c043,2,2,7,96326,91648,94004,94004,4200.015227406,4201.824890591
c043,2,2,8,95445,90234,93212,93212,4800.020504451,4802.110260641
c043,2,2,9,81776,75578,79128,79128,5400.021213842,5402.345082785
c043,2,2,10,72235,67396,69229,69229,6000.022895244,6002.607972105
c043,2,2,11,65958,61587,63416,63416,6600.035331192,6602.898925104
# search time: 6600.035s
# total time: 19818.978s
c043,3,2,1,1232395,1046540,1191553,1191553,600.000055949,600.22536985
c043,3,2,2,447063,421221,433138,433138,1200.0032622959998,1200.442376562
c043,3,2,3,286464,272280,280288,280288,1800.0048071769997,1800.638573288
c043,3,2,4,178216,169162,173476,173476,2400.0069817199997,2400.887968119
c043,3,2,5,170079,161310,165545,165545,3000.0105575279995,3001.084696701
c043,3,2,6,125545,118164,121932,121932,3600.0125287789997,3601.299113506
c043,3,2,7,98296,93452,95863,95863,4200.016493997,4201.555278222
c043,3,2,8,97903,93081,95611,95611,4800.018138888,4801.840183955
c043,3,2,9,81846,76675,78959,78959,5400.0227543460005,5402.035113049
c043,3,2,10,72299,67202,69261,69261,6000.031514104001,6002.206358015
c043,3,2,11,65596,61524,63145,63145,6600.041701049001,6602.349304742
# search time: 6600.042s
# total time: 26421.607s
c043,4,2,1,1290928,1060600,1238225,1238225,600.001061838,600.19291304
c043,4,2,2,452085,425506,437777,437777,1200.001142519,1200.382963257
c043,4,2,3,283655,269688,277633,277633,1800.001786219,1800.539554002
c043,4,2,4,172097,161061,167683,167683,2400.00316405,2400.738513499
c043,4,2,5,167178,158258,162757,162757,3000.00410105,3000.901063111
c043,4,2,6,125461,118457,121921,121921,3600.007610576,3601.095938322
c043,4,2,7,97924,93126,95508,95508,4200.010324501,4201.309912274
c043,4,2,8,96409,91533,94166,94166,4800.012484342999,4801.468855696
c043,4,2,9,82205,77148,79338,79338,5400.016998470999,5401.643989471
c043,4,2,10,71954,67183,68978,68978,6000.018269126999,6001.786815746
c043,4,2,11,64712,60383,62146,62146,6600.0305352899995,6602.000196715
# search time: 6600.031s
# total time: 33024.055s
