    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c069_5.json out/1593091766/results/c069_5_best.csv out/1593091766/results/c069_5_predictions.csv out/1593091766/results/c069_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 1]), o: IntList([9, 3, 4, 0, 7, 1, 7, 2, 9, 1]) }
#   Datum { i: IntList([6, 6, 6, 6, 6, 6]), o: IntList([9, 3, 4, 0, 6, 6, 6, 6, 6, 6, 7, 2, 9, 1]) }
#   Datum { i: IntList([]), o: IntList([9, 3, 4, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 0, 4, 1, 1, 0]), o: IntList([9, 3, 4, 0, 8, 0, 4, 1, 1, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([5, 8, 8]), o: IntList([9, 3, 4, 0, 5, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 4, 7]), o: IntList([9, 3, 4, 0, 8, 4, 7, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 1, 6, 3, 2, 7, 3]), o: IntList([9, 3, 4, 0, 8, 1, 6, 3, 2, 7, 3, 7, 2, 9, 1]) }
#   Datum { i: IntList([8]), o: IntList([9, 3, 4, 0, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([2, 5, 2, 5, 5]), o: IntList([9, 3, 4, 0, 2, 5, 2, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([4, 0, 9, 3, 0, 8, 8]), o: IntList([9, 3, 4, 0, 4, 0, 9, 3, 0, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([9, 3, 4, 0, 0, 5, 5, 5, 7, 2, 9, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c069,0,5,1,1151522,943855,1104338,1104338,600.002532949,601.886042919
c069,0,5,2,246101,228257,235309,235309,1200.0044158340002,1202.926508164
c069,0,5,3,123615,110559,111619,111619,1800.0046702950003,1803.861898947
c069,0,5,4,113859,100797,101262,101262,2400.0057306780004,2404.723841689
c069,0,5,5,84563,73536,73759,73759,3000.0201959000005,3005.560417627
c069,0,5,6,67963,59708,59967,59967,3600.033594740001,3606.363022527
c069,0,5,7,64618,53794,53963,53963,4200.035446185001,4207.019208243
c069,0,5,8,48887,41708,41979,41979,4800.037257014001,4807.738571278
c069,0,5,9,44383,37967,38186,38186,5400.038050556001,5408.362674174
c069,0,5,10,38916,32502,32720,32720,6000.04723627,6008.996805573
c069,0,5,11,32556,27129,27350,27350,6600.05659816,6609.825637156
# search time: 6600.057s
# total time: 6610.131s
c069,1,5,1,1281123,1084951,1238017,1238017,600.000022569,600.37767363
c069,1,5,2,281821,261497,269748,269748,1200.0000711419998,1200.778873755
c069,1,5,3,138904,122931,124276,124276,1800.0166402859998,1801.280779079
c069,1,5,4,110983,98142,98616,98616,2400.018167454,2401.672408901
c069,1,5,5,86553,75632,75934,75934,3000.023974018,3002.014839305
c069,1,5,6,67791,59262,59526,59526,3600.029197902,3602.399983594
c069,1,5,7,64834,54372,54695,54695,4200.034210341,4202.68629634
c069,1,5,8,48715,41638,41914,41914,4800.040364251,4803.074935869
c069,1,5,9,43074,36901,37163,37163,5400.053569007,5403.42455742
c069,1,5,10,39103,32481,32712,32712,6000.067204216,6003.747269878
c069,1,5,11,33318,27728,27974,27974,6600.067743617001,6604.014505315
# search time: 6600.068s
# total time: 13214.615s
c069,2,5,1,1271135,1038565,1218693,1218693,600.010590252,600.261346217
c069,2,5,2,284144,263330,271685,271685,1200.011014319,1200.524126865
c069,2,5,3,142759,127761,129004,129004,1800.0265946519999,1800.821438545
c069,2,5,4,114296,101232,101695,101695,2400.0266126429997,2401.061382146
c069,2,5,5,86395,75678,75981,75981,3000.0275111839996,3001.297048865
c069,2,5,6,65954,57877,58091,58091,3600.038679602,3601.597481238
c069,2,5,7,65195,54934,55183,55183,4200.039715551,4201.791817048
c069,2,5,8,48162,40408,40641,40641,4800.047105501,4802.011357108
c069,2,5,9,44110,37957,38141,38141,5400.065549682,5402.264207522
c069,2,5,10,38932,32730,32986,32986,6000.086263908,6002.49627046
c069,2,5,11,32589,27135,27344,27344,6600.110214877,6602.7858249
# search time: 6600.110s
# total time: 19817.899s
c069,3,5,1,1379695,1196630,1340113,1340113,600.000864963,600.362816467
c069,3,5,2,284370,263569,272096,272096,1200.001242694,1200.569189858
c069,3,5,3,139736,123757,125078,125078,1800.007197163,1800.804349283
c069,3,5,4,111591,98750,99204,99204,2400.009670108,2400.989178333
c069,3,5,5,84801,73743,73971,73971,3000.0138691660004,3001.175986577
c069,3,5,6,67579,59322,59586,59586,3600.0195580050004,3601.379960117
c069,3,5,7,65336,54872,55099,55099,4200.023654966,4201.539100232
c069,3,5,8,48492,41351,41584,41584,4800.027788142001,4801.781815229
c069,3,5,9,42479,36329,36615,36615,5400.038684269,5401.938341607
c069,3,5,10,38787,32557,32781,32781,6000.060151588001,6002.20832489
c069,3,5,11,32423,27193,27410,27410,6600.063075037001,6602.435949239
# search time: 6600.063s
# total time: 26420.836s
c069,4,5,1,1268067,1073882,1225301,1225301,600.005862086,600.26113403
c069,4,5,2,278243,257526,265955,265955,1200.00635012,1200.430528694
c069,4,5,3,138035,122012,123322,123322,1800.006359506,1800.636565249
c069,4,5,4,113618,100757,101250,101250,2400.0098784270003,2400.795367421
c069,4,5,5,85761,75105,75424,75424,3000.0185832,3000.95483568
c069,4,5,6,66871,59068,59322,59322,3600.021088417,3601.117257577
c069,4,5,7,65096,54777,55003,55003,4200.023840574,4201.224094524
c069,4,5,8,47297,39849,40085,40085,4800.043330429,4801.49469162
c069,4,5,9,44137,38107,38347,38347,5400.05193901,5401.60740328
c069,4,5,10,38661,32427,32637,32637,6000.052137541,6001.744002503
c069,4,5,11,33060,27400,27614,27614,6600.0634286839995,6601.946730384
# search time: 6600.063s
# total time: 33023.334s
