    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c047_2.json out/1593091766/results/c047_2_best.csv out/1593091766/results/c047_2_predictions.csv out/1593091766/results/c047_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 0, 7, 2, 1]), o: IntList([9, 6, 3, 8, 5, 4, 0, 7, 2, 1]) }
#   Datum { i: IntList([]), o: IntList([9, 6, 3, 8, 5]) }
#   Datum { i: IntList([2, 2, 7, 0, 6, 2, 2, 6]), o: IntList([9, 6, 3, 8, 5, 2, 2, 7, 0, 6, 2, 2, 6]) }
#   Datum { i: IntList([0, 3, 4, 5, 0, 0, 5]), o: IntList([9, 6, 3, 8, 5, 0, 3, 4, 5, 0, 0, 5]) }
#   Datum { i: IntList([9, 4, 8]), o: IntList([9, 6, 3, 8, 5, 9, 4, 8]) }
#   Datum { i: IntList([9, 0]), o: IntList([9, 6, 3, 8, 5, 9, 0]) }
#   Datum { i: IntList([8, 3, 7, 9]), o: IntList([9, 6, 3, 8, 5, 8, 3, 7, 9]) }
#   Datum { i: IntList([5, 2, 0, 2, 4, 0, 3, 2, 4]), o: IntList([9, 6, 3, 8, 5, 5, 2, 0, 2, 4, 0, 3, 2, 4]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([9, 6, 3, 8, 5, 1, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([6]), o: IntList([9, 6, 3, 8, 5, 6]) }
#   Datum { i: IntList([4, 6, 7, 0, 7, 7, 1, 9]), o: IntList([9, 6, 3, 8, 5, 4, 6, 7, 0, 7, 7, 1, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c047,0,2,1,1276471,1047067,1224205,1224205,600.001693701,601.732865381
c047,0,2,2,305894,273060,281325,281325,1200.002177941,1202.812148638
c047,0,2,3,238704,219412,224792,224792,1800.002666058,1803.366673191
c047,0,2,4,150671,134062,137818,137818,2400.0092885579998,2403.724155105
c047,0,2,5,112962,99046,101410,101410,3000.012896504,3004.097740043
c047,0,2,6,98460,84836,86898,86898,3600.01352684,3604.412355241
c047,0,2,7,85727,73840,75638,75638,4200.016837758,4204.7790693
c047,0,2,8,73706,63878,65372,65372,4800.022445403,4805.150668277
c047,0,2,9,59861,51389,52558,52558,5400.0274523220005,5405.48173136
c047,0,2,10,51982,43846,44956,44956,6000.0353817000005,6005.867272033
c047,0,2,11,50056,42241,43221,43221,6600.042413201,6606.31349623
# search time: 6600.042s
# total time: 6606.587s
c047,1,2,1,1311522,1135074,1273714,1273714,600.000025499,600.369749787
c047,1,2,2,296494,262985,271144,271144,1200.0001131039999,1200.842411207
c047,1,2,3,234853,215557,220982,220982,1800.000218536,1801.112372945
c047,1,2,4,148309,131532,135790,135790,2400.004186889,2401.339986985
c047,1,2,5,111705,98047,100571,100571,3000.006757106,3001.51686365
c047,1,2,6,100772,87386,88973,88973,3600.01027183,3601.699755604
c047,1,2,7,84954,72999,74993,74993,4200.02024673,4201.887113221
c047,1,2,8,72881,63235,64758,64758,4800.023508726,4802.101365277
c047,1,2,9,59145,50639,51884,51884,5400.02523401,5402.278994617
c047,1,2,10,51542,43501,44628,44628,6000.032980561,6002.487604328
c047,1,2,11,48963,41365,42403,42403,6600.039555673,6602.681909274
# search time: 6600.040s
# total time: 13209.718s
c047,2,2,1,1306037,1151627,1274856,1274856,600.001893304,600.360389063
c047,2,2,2,299074,266017,274047,274047,1200.004072007,1200.660694556
c047,2,2,3,234461,214965,220621,220621,1800.0080624810003,1800.848097896
c047,2,2,4,151411,135412,138821,138821,2400.0102722090005,2400.983883617
c047,2,2,5,111269,96975,99878,99878,3000.0110940720006,3001.110968789
c047,2,2,6,97534,84234,86248,86248,3600.0132173880006,3601.223234912
c047,2,2,7,85689,74011,75621,75621,4200.018875539001,4201.38313042
c047,2,2,8,72794,63262,64798,64798,4800.024106869001,4801.529464754
c047,2,2,9,59332,50990,52189,52189,5400.035942829001,5401.674793084
c047,2,2,10,51184,43317,44437,44437,6000.052162917002,6001.841061993
c047,2,2,11,48809,41314,42326,42326,6600.058312987002,6601.981609782
# search time: 6600.058s
# total time: 19812.147s
c047,3,2,1,1296944,1123515,1259442,1259442,600.001173341,600.276371623
c047,3,2,2,302868,270363,278451,278451,1200.0033306159999,1200.501486063
c047,3,2,3,234864,216587,221726,221726,1800.0053220599998,1800.650581473
c047,3,2,4,150374,134217,137585,137585,2400.0103700639997,2400.765096213
c047,3,2,5,111646,98469,100855,100855,3000.0131828199997,3000.865370194
c047,3,2,6,100980,87849,89436,89436,3600.0133394669997,3600.958899595
c047,3,2,7,85734,73852,75723,75723,4200.017040789,4201.057308121
c047,3,2,8,72775,62879,64397,64397,4800.02268961,4801.16619201
c047,3,2,9,58986,50849,52082,52082,5400.0236411880005,5401.291395732
c047,3,2,10,50638,42661,43749,43749,6000.032873965,6001.391248037
c047,3,2,11,48641,41089,42098,42098,6600.034402595001,6601.507682301
# search time: 6600.034s
# total time: 26414.240s
c047,4,2,1,1305509,1127595,1266793,1266793,600.000098217,600.266740403
c047,4,2,2,301136,268227,276337,276337,1200.001124903,1200.45489779
c047,4,2,3,232490,214213,219519,219519,1800.0025468129998,1800.584793493
c047,4,2,4,146456,129959,133984,133984,2400.0063752409997,2400.673245401
c047,4,2,5,110871,97280,99605,99605,3000.0090721099996,3000.761217589
c047,4,2,6,97208,83776,85774,85774,3600.0096186469996,3600.843647743
c047,4,2,7,85149,73193,74935,74935,4200.0114057109995,4200.940067855
c047,4,2,8,72571,63005,64461,64461,4800.019435275999,4801.028800797
c047,4,2,9,59222,50892,52072,52072,5400.019555814999,5401.130980647
c047,4,2,10,50886,43009,44034,44034,6000.020583977999,6001.206962867
c047,4,2,11,49167,41503,42521,42521,6600.034130326999,6601.306862321
# search time: 6600.034s
# total time: 33015.996s
