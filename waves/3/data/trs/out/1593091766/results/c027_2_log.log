    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c027_2.json out/1593091766/results/c027_2_best.csv out/1593091766/results/c027_2_predictions.csv out/1593091766/results/c027_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 1, 6, 4]), o: IntList([9, 6, 4]) }
#   Datum { i: IntList([8, 2, 3, 6, 0, 0, 6, 0, 9, 4]), o: IntList([8, 3, 6, 0, 0, 6, 0, 9, 4]) }
#   Datum { i: IntList([3, 3, 3, 5, 5, 5, 3]), o: IntList([3, 3, 5, 5, 5, 3]) }
#   Datum { i: IntList([8, 5, 3, 6, 1, 1, 7, 0, 4]), o: IntList([8, 3, 6, 1, 1, 7, 0, 4]) }
#   Datum { i: IntList([8, 5, 9, 4, 1, 2, 6, 0]), o: IntList([8, 9, 4, 1, 2, 6, 0]) }
#   Datum { i: IntList([0, 8, 0, 8]), o: IntList([0, 8, 8]) }
#   Datum { i: IntList([8, 4, 2, 2, 3, 3, 4, 8]), o: IntList([8, 2, 2, 3, 3, 4, 8]) }
#   Datum { i: IntList([9, 3, 9, 4, 5, 6]), o: IntList([9, 3, 4, 5, 6]) }
#   Datum { i: IntList([7, 7, 7]), o: IntList([7, 7]) }
#   Datum { i: IntList([5, 2, 7, 9, 7, 0, 6, 9, 2]), o: IntList([5, 7, 9, 7, 0, 6, 9, 2]) }
#   Datum { i: IntList([1, 1, 1, 1, 1]), o: IntList([1, 1, 1, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c027,0,2,1,1297309,1063499,1243980,1243980,600.002332015,601.74054683
c027,0,2,2,613990,576630,592963,592963,1200.0028667010001,1202.721044471
c027,0,2,3,267534,248382,257683,257683,1800.0039797690001,1803.205306011
c027,0,2,4,165500,154570,159577,159577,2400.0073355510003,2403.993881293
c027,0,2,5,123123,111192,116232,116232,3000.0259185850005,3004.759360947
c027,0,2,6,103939,94463,97392,97392,3600.0322097080007,3605.486849468
c027,0,2,7,100400,89978,90803,90803,4200.034901512001,4206.076328841
c027,0,2,8,82594,74202,74906,74906,4800.041802415001,4806.764810614
c027,0,2,9,66782,58265,58745,58745,5400.042707824001,5407.517809946
c027,0,2,10,64222,55755,56394,56394,6000.047760262001,6008.203184159
c027,0,2,11,53426,47664,48286,48286,6600.071797820001,6608.953750423
# search time: 6600.072s
# total time: 6609.352s
c027,1,2,1,1273531,1040603,1220535,1220535,600.002001069,600.264989672
c027,1,2,2,628522,589101,606162,606162,1200.006613241,1200.659315227
c027,1,2,3,268152,249026,257949,257949,1800.007617946,1800.893878329
c027,1,2,4,165234,153985,159036,159036,2400.008099232,2401.244338789
c027,1,2,5,125063,114369,118253,118253,3000.010018955,3001.637095989
c027,1,2,6,105067,95901,98599,98599,3600.011083346,3601.94532151
c027,1,2,7,100947,89936,90744,90744,4200.016849336,4202.282177897
c027,1,2,8,82252,72930,73592,73592,4800.020726575,4802.639952868
c027,1,2,9,67037,58533,59057,59057,5400.030122466999,5403.015924676
c027,1,2,10,65266,58186,58929,58929,6000.035422436999,6003.331710755
c027,1,2,11,53418,47308,47901,47901,6600.036729695999,6603.605063534
# search time: 6600.037s
# total time: 13213.669s
c027,2,2,1,1319445,1143696,1281543,1281543,600.000189806,600.339542702
c027,2,2,2,616918,579057,595401,595401,1200.000775465,1200.627602989
c027,2,2,3,267095,247917,256817,256817,1800.0022081030002,1800.807298505
c027,2,2,4,162967,151766,156705,156705,2400.0044192,2401.061637108
c027,2,2,5,122426,111835,115844,115844,3000.006112863,3001.311937643
c027,2,2,6,104035,94486,97481,97481,3600.010643539,3601.517093058
c027,2,2,7,99699,89269,90023,90023,4200.013511544999,4201.72978139
c027,2,2,8,81699,73317,74010,74010,4800.0184993679995,4801.955549063
c027,2,2,9,61925,55276,55849,55849,5400.019042946,5402.146208968
c027,2,2,10,63717,56243,56958,56958,6000.021007587,6002.408315651
c027,2,2,11,53419,47847,48515,48515,6600.026994904,6602.670933936
# search time: 6600.027s
# total time: 19817.058s
c027,3,2,1,1271233,1039037,1218271,1218271,600.000073938,600.206265263
c027,3,2,2,625115,586885,603421,603421,1200.00114464,1200.446012438
c027,3,2,3,267473,247794,256895,256895,1800.009460589,1800.572417931
c027,3,2,4,164955,154101,158866,158866,2400.009823631,2400.762619001
c027,3,2,5,124042,113125,117170,117170,3000.0149364119998,3000.992561089
c027,3,2,6,103251,93524,96645,96645,3600.0239400049995,3601.167690286
c027,3,2,7,100098,89539,90352,90352,4200.026734227999,4201.336524814
c027,3,2,8,82149,73039,73720,73720,4800.041171809,4801.540407057
c027,3,2,9,65475,57023,57538,57538,5400.055222264,5401.74983475
c027,3,2,10,64017,56475,57145,57145,6000.059585311,6001.963774457
c027,3,2,11,53283,47704,48362,48362,6600.0622932979995,6602.177318005
# search time: 6600.062s
# total time: 26420.233s
c027,4,2,1,1272630,1043332,1220061,1220061,600.004580195,600.207474248
c027,4,2,2,609269,573429,589019,589019,1200.004612912,1200.414745391
c027,4,2,3,265437,246258,255228,255228,1800.0063432410002,1800.535903778
c027,4,2,4,164775,153663,158545,158545,2400.00987767,2400.685522261
c027,4,2,5,123326,112754,116646,116646,3000.010277542,3000.844137945
c027,4,2,6,103290,93700,96904,96904,3600.011066076,3601.001796569
c027,4,2,7,100729,89667,90507,90507,4200.01754216,4201.144987059
c027,4,2,8,81853,73446,74124,74124,4800.021841518999,4801.23106601
c027,4,2,9,67133,59540,60155,60155,5400.027301290999,5401.333763681
c027,4,2,10,64295,56018,56666,56666,6000.037642637999,6001.467770032
c027,4,2,11,52225,46213,46769,46769,6600.040066483999,6601.648298203
# search time: 6600.040s
# total time: 33022.577s
