    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c070_2.json out/1593091766/results/c070_2_best.csv out/1593091766/results/c070_2_predictions.csv out/1593091766/results/c070_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 3, 5]), o: IntList([4, 3, 5, 4, 3, 5]) }
#   Datum { i: IntList([5, 2, 7, 8, 3, 2]), o: IntList([5, 2, 7, 8, 3, 2, 5, 2, 7, 8, 3, 2]) }
#   Datum { i: IntList([6, 7, 0, 9, 1, 8]), o: IntList([6, 7, 0, 9, 1, 8, 6, 7, 0, 9, 1, 8]) }
#   Datum { i: IntList([3, 2, 0, 9]), o: IntList([3, 2, 0, 9, 3, 2, 0, 9]) }
#   Datum { i: IntList([7]), o: IntList([7, 7]) }
#   Datum { i: IntList([7, 6, 9, 0, 5, 1, 2]), o: IntList([7, 6, 9, 0, 5, 1, 2, 7, 6, 9, 0, 5, 1, 2]) }
#   Datum { i: IntList([9, 0, 3, 3, 3, 1, 9]), o: IntList([9, 0, 3, 3, 3, 1, 9, 9, 0, 3, 3, 3, 1, 9]) }
#   Datum { i: IntList([7, 1, 1, 2, 1, 2]), o: IntList([7, 1, 1, 2, 1, 2, 7, 1, 1, 2, 1, 2]) }
#   Datum { i: IntList([0, 8, 4, 3, 6, 8, 4]), o: IntList([0, 8, 4, 3, 6, 8, 4, 0, 8, 4, 3, 6, 8, 4]) }
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([5, 5]), o: IntList([5, 5, 5, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c070,0,2,1,698034,570894,668937,668937,600.000192815,602.806990605
c070,0,2,2,244566,225204,231697,231697,1200.000291067,1204.524823016
c070,0,2,3,100437,92691,93432,93432,1800.003490401,1805.877138207
c070,0,2,4,61009,55802,56299,56299,2400.016822943,2407.370408335
c070,0,2,5,51254,47243,47482,47482,3000.023778796,3008.607305569
c070,0,2,6,47985,42643,42889,42889,3600.041078508,3609.987038318
c070,0,2,7,38084,33774,33957,33957,4200.050722348999,4210.782896157
c070,0,2,8,31264,26851,27033,27033,4800.066714144999,4811.628186649
c070,0,2,9,23739,20881,21039,21039,5400.067256005,5412.870290854
c070,0,2,10,19504,16951,17089,17089,6000.080538378,6013.886967767
c070,0,2,11,17400,15468,15593,15593,6600.090952582,6614.831158551
# search time: 6600.091s
# total time: 6615.071s
c070,1,2,1,692384,565619,663117,663117,600.000083458,600.374658159
c070,1,2,2,240193,221212,227422,227422,1200.0029169929999,1201.093850145
c070,1,2,3,97686,90001,90802,90802,1800.006693164,1801.712204864
c070,1,2,4,60435,55244,55737,55737,2400.012075545,2402.373967867
c070,1,2,5,49768,45742,45919,45919,3000.0318206419997,3003.027470616
c070,1,2,6,47622,42427,42674,42674,3600.0422408179998,3603.676180374
c070,1,2,7,37935,32970,33126,33126,4200.055906492999,4204.114329517
c070,1,2,8,31083,26832,27026,27026,4800.0738575059995,4804.517464736
c070,1,2,9,23904,21127,21304,21304,5400.101323045,5405.034341781
c070,1,2,10,19796,17355,17483,17483,6000.108499651,6005.624315723
c070,1,2,11,17153,15088,15218,15218,6600.1698926789995,6606.315708264
# search time: 6600.170s
# total time: 13221.779s
c070,2,2,1,709904,616977,690186,690186,600.0011868,600.343643786
c070,2,2,2,238854,219692,226132,226132,1200.0013153710001,1200.804548518
c070,2,2,3,97621,90010,90775,90775,1800.0022862650003,1801.209445446
c070,2,2,4,59435,54274,54685,54685,2400.0040261490003,2401.729390142
c070,2,2,5,50802,46976,47209,47209,3000.0193304360005,3002.146751994
c070,2,2,6,48283,42970,43218,43218,3600.0256750130006,3602.585934926
c070,2,2,7,37762,33601,33746,33746,4200.036895836,4202.933328098
c070,2,2,8,31151,26821,26997,26997,4800.049131911001,4803.225143541
c070,2,2,9,24111,21292,21437,21437,5400.059009712,5403.443680646
c070,2,2,10,19636,17137,17264,17264,6000.078908500001,6003.732152969
c070,2,2,11,17124,15154,15272,15272,6600.107109320001,6604.145358855
# search time: 6600.107s
# total time: 19826.312s
c070,3,2,1,685183,588712,664166,664166,600.003564256,600.287437194
c070,3,2,2,238076,219103,225417,225417,1200.005145478,1200.643767869
c070,3,2,3,98954,91443,92215,92215,1800.00821439,1800.967434141
c070,3,2,4,58676,53460,53894,53894,2400.013357543,2401.236492921
c070,3,2,5,49311,45332,45517,45517,3000.013782045,3001.530614612
c070,3,2,6,47590,42288,42515,42515,3600.018679697,3601.895569997
c070,3,2,7,38066,32932,33061,33061,4200.039424104,4202.084166926
c070,3,2,8,30730,26591,26777,26777,4800.042047014001,4802.30109031
c070,3,2,9,23751,21121,21272,21272,5400.047641931001,5402.500864117
c070,3,2,10,33175,29082,29251,29251,6000.0613788910005,6002.717089537
c070,3,2,11,31068,27392,27569,27569,6600.105226002001,6602.942958778
# search time: 6600.105s
# total time: 26429.678s
c070,4,2,1,1152983,995141,1118935,1118935,600.000960601,600.311125148
c070,4,2,2,391585,362021,372123,372123,1200.0012396339998,1200.576302451
c070,4,2,3,166370,153699,154992,154992,1800.0019294979998,1800.770723382
c070,4,2,4,99831,91117,91821,91821,2400.006228039,2400.993688644
c070,4,2,5,49433,45391,45543,45543,3000.0081005539996,3001.249019396
c070,4,2,6,47339,42179,42420,42420,3600.0081884399997,3601.501273865
c070,4,2,7,37717,32612,32751,32751,4200.019015786,4201.668297013
c070,4,2,8,30668,26426,26610,26610,4800.033166331,4801.916571529
c070,4,2,9,22964,20134,20270,20270,5400.040937682,5402.126619841
c070,4,2,10,19150,16776,16910,16910,6000.055839952,6002.409584638
c070,4,2,11,17419,15476,15606,15606,6600.056957061,6602.539187291
# search time: 6600.057s
# total time: 33032.753s
