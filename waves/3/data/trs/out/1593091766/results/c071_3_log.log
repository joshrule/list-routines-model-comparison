    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c071_3.json out/1593091766/results/c071_3_best.csv out/1593091766/results/c071_3_predictions.csv out/1593091766/results/c071_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4, 3, 6, 0]), o: IntList([3, 6, 5, 8, 2]) }
#   Datum { i: IntList([1, 3, 3, 2, 4, 5, 6]), o: IntList([3, 5, 5, 4, 6, 7, 8]) }
#   Datum { i: IntList([6, 0, 6, 6, 0, 2, 6, 2, 0]), o: IntList([8, 2, 8, 8, 2, 4, 8, 4, 2]) }
#   Datum { i: IntList([0, 7, 5, 7, 6, 3, 4, 2]), o: IntList([2, 9, 7, 9, 8, 5, 6, 4]) }
#   Datum { i: IntList([7, 7, 1, 4, 4, 6, 4, 1, 4, 0]), o: IntList([9, 9, 3, 6, 6, 8, 6, 3, 6, 2]) }
#   Datum { i: IntList([5, 5]), o: IntList([7, 7]) }
#   Datum { i: IntList([4, 5, 7]), o: IntList([6, 7, 9]) }
#   Datum { i: IntList([0, 0, 7, 0]), o: IntList([2, 2, 9, 2]) }
#   Datum { i: IntList([6, 7, 7, 6, 1, 4, 2, 6, 5]), o: IntList([8, 9, 9, 8, 3, 6, 4, 8, 7]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([6]), o: IntList([8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c071,0,3,1,674420,570434,651472,651472,600.012015589,602.761927048
c071,0,3,2,261492,244873,252876,252876,1200.016672916,1204.64123718
c071,0,3,3,124212,115138,116601,116601,1800.0187956680002,1806.448192967
c071,0,3,4,85742,80896,81125,81125,2400.019975741,2407.603212063
c071,0,3,5,58439,54101,54648,54648,3000.041052279,3009.011744043
c071,0,3,6,42766,39517,39920,39920,3600.0650669879997,3610.270265759
c071,0,3,7,41489,37447,37845,37845,4200.078866717,4211.470976522
c071,0,3,8,37888,34096,34471,34471,4800.081298372,4812.740049727
c071,0,3,9,35134,31781,32124,32124,5400.091974518,5413.94747412
c071,0,3,10,29050,26315,26614,26614,6000.109792419,6015.08327704
c071,0,3,11,26272,23669,23972,23972,6600.122610627,6616.364278581
# search time: 6600.123s
# total time: 6616.640s
c071,1,3,1,693879,592212,671602,671602,600.003137275,600.418492575
c071,1,3,2,261166,244636,252480,252480,1200.004199771,1201.109562279
c071,1,3,3,126032,116889,118258,118258,1800.006607659,1801.770190367
c071,1,3,4,84775,80099,80397,80397,2400.007089652,2402.304981441
c071,1,3,5,57303,52753,53295,53295,3000.011547505,3002.937127076
c071,1,3,6,42020,38440,38852,38852,3600.020563679,3603.585341245
c071,1,3,7,40338,36287,36656,36656,4200.022676975,4204.244140593
c071,1,3,8,38783,35105,35474,35474,4800.031835119,4804.916085943
c071,1,3,9,33984,30650,30996,30996,5400.033110722,5405.734817032
c071,1,3,10,29077,26337,26627,26627,6000.080122954,6006.332767877
c071,1,3,11,26392,23721,24029,24029,6600.097225077,6607.028002533
# search time: 6600.097s
# total time: 13224.131s
c071,2,3,1,665460,543402,637769,637769,600.000059792,600.222354858
c071,2,3,2,268104,251176,259106,259106,1200.003910841,1200.67014345
c071,2,3,3,122865,113655,115131,115131,1800.01028835,1801.174571383
c071,2,3,4,84373,79572,79880,79880,2400.013900545,2401.534471356
c071,2,3,5,58116,53693,54223,54223,3000.016326898,3001.989172023
c071,2,3,6,42755,39514,39948,39948,3600.030953768,3602.431590779
c071,2,3,7,41162,37300,37682,37682,4200.036185477,4202.877368025
c071,2,3,8,37444,33841,34217,34217,4800.042927677,4803.264893757
c071,2,3,9,34625,31227,31567,31567,5400.072747006,5403.835222626
c071,2,3,10,28577,25812,26108,26108,6000.083520771,6004.180396159
c071,2,3,11,26161,23551,23834,23834,6600.137273949999,6604.787651486
# search time: 6600.137s
# total time: 19829.553s
c071,3,3,1,705910,619719,688161,688161,600.000262306,600.312889246
c071,3,3,2,265164,248048,256074,256074,1200.001897394,1200.639144128
c071,3,3,3,125604,116419,117756,117756,1800.002949635,1801.033015148
c071,3,3,4,84132,79427,79722,79722,2400.008859116,2401.333489461
c071,3,3,5,57842,53361,53887,53887,3000.035136122,3001.69085731
c071,3,3,6,41580,38198,38618,38618,3600.037483744,3602.035118267
c071,3,3,7,41261,37188,37584,37584,4200.04015496,4202.396448323
c071,3,3,8,38464,34827,35212,35212,4800.073610144,4802.736768051
c071,3,3,9,34805,31387,31691,31691,5400.080880673,5403.079721658
c071,3,3,10,28653,25876,26180,26180,6000.089622347,6003.456151085
c071,3,3,11,26322,23884,24143,24143,6600.096890511,6603.880722415
# search time: 6600.097s
# total time: 26433.900s
c071,4,3,1,712970,615104,691878,691878,600.00222308,600.279554914
c071,4,3,2,260571,244022,251950,251950,1200.0126416950002,1200.573687624
c071,4,3,3,124908,115787,117196,117196,1800.0213467050003,1800.891343516
c071,4,3,4,84190,79370,79686,79686,2400.021829147,2401.150829023
c071,4,3,5,56875,52220,52745,52745,3000.0300216,3001.433899317
c071,4,3,6,41542,38029,38425,38425,3600.041265845,3601.841769419
c071,4,3,7,39656,35566,35918,35918,4200.053028307,4202.131400649
c071,4,3,8,38613,34808,35162,35162,4800.055580051,4802.351889724
c071,4,3,9,52950,47556,48008,48008,5400.058078994,5402.771720114
c071,4,3,10,28913,26211,26524,26524,6000.068044644,6003.098968792
c071,4,3,11,30708,27572,27912,27912,6600.075789415,6603.286860968
# search time: 6600.076s
# total time: 33037.599s
