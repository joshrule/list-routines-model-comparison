    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c051_1.json out/1593091766/results/c051_1_best.csv out/1593091766/results/c051_1_predictions.csv out/1593091766/results/c051_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 9, 9, 9]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 4, 4, 4, 4, 4, 1]) }
#   Datum { i: IntList([5, 7, 0, 7, 3, 5, 8]), o: IntList([5, 5, 5, 5, 5, 5, 7, 0, 7, 3, 5, 8]) }
#   Datum { i: IntList([8]), o: IntList([8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([2, 4, 5, 1, 3, 6, 8, 0]), o: IntList([2, 2, 2, 2, 2, 2, 4, 5, 1, 3, 6, 8, 0]) }
#   Datum { i: IntList([5, 4, 4, 4, 2, 2, 5]), o: IntList([5, 5, 5, 5, 5, 5, 4, 4, 4, 2, 2, 5]) }
#   Datum { i: IntList([2, 6, 4, 0, 8, 7, 0, 0, 9]), o: IntList([2, 2, 2, 2, 2, 2, 6, 4, 0, 8, 7, 0, 0, 9]) }
#   Datum { i: IntList([6, 7, 6, 6, 7, 7]), o: IntList([6, 6, 6, 6, 6, 6, 7, 6, 6, 7, 7]) }
#   Datum { i: IntList([1, 9, 3, 8, 8, 1, 3, 3, 3]), o: IntList([1, 1, 1, 1, 1, 1, 9, 3, 8, 8, 1, 3, 3, 3]) }
#   Datum { i: IntList([3, 3, 2, 6, 4]), o: IntList([3, 3, 3, 3, 3, 3, 3, 2, 6, 4]) }
#   Datum { i: IntList([0, 1, 1]), o: IntList([0, 0, 0, 0, 0, 0, 1, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c051,0,1,1,721305,621413,699740,699740,600.000056992,603.023342111
c051,0,1,2,178360,164196,168941,168941,1200.0002649950002,1204.741998042
c051,0,1,3,124379,115676,119540,119540,1800.0016100840003,1805.663670012
c051,0,1,4,74013,67334,69020,69020,2400.009108184,2406.945640392
c051,0,1,5,66704,60459,62329,62329,3000.0127094070003,3007.903866233
c051,0,1,6,46717,41537,42979,42979,3600.0136037180005,3608.831224324
c051,0,1,7,37732,33721,34813,34813,4200.014916468001,4209.816011474
c051,0,1,8,29835,26592,27440,27440,4800.056495125001,4810.843790223
c051,0,1,9,25596,22848,23567,23567,5400.069150155001,5411.658715923
c051,0,1,10,21460,19222,19789,19789,6000.1763311350005,6012.718298942
c051,0,1,11,19339,17304,17791,17791,6600.196296854,6613.472204052
# search time: 6600.196s
# total time: 6613.672s
c051,1,1,1,702111,575498,672837,672837,600.004061875,600.375718275
c051,1,1,2,179649,165580,170312,170312,1200.004593828,1201.113554106
c051,1,1,3,127389,119017,122560,122560,1800.005645754,1801.529008036
c051,1,1,4,71894,65151,66755,66755,2400.009345733,2402.145587492
c051,1,1,5,65339,58771,60856,60856,3000.016882929,3002.536148017
c051,1,1,6,46571,41591,43032,43032,3600.025576956,3603.006303508
c051,1,1,7,37043,33003,34210,34210,4200.038037411,4203.440098466
c051,1,1,8,29080,26020,26856,26856,4800.055847383,4803.851933946
c051,1,1,9,25186,22375,23138,23138,5400.066042062999,5404.289028221
c051,1,1,10,21097,18907,19480,19480,6000.091023863999,6004.708329065
c051,1,1,11,18997,17052,17531,17531,6600.110609878999,6605.232072196
# search time: 6600.111s
# total time: 13219.291s
c051,2,1,1,685170,559845,656384,656384,600.000037414,600.260674347
c051,2,1,2,176196,162342,167056,167056,1200.018947368,1200.747913224
c051,2,1,3,121985,113260,117192,117192,1800.021023303,1801.025597769
c051,2,1,4,72528,65809,67493,67493,2400.024925565,2401.377404886
c051,2,1,5,66009,59735,61603,61603,3000.032660743,3001.66832523
c051,2,1,6,46285,41051,42715,42715,3600.0580051750003,3602.005188173
c051,2,1,7,36891,32890,33983,33983,4200.058400637,4202.366979975
c051,2,1,8,29082,25943,26774,26774,4800.07706333,4802.587314603
c051,2,1,9,24908,22221,22946,22946,5400.087681192,5402.847995427
c051,2,1,10,20867,18581,19193,19193,6000.106089839,6003.089135794
c051,2,1,11,19156,17208,17701,17701,6600.122837106,6603.486017179
# search time: 6600.123s
# total time: 19823.067s
c051,3,1,1,679797,556911,651587,651587,600.009913525,600.222114653
c051,3,1,2,178120,163819,168683,168683,1200.0111154380002,1200.566137883
c051,3,1,3,118235,108179,113525,113525,1800.0168522380002,1800.784199158
c051,3,1,4,72207,65626,67290,67290,2400.022233182,2401.092857742
c051,3,1,5,65249,58897,60678,60678,3000.023948556,3001.333207399
c051,3,1,6,45159,40178,41628,41628,3600.030713895,3601.570830439
c051,3,1,7,36884,33005,34051,34051,4200.036480854,4201.868714465
c051,3,1,8,29162,26110,26855,26855,4800.047718662,4802.105588964
c051,3,1,9,24967,22274,22937,22937,5400.0628394020005,5402.310416487
c051,3,1,10,20796,18516,19063,19063,6000.073847901001,6002.53656931
c051,3,1,11,18874,16967,17493,17493,6600.074846441001,6602.861531931
# search time: 6600.075s
# total time: 26426.114s
c051,4,1,1,680108,585654,659467,659467,600.000235528,600.253171643
c051,4,1,2,176459,162300,167110,167110,1200.000509148,1200.535205604
c051,4,1,3,122903,113989,117973,117973,1800.001499362,1800.728498864
c051,4,1,4,64160,57198,58232,58232,2400.005270234,2401.049537055
c051,4,1,5,65348,58920,60946,60946,3000.008138872,3001.260218729
c051,4,1,6,45068,39681,41317,41317,3600.025012465,3601.448521394
c051,4,1,7,36389,32382,33594,33594,4200.037624871,4201.656767887
c051,4,1,8,28911,25832,26581,26581,4800.042369073,4801.840848397
c051,4,1,9,25010,22344,23045,23045,5400.053315686,5402.09513497
c051,4,1,10,21369,19076,19639,19639,6000.089903541,6002.369628141
c051,4,1,11,19032,16968,17451,17451,6600.11173476,6602.588565724
# search time: 6600.112s
# total time: 33029.068s
