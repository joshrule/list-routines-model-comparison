    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c011_2.json out/1593091766/results/c011_2_best.csv out/1593091766/results/c011_2_predictions.csv out/1593091766/results/c011_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 0, 3, 3, 7]), o: IntList([0, 3, 3]) }
#   Datum { i: IntList([9, 2, 6, 4, 6, 2, 0]), o: IntList([2, 6, 4]) }
#   Datum { i: IntList([6, 1, 3, 0, 4, 9]), o: IntList([1, 3, 0]) }
#   Datum { i: IntList([5, 1, 1, 8, 1, 6, 7, 2, 7]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([5, 7, 5, 9, 7, 6, 8, 5, 6, 8]), o: IntList([7, 5, 9]) }
#   Datum { i: IntList([7, 2, 4, 2, 4, 7, 2, 2, 4]), o: IntList([2, 4, 2]) }
#   Datum { i: IntList([1, 9, 3, 0, 2, 8, 5]), o: IntList([9, 3, 0]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 8, 7, 3, 7]), o: IntList([8, 5, 8]) }
#   Datum { i: IntList([3, 3, 6, 0]), o: IntList([3, 6, 0]) }
#   Datum { i: IntList([1, 1, 4, 0, 3, 1, 3, 5, 0]), o: IntList([1, 4, 0]) }
#   Datum { i: IntList([6, 8, 6, 9, 9, 8, 8, 6]), o: IntList([8, 6, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c011,0,2,1,718432,624630,698342,698342,600.000189546,603.060117258
c011,0,2,2,347668,325618,334576,334576,1200.011777916,1204.79632674
c011,0,2,3,211167,195362,202915,202915,1800.0133435910002,1805.766487433
c011,0,2,4,164298,151358,157855,157855,2400.018522505,2406.745971963
c011,0,2,5,109334,101913,105196,105196,3000.019421616,3008.166830004
c011,0,2,6,78985,73472,76115,76115,3600.025346604,3609.961163678
c011,0,2,7,63200,59094,60879,60879,4200.027079677,4211.683356884
c011,0,2,8,51616,47531,49761,49761,4800.029457437,4813.524859925
c011,0,2,9,47498,42617,45610,45610,5400.051973675,5414.904698854
c011,0,2,10,41173,37626,39822,39822,6000.064741978,6016.733618857
c011,0,2,11,34659,31826,33539,33539,6600.0781641309995,6618.427909902
# search time: 6600.078s
# total time: 6618.680s
c011,1,2,1,690873,567468,662486,662486,600.004075474,600.297387013
c011,1,2,2,327745,307780,316258,316258,1200.0042642530002,1200.92903348
c011,1,2,3,208432,192870,200549,200549,1800.0143536160003,1801.360045297
c011,1,2,4,166029,152708,159314,159314,2400.0160709610004,2401.807758769
c011,1,2,5,107852,100527,103851,103851,3000.022711724,3002.544946085
c011,1,2,6,77162,71957,74470,74470,3600.02404327,3603.41848854
c011,1,2,7,62799,58795,60543,60543,4200.027315209,4204.241673656
c011,1,2,8,51219,47535,49557,49557,4800.02911372,4804.96290098
c011,1,2,9,47305,42559,45468,45468,5400.033372479,5405.663546151
c011,1,2,10,40718,37491,39398,39398,6000.058258841,6006.5475046
c011,1,2,11,33585,31002,32535,32535,6600.058405371,6607.575283456
# search time: 6600.058s
# total time: 13226.592s
c011,2,2,1,659133,539850,631971,631971,600.001521837,600.205114466
c011,2,2,2,347683,325391,334544,334544,1200.002350893,1200.452930642
c011,2,2,3,337528,313497,325543,325543,1800.002819501,1800.732518021
c011,2,2,4,269850,250184,260010,260010,2400.003187578,2401.002928141
c011,2,2,5,179437,167404,173000,173000,3000.003981633,3001.366170759
c011,2,2,6,129473,120447,125117,125117,3600.0078570690002,3601.886817628
c011,2,2,7,107163,100172,103436,103436,4200.008433259,4202.374428029
c011,2,2,8,89188,82521,86251,86251,4800.015323276,4802.960436597
c011,2,2,9,84468,76750,80998,80998,5400.018688669001,5403.446195694
c011,2,2,10,70809,65196,68420,68420,6000.0294384750005,6004.147493995
c011,2,2,11,60173,55416,58152,58152,6600.039173594,6604.625475994
# search time: 6600.039s
# total time: 19831.559s
c011,3,2,1,1120519,915428,1073581,1073581,600.000171862,600.20900667
c011,3,2,2,542562,509286,523223,523223,1200.000924915,1200.490413483
c011,3,2,3,338421,314345,326087,326087,1800.001986274,1800.679518897
c011,3,2,4,268583,249102,258870,258870,2400.0053102720003,2400.8808793
c011,3,2,5,177779,165790,171495,171495,3000.0055364900004,3001.159561538
c011,3,2,6,129796,120726,125422,125422,3600.0097147800006,3601.447607371
c011,3,2,7,106489,99295,102626,102626,4200.0131101100005,4201.824608699
c011,3,2,8,87330,80648,84357,84357,4800.024944286,4802.173089215
c011,3,2,9,84316,76477,80765,80765,5400.035463102,5402.525958645
c011,3,2,10,71486,65648,68995,68995,6000.041946687,6002.823641597
c011,3,2,11,60068,55199,58002,58002,6600.052218818,6603.218994806
# search time: 6600.052s
# total time: 26435.039s
c011,4,2,1,1102212,900528,1056188,1056188,600.008161376,600.190649481
c011,4,2,2,533481,500507,514549,514549,1200.008680025,1200.42481424
c011,4,2,3,335712,312332,324016,324016,1800.008971937,1800.585341611
c011,4,2,4,265729,246508,256255,256255,2400.009357628,2400.741790635
c011,4,2,5,177338,165648,171189,171189,3000.010365871,3000.953513122
c011,4,2,6,127030,118680,122889,122889,3600.011437782,3601.224308735
c011,4,2,7,105224,97747,101451,101451,4200.011747018,4201.456638599
c011,4,2,8,87632,81058,84626,84626,4800.012476035,4801.692088514
c011,4,2,9,84083,76302,80614,80614,5400.014222642,5401.909641815
c011,4,2,10,69575,64180,67239,67239,6000.02014927,6002.221088984
c011,4,2,11,57860,53189,55712,55712,6600.021190007,6602.534449952
# search time: 6600.021s
# total time: 33037.970s
