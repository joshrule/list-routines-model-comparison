    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c066_5.json out/1593091766/results/c066_5_best.csv out/1593091766/results/c066_5_predictions.csv out/1593091766/results/c066_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 2, 4, 7, 3, 0]), o: IntList([2, 4, 7, 3, 0, 8]) }
#   Datum { i: IntList([3, 7]), o: IntList([7, 3]) }
#   Datum { i: IntList([1, 4, 3]), o: IntList([4, 3, 1]) }
#   Datum { i: IntList([0, 7, 3, 3, 3, 9, 9, 6]), o: IntList([7, 3, 3, 3, 9, 9, 6, 0]) }
#   Datum { i: IntList([4, 1, 5, 8, 6, 5, 4, 0, 9]), o: IntList([1, 5, 8, 6, 5, 4, 0, 9, 4]) }
#   Datum { i: IntList([1, 6, 6]), o: IntList([6, 6, 1]) }
#   Datum { i: IntList([2, 9, 9, 5, 6]), o: IntList([9, 9, 5, 6, 2]) }
#   Datum { i: IntList([5, 6, 5, 8]), o: IntList([6, 5, 8, 5]) }
#   Datum { i: IntList([7, 9, 8, 2, 5, 1, 2, 4]), o: IntList([9, 8, 2, 5, 1, 2, 4, 7]) }
#   Datum { i: IntList([0, 1, 8, 9, 2, 7, 5]), o: IntList([1, 8, 9, 2, 7, 5, 0]) }
#   Datum { i: IntList([3, 2, 2, 5, 1, 0, 8, 7, 1, 0]), o: IntList([2, 2, 5, 1, 0, 8, 7, 1, 0, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c066,0,5,1,1209182,1024514,1168549,1168549,600.001509806,601.773998185
c066,0,5,2,422920,389794,401586,401586,1200.003033119,1203.074160368
c066,0,5,3,377517,348028,351876,351876,1800.003392304,1803.937374285
c066,0,5,4,288544,269388,271455,271455,2400.006800706,2404.632256195
c066,0,5,5,181550,167083,168112,168112,3000.0138165529997,3005.215430055
c066,0,5,6,120288,108582,109308,109308,3600.0187563769996,3605.926308099
c066,0,5,7,114979,104456,104761,104761,4200.03494358,4206.467950756
c066,0,5,8,102063,92373,92932,92932,4800.035984872,4806.98483454
c066,0,5,9,89449,80830,81336,81336,5400.040712677,5407.456069141
c066,0,5,10,70673,65496,65916,65916,6000.040997081,6008.001214725
c066,0,5,11,59101,54072,54382,54382,6600.064310199999,6608.691392523
# search time: 6600.064s
# total time: 6609.129s
c066,1,5,1,1325426,1163588,1291815,1291815,600.000317904,600.378410429
c066,1,5,2,418799,385546,397509,397509,1200.00106021,1200.821183764
c066,1,5,3,381637,352377,356338,356338,1800.001786468,1801.18191539
c066,1,5,4,291441,272542,274495,274495,2400.002812199,2401.471077757
c066,1,5,5,180440,165905,166855,166855,3000.0055766329997,3001.760552488
c066,1,5,6,115143,103710,104341,104341,3600.0085511689995,3602.120732139
c066,1,5,7,118103,107396,107893,107893,4200.008975057,4202.328057003
c066,1,5,8,99921,90216,90729,90729,4800.00901052,4802.603131849
c066,1,5,9,89032,80833,81276,81276,5400.01533139,5402.850259933
c066,1,5,10,70472,65295,65687,65687,6000.023384895,6003.150662469
c066,1,5,11,59052,54293,54609,54609,6600.028733424,6603.461284488
# search time: 6600.029s
# total time: 13213.392s
c066,2,5,1,1267401,1131942,1241631,1241631,600.000011853,600.324975547
c066,2,5,2,429072,395983,407713,407713,1200.000880181,1200.629103337
c066,2,5,3,373957,344728,348505,348505,1800.000991343,1800.873243017
c066,2,5,4,290139,271455,273512,273512,2400.0043749899996,2401.083801821
c066,2,5,5,179667,165415,166407,166407,3000.0093273429998,3001.274470515
c066,2,5,6,119040,107561,108256,108256,3600.0098926399996,3601.521694663
c066,2,5,7,116688,106527,106934,106934,4200.010453041999,4201.757581415
c066,2,5,8,97334,87994,88397,88397,4800.0134540359995,4801.93578289
c066,2,5,9,87112,78337,78765,78765,5400.01937236,5402.144290015
c066,2,5,10,70510,65042,65484,65484,6000.0264290899995,6002.331746418
c066,2,5,11,61177,56298,56657,56657,6600.031437191,6602.535950115
# search time: 6600.031s
# total time: 19816.704s
c066,3,5,1,1206485,1021252,1165878,1165878,600.000064659,600.216202092
c066,3,5,2,409756,376908,388657,388657,1200.000897055,1200.456834132
c066,3,5,3,381085,352022,355935,355935,1800.000958436,1800.647333859
c066,3,5,4,292148,273361,275381,275381,2400.001700347,2400.807665701
c066,3,5,5,183667,169247,170277,170277,3000.0029678600004,3000.935656904
c066,3,5,6,114116,103161,103756,103756,3600.0053938060005,3601.107907387
c066,3,5,7,116718,106203,106679,106679,4200.010740938001,4201.229496682
c066,3,5,8,100810,90854,91365,91365,4800.011934963,4801.374825629
c066,3,5,9,86609,77603,77965,77965,5400.014083754,5401.512844277
c066,3,5,10,70010,64481,64895,64895,6000.016895036,6001.646514922
c066,3,5,11,61270,56350,56733,56733,6600.017486678,6601.770690046
# search time: 6600.017s
# total time: 26419.211s
c066,4,5,1,1272655,1123506,1241762,1241762,600.00087184,600.26108305
c066,4,5,2,407967,375408,387070,387070,1200.001386587,1200.459900148
c066,4,5,3,379238,350169,354183,354183,1800.0018011920001,1800.635968162
c066,4,5,4,290926,272070,273995,273995,2400.003974654,2400.787740228
c066,4,5,5,180273,164841,165559,165559,3000.00445438,3000.927030502
c066,4,5,6,114986,103734,104363,104363,3600.006482987,3601.090591082
c066,4,5,7,114620,104602,104963,104963,4200.009957149,4201.211716742
c066,4,5,8,100639,90620,91115,91115,4800.013134385,4801.339370303
c066,4,5,9,88542,80146,80605,80605,5400.017803982,5401.442501616
c066,4,5,10,69203,63410,63765,63765,6000.025164544,6001.598904613
c066,4,5,11,60679,55606,55993,55993,6600.025987527,6601.732239374
# search time: 6600.026s
# total time: 33021.964s
