    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c028_3.json out/1593091766/results/c028_3_best.csv out/1593091766/results/c028_3_predictions.csv out/1593091766/results/c028_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 1, 8, 0, 0]), o: IntList([0, 8, 0, 0]) }
#   Datum { i: IntList([4, 3, 9, 5, 1, 7, 2]), o: IntList([4, 9, 5, 1, 7, 2]) }
#   Datum { i: IntList([4, 6, 6, 6, 4, 4, 4, 4]), o: IntList([4, 6, 6, 4, 4, 4, 4]) }
#   Datum { i: IntList([9, 3, 6, 3, 8, 3, 1, 7, 5, 4]), o: IntList([9, 3, 3, 8, 3, 1, 7, 5, 4]) }
#   Datum { i: IntList([5, 8, 1, 0]), o: IntList([5, 8, 0]) }
#   Datum { i: IntList([2, 2, 1, 1, 6, 8, 5, 3, 8]), o: IntList([2, 2, 1, 6, 8, 5, 3, 8]) }
#   Datum { i: IntList([1, 8, 5, 4, 3, 2, 0, 6, 7, 9]), o: IntList([1, 5, 4, 3, 2, 0, 6, 7, 9]) }
#   Datum { i: IntList([2, 7, 0, 7]), o: IntList([2, 7, 7]) }
#   Datum { i: IntList([6, 9, 9, 6, 5, 9]), o: IntList([6, 9, 6, 5, 9]) }
#   Datum { i: IntList([7, 8, 6, 1, 2]), o: IntList([7, 8, 1, 2]) }
#   Datum { i: IntList([5, 3, 0]), o: IntList([5, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c028,0,3,1,1136991,984357,1104178,1104178,600.000324575,602.094335572
c028,0,3,2,486250,457396,469653,469653,1200.000862884,1203.188300234
c028,0,3,3,261447,242744,252442,252442,1800.002938217,1803.778220113
c028,0,3,4,155289,143667,148489,148489,2400.004873772,2404.660187773
c028,0,3,5,111255,102642,103253,103253,3000.013825408,3005.441294227
c028,0,3,6,101797,91943,93224,93224,3600.019711092,3606.243177597
c028,0,3,7,64156,58386,59746,59746,4200.020333263999,4207.321138601
c028,0,3,8,55299,49567,49891,49891,4800.0428937609995,4808.259075566
c028,0,3,9,54499,49594,50176,50176,5400.052481684999,5408.940787623
c028,0,3,10,49895,45545,46081,46081,6000.066292365999,6009.693741355
c028,0,3,11,43591,39723,39967,39967,6600.071941935999,6610.57803288
# search time: 6600.072s
# total time: 6610.982s
c028,1,3,1,1105496,901549,1058665,1058665,600.000054657,600.254405131
c028,1,3,2,488838,459178,471665,471665,1200.001156827,1200.700302628
c028,1,3,3,259827,241168,250817,250817,1800.0019437229998,1800.974573265
c028,1,3,4,153718,142202,147011,147011,2400.0037746049998,2401.375013771
c028,1,3,5,109396,101268,101874,101874,3000.0053389719997,3001.824556535
c028,1,3,6,101883,92269,93533,93533,3600.009617724,3602.227797341
c028,1,3,7,63854,57778,59196,59196,4200.018772839,4202.740565101
c028,1,3,8,56919,51415,51851,51851,4800.036819853,4803.252146194
c028,1,3,9,53817,47914,48429,48429,5400.036969958001,5403.644982888
c028,1,3,10,47808,43224,43731,43731,6000.076218671001,6004.130734745
c028,1,3,11,45279,41414,41727,41727,6600.081335277001,6604.547382867
# search time: 6600.081s
# total time: 13216.331s
c028,2,3,1,1136249,1005300,1109276,1109276,600.004518399,600.290672282
c028,2,3,2,489784,460228,472790,472790,1200.004573785,1200.600047617
c028,2,3,3,263641,244718,254299,254299,1800.0047314540002,1800.799417349
c028,2,3,4,153329,141573,146563,146563,2400.007129677,2401.092375347
c028,2,3,5,109318,101183,101769,101769,3000.0163634670002,3001.359318852
c028,2,3,6,100836,91120,92380,92380,3600.0229254990004,3601.589334207
c028,2,3,7,62003,56252,57615,57615,4200.025285142,4201.998923056
c028,2,3,8,56299,50830,51236,51236,4800.02895634,4802.283549249
c028,2,3,9,53588,48836,49389,49389,5400.029192363,5402.62546475
c028,2,3,10,49704,45333,45889,45889,6000.045194274,6002.893142947
c028,2,3,11,43247,39419,39671,39671,6600.072673709,6603.29883633
# search time: 6600.073s
# total time: 19820.278s
c028,3,3,1,1125322,975814,1093274,1093274,600.00019297,600.27709106
c028,3,3,2,487262,457209,470171,470171,1200.015567204,1200.536438405
c028,3,3,3,259575,240710,250267,250267,1800.016990147,1800.698050001
c028,3,3,4,153984,142865,147295,147295,2400.018049534,2400.886014468
c028,3,3,5,109291,100981,101606,101606,3000.022542522,3001.083810536
c028,3,3,6,100609,91184,92427,92427,3600.029016695,3601.257857096
c028,3,3,7,63142,57398,58765,58765,4200.036038144,4201.495199573
c028,3,3,8,55108,49551,49907,49907,4800.054294988,4801.750535236
c028,3,3,9,53437,48565,49109,49109,5400.062751604,5401.924153596
c028,3,3,10,47419,42825,43356,43356,6000.062826849,6002.11542919
c028,3,3,11,44840,40983,41324,41324,6600.0662343839995,6602.354231414
# search time: 6600.066s
# total time: 26423.352s
c028,4,3,1,1134342,1006880,1108602,1108602,600.000442579,600.241832307
c028,4,3,2,454402,426602,439303,439303,1200.000486252,1200.451912648
c028,4,3,3,258780,240680,250184,250184,1800.010351551,1800.595188974
c028,4,3,4,152860,141524,146154,146154,2400.0114641239998,2400.783477664
c028,4,3,5,108086,99867,100383,100383,3000.0148316719997,3000.98722572
c028,4,3,6,99259,89814,91028,91028,3600.0216564929997,3601.16373594
c028,4,3,7,60929,55354,56765,56765,4200.026339074,4201.381845646
c028,4,3,8,52634,46333,46595,46595,4800.032866827,4801.567372387
c028,4,3,9,53628,48745,49323,49323,5400.040241423,5401.72066829
c028,4,3,10,44592,39767,40279,40279,6000.0412456760005,6001.874815509
c028,4,3,11,44509,40812,41133,41133,6600.048451566001,6602.052587757
# search time: 6600.048s
# total time: 33026.099s
