    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c019_3.json out/1593091766/results/c019_3_best.csv out/1593091766/results/c019_3_predictions.csv out/1593091766/results/c019_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 8]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([4, 5, 5, 0, 4, 2]), o: IntList([4, 5, 5, 0, 4, 3]) }
#   Datum { i: IntList([6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([7, 1, 8, 6, 5, 0, 4, 5, 3, 9]), o: IntList([7, 1, 8, 6, 5, 3, 4, 5, 3, 9]) }
#   Datum { i: IntList([9, 9, 9, 2, 0, 2, 3]), o: IntList([9, 9, 9, 2, 0, 3, 3]) }
#   Datum { i: IntList([4, 3, 5, 8, 3, 2, 7, 9, 1]), o: IntList([4, 3, 5, 8, 3, 3, 7, 9, 1]) }
#   Datum { i: IntList([3, 7, 2, 0, 4, 9, 8]), o: IntList([3, 7, 2, 0, 4, 3, 8]) }
#   Datum { i: IntList([8, 2, 6, 7, 9]), o: IntList([8, 2, 6, 7, 9]) }
#   Datum { i: IntList([1, 1, 7, 4, 0, 8, 9, 0]), o: IntList([1, 1, 7, 4, 0, 3, 9, 0]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6, 6, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c019,0,3,1,730718,632347,709411,709411,600.001161114,602.963765552
c019,0,3,2,366048,338255,352549,352549,1200.003123907,1204.478189504
c019,0,3,3,181509,168975,170673,170673,1800.005336443,1805.880258025
c019,0,3,4,158968,147531,150215,150215,2400.006160753,2406.756510888
c019,0,3,5,94135,86202,88606,88606,3000.009142362,3007.371926058
c019,0,3,6,63467,56580,57266,57266,3600.0156662090003,3608.346242625
c019,0,3,7,47495,42166,42868,42868,4200.050023035001,4209.306250697
c019,0,3,8,38767,35120,35597,35597,4800.064846112001,4810.364739947
c019,0,3,9,35948,32437,32866,32866,5400.066334128001,5411.139325413
c019,0,3,10,30225,26784,27092,27092,6000.106098872,6012.246195849
c019,0,3,11,26847,23429,24614,24614,6600.108441903,6613.370558165
# search time: 6600.108s
# total time: 6613.600s
c019,1,3,1,725444,629500,704659,704659,600.005656555,600.408312896
c019,1,3,2,362357,335580,349337,349337,1200.007083661,1200.97335651
c019,1,3,3,177130,164494,166225,166225,1800.008502591,1801.590012438
c019,1,3,4,156202,144656,147521,147521,2400.019044375,2402.032684276
c019,1,3,5,93482,86047,88313,88313,3000.022237479,3002.332495712
c019,1,3,6,64006,57119,57828,57828,3600.036034477,3602.808045145
c019,1,3,7,47589,41759,42478,42478,4200.040130317,4203.369288388
c019,1,3,8,39030,35068,35591,35591,4800.0417269810005,4803.865515529
c019,1,3,9,35700,32305,32725,32725,5400.0577625860005,5404.305738433
c019,1,3,10,29564,25944,26241,26241,6000.0997819760005,6004.844895592
c019,1,3,11,25865,22691,23866,23866,6600.117719378,6605.634841581
# search time: 6600.118s
# total time: 13219.645s
c019,2,3,1,685030,581849,662223,662223,600.004242633,600.292687059
c019,2,3,2,360537,333200,347205,347205,1200.004720203,1200.679350505
c019,2,3,3,177154,164711,166417,166417,1800.0065189870002,1801.097197425
c019,2,3,4,156764,145301,148019,148019,2400.0087861,2401.423518141
c019,2,3,5,93261,85356,87669,87669,3000.013504584,3001.65276211
c019,2,3,6,64004,56983,57707,57707,3600.0215367600003,3601.98821562
c019,2,3,7,47005,41851,42616,42616,4200.0293210770005,4202.305020422
c019,2,3,8,38641,34169,34645,34645,4800.039156217001,4802.637208956
c019,2,3,9,35638,32220,32657,32657,5400.046663622001,5402.958285388
c019,2,3,10,29485,25919,26249,26249,6000.051373300001,6003.330489125
c019,2,3,11,26593,23308,24494,24494,6600.060824192001,6603.729284244
# search time: 6600.061s
# total time: 19823.882s
c019,3,3,1,674991,551283,646850,646850,600.000192184,600.191284065
c019,3,3,2,362587,334878,349158,349158,1200.000638286,1200.50485072
c019,3,3,3,179746,167686,169424,169424,1800.000894932,1800.781378177
c019,3,3,4,157211,145988,148639,148639,2400.00129816,2401.015773398
c019,3,3,5,98031,90177,92586,92586,3000.004230556,3001.196063424
c019,3,3,6,64712,57606,58417,58417,3600.008066478,3601.412395115
c019,3,3,7,47042,41621,42321,42321,4200.037900399,4201.722370318
c019,3,3,8,38410,34639,35155,35155,4800.039818951,4801.962172432
c019,3,3,9,36247,32652,33043,33043,5400.045883498,5402.235826838
c019,3,3,10,29308,25754,26047,26047,6000.050707274,6002.566043233
c019,3,3,11,27104,23796,25000,25000,6600.0541130950005,6602.902376588
# search time: 6600.054s
# total time: 26427.023s
c019,4,3,1,711059,612338,689513,689513,600.000226863,600.24996166
c019,4,3,2,366653,338901,353220,353220,1200.000703064,1200.515426893
c019,4,3,3,186339,174713,176650,176650,1800.002351527,1800.752878129
c019,4,3,4,161644,150173,152990,152990,2400.004802334,2400.943069765
c019,4,3,5,94598,86620,88858,88858,3000.013706388,3001.090134362
c019,4,3,6,64485,57542,58355,58355,3600.0224242370005,3601.272199441
c019,4,3,7,47110,41789,42479,42479,4200.023588119,4201.48940798
c019,4,3,8,38649,33973,34468,34468,4800.025759234,4801.743958478
c019,4,3,9,35911,32428,32853,32853,5400.0305064310005,5401.89919747
c019,4,3,10,29013,25461,25761,25761,6000.042510280001,6002.199447018
c019,4,3,11,26723,23451,24702,24702,6600.042875446001,6602.297881831
# search time: 6600.043s
# total time: 33029.675s
