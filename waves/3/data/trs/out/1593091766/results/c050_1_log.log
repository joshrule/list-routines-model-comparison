    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c050_1.json out/1593091766/results/c050_1_best.csv out/1593091766/results/c050_1_predictions.csv out/1593091766/results/c050_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 4, 9, 3]), o: IntList([2, 2, 4, 9, 3]) }
#   Datum { i: IntList([0, 4, 8, 4, 0]), o: IntList([0, 0, 4, 8, 4, 0]) }
#   Datum { i: IntList([6, 6, 9, 7, 5, 9]), o: IntList([6, 6, 6, 9, 7, 5, 9]) }
#   Datum { i: IntList([3, 7]), o: IntList([3, 3, 7]) }
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
#   Datum { i: IntList([3, 2, 3, 0, 2, 0, 4, 3]), o: IntList([3, 3, 2, 3, 0, 2, 0, 4, 3]) }
#   Datum { i: IntList([4, 2, 6, 1, 5, 3, 1, 8, 9]), o: IntList([4, 4, 2, 6, 1, 5, 3, 1, 8, 9]) }
#   Datum { i: IntList([6, 0, 3, 0, 5, 2, 9, 7, 8, 1]), o: IntList([6, 6, 0, 3, 0, 5, 2, 9, 7, 8, 1]) }
#   Datum { i: IntList([5, 8, 5, 5, 5, 8, 8]), o: IntList([5, 5, 8, 5, 5, 5, 8, 8]) }
#   Datum { i: IntList([7, 9, 6, 6, 9, 2, 9, 9, 2, 9]), o: IntList([7, 7, 9, 6, 6, 9, 2, 9, 9, 2, 9]) }
#   Datum { i: IntList([4, 6, 7]), o: IntList([4, 4, 6, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c050,0,1,1,707348,579132,677620,677620,600.000221984,602.790331859
c050,0,1,2,284760,262677,269977,269977,1200.000840435,1204.603464383
c050,0,1,3,164055,150731,155055,155055,1800.0069437680002,1805.970538909
c050,0,1,4,114973,106343,109284,109284,2400.0098965,2407.058459019
c050,0,1,5,102592,93877,96604,96604,3000.0118899040003,3008.061981026
c050,0,1,6,86334,80138,82229,82229,3600.0135281380003,3609.092670816
c050,0,1,7,70297,63697,65813,65813,4200.015319106,4209.732138867
c050,0,1,8,52705,47353,48948,48948,4800.0373527579995,4810.489122859
c050,0,1,9,39755,35637,36639,36639,5400.042419603999,5411.253019006
c050,0,1,10,33949,30104,31196,31196,6000.054498137999,6012.18121108
c050,0,1,11,28124,24996,25802,25802,6600.0694008149985,6613.031229412
# search time: 6600.069s
# total time: 6613.248s
c050,1,1,1,701717,602571,679998,679998,600.005869989,600.408324107
c050,1,1,2,291569,268831,276423,276423,1200.006714818,1201.036832872
c050,1,1,3,163608,149780,154318,154318,1800.0093071750002,1801.609234795
c050,1,1,4,112757,104356,106975,106975,2400.0124191840005,2402.11748011
c050,1,1,5,101783,93087,95705,95705,3000.0132141750005,3002.588324264
c050,1,1,6,86483,80159,82400,82400,3600.0158519980005,3603.112199969
c050,1,1,7,69526,63097,65313,65313,4200.020159736,4203.438056592
c050,1,1,8,52313,47008,48494,48494,4800.021752072,4803.716005325
c050,1,1,9,40480,36096,37209,37209,5400.02620895,5404.081890472
c050,1,1,10,33908,29626,30810,30810,6000.026316515,6004.358101766
c050,1,1,11,28181,25067,25831,25831,6600.1814932,6604.894948008
# search time: 6600.181s
# total time: 13218.474s
c050,2,1,1,689147,591458,668025,668025,600.003353351,600.311496491
c050,2,1,2,291026,268160,275813,275813,1200.003626527,1200.709818917
c050,2,1,3,168980,155865,160541,160541,1800.0039096700002,1801.056731406
c050,2,1,4,114531,106052,108823,108823,2400.007587809,2401.390822917
c050,2,1,5,102800,93973,96699,96699,3000.009644996,3001.572198074
c050,2,1,6,145992,136020,139280,139280,3600.0126246600003,3601.863049535
c050,2,1,7,116045,106193,109422,109422,4200.018429375,4202.117255092
c050,2,1,8,87683,79395,81996,81996,4800.032477036,4802.3272845
c050,2,1,9,68073,60851,62920,62920,5400.040621574,5402.553167546
c050,2,1,10,58459,52091,53782,53782,6000.045800476,6002.838428467
c050,2,1,11,48349,42954,44299,44299,6600.064913589,6603.113704588
# search time: 6600.065s
# total time: 19822.108s
c050,3,1,1,1115100,913104,1069171,1069171,600.000731925,600.225746862
c050,3,1,2,443901,411793,422670,422670,1200.0039764829999,1200.531111214
c050,3,1,3,274725,252795,260102,260102,1800.005866217,1800.793064333
c050,3,1,4,188297,173511,178125,178125,2400.009993014,2400.998783633
c050,3,1,5,171861,157312,161972,161972,3000.011437802,3001.194456628
c050,3,1,6,146144,135832,139105,139105,3600.0115892979998,3601.419756234
c050,3,1,7,114772,105255,108609,108609,4200.012771195999,4201.563888144
c050,3,1,8,87613,79504,82101,82101,4800.016871448,4801.742790603
c050,3,1,9,67305,60454,62545,62545,5400.029252239,5401.917656596
c050,3,1,10,58497,52154,53850,53850,6000.031052236,6002.080385421
c050,3,1,11,47814,42922,44177,44177,6600.047010089999,6602.228190976
# search time: 6600.047s
# total time: 26424.615s
c050,4,1,1,1132835,979403,1099689,1099689,600.000926644,600.289253556
c050,4,1,2,463033,428794,440416,440416,1200.001201598,1200.524798485
c050,4,1,3,275509,254011,261636,261636,1800.0030903810002,1800.691476637
c050,4,1,4,189878,175456,180173,180173,2400.003822512,2400.851449702
c050,4,1,5,169276,155426,159678,159678,3000.007022708,3000.995385122
c050,4,1,6,145390,135362,138539,138539,3600.008888105,3601.154893877
c050,4,1,7,115627,105742,109046,109046,4200.0113121370005,4201.271354477
c050,4,1,8,87393,79357,82067,82067,4800.027972201,4801.400186828
c050,4,1,9,68370,61158,63182,63182,5400.035680914,5401.517105578
c050,4,1,10,58179,51949,53663,53663,6000.040055228001,6001.619238658
c050,4,1,11,47887,42673,43978,43978,6600.050440760001,6601.779542813
# search time: 6600.050s
# total time: 33026.849s
