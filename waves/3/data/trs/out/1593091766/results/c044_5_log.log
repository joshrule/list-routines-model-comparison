    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c044_5.json out/1593091766/results/c044_5_best.csv out/1593091766/results/c044_5_predictions.csv out/1593091766/results/c044_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 7, 7, 7, 7, 7, 7]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([8, 5, 0, 8, 2, 8, 5, 2]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([7]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([6, 6, 6, 6, 6, 6, 6, 6, 6]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([8, 3, 5, 0, 6, 7]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([2, 9, 9, 5, 7, 9, 2, 7, 8, 3]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([6, 6, 6]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([0, 0, 1, 6, 1, 6, 1]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([1, 0, 7, 4, 2]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
#   Datum { i: IntList([2, 7, 7, 3]), o: IntList([1, 9, 4, 3, 2, 5, 8, 0, 4, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c044,0,5,1,1312252,1134196,1274055,1274055,600.002566884,601.897536053
c044,0,5,2,268642,251106,258686,258686,1200.002659158,1202.830779985
c044,0,5,3,159895,151932,155499,155499,1800.0058342339998,1803.707653676
c044,0,5,4,130494,120975,123485,123485,2400.0058802269996,2404.228561574
c044,0,5,5,110749,100329,102269,102269,3000.0083208619994,3004.578477486
c044,0,5,6,88820,79807,81205,81205,3600.013407154999,3604.971685045
c044,0,5,7,76314,65040,66170,66170,4200.017516059999,4205.367970578
c044,0,5,8,62816,51100,52527,52527,4800.026211446999,4805.868927235
c044,0,5,9,57759,47388,48217,48217,5400.026695469999,5406.286695949
c044,0,5,10,50336,41405,41992,41992,6000.037589295,6006.753088325
c044,0,5,11,44428,37859,38349,38349,6600.039811051,6607.164037386
# search time: 6600.040s
# total time: 6607.413s
c044,1,5,1,1320554,1167085,1289647,1289647,600.005621373,600.423076154
c044,1,5,2,263520,246735,254006,254006,1200.0064247340001,1200.801053671
c044,1,5,3,153907,144841,149780,149780,1800.009462957,1801.1906893
c044,1,5,4,128594,118652,121544,121544,2400.009990798,2401.443226493
c044,1,5,5,110040,99763,101703,101703,3000.010057081,3001.64066055
c044,1,5,6,87529,77836,79513,79513,3600.014550987,3601.836599984
c044,1,5,7,75391,64174,65292,65292,4200.014601915,4202.056778227
c044,1,5,8,62102,50849,52228,52228,4800.016008736,4802.255207419
c044,1,5,9,57542,47509,48288,48288,5400.024462891,5402.439421147
c044,1,5,10,49880,40925,41795,41795,6000.024659578001,6002.648529363
c044,1,5,11,44452,37630,38093,38093,6600.033434085,6602.878941839
# search time: 6600.033s
# total time: 13210.647s
c044,2,5,1,1281704,1108349,1244104,1244104,600.005898586,600.289613018
c044,2,5,2,266557,249753,256935,256935,1200.00634935,1200.544877788
c044,2,5,3,157224,149104,152995,152995,1800.007290244,1800.79636346
c044,2,5,4,128030,117922,121111,121111,2400.011025205,2400.965127845
c044,2,5,5,109299,97735,100943,100943,3000.0140063569997,3001.086005091
c044,2,5,6,88180,78635,80148,80148,3600.015268369,3601.242828664
c044,2,5,7,75814,64911,65970,65970,4200.018267068,4201.381542301
c044,2,5,8,62848,51387,52128,52128,4800.034998149999,4801.561080351
c044,2,5,9,57563,47241,48023,48023,5400.041402411,5401.728857094
c044,2,5,10,50266,41519,42161,42161,6000.0463892669995,6001.866820526
c044,2,5,11,44617,37847,38420,38420,6600.064243090999,6602.044716626
# search time: 6600.064s
# total time: 19813.070s
c044,3,5,1,1250058,1029196,1199717,1199717,600.000083911,600.192151649
c044,3,5,2,268501,250579,258190,258190,1200.030654852,1200.416980291
c044,3,5,3,159535,151960,155326,155326,1800.0339057840001,1800.614885171
c044,3,5,4,127706,117574,120807,120807,2400.035351329,2400.769018433
c044,3,5,5,108156,97535,99772,99772,3000.0390457030003,3000.865689146
c044,3,5,6,88005,78670,80005,80005,3600.04084636,3600.975964789
c044,3,5,7,75297,64327,65339,65339,4200.0416648440005,4201.087786465
c044,3,5,8,62081,51124,51924,51924,4800.045211934001,4801.221655237
c044,3,5,9,57572,47287,47907,47907,5400.046808762001,5401.296753523
c044,3,5,10,49711,41168,41855,41855,6000.053024815001,6001.406777631
c044,3,5,11,44281,37575,38152,38152,6600.102940402001,6601.564635444
# search time: 6600.103s
# total time: 26415.063s
c044,4,5,1,1305261,1125074,1266139,1266139,600.000087405,600.301160444
c044,4,5,2,264017,247002,254372,254372,1200.003435714,1200.497280437
c044,4,5,3,157028,149335,152876,152876,1800.017267844,1800.676987266
c044,4,5,4,125525,115305,118770,118770,2400.025819863,2400.795936404
c044,4,5,5,109053,98612,100708,100708,3000.027089094,3000.899516187
c044,4,5,6,89784,80422,81551,81551,3600.0335341580003,3601.008728408
c044,4,5,7,75412,63992,65005,65005,4200.372831635001,4201.466057472
c044,4,5,8,61549,51039,51852,51852,4800.382815297001,4801.58957339
c044,4,5,9,56709,46404,47584,47584,5400.392382011001,5401.708168983
c044,4,5,10,50196,41179,41824,41824,6000.400166469001,6001.831104971
c044,4,5,11,44196,37374,37920,37920,6600.401077534001,6601.945353595
# search time: 6600.401s
# total time: 33017.254s
