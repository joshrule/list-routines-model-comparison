    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c030_5.json out/1593091766/results/c030_5_best.csv out/1593091766/results/c030_5_predictions.csv out/1593091766/results/c030_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 8, 2, 2, 2, 8, 5]), o: IntList([2, 8, 5]) }
#   Datum { i: IntList([2, 3, 1, 0, 2, 4, 3, 7, 3]), o: IntList([2, 4, 3, 7, 3]) }
#   Datum { i: IntList([3, 5, 4, 2]), o: IntList([]) }
#   Datum { i: IntList([6, 0, 0, 0, 4]), o: IntList([4]) }
#   Datum { i: IntList([8, 1, 9, 3, 6, 6, 9, 0, 4, 2]), o: IntList([6, 6, 9, 0, 4, 2]) }
#   Datum { i: IntList([6, 3, 8, 4, 5, 8, 7, 9, 8]), o: IntList([5, 8, 7, 9, 8]) }
#   Datum { i: IntList([4, 4, 4, 7, 7, 4, 7, 7]), o: IntList([7, 4, 7, 7]) }
#   Datum { i: IntList([1, 4, 8, 6, 0, 2, 0, 5]), o: IntList([0, 2, 0, 5]) }
#   Datum { i: IntList([3, 9, 5, 5, 1, 1]), o: IntList([1, 1]) }
#   Datum { i: IntList([5, 8, 5, 1]), o: IntList([]) }
#   Datum { i: IntList([2, 8, 4, 7, 1, 3, 9, 5, 6, 0]), o: IntList([1, 3, 9, 5, 6, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c030,0,5,1,684716,585525,663109,663109,600.004618135,602.919659552
c030,0,5,2,308231,289591,297714,297714,1200.0057564459999,1205.008974309
c030,0,5,3,175073,160302,164656,164656,1800.0072694829998,1806.61661861
c030,0,5,4,148912,138371,143305,143305,2400.0136075729997,2408.386100266
c030,0,5,5,128199,119050,123447,123447,3000.0156554079995,3010.072845295
c030,0,5,6,87776,79549,82681,82681,3600.0301111289996,3611.535735359
c030,0,5,7,68249,62699,65493,65493,4200.030801170999,4213.194651699
c030,0,5,8,54541,50167,52459,52459,4800.035580938,4814.869318984
c030,0,5,9,48062,44061,46224,46224,5400.039237592,5416.295822358
c030,0,5,10,44236,40658,42612,42612,6000.056100481,6018.076647454
c030,0,5,11,40874,37260,39284,39284,6600.064328061,6620.009451209
# search time: 6600.064s
# total time: 6620.225s
c030,1,5,1,674162,577427,652923,652923,600.001749395,600.364366862
c030,1,5,2,306986,288445,296578,296578,1200.002944548,1201.027857693
c030,1,5,3,178980,164226,168788,168788,1800.003651868,1801.635515424
c030,1,5,4,148988,138449,143426,143426,2400.004239079,2402.333518808
c030,1,5,5,128377,119144,123616,123616,3000.006788075,3003.139850973
c030,1,5,6,87837,79584,82706,82706,3600.0086178409997,3603.778291847
c030,1,5,7,70118,64460,67385,67385,4200.013989450999,4204.209380067
c030,1,5,8,95678,88147,92015,92015,4800.0172306019995,4804.966101262
c030,1,5,9,81241,74709,78085,78085,5400.020510306999,5405.83948311
c030,1,5,10,75264,69407,72670,72670,6000.037473588999,6006.721023165
c030,1,5,11,69900,64220,67383,67383,6600.043272490999,6607.538335824
# search time: 6600.043s
# total time: 13228.101s
c030,2,5,1,1034196,875445,999265,999265,600.008930438,600.310975737
c030,2,5,2,489814,459692,473094,473094,1200.0098976089998,1200.694519374
c030,2,5,3,281648,258101,264804,264804,1800.0114109039998,1801.090269367
c030,2,5,4,235251,219787,227101,227101,2400.01309378,2401.476136813
c030,2,5,5,199859,186088,192512,192512,3000.013409371,3001.890947843
c030,2,5,6,143449,131010,135868,135868,3600.0147660479997,3602.24770602
c030,2,5,7,113563,104962,109471,109471,4200.018200867999,4202.642216104
c030,2,5,8,95724,87962,91989,91989,4800.020708775,4803.026256913
c030,2,5,9,81513,74950,78328,78328,5400.035026685,5403.474585497
c030,2,5,10,74045,68504,71559,71559,6000.041672931,6003.965571037
c030,2,5,11,70797,64926,68198,68198,6600.046485654,6604.471315686
# search time: 6600.046s
# total time: 19832.987s
c030,3,5,1,1077608,883188,1033387,1033387,600.000175456,600.191495019
c030,3,5,2,488813,459347,472358,472358,1200.002791842,1200.505715672
c030,3,5,3,291365,268112,275064,275064,1800.004651535,1800.738791247
c030,3,5,4,240356,224696,231961,231961,2400.014668123,2401.037774901
c030,3,5,5,207679,194554,200672,200672,3000.0190562479997,3001.344642778
c030,3,5,6,136588,124806,129267,129267,3600.020900531,3601.812381168
c030,3,5,7,67909,62609,65314,65314,4200.04547576,4202.133827824
c030,3,5,8,56100,51563,53928,53928,4800.059792474,4802.357336633
c030,3,5,9,47318,43572,45579,45579,5400.076814172,5402.68683576
c030,3,5,10,44229,40638,42660,42660,6000.082456031,6002.908680748
c030,3,5,11,40358,36859,38826,38826,6600.090930854,6603.410998165
# search time: 6600.091s
# total time: 26436.902s
c030,4,5,1,666516,578541,647508,647508,600.007847566,600.225655626
c030,4,5,2,310989,291563,299759,299759,1200.015347435,1200.478757669
c030,4,5,3,173691,159494,163793,163793,1800.0154855179999,1800.688923195
c030,4,5,4,144661,134227,139232,139232,2400.0164747119998,2400.945585636
c030,4,5,5,125377,116354,120869,120869,3000.0210831679997,3001.208442229
c030,4,5,6,88036,79839,82938,82938,3600.0231291259997,3601.464439568
c030,4,5,7,68005,62465,65324,65324,4200.023157123,4201.69332761
c030,4,5,8,56054,51394,53880,53880,4800.030192937999,4801.921160946
c030,4,5,9,47510,43642,45756,45756,5400.048830332999,5402.126328361
c030,4,5,10,43224,39815,41707,41707,6000.059989428999,6002.475942215
c030,4,5,11,41546,38020,40028,40028,6600.067417772999,6602.641939987
# search time: 6600.067s
# total time: 33039.717s
