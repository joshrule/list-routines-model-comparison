    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c068_4.json out/1593091766/results/c068_4_best.csv out/1593091766/results/c068_4_predictions.csv out/1593091766/results/c068_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c068,0,4,1,1197426,1042147,1164168,1164168,600.003929725,602.101855386
c068,0,4,2,343736,320723,330355,330355,1200.004082747,1203.011219791
c068,0,4,3,146293,134150,135304,135304,1800.0065573699999,1803.90109152
c068,0,4,4,98000,91127,91455,91455,2400.008367073,2404.82208637
c068,0,4,5,70205,63564,63969,63969,3000.013834643,3005.485038741
c068,0,4,6,64438,57635,58085,58085,3600.0201253,3606.055048079
c068,0,4,7,57578,51913,52296,52296,4200.021811098,4206.609849017
c068,0,4,8,47718,42757,43169,43169,4800.029311294001,4807.236549821
c068,0,4,9,42110,38025,38435,38435,5400.038144086001,5407.837730154
c068,0,4,10,34366,29389,29710,29710,6000.053963502001,6008.518676614
c068,0,4,11,34326,28468,28736,28736,6600.055050773001,6609.074453378
# search time: 6600.055s
# total time: 6609.405s
c068,1,4,1,1132379,920792,1084362,1084362,600.001929469,600.26303647
c068,1,4,2,340690,318847,327585,327585,1200.0025855499998,1200.687984119
c068,1,4,3,144240,132209,133335,133335,1800.0032408959999,1801.106743128
c068,1,4,4,97459,90540,90880,90880,2400.0054181729997,2401.515377063
c068,1,4,5,69537,62636,63046,63046,3000.008870916,3001.941123792
c068,1,4,6,64803,58282,58712,58712,3600.02463108,3602.255827299
c068,1,4,7,56613,50286,50664,50664,4200.030321657,4202.601941371
c068,1,4,8,47131,41721,42132,42132,4800.033170559,4802.959679576
c068,1,4,9,41705,37715,38111,38111,5400.07487816,5403.285585063
c068,1,4,10,34392,29195,29523,29523,6000.092809205999,6003.655764083
c068,1,4,11,34077,28179,28432,28432,6600.098266724,6603.956715991
# search time: 6600.098s
# total time: 13213.927s
c068,2,4,1,1173856,1020063,1140826,1140826,600.000595801,600.289515365
c068,2,4,2,343907,321321,330777,330777,1200.00234577,1200.574448689
c068,2,4,3,140578,128356,129498,129498,1800.007460161,1800.854670527
c068,2,4,4,97333,90542,90903,90903,2400.011923592,2401.147529533
c068,2,4,5,70107,63672,64071,64071,3000.0183930310004,3001.387029571
c068,2,4,6,65136,58341,58817,58817,3600.0248848930005,3601.555336561
c068,2,4,7,57271,51623,52013,52013,4200.030254513001,4201.807340309
c068,2,4,8,47614,42901,43307,43307,4800.040769910001,4802.076675539
c068,2,4,9,40967,36596,36982,36982,5400.050324107001,5402.283684081
c068,2,4,10,34462,30048,30335,30335,6000.055855391001,6002.4622703
c068,2,4,11,33967,27963,28220,28220,6600.073200596002,6602.753507598
# search time: 6600.073s
# total time: 19817.224s
c068,3,4,1,1102583,903052,1057735,1057735,600.000981932,600.189607104
c068,3,4,2,345508,322617,332079,332079,1200.001507303,1200.415674554
c068,3,4,3,139910,127733,128886,128886,1800.0045706219998,1800.659691924
c068,3,4,4,98056,91170,91520,91520,2400.007273192,2400.863204697
c068,3,4,5,70108,63654,64057,64057,3000.012876125,3001.057680178
c068,3,4,6,64438,57682,58139,58139,3600.015435547,3601.2359859
c068,3,4,7,56648,50260,50642,50642,4200.018965071,4201.452463012
c068,3,4,8,47642,42704,43123,43123,4800.030063556,4801.610597109
c068,3,4,9,41127,36690,37077,37077,5400.035891281,5401.809063709
c068,3,4,10,34164,29177,29504,29504,6000.040840158,6002.110919108
c068,3,4,11,32549,26875,27102,27102,6600.0525627,6602.240002289
# search time: 6600.053s
# total time: 26420.260s
c068,4,4,1,1153214,945285,1105764,1105764,600.008161074,600.19197188
c068,4,4,2,339800,317534,326683,326683,1200.008195335,1200.381761211
c068,4,4,3,135582,123535,124686,124686,1800.011505643,1800.540519458
c068,4,4,4,93450,86595,86828,86828,2400.0221027079997,2400.764176747
c068,4,4,5,69310,62878,63287,63287,3000.032494536,3000.913974134
c068,4,4,6,63751,56670,57129,57129,3600.036528758,3601.065034715
c068,4,4,7,56842,51155,51581,51581,4200.05952022,4201.225864247
c068,4,4,8,46769,41414,41818,41818,4800.101785935,4801.419151489
c068,4,4,9,41595,37814,38239,38239,5400.112455102,5401.605346112
c068,4,4,10,33641,28663,28978,28978,6000.119872115,6001.817240045
c068,4,4,11,33510,27637,27884,27884,6600.138900867,6601.998075013
# search time: 6600.139s
# total time: 33022.802s
