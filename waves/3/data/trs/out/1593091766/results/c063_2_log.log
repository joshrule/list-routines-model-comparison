    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c063_2.json out/1593091766/results/c063_2_best.csv out/1593091766/results/c063_2_predictions.csv out/1593091766/results/c063_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 8, 4, 4]), o: IntList([]) }
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([2]) }
#   Datum { i: IntList([4, 1, 1, 4, 1, 1, 3]), o: IntList([1, 3]) }
#   Datum { i: IntList([0, 5, 0, 5, 5, 7]), o: IntList([5, 0, 5, 5, 7]) }
#   Datum { i: IntList([0, 3, 9, 4, 6, 6, 7, 8, 2]), o: IntList([3, 9, 4, 6, 6, 7, 8, 2]) }
#   Datum { i: IntList([1, 7, 9, 9, 8, 4, 1, 7, 8]), o: IntList([9, 9, 8, 4, 1, 7, 8]) }
#   Datum { i: IntList([3, 8, 8, 7, 7, 7, 8, 8]), o: IntList([7, 7, 8, 8]) }
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([0, 2, 0]), o: IntList([2, 0]) }
#   Datum { i: IntList([2, 6, 2, 6, 6, 6]), o: IntList([6, 6, 6]) }
#   Datum { i: IntList([0, 9, 7, 1, 1, 5, 4, 3, 6, 6]), o: IntList([9, 7, 1, 1, 5, 4, 3, 6, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c063,0,2,1,1298168,1064244,1244648,1244648,600.000012949,601.756476844
c063,0,2,2,967082,889252,938681,938681,1200.007659326,1202.817665716
c063,0,2,3,791652,748658,771360,771360,1800.007738326,1803.673070411
c063,0,2,4,469489,440789,455608,455608,2400.008534355,2404.317411442
c063,0,2,5,264030,244325,252512,252512,3000.008948822,3004.889365597
c063,0,2,6,173388,159323,163857,163857,3600.009357117,3605.368180029
c063,0,2,7,125796,113880,116963,116963,4200.014739755,4205.843912577
c063,0,2,8,104419,97583,99762,99762,4800.018117427,4806.34345826
c063,0,2,9,85083,80113,81925,81925,5400.018250785,5406.937151812
c063,0,2,10,79433,74874,76750,76750,6000.044301524001,6007.494743332
c063,0,2,11,77832,73353,74715,74715,6600.0455918590005,6608.021477498
# search time: 6600.046s
# total time: 6608.388s
c063,1,2,1,1330755,1160977,1294720,1294720,600.004235721,600.364278917
c063,1,2,2,981534,902222,952378,952378,1200.004500152,1200.775029299
c063,1,2,3,815409,769697,795319,795319,1800.004719829,1801.172219767
c063,1,2,4,471299,442551,457437,457437,2400.0050984599998,2401.472201205
c063,1,2,5,272799,253204,262281,262281,3000.0070632589996,3001.750586039
c063,1,2,6,173349,158957,163572,163572,3600.0095321729996,3601.984000305
c063,1,2,7,123952,111600,114454,114454,4200.010619844999,4202.200708915
c063,1,2,8,105299,98524,100807,100807,4800.012468522999,4802.442347398
c063,1,2,9,84173,79333,81172,81172,5400.013071596999,5402.648179485
c063,1,2,10,79248,74767,76550,76550,6000.015080163999,6002.911345133
c063,1,2,11,78580,74169,75530,75530,6600.016731370999,6603.190307034
# search time: 6600.017s
# total time: 13212.197s
c063,2,2,1,1275363,1042547,1222343,1222343,600.001629646,600.19260645
c063,2,2,2,946736,870052,918973,918973,1200.002172079,1200.494842546
c063,2,2,3,801491,758084,781697,781697,1800.0024390550002,1800.788809507
c063,2,2,4,463158,434952,448752,448752,2400.003222451,2401.027602563
c063,2,2,5,262529,242855,251158,251158,3000.003752686,3001.227653363
c063,2,2,6,172132,157896,162708,162708,3600.004463474,3601.36151903
c063,2,2,7,123450,111295,114085,114085,4200.007366043,4201.507496633
c063,2,2,8,104652,98055,100010,100010,4800.007640486,4801.649551793
c063,2,2,9,81774,77061,78623,78623,5400.011594789,5401.805284547
c063,2,2,10,79287,74687,76662,76662,6000.017272075,6001.944473312
c063,2,2,11,77587,73243,74589,74589,6600.0268529489995,6602.082809686
# search time: 6600.027s
# total time: 19815.147s
c063,3,2,1,1281350,1051168,1229129,1229129,600.000615518,600.193725032
c063,3,2,2,945315,870874,918205,918205,1200.004454574,1200.47763686
c063,3,2,3,789475,746974,769345,769345,1800.00468233,1800.737940775
c063,3,2,4,470193,441456,456306,456306,2400.005280564,2400.934073848
c063,3,2,5,270003,250562,259378,259378,3000.006021929,3001.112230516
c063,3,2,6,171892,157552,161945,161945,3600.009235308,3601.225205253
c063,3,2,7,122916,110922,113751,113751,4200.012305466,4201.364386399
c063,3,2,8,103886,97340,99285,99285,4800.016330787999,4801.545821787
c063,3,2,9,84264,79366,81221,81221,5400.025651173999,5401.737865694
c063,3,2,10,77654,73157,74771,74771,6000.034124304999,6001.914586424
c063,3,2,11,77885,73525,74838,74838,6600.034543174999,6602.089415802
# search time: 6600.035s
# total time: 26417.854s
c063,4,2,1,1283436,1050436,1230437,1230437,600.001710042,600.183176043
c063,4,2,2,948879,874935,921769,921769,1200.0017709620001,1200.441261005
c063,4,2,3,790566,747851,770442,770442,1800.0017874710002,1800.686728457
c063,4,2,4,468423,439513,454433,454433,2400.005203441,2400.86853334
c063,4,2,5,270726,251322,260227,260227,3000.006317367,3001.014915478
c063,4,2,6,172355,157855,162640,162640,3600.006845981,3601.137973334
c063,4,2,7,124417,112430,115754,115754,4200.009744236,4201.240358947
c063,4,2,8,104916,98303,100582,100582,4800.017970201,4801.377896372
c063,4,2,9,84338,79480,81396,81396,5400.022544711,5401.476807326
c063,4,2,10,78849,74238,76302,76302,6000.027540383,6001.57186029
c063,4,2,11,78125,73690,75065,75065,6600.030436887,6601.637423301
# search time: 6600.030s
# total time: 33020.140s
