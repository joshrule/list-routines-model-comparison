    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.35s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c002_4.json out/1593091766/results/c002_4_best.csv out/1593091766/results/c002_4_predictions.csv out/1593091766/results/c002_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 1]), o: IntList([]) }
#   Datum { i: IntList([8, 8, 4, 7, 7, 9, 5, 0]), o: IntList([4]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([9, 3, 6, 0]), o: IntList([6]) }
#   Datum { i: IntList([5, 5]), o: IntList([]) }
#   Datum { i: IntList([4]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([7, 7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([3, 3]), o: IntList([]) }
#   Datum { i: IntList([7, 3, 2, 1, 6, 2, 4, 5]), o: IntList([2]) }
#   Datum { i: IntList([9, 9, 9, 9, 0, 0, 9]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c002,0,4,1,1271920,1041285,1219169,1219169,600.005023308,601.809473239
c002,0,4,2,940256,867755,917551,917551,1200.005066556,1202.676040651
c002,0,4,3,746273,701919,727697,727697,1800.009336189,1803.562677056
c002,0,4,4,675471,631641,656765,656765,2400.009815395,2404.251498757
c002,0,4,5,557441,514386,537535,537535,3000.009955087,3004.816496342
c002,0,4,6,545811,504158,526917,526917,3600.010243851,3605.292486613
c002,0,4,7,519254,479294,501656,501656,4200.011483534,4205.748653284
c002,0,4,8,389308,360501,375429,375429,4800.011538726,4806.217839886
c002,0,4,9,335762,311916,325244,325244,5400.012096240001,5406.6270449
c002,0,4,10,304140,284511,296390,296390,6000.012985693001,6007.01501986
c002,0,4,11,234963,219235,228006,228006,6600.013497104001,6607.433618335
# search time: 6600.013s
# total time: 6608.124s
c002,1,4,1,1368562,1202605,1333717,1333717,600.001402535,600.342701332
c002,1,4,2,988147,913775,964475,964475,1200.001404913,1200.662545661
c002,1,4,3,760588,715510,741429,741429,1800.001623946,1801.024613333
c002,1,4,4,686970,645204,669170,669170,2400.001917723,2401.349108823
c002,1,4,5,563469,520390,543864,543864,3000.002026895,3001.60947848
c002,1,4,6,548065,506511,529380,529380,3600.002260961,3601.884373475
c002,1,4,7,509055,470118,491975,491975,4200.003353222,4202.145827368
c002,1,4,8,421172,389546,406756,406756,4800.003507478001,4802.401462961
c002,1,4,9,351359,325856,340323,340323,5400.004818745001,5402.61761647
c002,1,4,10,324176,301334,314804,314804,6000.005149197001,6002.82542742
c002,1,4,11,252612,234771,245179,245179,6600.008581976001,6603.083572452
# search time: 6600.009s
# total time: 13212.324s
c002,2,4,1,1341217,1163173,1302653,1302653,600.000164309,600.321168207
c002,2,4,2,985108,911278,961616,961616,1200.003776342,1200.582458031
c002,2,4,3,762375,717066,744534,744534,1800.015138245,1800.855100754
c002,2,4,4,684869,640242,665607,665607,2400.015340109,2401.103365154
c002,2,4,5,559190,516054,539475,539475,3000.0165755810003,3001.332858843
c002,2,4,6,542445,501144,523827,523827,3600.0202006820004,3601.541982354
c002,2,4,7,516956,476888,499132,499132,4200.026839827,4201.769300228
c002,2,4,8,423586,392237,409002,409002,4800.027622894,4801.965395299
c002,2,4,9,357837,331145,346241,346241,5400.028304641,5402.121087682
c002,2,4,10,322896,300088,313377,313377,6000.030575420001,6002.297874695
c002,2,4,11,253184,235086,245675,245675,6600.051834489001,6602.488302485
# search time: 6600.052s
# total time: 19816.376s
c002,3,4,1,1255011,1028773,1203958,1203958,600.006600822,600.169082521
c002,3,4,2,992144,919158,968665,968665,1200.006774274,1200.413655968
c002,3,4,3,765092,719658,746987,746987,1800.007438634,1800.65218018
c002,3,4,4,684132,642401,666383,666383,2400.013644557,2400.864733249
c002,3,4,5,555778,512957,536058,536058,3000.0146218480004,3001.039669605
c002,3,4,6,546335,504892,527585,527585,3600.0156926740005,3601.224790005
c002,3,4,7,516078,476315,498365,498365,4200.016090546001,4201.389553232
c002,3,4,8,419382,387808,404418,404418,4800.016230121,4801.534363795
c002,3,4,9,351876,326080,340432,340432,5400.018148471,5401.672466306
c002,3,4,10,322849,300524,314020,314020,6000.019306919,6001.81973037
c002,3,4,11,251931,233843,244391,244391,6600.019590866,6601.951246854
# search time: 6600.020s
# total time: 26419.012s
c002,4,4,1,1350875,1198987,1320499,1320499,600.000052139,600.332651316
c002,4,4,2,1002844,925479,977950,977950,1200.001869153,1200.56674722
c002,4,4,3,770720,723987,751640,751640,1800.002760245,1800.780834035
c002,4,4,4,683378,640814,665246,665246,2400.002794824,2400.974539738
c002,4,4,5,558543,515078,538546,538546,3000.0038584979998,3001.15337924
c002,4,4,6,543391,502265,525162,525162,3600.010695264,3601.325640762
c002,4,4,7,515447,476276,498294,498294,4200.01125764,4201.474838276
c002,4,4,8,423083,391284,408162,408162,4800.012353192,4801.613578864
c002,4,4,9,358626,332040,347007,347007,5400.012805924,5401.753197653
c002,4,4,10,323685,301472,314812,314812,6000.016704359,6001.893151995
c002,4,4,11,251883,234143,244599,244599,6600.017507886,6602.008525173
# search time: 6600.018s
# total time: 33022.436s
