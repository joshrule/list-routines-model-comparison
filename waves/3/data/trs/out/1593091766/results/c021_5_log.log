    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c021_5.json out/1593091766/results/c021_5_best.csv out/1593091766/results/c021_5_predictions.csv out/1593091766/results/c021_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 9, 5, 1, 7, 3]), o: IntList([4, 8, 9, 5, 1, 7, 3]) }
#   Datum { i: IntList([5, 5, 5, 5, 5, 5, 5, 5]), o: IntList([5, 8, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([0, 8, 6, 4, 0]), o: IntList([0, 8, 8, 6, 4, 0]) }
#   Datum { i: IntList([1, 8, 1, 1, 6, 2, 1, 4, 4, 3]), o: IntList([1, 8, 8, 1, 1, 6, 2, 1, 4, 4, 3]) }
#   Datum { i: IntList([1, 6, 9, 3]), o: IntList([1, 8, 6, 9, 3]) }
#   Datum { i: IntList([7, 9, 1, 2, 6, 3, 0, 4, 7, 5]), o: IntList([7, 8, 9, 1, 2, 6, 3, 0, 4, 7, 5]) }
#   Datum { i: IntList([6, 6, 0, 5, 2, 6, 0, 3, 2]), o: IntList([6, 8, 6, 0, 5, 2, 6, 0, 3, 2]) }
#   Datum { i: IntList([9, 2, 1, 9, 3, 3, 1, 8, 9, 2]), o: IntList([9, 8, 2, 1, 9, 3, 3, 1, 8, 9, 2]) }
#   Datum { i: IntList([2, 9, 1, 7, 4, 6, 0]), o: IntList([2, 8, 9, 1, 7, 4, 6, 0]) }
#   Datum { i: IntList([0, 2, 3]), o: IntList([0, 8, 2, 3]) }
#   Datum { i: IntList([7, 4]), o: IntList([7, 8, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c021,0,5,1,776087,662630,751309,751309,600.000117617,602.989987935
c021,0,5,2,331121,305401,313277,313277,1200.005077584,1204.749370391
c021,0,5,3,193914,178229,183309,183309,1800.006942512,1805.760402615
c021,0,5,4,124038,115785,119146,119146,2400.009444028,2407.141248912
c021,0,5,5,95359,86731,88884,88884,3000.010834963,3008.04719578
c021,0,5,6,85609,77868,80287,80287,3600.023970849,3609.097325727
c021,0,5,7,66315,59963,61907,61907,4200.026023844,4210.111462258
c021,0,5,8,53202,48194,49710,49710,4800.029713985,4811.189280247
c021,0,5,9,44018,39756,41023,41023,5400.030201106,5412.161423966
c021,0,5,10,38984,35308,36530,36530,6000.038223194,6012.952576677
c021,0,5,11,37651,34158,35313,35313,6600.047433733001,6613.852535499
# search time: 6600.047s
# total time: 6614.300s
c021,1,5,1,1128206,975626,1095298,1095298,600.000032776,600.408068312
c021,1,5,2,332000,306432,314303,314303,1200.0008827430001,1200.956627761
c021,1,5,3,186445,170981,175417,175417,1800.001695767,1801.374329091
c021,1,5,4,120092,111905,115327,115327,2400.0097405770002,2401.907805276
c021,1,5,5,94880,86330,88526,88526,3000.0104408830002,3002.302780076
c021,1,5,6,85851,78070,80547,80547,3600.010441933,3602.748322807
c021,1,5,7,65011,59165,60957,60957,4200.256826584,4203.420123345
c021,1,5,8,53224,48382,49768,49768,4800.267524143,4803.993177426
c021,1,5,9,43673,39330,40695,40695,5400.285294894,5404.401360192
c021,1,5,10,39405,35557,36902,36902,6000.311293042,6004.844669953
c021,1,5,11,37824,34586,35640,35640,6600.3233073480005,6605.253219295
# search time: 6600.323s
# total time: 13219.933s
c021,2,5,1,1116466,972583,1085861,1085861,600.000638164,600.47560809
c021,2,5,2,194447,179083,183755,183755,1200.003826918,1200.841847446
c021,2,5,3,108838,99882,102532,102532,1800.01267658,1801.136248774
c021,2,5,4,71723,66780,68624,68624,2400.019218623,2401.483785566
c021,2,5,5,54757,49720,51096,51096,3000.0268560550003,3001.803627204
c021,2,5,6,48983,44453,45789,45789,3600.032048717,3602.078981509
c021,2,5,7,37682,34389,35298,35298,4200.044838234,4202.352251908
c021,2,5,8,29963,27286,28174,28174,4800.061068714,4802.659463102
c021,2,5,9,24535,22400,22958,22958,5400.06352763,5403.072715078
c021,2,5,10,22238,20117,20851,20851,6000.081271013,6003.44338656
c021,2,5,11,21825,20028,20652,20652,6600.087644558001,6603.647708264
# search time: 6600.088s
# total time: 19824.108s
c021,3,5,1,674777,576686,653191,653191,600.00008318,600.237753658
c021,3,5,2,196974,181792,186326,186326,1200.0019101970001,1200.531191902
c021,3,5,3,109164,100075,102807,102807,1800.003636459,1800.793113894
c021,3,5,4,71814,66952,68850,68850,2400.0113335690003,2401.110560175
c021,3,5,5,55084,50194,51487,51487,3000.0172113010003,3001.391492524
c021,3,5,6,48244,43867,45240,45240,3600.0228968700003,3601.625703966
c021,3,5,7,37375,34038,34985,34985,4200.031056486,4201.858190766
c021,3,5,8,30384,27717,28505,28505,4800.0516502870005,4802.124061468
c021,3,5,9,24943,22894,23512,23512,5400.079201003,5402.561954741
c021,3,5,10,22627,20569,21294,21294,6000.096272468,6002.766442809
c021,3,5,11,21264,19484,20063,20063,6600.117370981,6603.18989961
# search time: 6600.117s
# total time: 26427.839s
c021,4,5,1,681297,582196,659792,659792,600.010352571,600.246087154
c021,4,5,2,200727,185072,189800,189800,1200.0106812210001,1200.482274845
c021,4,5,3,109130,100180,102906,102906,1800.015036624,1800.663721039
c021,4,5,4,72798,67760,69670,69670,2400.018564984,2400.882329596
c021,4,5,5,55903,51060,52495,52495,3000.021108633,3001.085292449
c021,4,5,6,49395,45021,46186,46186,3600.034277625,3601.289490475
c021,4,5,7,37613,34417,35259,35259,4200.038670645,4201.513372242
c021,4,5,8,30592,27876,28653,28653,4800.045997106,4801.681877094
c021,4,5,9,24847,22693,23284,23284,5400.056208445,5401.869334454
c021,4,5,10,22763,20829,21418,21418,6000.062283469,6002.092393928
c021,4,5,11,21992,20200,20835,20835,6600.076157841,6602.278963379
# search time: 6600.076s
# total time: 33030.492s
