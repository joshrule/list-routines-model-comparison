    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.75s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c007_1.json out/1593091766/results/c007_1_best.csv out/1593091766/results/c007_1_predictions.csv out/1593091766/results/c007_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 2, 2, 0]), o: IntList([0, 2]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([1]), o: IntList([1]) }
#   Datum { i: IntList([3, 3, 1, 9, 8]), o: IntList([3, 3]) }
#   Datum { i: IntList([7, 8, 5]), o: IntList([7, 8]) }
#   Datum { i: IntList([9, 9, 1, 4, 1, 1, 4, 4, 4, 4]), o: IntList([9, 9]) }
#   Datum { i: IntList([7]), o: IntList([7]) }
#   Datum { i: IntList([2]), o: IntList([2]) }
#   Datum { i: IntList([8]), o: IntList([8]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([5, 0, 0]), o: IntList([5, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c007,0,1,1,1180299,1040745,1151879,1151879,600.005054523,602.267036776
c007,0,1,2,652936,600073,619957,619957,1200.009620839,1203.563833083
c007,0,1,3,668175,606219,633006,633006,1800.0143592,1804.330694805
c007,0,1,4,494138,457777,473887,473887,2400.014702133,2404.827446326
c007,0,1,5,393860,358605,374108,374108,3000.018577937,3005.234417169
c007,0,1,6,323900,291647,304927,304927,3600.019378388,3605.61527117
c007,0,1,7,277088,249870,262088,262088,4200.024397233,4205.980784094
c007,0,1,8,259166,233538,244908,244908,4800.024769738,4806.334047552
c007,0,1,9,242479,218643,229082,229082,5400.025227038,5406.668751985
c007,0,1,10,222351,200252,209779,209779,6000.0265926679995,6006.999424099
c007,0,1,11,196620,177392,186108,186108,6600.026803401999,6607.30459179
# search time: 6600.027s
# total time: 6607.767s
c007,1,1,1,1123865,922285,1077939,1077939,600.00083194,600.20585201
c007,1,1,2,653607,600773,620586,620586,1200.001151385,1200.613042088
c007,1,1,3,673568,611596,638473,638473,1800.001637764,1800.913706571
c007,1,1,4,487625,452527,468278,468278,2400.001826769,2401.147856331
c007,1,1,5,395154,360032,375443,375443,3000.0088821940003,3001.371202523
c007,1,1,6,324922,292683,305990,305990,3600.010465108,3601.597184197
c007,1,1,7,275594,248020,260237,260237,4200.011761455,4201.802716258
c007,1,1,8,256303,230762,242244,242244,4800.020752924,4801.996112459
c007,1,1,9,241267,217170,227782,227782,5400.025857947,5402.17570494
c007,1,1,10,219698,197832,207282,207282,6000.026869594,6002.378916147
c007,1,1,11,193510,174487,183152,183152,6600.029917780001,6602.587407993
# search time: 6600.030s
# total time: 13210.980s
c007,2,1,1,1041772,882587,1006725,1006725,600.002549495,600.231058177
c007,2,1,2,650131,597490,617126,617126,1200.002999989,1200.497907311
c007,2,1,3,647848,590063,615142,615142,1800.003840479,1800.73621802
c007,2,1,4,490531,455229,470864,470864,2400.004379525,2400.920502737
c007,2,1,5,388315,354078,369254,369254,3000.006705267,3001.085725817
c007,2,1,6,320311,288367,301618,301618,3600.009248015,3601.229059991
c007,2,1,7,274755,247879,259804,259804,4200.010766141,4201.352990942
c007,2,1,8,257096,231742,243116,243116,4800.011045453,4801.484275648
c007,2,1,9,243364,219116,229934,229934,5400.027119583,5401.644184763
c007,2,1,10,219772,198130,207500,207500,6000.0272337490005,6001.77088039
c007,2,1,11,196245,176980,185732,185732,6600.030780551,6601.899250472
# search time: 6600.031s
# total time: 19813.471s
c007,3,1,1,1126324,965832,1091337,1091337,600.000587632,600.237404382
c007,3,1,2,657158,604206,624098,624098,1200.000855788,1200.46354835
c007,3,1,3,689868,623169,652338,652338,1800.0013987950001,1800.662765506
c007,3,1,4,495997,460011,475912,475912,2400.003517938,2400.819538053
c007,3,1,5,391359,356375,371702,371702,3000.004558259,3000.963412556
c007,3,1,6,319798,288702,301466,301466,3600.005085565,3601.08711993
c007,3,1,7,274440,247510,259566,259566,4200.005764173,4201.21840476
c007,3,1,8,257291,232147,243485,243485,4800.0147379869995,4801.34576915
c007,3,1,9,242042,217821,228508,228508,5400.015039151,5401.464675832
c007,3,1,10,220301,198769,207867,207867,6000.01545792,6001.592153142
c007,3,1,11,196525,177247,185867,185867,6600.017745757,6601.724964545
# search time: 6600.018s
# total time: 26415.828s
c007,4,1,1,1171019,1041087,1145229,1145229,600.000078167,600.268913225
c007,4,1,2,654604,601988,621611,621611,1200.00047287,1200.472774138
c007,4,1,3,639414,582325,607039,607039,1800.0146177800002,1800.667797524
c007,4,1,4,494175,458318,474155,474155,2400.019514847,2400.8122112
c007,4,1,5,386998,352491,367619,367619,3000.024069856,3000.939106974
c007,4,1,6,321278,289320,302520,302520,3600.0251879,3601.056464937
c007,4,1,7,273583,246122,258374,258374,4200.035933445,4201.17552391
c007,4,1,8,257358,232018,243272,243272,4800.03811749,4801.286654845
c007,4,1,9,243390,218950,229691,229691,5400.039579104,5401.40106172
c007,4,1,10,220695,198935,208413,208413,6000.039819819,6001.510107801
c007,4,1,11,196615,177235,186067,186067,6600.041506715999,6601.597611891
# search time: 6600.042s
# total time: 33018.066s
