    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c029_5.json out/1593091766/results/c029_5_best.csv out/1593091766/results/c029_5_predictions.csv out/1593091766/results/c029_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2]), o: IntList([]) }
#   Datum { i: IntList([2, 3, 1, 6, 0, 9, 5, 7, 4, 8]), o: IntList([1, 6, 0, 9, 5, 7, 4, 8]) }
#   Datum { i: IntList([7, 5, 1, 9, 4, 4, 4, 8]), o: IntList([1, 9, 4, 4, 4, 8]) }
#   Datum { i: IntList([5, 2, 2, 2, 5, 2]), o: IntList([2, 2, 5, 2]) }
#   Datum { i: IntList([8, 1, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([7, 0, 4, 1, 7]), o: IntList([4, 1, 7]) }
#   Datum { i: IntList([6, 6, 6]), o: IntList([6]) }
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([5, 9, 1, 3, 0, 0, 3]), o: IntList([1, 3, 0, 0, 3]) }
#   Datum { i: IntList([2, 7, 6, 2, 0, 6, 7, 6, 5]), o: IntList([6, 2, 0, 6, 7, 6, 5]) }
#   Datum { i: IntList([5, 1, 0, 0, 5, 8, 1, 8, 3, 0]), o: IntList([0, 0, 5, 8, 1, 8, 3, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c029,0,5,1,1276800,1043556,1224719,1224719,600.008459321,601.611149085
c029,0,5,2,1026235,956219,1004171,1004171,1200.010437528,1202.49108506
c029,0,5,3,323350,292914,307650,307650,1800.01110243,1803.185784967
c029,0,5,4,232657,218970,226398,226398,2400.012110955,2403.71624213
c029,0,5,5,193064,181495,187561,187561,3000.013453453,3004.272201667
c029,0,5,6,172923,161786,167695,167695,3600.014538349,3604.793651374
c029,0,5,7,145736,133484,138397,138397,4200.015915338,4205.336927832
c029,0,5,8,138730,126183,131192,131192,4800.018537151,4805.875055808
c029,0,5,9,135993,123426,128315,128315,5400.020649540999,5406.392198756
c029,0,5,10,112804,101593,106047,106047,6000.022165422999,6006.845985572
c029,0,5,11,88742,79967,83454,83454,6600.028230450999,6607.325612332
# search time: 6600.028s
# total time: 6607.645s
c029,1,5,1,1347803,1172768,1310057,1310057,600.000040619,600.340600662
c029,1,5,2,1017801,950172,996383,996383,1200.0020068869999,1200.712573809
c029,1,5,3,326913,296459,311487,311487,1800.0034195469998,1801.013294148
c029,1,5,4,232220,218464,225897,225897,2400.0043260989996,2401.260581539
c029,1,5,5,190985,178849,185444,185444,3000.004843809,3001.507406343
c029,1,5,6,173144,161854,167962,167962,3600.0082672189997,3601.780937066
c029,1,5,7,145852,133355,138413,138413,4200.012909835,4202.053395956
c029,1,5,8,137883,125157,130352,130352,4800.015699845,4802.319687823
c029,1,5,9,135929,123129,128175,128175,5400.017501545,5402.59807623
c029,1,5,10,111841,100790,105279,105279,6000.022790239001,6002.832033356
c029,1,5,11,88753,79736,83323,83323,6600.028665001,6603.132583522
# search time: 6600.029s
# total time: 13211.289s
c029,2,5,1,1351569,1186415,1317379,1317379,600.000013666,600.281924249
c029,2,5,2,1019613,950749,997836,997836,1200.0001378349998,1200.582288971
c029,2,5,3,322732,292226,307218,307218,1800.0010246499996,1800.795990501
c029,2,5,4,234405,220264,227795,227795,2400.0012715779994,2400.971935459
c029,2,5,5,192534,180603,186956,186956,3000.0020074629992,3001.144133779
c029,2,5,6,172725,161534,167460,167460,3600.003269577999,3601.3306111
c029,2,5,7,145348,132941,137894,137894,4200.007065501999,4201.51122045
c029,2,5,8,138976,126288,131371,131371,4800.008936467999,4801.719103924
c029,2,5,9,135961,123296,128286,128286,5400.011234545998,5401.925315188
c029,2,5,10,110989,100169,104401,104401,6000.011391473999,6002.099644091
c029,2,5,11,90229,80743,84469,84469,6600.012002148998,6602.282614859
# search time: 6600.012s
# total time: 19814.269s
c029,3,5,1,1361127,1178936,1322051,1322051,600.001193986,600.301509885
c029,3,5,2,1012126,941157,989965,989965,1200.008066122,1200.565221789
c029,3,5,3,322022,291851,306515,306515,1800.012668166,1800.740571754
c029,3,5,4,230594,216808,224227,224227,2400.015231349,2400.891334798
c029,3,5,5,194350,182802,188869,188869,3000.019143778,3001.034498933
c029,3,5,6,89695,83389,86845,86845,3600.022598828,3601.269278562
c029,3,5,7,73641,66851,69545,69545,4200.027265512,4201.425351768
c029,3,5,8,70284,63594,66103,66103,4800.030172807999,4801.563744105
c029,3,5,9,68433,61842,64464,64464,5400.0307475889995,5401.724136618
c029,3,5,10,56810,51231,53507,53507,6000.038175299,6001.881920292
c029,3,5,11,45413,41120,42943,42943,6600.042127809,6602.013546913
# search time: 6600.042s
# total time: 26416.769s
c029,4,5,1,704747,597786,681149,681149,600.003127513,600.267158954
c029,4,5,2,608616,562190,593179,593179,1200.003442966,1200.565572117
c029,4,5,3,171733,154714,163316,163316,1800.006708914,1800.708873741
c029,4,5,4,122781,114880,119105,119105,2400.010723726,2400.830059145
c029,4,5,5,99588,92740,96485,96485,3000.0113504829997,3000.978431898
c029,4,5,6,146195,136568,141756,141756,3600.0150679309995,3601.117117537
c029,4,5,7,126770,115532,120051,120051,4200.0200356919995,4201.238455422
c029,4,5,8,119596,108413,112888,112888,4800.020119027,4801.353030079
c029,4,5,9,117887,106654,111166,111166,5400.022849642,5401.485658026
c029,4,5,10,96961,87612,91335,91335,6000.023773969,6001.60877829
c029,4,5,11,77857,69953,73119,73119,6600.024517367,6601.721607173
# search time: 6600.025s
# total time: 33018.913s
