    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c059_3.json out/1593091766/results/c059_3_best.csv out/1593091766/results/c059_3_predictions.csv out/1593091766/results/c059_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 2, 4, 3, 7, 0, 8, 6]), o: IntList([5, 2, 4, 6, 7, 0, 8, 3]) }
#   Datum { i: IntList([1, 0, 7, 8, 6, 4, 2, 6, 1, 9]), o: IntList([1, 0, 7, 6, 6, 4, 2, 8, 1, 9]) }
#   Datum { i: IntList([3, 1, 1, 5, 1, 0, 7, 0, 7]), o: IntList([3, 1, 1, 0, 1, 0, 7, 5, 7]) }
#   Datum { i: IntList([0, 5, 3, 8, 1, 9, 4, 6, 2]), o: IntList([0, 5, 3, 6, 1, 9, 4, 8, 2]) }
#   Datum { i: IntList([8, 3, 9, 2, 7, 4, 6, 3]), o: IntList([8, 3, 9, 3, 7, 4, 6, 2]) }
#   Datum { i: IntList([8, 9, 9, 6, 5, 2, 4, 0, 0]), o: IntList([8, 9, 9, 0, 5, 2, 4, 6, 0]) }
#   Datum { i: IntList([7, 3, 4, 0, 1, 6, 8, 1, 5]), o: IntList([7, 3, 4, 1, 1, 6, 8, 0, 5]) }
#   Datum { i: IntList([5, 2, 8, 8, 8, 8, 2, 5]), o: IntList([5, 2, 8, 5, 8, 8, 2, 8]) }
#   Datum { i: IntList([6, 7, 2, 6, 5, 4, 4, 0]), o: IntList([6, 7, 2, 0, 5, 4, 4, 6]) }
#   Datum { i: IntList([6, 1, 8, 5, 2, 3, 7, 9, 0, 4]), o: IntList([6, 1, 8, 9, 2, 3, 7, 5, 0, 4]) }
#   Datum { i: IntList([9, 5, 5, 9, 3, 7, 6, 3, 9, 3]), o: IntList([9, 5, 5, 3, 3, 7, 6, 9, 9, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c059,0,3,1,656117,563539,635839,635839,600.000628489,602.841127326
c059,0,3,2,175652,162895,167643,167643,1200.0009075459998,1204.763114909
c059,0,3,3,88822,80678,82913,82913,1800.0029526639996,1806.340161676
c059,0,3,4,66704,60909,63250,63250,2400.004592853,2407.089279789
c059,0,3,5,90034,82929,85361,85361,3000.0052890999996,3008.309101319
c059,0,3,6,73673,67479,69709,69709,3600.0103116809996,3609.563425747
c059,0,3,7,51055,46556,47822,47822,4200.0132880149995,4211.308688554
c059,0,3,8,43171,39470,40409,40409,4800.032598829,4813.316715352
c059,0,3,9,37332,33787,34547,34547,5400.054457059,5415.64144919
c059,0,3,10,33500,30397,31104,31104,6000.078033592,6017.449785917
c059,0,3,11,28801,25987,26676,26676,6600.0848305399995,6619.225487406
# search time: 6600.085s
# total time: 6619.405s
c059,1,3,1,1057839,863122,1013586,1013586,600.001286859,600.336996393
c059,1,3,2,283214,262535,270322,270322,1200.002507496,1200.925399731
c059,1,3,3,150635,137355,140926,140926,1800.0030979849998,1801.509286522
c059,1,3,4,116989,107692,111246,111246,2400.0053668709998,2401.898643724
c059,1,3,5,88926,81524,84418,84418,3000.0202511139996,3002.43304577
c059,1,3,6,73943,67338,69744,69744,3600.0330155479996,3602.815395547
c059,1,3,7,51029,46604,47738,47738,4200.046271013,4203.665971866
c059,1,3,8,42767,39075,40035,40035,4800.059283658999,4804.521342328
c059,1,3,9,37922,34394,35215,35215,5400.059503191,5405.343474189
c059,1,3,10,33036,30070,30737,30737,6000.063564661999,6005.974492264
c059,1,3,11,28221,25484,26138,26138,6600.070346467999,6606.938466762
# search time: 6600.070s
# total time: 13226.684s
c059,2,3,1,1070075,927009,1039307,1039307,600.000082677,600.323093312
c059,2,3,2,283964,263562,271200,271200,1200.000723979,1200.680642455
c059,2,3,3,149330,136106,139617,139617,1800.000959382,1801.008587145
c059,2,3,4,113735,104313,108200,108200,2400.003400444,2401.283901034
c059,2,3,5,89130,81844,84721,84721,3000.004686127,3001.600873314
c059,2,3,6,73669,67568,69629,69629,3600.0092857719997,3601.860321582
c059,2,3,7,50815,46287,47569,47569,4200.0096002929995,4202.308200973
c059,2,3,8,42912,39118,40117,40117,4800.027562695999,4802.706081802
c059,2,3,9,36877,33388,34169,34169,5400.055666132999,5403.206774441
c059,2,3,10,32957,30056,30685,30685,6000.076217194999,6003.713693813
c059,2,3,11,27570,24885,25544,25544,6600.089351499999,6604.254844751
# search time: 6600.089s
# total time: 19831.290s
c059,3,3,1,1059664,866562,1015705,1015705,600.001832132,600.186273451
c059,3,3,2,290236,269206,276941,276941,1200.003315183,1200.452785876
c059,3,3,3,149596,136808,140216,140216,1800.007657822,1800.691916974
c059,3,3,4,113271,103941,107762,107762,2400.0094646770003,2400.875069917
c059,3,3,5,88396,81117,83825,83825,3000.0112331860005,3001.111420273
c059,3,3,6,73062,66790,69044,69044,3600.0127825840004,3601.321217737
c059,3,3,7,50342,46150,47131,47131,4200.025811793001,4201.698834944
c059,3,3,8,42327,38680,39673,39673,4800.0285883940005,4802.037914919
c059,3,3,9,37673,34082,34878,34878,5400.0344480310005,5402.428498055
c059,3,3,10,33337,30153,30902,30902,6000.041486100001,6002.732792534
c059,3,3,11,28671,25974,26603,26603,6600.041610874001,6603.020563726
# search time: 6600.042s
# total time: 26434.748s
c059,4,3,1,1048126,854824,1004011,1004011,600.001233322,600.175532386
c059,4,3,2,292208,271181,279051,279051,1200.002044272,1200.372881957
c059,4,3,3,153012,139839,143670,143670,1800.0028008259999,1800.566178151
c059,4,3,4,115167,105780,109523,109523,2400.005408764,2400.756824232
c059,4,3,5,87439,79885,82834,82834,3000.008087796,3000.899244513
c059,4,3,6,73728,67673,69653,69653,3600.0082382699998,3601.059593331
c059,4,3,7,50651,46342,47560,47560,4200.009340793,4201.34146181
c059,4,3,8,42052,38496,39450,39450,4800.0281411099995,4801.662342087
c059,4,3,9,36428,32951,33713,33713,5400.053547740999,5401.990827378
c059,4,3,10,32167,29160,29847,29847,6000.070764028999,6002.346133194
c059,4,3,11,27357,24923,25517,25517,6600.076400180999,6602.819461079
# search time: 6600.076s
# total time: 33037.975s
