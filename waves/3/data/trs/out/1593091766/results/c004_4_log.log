    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.69s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c004_4.json out/1593091766/results/c004_4_best.csv out/1593091766/results/c004_4_predictions.csv out/1593091766/results/c004_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([0, 3, 2, 9, 4, 6, 8, 4, 8]), o: IntList([8]) }
#   Datum { i: IntList([5, 6, 0, 2, 9, 7, 3, 2, 1, 8]), o: IntList([3]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([5, 9, 8, 8, 5, 0, 0, 2]), o: IntList([0]) }
#   Datum { i: IntList([0]), o: IntList([]) }
#   Datum { i: IntList([9, 6, 1, 0, 6, 4, 7]), o: IntList([7]) }
#   Datum { i: IntList([3, 7, 3]), o: IntList([]) }
#   Datum { i: IntList([0, 1, 0, 6, 9, 1, 1, 0]), o: IntList([1]) }
#   Datum { i: IntList([4, 4, 4]), o: IntList([]) }
#   Datum { i: IntList([5, 3, 4, 3, 4, 4, 5]), o: IntList([5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c004,0,4,1,1351765,1161690,1310497,1310497,600.000056047,601.945958602
c004,0,4,2,1009415,932511,984586,984586,1200.000838291,1202.787405453
c004,0,4,3,656794,615537,639257,639257,1800.0012112200002,1803.642567384
c004,0,4,4,437151,404115,423087,423087,2400.002170575,2404.434011707
c004,0,4,5,393457,362016,378496,378496,3000.003554038,3005.142965656
c004,0,4,6,311469,288646,300085,300085,3600.004803922,3605.902524086
c004,0,4,7,301677,277331,290645,290645,4200.00562723,4206.526027799
c004,0,4,8,244253,225754,236126,236126,4800.005740099,4807.180508349
c004,0,4,9,217985,201767,210619,210619,5400.007610564,5407.909633545
c004,0,4,10,175112,160922,168479,168479,6000.008532611,6008.725953734
c004,0,4,11,158532,145792,152792,152792,6600.009238261,6609.271185736
# search time: 6600.009s
# total time: 6609.815s
c004,1,4,1,1337585,1097593,1282058,1282058,600.00980628,600.304005144
c004,1,4,2,1020477,944318,995966,995966,1200.01211879,1200.720484915
c004,1,4,3,666131,624035,647653,647653,1800.0122466399998,1801.127184267
c004,1,4,4,434107,401182,420019,420019,2400.012561389,2401.480688954
c004,1,4,5,390520,359053,375547,375547,3000.013049874,3001.866179575
c004,1,4,6,316441,293309,304763,304763,3600.013596112,3602.181005071
c004,1,4,7,274481,253626,264939,264939,4200.013879317,4202.530836844
c004,1,4,8,223150,207793,216320,216320,4800.01579643,4802.889693926
c004,1,4,9,200278,186916,194102,194102,5400.028111074,5403.236497656
c004,1,4,10,159591,147498,153894,153894,6000.028323828,6003.582784783
c004,1,4,11,146553,135860,141624,141624,6600.03331695,6603.906005491
# search time: 6600.033s
# total time: 13214.615s
c004,2,4,1,1371792,1200959,1335803,1335803,600.000052462,600.30316802
c004,2,4,2,978674,906523,955864,955864,1200.000990726,1200.5938269
c004,2,4,3,670323,627637,652274,652274,1800.001346814,1800.884960963
c004,2,4,4,415131,383748,402084,402084,2400.002703551,2401.125233805
c004,2,4,5,387580,356238,372541,372541,3000.0041138200004,3001.362677123
c004,2,4,6,308850,286073,297741,297741,3600.0068114960004,3601.60505665
c004,2,4,7,275267,254345,265744,265744,4200.007143647001,4201.857166069
c004,2,4,8,223474,207990,216634,216634,4800.007389218001,4802.079662095
c004,2,4,9,200007,186789,194000,194000,5400.010726017001,5402.36366696
c004,2,4,10,157938,145996,152327,152327,6000.010952585,6002.59383179
c004,2,4,11,145041,134291,139989,139989,6600.012223515,6602.802351029
# search time: 6600.012s
# total time: 19818.286s
c004,3,4,1,1323328,1083800,1268866,1268866,600.001204071,600.197415059
c004,3,4,2,972647,902103,950252,950252,1200.003253581,1200.468235541
c004,3,4,3,669628,627107,651664,651664,1800.005051008,1800.713593761
c004,3,4,4,435131,402252,421203,421203,2400.005484603,2400.924510481
c004,3,4,5,391091,359455,375847,375847,3000.006067929,3001.116282919
c004,3,4,6,314023,290801,302692,302692,3600.008064471,3601.302448939
c004,3,4,7,304338,279389,292614,292614,4200.0086098930005,4201.492514075
c004,3,4,8,243947,225277,235675,235675,4800.011309939,4801.670012055
c004,3,4,9,216813,200674,209445,209445,5400.020279046,5401.87016486
c004,3,4,10,172323,158250,165906,165906,6000.031084739,6002.117826134
c004,3,4,11,157886,145021,151823,151823,6600.034717828,6602.305383467
# search time: 6600.035s
# total time: 26421.820s
c004,4,4,1,1322839,1082833,1267997,1267997,600.000043177,600.19800261
c004,4,4,2,989543,916352,966248,966248,1200.0016175229998,1200.447415051
c004,4,4,3,661548,619955,643715,643715,1800.0019765809998,1800.657761122
c004,4,4,4,433922,401029,420030,420030,2400.0020033109995,2400.838608827
c004,4,4,5,405152,373344,390170,390170,3000.0033880409997,3001.005447513
c004,4,4,6,314268,291135,302744,302744,3600.005181611,3601.198774511
c004,4,4,7,287137,264251,276352,276352,4200.005615283,4201.390413421
c004,4,4,8,224367,208772,217522,217522,4800.009308557001,4801.580744809
c004,4,4,9,199679,186505,193948,193948,5400.012358868001,5401.721819108
c004,4,4,10,159154,147147,153576,153576,6000.012372763001,6001.873626563
c004,4,4,11,144668,133881,139527,139527,6600.018295525,6602.051534351
# search time: 6600.018s
# total time: 33024.716s
