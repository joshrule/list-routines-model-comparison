    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c035_5.json out/1593091766/results/c035_5_best.csv out/1593091766/results/c035_5_predictions.csv out/1593091766/results/c035_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 6, 7, 6, 6, 7]), o: IntList([6, 6, 7, 7, 6, 7]) }
#   Datum { i: IntList([9, 4, 6, 4, 4, 9]), o: IntList([4, 4, 6, 9, 4, 9]) }
#   Datum { i: IntList([7, 3, 3, 3, 1, 9, 2, 7]), o: IntList([3, 3, 3, 7, 1, 9, 2, 7]) }
#   Datum { i: IntList([9, 0, 7, 6, 4, 1, 1, 6, 4]), o: IntList([6, 0, 7, 9, 4, 1, 1, 6, 4]) }
#   Datum { i: IntList([6, 5, 4, 4]), o: IntList([6, 4, 5, 4]) }
#   Datum { i: IntList([7, 8, 6, 5, 1, 3, 2]), o: IntList([7, 6, 8, 5, 1, 3, 2]) }
#   Datum { i: IntList([9, 9, 6, 2, 0, 2, 6, 0, 4]), o: IntList([2, 9, 6, 9, 0, 2, 6, 0, 4]) }
#   Datum { i: IntList([4, 6, 7, 8]), o: IntList([4, 7, 6, 8]) }
#   Datum { i: IntList([9, 6, 9, 5, 3]), o: IntList([9, 9, 6, 5, 3]) }
#   Datum { i: IntList([3, 1, 3, 3, 1, 1, 1]), o: IntList([3, 3, 1, 3, 1, 1, 1]) }
#   Datum { i: IntList([0, 8, 2, 8, 6, 8, 0, 2, 0, 2]), o: IntList([8, 8, 2, 0, 6, 8, 0, 2, 0, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c035,0,5,1,1280270,1045045,1226689,1226689,600.004733239,601.702590909
c035,0,5,2,425140,397248,408659,408659,1200.0067769789998,1202.735893111
c035,0,5,3,272107,249333,254612,254612,1800.007270656,1803.672971526
c035,0,5,4,176341,161981,165133,165133,2400.010769877,2404.365424475
c035,0,5,5,129919,117766,121005,121005,3000.0123104649997,3005.020395677
c035,0,5,6,113072,105848,107396,107396,3600.0126409619998,3605.785168218
c035,0,5,7,86243,78760,79327,79327,4200.0142569459995,4206.52405832
c035,0,5,8,66243,60232,60646,60646,4800.017004744,4807.314960025
c035,0,5,9,63072,57225,57743,57743,5400.024191660999,5408.099736652
c035,0,5,10,56361,51357,51799,51799,6000.02548831,6008.871042141
c035,0,5,11,49083,45188,45532,45532,6600.038917616,6609.641947052
# search time: 6600.039s
# total time: 6610.119s
c035,1,5,1,1291827,1114972,1253393,1253393,600.000128618,600.330850287
c035,1,5,2,414047,386917,398337,398337,1200.00015743,1200.740113144
c035,1,5,3,263528,241130,246243,246243,1800.002611459,1801.184263264
c035,1,5,4,172897,158535,161471,161471,2400.003745754,2401.595552371
c035,1,5,5,128518,116240,119372,119372,3000.005978057,3001.915016723
c035,1,5,6,112593,105607,106957,106957,3600.007346695,3602.215024413
c035,1,5,7,86345,78438,78906,78906,4200.012324749,4202.556750284
c035,1,5,8,66041,59762,60165,60165,4800.0173842290005,4803.000660479
c035,1,5,9,62045,56119,56564,56564,5400.022738032,5403.394273989
c035,1,5,10,56060,50063,50437,50437,6000.023985914,6003.843254282
c035,1,5,11,48020,43379,43674,43674,6600.0353163830005,6604.221873327
# search time: 6600.035s
# total time: 13214.909s
c035,2,5,1,1271761,1044754,1220089,1220089,600.000538816,600.215023595
c035,2,5,2,422371,395570,406467,406467,1200.000836964,1200.489772686
c035,2,5,3,264462,241962,247191,247191,1800.001521253,1800.732064439
c035,2,5,4,172819,158609,161461,161461,2400.0058013509997,2400.973755197
c035,2,5,5,129655,117414,120729,120729,3000.0131449559995,3001.172559317
c035,2,5,6,112833,105844,107169,107169,3600.0135820689993,3601.370633871
c035,2,5,7,85201,77830,78381,78381,4200.018718019,4201.583489041
c035,2,5,8,65701,59649,60057,60057,4800.024713946999,4801.806208734
c035,2,5,9,62342,55626,56060,56060,5400.0439833089995,5402.115768279
c035,2,5,10,54729,48790,49146,49146,6000.052100421999,6002.392771283
c035,2,5,11,48859,44762,45135,45135,6600.062975348999,6602.67684908
# search time: 6600.063s
# total time: 19818.249s
c035,3,5,1,1298546,1129766,1262230,1262230,600.004955091,600.309134459
c035,3,5,2,403474,377423,388636,388636,1200.005264699,1200.532528695
c035,3,5,3,270751,247996,253233,253233,1800.005671824,1800.724780724
c035,3,5,4,172451,158050,161354,161354,2400.006689667,2400.892504309
c035,3,5,5,128865,116809,120034,120034,3000.009407998,3001.071900085
c035,3,5,6,112606,105441,106740,106740,3600.0153720609997,3601.249618525
c035,3,5,7,85853,77850,78331,78331,4200.015980059,4201.435592506
c035,3,5,8,65720,59577,59979,59979,4800.019206651,4801.66146487
c035,3,5,9,62917,57126,57590,57590,5400.0386454029995,5401.874069155
c035,3,5,10,55974,50908,51318,51318,6000.046848964999,6002.05523287
c035,3,5,11,48425,44431,44773,44773,6600.049370037999,6602.25246895
# search time: 6600.049s
# total time: 26421.184s
c035,4,5,1,1288166,1113357,1250744,1250744,600.001316364,600.289206493
c035,4,5,2,414855,387595,399118,399118,1200.002116308,1200.481027896
c035,4,5,3,269484,246848,252106,252106,1800.0043711120002,1800.670070663
c035,4,5,4,172267,158146,160976,160976,2400.0055036820004,2400.836118682
c035,4,5,5,128591,116368,119762,119762,3000.009331299,3000.969264291
c035,4,5,6,111919,105021,106332,106332,3600.0140486650002,3601.100604323
c035,4,5,7,84780,77337,77882,77882,4200.019266008,4201.293672785
c035,4,5,8,65602,59533,59914,59914,4800.025908267,4801.438128339
c035,4,5,9,62375,56613,57066,57066,5400.037917641,5401.612260034
c035,4,5,10,54759,48911,49244,49244,6000.042768007999,6001.766712475
c035,4,5,11,48584,44386,44758,44758,6600.044806016999,6601.920790474
# search time: 6600.045s
# total time: 33024.091s
