    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c046_5.json out/1593091766/results/c046_5_best.csv out/1593091766/results/c046_5_predictions.csv out/1593091766/results/c046_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4]), o: IntList([7, 1, 4]) }
#   Datum { i: IntList([2, 2, 0, 0, 2, 2, 0, 2, 0, 2]), o: IntList([7, 2, 2, 0, 0, 2, 2, 0, 2, 0, 2]) }
#   Datum { i: IntList([6, 9, 6, 9, 6]), o: IntList([7, 6, 9, 6, 9, 6]) }
#   Datum { i: IntList([3, 3, 4, 3, 3, 8, 4, 4]), o: IntList([7, 3, 3, 4, 3, 3, 8, 4, 4]) }
#   Datum { i: IntList([8, 8, 5, 5]), o: IntList([7, 8, 8, 5, 5]) }
#   Datum { i: IntList([3, 8, 6, 7, 0, 3, 4]), o: IntList([7, 3, 8, 6, 7, 0, 3, 4]) }
#   Datum { i: IntList([4, 7, 0, 5, 0, 3]), o: IntList([7, 4, 7, 0, 5, 0, 3]) }
#   Datum { i: IntList([9, 1, 6, 5, 2, 1, 0, 1, 9]), o: IntList([7, 9, 1, 6, 5, 2, 1, 0, 1, 9]) }
#   Datum { i: IntList([7, 3, 5]), o: IntList([7, 7, 3, 5]) }
#   Datum { i: IntList([9]), o: IntList([7, 9]) }
#   Datum { i: IntList([]), o: IntList([7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c046,0,5,1,1391335,1209428,1352507,1352507,600.000042337,601.931330849
c046,0,5,2,644522,602925,619830,619830,1200.000130225,1202.727039433
c046,0,5,3,239544,221679,229538,229538,1800.000414823,1803.108852275
c046,0,5,4,193646,179005,184747,184747,2400.001836,2403.471984042
c046,0,5,5,147830,136494,140814,140814,3000.004964362,3003.788798014
c046,0,5,6,128333,118113,122258,122258,3600.004985431,3604.104464522
c046,0,5,7,92479,83963,86575,86575,4200.007682766,4204.647453811
c046,0,5,8,79503,72250,74327,74327,4800.016939626999,4805.175725101
c046,0,5,9,65879,59531,61276,61276,5400.021851439999,5405.781661288
c046,0,5,10,62515,54990,56468,56468,6000.023263179999,6006.212771584
c046,0,5,11,61536,52966,54188,54188,6600.023264103999,6606.631945693
# search time: 6600.023s
# total time: 6607.113s
c046,1,5,1,1353613,1166411,1313112,1313112,600.006203165,600.386147482
c046,1,5,2,641365,599423,616683,616683,1200.006660477,1200.744173027
c046,1,5,3,236478,217334,226358,226358,1800.007090503,1800.922588332
c046,1,5,4,191810,177706,183530,183530,2400.010096514,2401.090054109
c046,1,5,5,145037,133446,138004,138004,3000.0113976029998,3001.251604096
c046,1,5,6,124754,111260,118561,118561,3600.012092131,3601.425494095
c046,1,5,7,92535,83962,86557,86557,4200.013548143,4201.736790346
c046,1,5,8,80196,72724,74752,74752,4800.0184422229995,4801.990858864
c046,1,5,9,66165,59319,61322,61322,5400.0195729259995,5402.273550455
c046,1,5,10,64782,57808,59068,59068,6000.040885472999,6002.495344194
c046,1,5,11,63853,55779,57005,57005,6600.047421599,6602.721517881
# search time: 6600.047s
# total time: 13210.517s
c046,2,5,1,1313466,1080010,1259768,1259768,600.003188165,600.22714322
c046,2,5,2,644474,602443,619626,619626,1200.003240428,1200.50199781
c046,2,5,3,245121,226357,234627,234627,1800.004078767,1800.64969755
c046,2,5,4,194101,179183,185459,185459,2400.004584191,2400.779322856
c046,2,5,5,147395,136089,140439,140439,3000.008041681,3000.905438121
c046,2,5,6,123005,110103,117044,117044,3600.011280651,3601.00849383
c046,2,5,7,92090,83663,86077,86077,4200.012212354,4201.188444101
c046,2,5,8,79374,71912,74078,74078,4800.012957766001,4801.423142031
c046,2,5,9,65607,59286,60951,60951,5400.019806890001,5401.64336617
c046,2,5,10,59736,52377,53728,53728,6000.027645501001,6001.856946225
c046,2,5,11,59646,51128,52454,52454,6600.029350383001,6602.031305999
# search time: 6600.029s
# total time: 19813.073s
c046,3,5,1,1339432,1099162,1284600,1284600,600.001834561,600.198486897
c046,3,5,2,635063,593988,610971,610971,1200.007351468,1200.428249271
c046,3,5,3,239859,221388,229521,229521,1800.008475232,1800.542664643
c046,3,5,4,205364,191641,196345,196345,2400.010923542,2400.645491437
c046,3,5,5,144815,133598,138019,138019,3000.017834847,3000.753351702
c046,3,5,6,127544,117555,121504,121504,3600.01852345,3600.859150121
c046,3,5,7,90721,82422,85097,85097,4200.023169896,4201.011845061
c046,3,5,8,79789,72338,74447,74447,4800.023288281,4801.111334699
c046,3,5,9,65251,58850,60572,60572,5400.037309468999,5401.319671025
c046,3,5,10,61505,54232,55532,55532,6000.042391210999,6001.448351813
c046,3,5,11,61297,52858,54026,54026,6600.054771803999,6601.591879136
# search time: 6600.055s
# total time: 26415.576s
c046,4,5,1,1296781,1112952,1256756,1256756,600.000222984,600.26211059
c046,4,5,2,649412,606451,623920,623920,1200.000394089,1200.461804566
c046,4,5,3,247564,228206,237313,237313,1800.0022008360002,1800.571308744
c046,4,5,4,189050,173668,180282,180282,2400.004320586,2400.668367472
c046,4,5,5,146446,133501,139094,139094,3000.0044721820004,3000.74826257
c046,4,5,6,126516,116074,120485,120485,3600.0283208060005,3600.865613344
c046,4,5,7,93044,84197,86720,86720,4200.033366728,4200.983104344
c046,4,5,8,80052,72336,74644,74644,4800.0399304640005,4801.113815817
c046,4,5,9,65528,58866,60730,60730,5400.048591977001,5401.25127379
c046,4,5,10,64518,57567,58918,58918,6000.054824085,6001.374071213
c046,4,5,11,63291,55119,56321,56321,6600.057282094001,6601.509596699
# search time: 6600.057s
# total time: 33017.756s
