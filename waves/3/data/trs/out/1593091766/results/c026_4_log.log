    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c026_4.json out/1593091766/results/c026_4_best.csv out/1593091766/results/c026_4_predictions.csv out/1593091766/results/c026_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 3, 9]), o: IntList([8, 3]) }
#   Datum { i: IntList([3, 9, 8, 1, 6, 2, 0, 4, 5, 7]), o: IntList([3, 9, 1, 6, 2, 0, 4, 5, 7]) }
#   Datum { i: IntList([8, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8]) }
#   Datum { i: IntList([5, 0, 4, 7, 8, 9]), o: IntList([5, 0, 7, 8, 9]) }
#   Datum { i: IntList([1, 0, 0, 1, 4, 6, 4]), o: IntList([1, 0, 1, 4, 6, 4]) }
#   Datum { i: IntList([0, 7, 7, 4, 6]), o: IntList([0, 7, 4, 6]) }
#   Datum { i: IntList([1, 1, 3, 2, 2, 3, 3]), o: IntList([1, 1, 2, 2, 3, 3]) }
#   Datum { i: IntList([2, 2, 4, 3, 9, 0, 6, 7]), o: IntList([2, 2, 3, 9, 0, 6, 7]) }
#   Datum { i: IntList([4, 2, 2, 5]), o: IntList([4, 2, 5]) }
#   Datum { i: IntList([5, 3, 9, 8, 6, 4, 7, 2, 1]), o: IntList([5, 3, 8, 6, 4, 7, 2, 1]) }
#   Datum { i: IntList([9, 8, 4, 1, 4, 7, 9, 3, 5, 1]), o: IntList([9, 8, 1, 4, 7, 9, 3, 5, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c026,0,4,1,1376930,1202204,1339796,1339796,600.00129078,601.938890613
c026,0,4,2,732038,691125,709738,709738,1200.007163694,1202.830336496
c026,0,4,3,291499,269069,278417,278417,1800.008715551,1803.274144472
c026,0,4,4,228950,212024,218545,218545,2400.009150579,2403.7870091
c026,0,4,5,181452,167242,172793,172793,3000.0092879450003,3004.332020776
c026,0,4,6,143944,132701,137182,137182,3600.0108737180003,3604.868826095
c026,0,4,7,127186,116513,120454,120454,4200.015730187,4205.418521647
c026,0,4,8,104378,94923,98283,98283,4800.020471234,4805.90343909
c026,0,4,9,87559,79781,82463,82463,5400.02467446,5406.493748548
c026,0,4,10,80277,72360,75051,75051,6000.028157165,6006.988904213
c026,0,4,11,65991,59560,61703,61703,6600.035956557001,6607.542593998
# search time: 6600.036s
# total time: 6607.843s
c026,1,4,1,1305486,1070161,1251924,1251924,600.000030509,600.25281905
c026,1,4,2,700334,661535,680033,680033,1200.000263335,1200.612700641
c026,1,4,3,291382,268424,277871,277871,1800.001480246,1800.835264356
c026,1,4,4,224212,207598,214146,214146,2400.003064374,2401.073251392
c026,1,4,5,180926,167133,172415,172415,3000.005458509,3001.339570772
c026,1,4,6,143913,132679,137307,137307,3600.008825202,3601.599270892
c026,1,4,7,126532,115426,119679,119679,4200.011709555,4201.886205518
c026,1,4,8,104605,95263,98572,98572,4800.022200239,4802.196910835
c026,1,4,9,87437,79306,82291,82291,5400.032281522,5402.491898878
c026,1,4,10,80773,73151,75713,75713,6000.038570091,6002.80696752
c026,1,4,11,64953,58841,60865,60865,6600.049813339,6603.119173046
# search time: 6600.050s
# total time: 13211.419s
c026,2,4,1,1324902,1144651,1286124,1286124,600.001594393,600.278492165
c026,2,4,2,707689,667538,686524,686524,1200.00795509,1200.56011289
c026,2,4,3,284538,261789,271373,271373,1800.013170962,1800.714658669
c026,2,4,4,223075,206592,213090,213090,2400.0141077050002,2400.866075068
c026,2,4,5,178441,164507,170073,170073,3000.0157240340004,3001.04371303
c026,2,4,6,142889,131344,136027,136027,3600.0165885890005,3601.218923857
c026,2,4,7,124272,113711,117774,117774,4200.018749807001,4201.425952399
c026,2,4,8,103622,94209,97711,97711,4800.020701335001,4801.621362458
c026,2,4,9,86746,78838,81610,81610,5400.023403260001,5401.849821258
c026,2,4,10,80003,72377,74895,74895,6000.026655828001,6002.107933891
c026,2,4,11,66581,60037,62107,62107,6600.045010005001,6602.348247531
# search time: 6600.045s
# total time: 19814.230s
c026,3,4,1,1343335,1173754,1307541,1307541,600.000410396,600.270261855
c026,3,4,2,711302,671511,690025,690025,1200.001070374,1200.504969744
c026,3,4,3,290065,267153,276543,276543,1800.0025674469998,1800.636054012
c026,3,4,4,221502,205539,211778,211778,2400.004765392,2400.772244824
c026,3,4,5,178299,163979,169732,169732,3000.0060227020003,3000.904078057
c026,3,4,6,144031,132480,137048,137048,3600.0072690280003,3601.076747658
c026,3,4,7,124915,114044,118289,118289,4200.007829741,4201.212758538
c026,3,4,8,103817,94334,97746,97746,4800.014210977,4801.368300653
c026,3,4,9,87722,79709,82572,82572,5400.021299838,5401.522172578
c026,3,4,10,79582,72006,74463,74463,6000.023489199,6001.709568797
c026,3,4,11,66360,59852,61952,61952,6600.029409121,6601.869009677
# search time: 6600.029s
# total time: 26416.727s
c026,4,4,1,1287084,1052738,1233765,1233765,600.002872557,600.182650141
c026,4,4,2,704081,664576,683294,683294,1200.003170301,1200.389386805
c026,4,4,3,286346,264550,273799,273799,1800.003322218,1800.511471711
c026,4,4,4,225026,208726,215124,215124,2400.004021026,2400.639530015
c026,4,4,5,179118,165754,170846,170846,3000.005706029,3000.770883032
c026,4,4,6,145190,133768,138161,138161,3600.00898125,3600.914316098
c026,4,4,7,124927,114256,118378,118378,4200.013745354,4201.031729585
c026,4,4,8,103510,93900,97400,97400,4800.014268996,4801.145939517
c026,4,4,9,87759,79433,82442,82442,5400.016133533,5401.256125284
c026,4,4,10,80184,72452,75004,75004,6000.019939005,6001.353685233
c026,4,4,11,66707,59955,62165,62165,6600.021206202,6601.447855119
# search time: 6600.021s
# total time: 33018.637s
