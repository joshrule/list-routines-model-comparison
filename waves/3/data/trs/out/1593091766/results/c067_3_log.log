    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c067_3.json out/1593091766/results/c067_3_best.csv out/1593091766/results/c067_3_predictions.csv out/1593091766/results/c067_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 6, 7, 3, 4]), o: IntList([4, 6, 7, 3, 1]) }
#   Datum { i: IntList([5, 0, 7, 6, 6, 0, 6, 0]), o: IntList([0, 0, 7, 6, 6, 0, 6, 5]) }
#   Datum { i: IntList([9, 1, 2, 8, 2, 4, 8, 2, 4, 1]), o: IntList([1, 1, 2, 8, 2, 4, 8, 2, 4, 9]) }
#   Datum { i: IntList([5, 8, 2, 4, 7, 4]), o: IntList([4, 8, 2, 4, 7, 5]) }
#   Datum { i: IntList([7, 5, 0, 2, 0, 9, 1, 6, 3]), o: IntList([3, 5, 0, 2, 0, 9, 1, 6, 7]) }
#   Datum { i: IntList([0, 0, 2]), o: IntList([2, 0, 0]) }
#   Datum { i: IntList([2, 1, 6, 3, 4, 0, 9, 8, 7, 4]), o: IntList([4, 1, 6, 3, 4, 0, 9, 8, 7, 2]) }
#   Datum { i: IntList([4, 7]), o: IntList([7, 4]) }
#   Datum { i: IntList([7, 6, 8, 0, 5, 1, 6, 9]), o: IntList([9, 6, 8, 0, 5, 1, 6, 7]) }
#   Datum { i: IntList([1, 3, 2, 8, 8, 5, 5]), o: IntList([5, 3, 2, 8, 8, 5, 1]) }
#   Datum { i: IntList([4, 8, 9, 9]), o: IntList([9, 8, 9, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c067,0,3,1,1315096,1132775,1275320,1275320,600.000035382,601.851857432
c067,0,3,2,484982,454265,466603,466603,1200.000816487,1202.853637192
c067,0,3,3,264430,247820,250112,250112,1800.002048677,1803.567974085
c067,0,3,4,138510,128286,128925,128925,2400.003022376,2404.309110365
c067,0,3,5,118152,109862,110338,110338,3000.00559226,3004.962876473
c067,0,3,6,88130,82149,82504,82504,3600.0080071410002,3605.583202481
c067,0,3,7,83109,75599,76005,76005,4200.015148702,4206.254859776
c067,0,3,8,64976,59915,60218,60218,4800.015694371,4806.928269135
c067,0,3,9,62017,56673,56984,56984,5400.023067743,5407.596957689
c067,0,3,10,52397,47728,47984,47984,6000.026718975,6008.18432636
c067,0,3,11,47233,43049,43337,43337,6600.055046034,6608.897341173
# search time: 6600.055s
# total time: 6609.298s
c067,1,3,1,1346724,1168617,1309264,1309264,600.006804928,600.368430814
c067,1,3,2,480684,449898,462304,462304,1200.0109408479998,1200.789988952
c067,1,3,3,266579,250948,253249,253249,1800.0120056619999,1801.096144229
c067,1,3,4,137893,127843,128484,128484,2400.0165728839997,2401.449119103
c067,1,3,5,119009,110140,110514,110514,3000.018415833,3001.779297696
c067,1,3,6,88152,82216,82588,82588,3600.0187914689996,3602.091595701
c067,1,3,7,81181,73409,73709,73709,4200.02656995,4202.406456157
c067,1,3,8,64494,58969,59241,59241,4800.036678754999,4802.841829212
c067,1,3,9,61375,55543,55830,55830,5400.053575147999,5403.208446954
c067,1,3,10,52192,47577,47853,47853,6000.078041235,6003.622973744
c067,1,3,11,44402,39778,40086,40086,6600.103377951999,6604.060874535
# search time: 6600.103s
# total time: 13214.047s
c067,2,3,1,1277962,1048035,1225478,1225478,600.003087814,600.211457335
c067,2,3,2,472386,441613,454598,454598,1200.003845944,1200.479262459
c067,2,3,3,262449,246036,248279,248279,1800.00408243,1800.722879277
c067,2,3,4,137930,127843,128465,128465,2400.005975625,2400.934481006
c067,2,3,5,118905,110255,110666,110666,3000.0091833789998,3001.149839126
c067,2,3,6,88723,82458,82753,82753,3600.010830065,3601.378714039
c067,2,3,7,83159,75733,76158,76158,4200.012831363,4201.54830799
c067,2,3,8,63815,58236,58490,58490,4800.01363415,4801.79184028
c067,2,3,9,61896,56835,57142,57142,5400.014593205,5401.988714765
c067,2,3,10,53218,48309,48607,48607,6000.02062406,6002.150341786
c067,2,3,11,46364,42362,42645,42645,6600.03651099,6602.395001463
# search time: 6600.037s
# total time: 19817.452s
c067,3,3,1,1266446,1037650,1214364,1214364,600.004871509,600.19783056
c067,3,3,2,474162,443501,456205,456205,1200.0053782660002,1200.405601659
c067,3,3,3,266755,251306,253603,253603,1800.0114295990002,1800.592769636
c067,3,3,4,137370,127291,127933,127933,2400.012981379,2400.766949325
c067,3,3,5,118166,109828,110291,110291,3000.015014916,3000.902456109
c067,3,3,6,88415,82311,82568,82568,3600.018979722,3601.050347514
c067,3,3,7,82522,75060,75463,75463,4200.023665293,4201.231021035
c067,3,3,8,64329,58617,58886,58886,4800.024914682,4801.395472308
c067,3,3,9,61949,56757,57150,57150,5400.0283896579995,5401.560290421
c067,3,3,10,53481,48645,48948,48948,6000.037327644999,6001.711033555
c067,3,3,11,46789,42544,42832,42832,6600.048047368999,6601.927772132
# search time: 6600.048s
# total time: 26420.039s
c067,4,3,1,1204213,1023107,1164463,1164463,600.008690956,600.226148528
c067,4,3,2,469484,439291,451742,451742,1200.009887928,1200.421880396
c067,4,3,3,264140,248522,250812,250812,1800.0099165279998,1800.563391192
c067,4,3,4,132470,122307,122833,122833,2400.0127090799997,2400.772123133
c067,4,3,5,118523,109904,110347,110347,3000.0171417129995,3000.905070632
c067,4,3,6,87301,81218,81459,81459,3600.0221099399996,3601.073718555
c067,4,3,7,82547,75153,75592,75592,4200.022592363999,4201.243049724
c067,4,3,8,64094,59206,59512,59512,4800.027070932999,4801.376839002
c067,4,3,9,60725,55035,55326,55326,5400.033846244999,5401.529998551
c067,4,3,10,51790,47179,47434,47434,6000.036556724999,6001.659681382
c067,4,3,11,47583,43368,43641,43641,6600.041756457999,6601.894398239
# search time: 6600.042s
# total time: 33022.307s
