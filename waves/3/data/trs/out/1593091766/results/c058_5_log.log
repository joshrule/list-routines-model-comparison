    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c058_5.json out/1593091766/results/c058_5_best.csv out/1593091766/results/c058_5_predictions.csv out/1593091766/results/c058_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 9, 8, 2, 0, 4, 6, 7]), o: IntList([7]) }
#   Datum { i: IntList([5, 7, 4, 9, 1, 0, 3, 5, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([2, 6, 2, 3, 2, 3, 6]), o: IntList([]) }
#   Datum { i: IntList([9, 8, 9, 8, 9, 8, 5, 0, 2, 5]), o: IntList([0, 2, 5]) }
#   Datum { i: IntList([9, 2, 4, 8, 0, 5, 3, 1, 7]), o: IntList([1, 7]) }
#   Datum { i: IntList([5, 1, 1, 2, 8, 5, 7, 5, 4, 7]), o: IntList([5, 4, 7]) }
#   Datum { i: IntList([9, 0, 5, 1, 1, 0, 5, 1]), o: IntList([1]) }
#   Datum { i: IntList([2, 8, 6, 3, 9, 5, 7, 6, 4]), o: IntList([6, 4]) }
#   Datum { i: IntList([8, 2, 9, 1, 5, 3, 4, 0, 8, 6]), o: IntList([0, 8, 6]) }
#   Datum { i: IntList([3, 0, 1, 4, 8, 2, 7]), o: IntList([]) }
#   Datum { i: IntList([7, 2, 9, 5, 3, 6, 4, 5]), o: IntList([5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c058,0,5,1,1258954,1105505,1227232,1227232,600.000582424,601.956146511
c058,0,5,2,727847,683583,704283,704283,1200.000633875,1203.232827766
c058,0,5,3,477151,442294,453517,453517,1800.003138687,1804.196369972
c058,0,5,4,297658,277622,287285,287285,2400.003359851,2405.314708535
c058,0,5,5,197288,182410,188900,188900,3000.011422147,3006.41905946
c058,0,5,6,155417,142582,148515,148515,3600.0140498759997,3607.604360347
c058,0,5,7,120492,110224,114867,114867,4200.019627785,4208.717997402
c058,0,5,8,103148,94388,98320,98320,4800.020365783,4809.897737649
c058,0,5,9,85967,78350,81815,81815,5400.023840784999,5411.035354676
c058,0,5,10,70125,63587,66615,66615,6000.027649387999,6012.236360075
c058,0,5,11,63126,57196,59865,59865,6600.029850325,6613.492054714
# search time: 6600.030s
# total time: 6613.776s
c058,1,5,1,1220075,999349,1169581,1169581,600.001102059,600.227654672
c058,1,5,2,717021,673419,693789,693789,1200.0012949,1200.724675941
c058,1,5,3,472926,437712,449269,449269,1800.0016877580001,1801.16865573
c058,1,5,4,294638,274781,284376,284376,2400.009715447,2401.742341509
c058,1,5,5,199604,184269,191153,191153,3000.012369196,3002.250501915
c058,1,5,6,157951,145108,150931,150931,3600.013402449,3602.856692124
c058,1,5,7,119906,110069,114468,114468,4200.015356197,4203.436784314
c058,1,5,8,103765,94768,98874,98874,4800.017428751,4804.060894546
c058,1,5,9,84095,76800,80179,80179,5400.021318865,5404.717896531
c058,1,5,10,69933,63552,66500,66500,6000.041916253999,6005.232687534
c058,1,5,11,66180,60078,62928,62928,6600.052171482999,6605.882212447
# search time: 6600.052s
# total time: 13220.100s
c058,2,5,1,1236627,1070880,1201168,1201168,600.000081451,600.263597926
c058,2,5,2,702565,659794,680675,680675,1200.00062806,1200.605886986
c058,2,5,3,475576,439978,451696,451696,1800.00100818,1800.888245183
c058,2,5,4,290000,270258,279804,279804,2400.001901894,2401.256619751
c058,2,5,5,199441,184203,190846,190846,3000.002421699,3001.601492284
c058,2,5,6,153314,140726,146427,146427,3600.003741394,3602.042994575
c058,2,5,7,119881,110018,114417,114417,4200.007380342,4202.423100577
c058,2,5,8,102748,93951,97955,97955,4800.010790486,4802.826837518
c058,2,5,9,84816,77290,80710,80710,5400.019625440999,5403.286029282
c058,2,5,10,70649,64213,67146,67146,6000.025053770999,6003.69473065
c058,2,5,11,65872,59805,62656,62656,6600.028876140999,6604.221894245
# search time: 6600.029s
# total time: 19824.781s
c058,3,5,1,1251436,1088373,1216982,1216982,600.001017591,600.24955907
c058,3,5,2,710221,666950,687376,687376,1200.00102431,1200.528684947
c058,3,5,3,462271,427681,438399,438399,1800.0020766970001,1800.784959034
c058,3,5,4,296676,276532,286065,286065,2400.002691822,2401.064147902
c058,3,5,5,195899,181078,187527,187527,3000.005603813,3001.348434214
c058,3,5,6,153119,140496,146262,146262,3600.008850784,3601.620185975
c058,3,5,7,117635,107751,112230,112230,4200.009123203,4201.989292635
c058,3,5,8,101679,92792,96814,96814,4800.010862024,4802.233444627
c058,3,5,9,84374,76906,80244,80244,5400.019261757,5402.545815156
c058,3,5,10,70138,63714,66697,66697,6000.025210938,6002.866457409
c058,3,5,11,65077,59217,61959,61959,6600.031673709,6603.165694959
# search time: 6600.032s
# total time: 26428.565s
c058,4,5,1,1206598,989885,1157325,1157325,600.001664631,600.159824335
c058,4,5,2,738557,692281,713931,713931,1200.003981153,1200.399716345
c058,4,5,3,460370,426187,436656,436656,1800.0049949640002,1800.611020897
c058,4,5,4,290839,271321,280730,280730,2400.014191503,2400.852481333
c058,4,5,5,195726,181424,187659,187659,3000.014272265,3001.055416102
c058,4,5,6,154423,141863,147663,147663,3600.024282237,3601.326922751
c058,4,5,7,119651,109712,114134,114134,4200.02470372,4201.560669594
c058,4,5,8,102215,93384,97411,97411,4800.025586418999,4801.816129924
c058,4,5,9,85380,77840,81263,81263,5400.034446284999,5402.113473108
c058,4,5,10,68948,62864,65655,65655,6000.037243653999,6002.27543463
c058,4,5,11,63765,57795,60497,60497,6600.047401235,6602.53785104
# search time: 6600.047s
# total time: 33031.375s
