    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c026_5.json out/1593091766/results/c026_5_best.csv out/1593091766/results/c026_5_predictions.csv out/1593091766/results/c026_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 0, 4, 7, 8, 9]), o: IntList([5, 0, 7, 8, 9]) }
#   Datum { i: IntList([4, 2, 2, 5]), o: IntList([4, 2, 5]) }
#   Datum { i: IntList([1, 0, 0, 1, 4, 6, 4]), o: IntList([1, 0, 1, 4, 6, 4]) }
#   Datum { i: IntList([0, 7, 7, 4, 6]), o: IntList([0, 7, 4, 6]) }
#   Datum { i: IntList([5, 3, 9, 8, 6, 4, 7, 2, 1]), o: IntList([5, 3, 8, 6, 4, 7, 2, 1]) }
#   Datum { i: IntList([1, 1, 3, 2, 2, 3, 3]), o: IntList([1, 1, 2, 2, 3, 3]) }
#   Datum { i: IntList([8, 3, 9]), o: IntList([8, 3]) }
#   Datum { i: IntList([2, 2, 4, 3, 9, 0, 6, 7]), o: IntList([2, 2, 3, 9, 0, 6, 7]) }
#   Datum { i: IntList([9, 8, 4, 1, 4, 7, 9, 3, 5, 1]), o: IntList([9, 8, 1, 4, 7, 9, 3, 5, 1]) }
#   Datum { i: IntList([3, 9, 8, 1, 6, 2, 0, 4, 5, 7]), o: IntList([3, 9, 1, 6, 2, 0, 4, 5, 7]) }
#   Datum { i: IntList([8, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c026,0,5,1,1300978,1128390,1263739,1263739,600.001849735,601.913438863
c026,0,5,2,461033,432100,444418,444418,1200.002573578,1202.986522271
c026,0,5,3,356809,331079,343186,343186,1800.003576528,1803.549202573
c026,0,5,4,206867,193335,199327,199327,2400.007798362,2404.351094724
c026,0,5,5,170724,159030,164103,164103,3000.009733083,3005.102421419
c026,0,5,6,132634,121614,125616,125616,3600.011099716,3605.722104634
c026,0,5,7,110695,99380,101665,101665,4200.018885008,4206.424553957
c026,0,5,8,106403,96768,99386,99386,4800.021844446001,4807.094110115
c026,0,5,9,86044,77959,80131,80131,5400.028582373001,5407.672510772
c026,0,5,10,70053,63002,64757,64757,6000.0333467420005,6008.318363017
c026,0,5,11,57724,51948,53326,53326,6600.0454010680005,6609.121308101
# search time: 6600.045s
# total time: 6609.433s
c026,1,5,1,1246083,1021426,1194696,1194696,600.000994542,600.252473101
c026,1,5,2,468664,439134,451553,451553,1200.001556831,1200.670848789
c026,1,5,3,359227,332780,346092,346092,1800.00162181,1800.93200813
c026,1,5,4,207530,193715,199788,199788,2400.008230583,2401.286314006
c026,1,5,5,170057,158362,163436,163436,3000.009896241,3001.564723442
c026,1,5,6,129491,118140,122533,122533,3600.010448334,3601.888201918
c026,1,5,7,108615,97252,99500,99500,4200.012376906,4202.247539081
c026,1,5,8,105466,95848,98596,98596,4800.019472871,4802.596369404
c026,1,5,9,86966,78693,80982,80982,5400.0259872100005,5402.899733054
c026,1,5,10,69538,62669,64390,64390,6000.026649909,6003.180859966
c026,1,5,11,57387,51698,53040,53040,6600.040714669,6603.576170509
# search time: 6600.041s
# total time: 13213.507s
c026,2,5,1,1241693,1064743,1203228,1203228,600.000030099,600.273529228
c026,2,5,2,458748,429920,442002,442002,1200.0007023560001,1200.56057015
c026,2,5,3,356983,330840,344117,344117,1800.0033541300002,1800.758404671
c026,2,5,4,204414,190836,196716,196716,2400.0116723170004,2401.015583576
c026,2,5,5,167729,156107,161172,161172,3000.012761754,3001.275920761
c026,2,5,6,131690,120687,124596,124596,3600.0133957750004,3601.540801151
c026,2,5,7,107416,96245,98349,98349,4200.0231437600005,4201.75662186
c026,2,5,8,103827,93658,96974,96974,4800.024313899001,4801.991024672
c026,2,5,9,86155,77934,80179,80179,5400.028142916,5402.276926167
c026,2,5,10,68847,62080,63686,63686,6000.043077353001,6002.511535664
c026,2,5,11,56915,51246,52530,52530,6600.043662927001,6602.759835591
# search time: 6600.044s
# total time: 19816.708s
c026,3,5,1,1208779,986338,1158347,1158347,600.000044675,600.191441535
c026,3,5,2,480594,450289,462619,462619,1200.0026475650002,1200.419731706
c026,3,5,3,350115,325599,337432,337432,1800.004096173,1800.573618459
c026,3,5,4,201366,188006,193990,193990,2400.005609154,2400.789642839
c026,3,5,5,164352,153180,158144,158144,3000.006847151,3001.002782207
c026,3,5,6,131692,120475,124503,124503,3600.0175826639997,3601.177167917
c026,3,5,7,108880,98004,100199,100199,4200.02400093,4201.402141969
c026,3,5,8,102788,93715,96165,96165,4800.025792316999,4801.578461805
c026,3,5,9,85083,77048,79316,79316,5400.028337004,5401.777940516
c026,3,5,10,69317,62475,64159,64159,6000.031570976999,6002.030148377
c026,3,5,11,58462,52471,53911,53911,6600.034426515,6602.218805066
# search time: 6600.034s
# total time: 26419.394s
c026,4,5,1,1242337,1021204,1191929,1191929,600.00012385,600.193495226
c026,4,5,2,445284,416730,429326,429326,1200.000283005,1200.38538201
c026,4,5,3,347930,323170,335328,335328,1800.000828673,1800.513850431
c026,4,5,4,202450,189284,195195,195195,2400.0008754769997,2400.666942218
c026,4,5,5,165985,154739,159677,159677,3000.005411369,3000.822193
c026,4,5,6,130759,119855,123760,123760,3600.007061923,3600.986902953
c026,4,5,7,109051,98401,100487,100487,4200.010618291,4201.156906917
c026,4,5,8,101978,91627,95294,95294,4800.013641099,4801.312395165
c026,4,5,9,85457,77162,79563,79563,5400.015194587,5401.483978282
c026,4,5,10,69000,62031,63800,63800,6000.024078193001,6001.631478176
c026,4,5,11,57421,51426,52892,52892,6600.030782168001,6601.803829345
# search time: 6600.031s
# total time: 33021.687s
