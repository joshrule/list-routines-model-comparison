    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c060_5.json out/1593091766/results/c060_5_best.csv out/1593091766/results/c060_5_predictions.csv out/1593091766/results/c060_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 5, 5, 5, 2, 2, 6, 5]), o: IntList([6, 5, 6, 5, 5, 5, 4, 2, 6]) }
#   Datum { i: IntList([0, 3, 1, 8, 2, 8, 5, 2, 0, 3]), o: IntList([0, 3, 0, 1, 3, 1, 4, 2, 5]) }
#   Datum { i: IntList([6, 4, 0, 4, 7, 7, 8, 1]), o: IntList([6, 4, 6, 0, 4, 0, 4, 7, 8]) }
#   Datum { i: IntList([7, 0, 4, 6, 1, 8, 3]), o: IntList([7, 0, 7, 4, 0, 4, 4, 1, 3]) }
#   Datum { i: IntList([8, 4, 6, 5, 3, 7, 2, 0, 0, 9]), o: IntList([8, 4, 8, 6, 4, 6, 4, 3, 2]) }
#   Datum { i: IntList([2, 0, 7, 6, 4, 1, 3, 0, 9, 6]), o: IntList([2, 0, 2, 7, 0, 7, 4, 4, 3]) }
#   Datum { i: IntList([7, 7, 9, 9, 9, 9, 9, 7, 1]), o: IntList([7, 7, 7, 9, 7, 9, 4, 9, 9]) }
#   Datum { i: IntList([3, 7, 2, 2, 4, 9, 4, 3]), o: IntList([3, 7, 3, 2, 7, 2, 4, 4, 4]) }
#   Datum { i: IntList([0, 8, 8, 5, 1, 4, 5]), o: IntList([0, 8, 0, 8, 8, 8, 4, 1, 5]) }
#   Datum { i: IntList([2, 1, 3, 9, 0, 6, 6]), o: IntList([2, 1, 2, 3, 1, 3, 4, 0, 6]) }
#   Datum { i: IntList([8, 8, 8, 8, 1, 1, 1, 8, 8, 1]), o: IntList([8, 8, 8, 8, 8, 8, 4, 1, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c060,0,5,1,641673,523401,614606,614606,600.01226302,602.710603295
c060,0,5,2,156266,146324,150486,150486,1200.015093517,1204.767228863
c060,0,5,3,90732,83549,85791,85791,1800.020226659,1806.433586996
c060,0,5,4,59878,54551,55938,55938,2400.023469465,2408.554776193
c060,0,5,5,46244,42288,43359,43359,3000.0342673269997,3010.69295106
c060,0,5,6,36764,33632,34354,34354,3600.04832791,3612.686326726
c060,0,5,7,29946,27225,27900,27900,4200.057199401,4214.840570871
c060,0,5,8,24927,22571,23115,23115,4800.077598348,4816.911168478
c060,0,5,9,21222,19277,19688,19688,5400.084006608,5419.281396356
c060,0,5,10,18754,17112,17494,17494,6000.0899307380005,6021.882107894
c060,0,5,11,17691,16108,16578,16578,6600.119903402,6623.435877463
# search time: 6600.120s
# total time: 6623.617s
c060,1,5,1,673725,589286,655893,655893,600.012539043,600.496469875
c060,1,5,2,160230,150011,154084,154084,1200.0157127749999,1201.301503252
c060,1,5,3,87865,80851,82863,82863,1800.0205361609999,1802.078771331
c060,1,5,4,60186,54965,56269,56269,2400.029233195,2402.901121349
c060,1,5,5,45691,41906,42969,42969,3000.031482219,3003.718918242
c060,1,5,6,36376,33225,33974,33974,3600.033151198,3604.704169082
c060,1,5,7,29607,27029,27601,27601,4200.056380151,4205.75724819
c060,1,5,8,24929,22502,23026,23026,4800.092479184999,4806.83250804
c060,1,5,9,21184,19190,19645,19645,5400.104104843,5407.948684013
c060,1,5,10,18968,17139,17624,17624,6000.110503923,6008.962012171
c060,1,5,11,17333,15682,16211,16211,6600.138195918999,6610.0667032
# search time: 6600.138s
# total time: 13233.969s
c060,2,5,1,644076,546938,622654,622654,600.000239636,600.303160481
c060,2,5,2,154302,144296,148471,148471,1200.000385525,1200.838852355
c060,2,5,3,90767,83492,85734,85734,1800.001385627,1801.294991985
c060,2,5,4,60828,55706,57066,57066,2400.007381953,2401.76025777
c060,2,5,5,46851,42947,43961,43961,3000.017484703,3002.363688975
c060,2,5,6,36613,33543,34276,34276,3600.0404254239997,3602.944984832
c060,2,5,7,29389,26791,27337,27337,4200.049264634999,4203.542813536
c060,2,5,8,25017,22613,23204,23204,4800.053344561999,4804.218933952
c060,2,5,9,21535,19613,20103,20103,5400.062650096,5404.800232116
c060,2,5,10,18818,16992,17462,17462,6000.071247254999,6005.40403738
c060,2,5,11,17208,15659,16138,16138,6600.080336382999,6605.994652562
# search time: 6600.080s
# total time: 19840.336s
c060,3,5,1,635883,519436,609074,609074,600.000568809,600.203840106
c060,3,5,2,154193,144545,148528,148528,1200.00397031,1200.645515377
c060,3,5,3,87514,80386,82523,82523,1800.0113920170002,1801.002019428
c060,3,5,4,60425,55513,56737,56737,2400.0142177390003,2401.378597624
c060,3,5,5,45827,41920,43024,43024,3000.0298232130003,3001.876028666
c060,3,5,6,36358,33179,33974,33974,3600.030840401,3602.28970802
c060,3,5,7,29497,26708,27439,27439,4200.039855979,4202.728157498
c060,3,5,8,23841,21709,22180,22180,4800.045661108,4803.148777073
c060,3,5,9,21463,19393,19908,19908,5400.069148958,5403.749779313
c060,3,5,10,19163,17391,17890,17890,6000.122358569,6004.501667996
c060,3,5,11,16952,15527,15935,15935,6600.137575046,6604.857725813
# search time: 6600.138s
# total time: 26445.460s
c060,4,5,1,635611,544649,615740,615740,600.003541286,600.236790052
c060,4,5,2,154126,144327,148376,148376,1200.0052109829999,1200.573057643
c060,4,5,3,87450,80440,82499,82499,1800.00617535,1800.90833645
c060,4,5,4,60379,55435,56614,56614,2400.008652479,2401.239422631
c060,4,5,5,46488,42474,43562,43562,3000.0345569829997,3001.659212529
c060,4,5,6,36275,33080,33814,33814,3600.0366508509996,3602.080683833
c060,4,5,7,32152,29186,29864,29864,4200.0431930429995,4202.289548277
c060,4,5,8,42986,39063,39911,39911,4800.059784511999,4802.662616702
c060,4,5,9,37632,34040,34926,34926,5400.063097731999,5403.091740428
c060,4,5,10,33389,30362,31055,31055,6000.0804302219985,6003.4756414
c060,4,5,11,29332,26550,27204,27204,6600.0982128629985,6603.904174014
# search time: 6600.098s
# total time: 33049.662s
