    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c073_2.json out/1593091766/results/c073_2_best.csv out/1593091766/results/c073_2_predictions.csv out/1593091766/results/c073_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2, 1, 3, 1]), o: IntList([3, 4, 4, 7, 6]) }
#   Datum { i: IntList([2, 5, 5]), o: IntList([3, 7, 8]) }
#   Datum { i: IntList([1]), o: IntList([2]) }
#   Datum { i: IntList([1, 3, 3, 5, 3, 0, 0, 1, 0]), o: IntList([2, 5, 6, 9, 8, 6, 7, 9, 9]) }
#   Datum { i: IntList([6, 7, 6, 4, 4, 0]), o: IntList([7, 9, 9, 8, 9, 6]) }
#   Datum { i: IntList([1, 1, 1, 1, 0, 1, 0, 1, 0]), o: IntList([2, 3, 4, 5, 5, 7, 7, 9, 9]) }
#   Datum { i: IntList([8, 0, 1, 1, 1, 0, 0, 0]), o: IntList([9, 2, 4, 5, 6, 6, 7, 8]) }
#   Datum { i: IntList([4, 4, 4, 4]), o: IntList([5, 6, 7, 8]) }
#   Datum { i: IntList([3, 3]), o: IntList([4, 5]) }
#   Datum { i: IntList([8, 5, 1, 3, 0, 2, 0]), o: IntList([9, 7, 4, 7, 5, 8, 7]) }
#   Datum { i: IntList([5, 5, 5, 2, 2, 2]), o: IntList([6, 7, 8, 6, 7, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c073,0,2,1,686897,590332,665796,665796,600.000316404,602.932542146
c073,0,2,2,270683,253195,260920,260920,1200.000935495,1204.748744095
c073,0,2,3,189862,174065,176537,176537,1800.003263091,1806.449975206
c073,0,2,4,182586,163664,165051,165051,2400.006634726,2407.642103438
c073,0,2,5,103288,91130,91506,91506,3000.0109415399997,3008.636917435
c073,0,2,6,76382,67858,68165,68165,3600.012089285,3609.526558595
c073,0,2,7,91766,79057,79394,79394,4200.014620625,4210.418172327
c073,0,2,8,72272,61942,62146,62146,4800.016498154,4811.457505523
c073,0,2,9,66480,56904,57104,57104,5400.01940165,5412.308494146
c073,0,2,10,64573,55945,56247,56247,6000.036752278,6013.245033423
c073,0,2,11,52623,45751,45949,45949,6600.038116029999,6614.041060647
# search time: 6600.038s
# total time: 6614.385s
c073,1,2,1,1164833,1011557,1131893,1131893,600.000055789,600.406828123
c073,1,2,2,425248,398388,411034,411034,1200.001034642,1200.902315797
c073,1,2,3,309032,282537,286472,286472,1800.0015456209999,1801.455047026
c073,1,2,4,298504,267824,270235,270235,2400.002100678,2401.843950626
c073,1,2,5,171383,151605,152344,152344,3000.003588525,3002.195998895
c073,1,2,6,130296,115254,115758,115758,3600.01026065,3602.522783533
c073,1,2,7,88652,76680,76885,76885,4200.012168248,4202.867711063
c073,1,2,8,73167,62295,62593,62593,4800.023188721,4803.257975933
c073,1,2,9,65862,55525,55782,55782,5400.025228933,5403.583511323
c073,1,2,10,63504,55151,55426,55426,6000.0318867490005,6003.921609397
c073,1,2,11,52086,45140,45339,45339,6600.056273252,6604.304085869
# search time: 6600.056s
# total time: 13219.350s
c073,2,2,1,1073314,920042,1040151,1040151,600.000133995,600.302017229
c073,2,2,2,426934,399816,412357,412357,1200.003388278,1200.604761739
c073,2,2,3,307568,281118,284983,284983,1800.0070122420002,1800.961454336
c073,2,2,4,298458,267206,269597,269597,2400.007467443,2401.19603151
c073,2,2,5,170696,150977,151680,151680,3000.009345419,3001.420558107
c073,2,2,6,130274,115245,115824,115824,3600.009904052,3601.619873899
c073,2,2,7,82310,70147,70525,70525,4200.011868862,4201.854343041
c073,2,2,8,71459,61389,61627,61627,4800.0215263089995,4802.103128898
c073,2,2,9,67470,57980,58286,58286,5400.022519529999,5402.305903876
c073,2,2,10,63686,55150,55428,55428,6000.029669534999,6002.571009585
c073,2,2,11,53598,46774,47038,47038,6600.056778549999,6602.818956466
# search time: 6600.057s
# total time: 19822.816s
c073,3,2,1,1110136,908360,1063494,1063494,600.000031771,600.182174684
c073,3,2,2,422413,395903,408136,408136,1200.000795317,1200.402757546
c073,3,2,3,311504,285700,289768,289768,1800.0016020150001,1800.65376624
c073,3,2,4,298053,267226,269693,269693,2400.001939567,2400.862355747
c073,3,2,5,168771,148922,149503,149503,3000.002427511,3001.008368497
c073,3,2,6,130867,116037,116354,116354,3600.003804445,3601.155071759
c073,3,2,7,90679,78741,78986,78986,4200.00784544,4201.293873981
c073,3,2,8,73380,62651,62896,62896,4800.008967708,4801.490129922
c073,3,2,9,67811,57858,58162,58162,5400.016595966,5401.693824044
c073,3,2,10,64672,55830,56133,56133,6000.01856673,6001.897950835
c073,3,2,11,53926,46923,47180,47180,6600.0216076,6602.097415124
# search time: 6600.022s
# total time: 26425.587s
c073,4,2,1,1155705,1010446,1124888,1124888,600.000124095,600.267985579
c073,4,2,2,420098,393721,406036,406036,1200.0002326140002,1200.469851021
c073,4,2,3,308565,283056,287039,287039,1800.001313316,1800.673943573
c073,4,2,4,296991,265962,268350,268350,2400.002197003,2400.829507772
c073,4,2,5,175518,155067,155770,155770,3000.004518823,3000.951033469
c073,4,2,6,135005,119150,119621,119621,3600.008697486,3601.08496951
c073,4,2,7,94735,81700,81995,81995,4200.01238948,4201.249353395
c073,4,2,8,76742,65380,65697,65697,4800.014302402,4801.440635092
c073,4,2,9,70296,60062,60367,60367,5400.01574844,5401.600510988
c073,4,2,10,67090,58020,58334,58334,6000.019216528,6001.746419981
c073,4,2,11,55371,47965,48210,48210,6600.0413338729995,6601.905757435
# search time: 6600.041s
# total time: 33028.185s
