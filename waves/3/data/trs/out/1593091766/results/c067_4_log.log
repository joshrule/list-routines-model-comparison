    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c067_4.json out/1593091766/results/c067_4_best.csv out/1593091766/results/c067_4_predictions.csv out/1593091766/results/c067_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 7]), o: IntList([7, 4]) }
#   Datum { i: IntList([7, 5, 0, 2, 0, 9, 1, 6, 3]), o: IntList([3, 5, 0, 2, 0, 9, 1, 6, 7]) }
#   Datum { i: IntList([7, 6, 8, 0, 5, 1, 6, 9]), o: IntList([9, 6, 8, 0, 5, 1, 6, 7]) }
#   Datum { i: IntList([0, 0, 2]), o: IntList([2, 0, 0]) }
#   Datum { i: IntList([9, 1, 2, 8, 2, 4, 8, 2, 4, 1]), o: IntList([1, 1, 2, 8, 2, 4, 8, 2, 4, 9]) }
#   Datum { i: IntList([2, 1, 6, 3, 4, 0, 9, 8, 7, 4]), o: IntList([4, 1, 6, 3, 4, 0, 9, 8, 7, 2]) }
#   Datum { i: IntList([5, 0, 7, 6, 6, 0, 6, 0]), o: IntList([0, 0, 7, 6, 6, 0, 6, 5]) }
#   Datum { i: IntList([4, 8, 9, 9]), o: IntList([9, 8, 9, 4]) }
#   Datum { i: IntList([1, 6, 7, 3, 4]), o: IntList([4, 6, 7, 3, 1]) }
#   Datum { i: IntList([1, 3, 2, 8, 8, 5, 5]), o: IntList([5, 3, 2, 8, 8, 5, 1]) }
#   Datum { i: IntList([5, 8, 2, 4, 7, 4]), o: IntList([4, 8, 2, 4, 7, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c067,0,4,1,829717,677926,794781,794781,600.0053212,601.728331255
c067,0,4,2,635301,599674,616967,616967,1200.006501971,1202.909191815
c067,0,4,3,226800,201598,203527,203527,1800.007274672,1803.929350152
c067,0,4,4,144501,132343,132879,132879,2400.011641178,2404.848773073
c067,0,4,5,130191,119241,119682,119682,3000.012811137,3005.716066455
c067,0,4,6,88922,79702,80041,80041,3600.018136083,3606.553313883
c067,0,4,7,67355,61122,61448,61448,4200.020031068,4207.386031582
c067,0,4,8,54660,49768,50116,50116,4800.032598122,4808.22761222
c067,0,4,9,53122,48739,49046,49046,5400.033145378,5408.912994452
c067,0,4,10,48550,44581,44862,44862,6000.037629979,6009.804464747
c067,0,4,11,41175,37438,37741,37741,6600.073853205,6610.775627072
# search time: 6600.074s
# total time: 6611.092s
c067,1,4,1,1209174,1050533,1175371,1175371,600.000303126,600.355665683
c067,1,4,2,645783,607799,626237,626237,1200.000365631,1200.757461591
c067,1,4,3,227002,201595,203491,203491,1800.0008921170001,1801.140006116
c067,1,4,4,143816,131194,131580,131580,2400.001774539,2401.530638604
c067,1,4,5,131031,119597,119912,119912,3000.004321983,3001.855875798
c067,1,4,6,88891,79569,79945,79945,3600.009874105,3602.252950006
c067,1,4,7,66438,59393,59683,59683,4200.012346822,4202.669544334
c067,1,4,8,53587,48775,49101,49101,4800.017855607,4803.061601873
c067,1,4,9,51940,47170,47467,47467,5400.020531689999,5403.435953259
c067,1,4,10,48766,44892,45188,45188,6000.0230236239995,6003.760109542
c067,1,4,11,42052,38408,38713,38713,6600.031630478,6604.202073043
# search time: 6600.032s
# total time: 13215.967s
c067,2,4,1,1134325,973855,1099503,1099503,600.007929077,600.290975541
c067,2,4,2,642950,605793,623851,623851,1200.010361985,1200.586785401
c067,2,4,3,233244,208527,210456,210456,1800.0125215379999,1800.835926739
c067,2,4,4,142529,130513,131008,131008,2400.015164075,2401.073192261
c067,2,4,5,129150,118009,118319,118319,3000.0159195,3001.264189847
c067,2,4,6,87431,78373,78685,78685,3600.021165852,3601.476408882
c067,2,4,7,66283,60075,60370,60370,4200.024611605,4201.706055516
c067,2,4,8,56279,51178,51564,51564,4800.02940536,4801.963196646
c067,2,4,9,30634,28231,28429,28429,5400.060891052,5402.23750474
c067,2,4,10,26813,24824,24968,24968,6000.06292628,6002.496099147
c067,2,4,11,24263,22277,22516,22516,6600.087866312,6602.746955991
# search time: 6600.088s
# total time: 19819.251s
c067,3,4,1,743003,634021,719214,719214,600.009499877,600.242807609
c067,3,4,2,414654,389106,400900,400900,1200.009957313,1200.501196186
c067,3,4,3,135688,120974,122079,122079,1800.0129648850002,1800.740543638
c067,3,4,4,84644,77361,77608,77608,2400.018406016,2400.962759726
c067,3,4,5,77071,70134,70435,70435,3000.02091135,3001.16475095
c067,3,4,6,52095,46772,47066,47066,3600.02186527,3601.306312533
c067,3,4,7,37635,34545,34756,34756,4200.031390497,4201.522670067
c067,3,4,8,31670,28909,29148,29148,4800.055883419,4801.800303285
c067,3,4,9,29949,27667,27838,27838,5400.0644254809995,5402.018054168
c067,3,4,10,28102,25969,26125,26125,6000.071937545999,6002.217595955
c067,3,4,11,24164,22204,22425,22425,6600.080948825999,6602.49502952
# search time: 6600.081s
# total time: 26422.408s
c067,4,4,1,743892,643791,722093,722093,600.000019129,600.23232293
c067,4,4,2,410140,384696,396658,396658,1200.0004358299998,1200.461467998
c067,4,4,3,136631,122071,123182,123182,1800.0009871809998,1800.637299849
c067,4,4,4,85176,77697,78041,78041,2400.0017536039995,2400.820361826
c067,4,4,5,76663,69717,69984,69984,3000.0093183819995,3000.98489171
c067,4,4,6,51978,46675,46920,46920,3600.0320012119996,3601.197287515
c067,4,4,7,37655,34508,34713,34713,4200.044593891999,4201.388171675
c067,4,4,8,31757,28924,29159,29159,4800.055308370999,4801.585381569
c067,4,4,9,29472,27036,27226,27226,5400.060183841999,5401.824207337
c067,4,4,10,27756,25820,25987,25987,6000.061413700999,6001.987336783
c067,4,4,11,24431,22419,22656,22656,6600.061838765999,6602.239776227
# search time: 6600.062s
# total time: 33025.105s
