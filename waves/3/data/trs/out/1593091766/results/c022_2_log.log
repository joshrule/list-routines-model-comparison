    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c022_2.json out/1593091766/results/c022_2_best.csv out/1593091766/results/c022_2_predictions.csv out/1593091766/results/c022_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 9, 0, 9, 1]), o: IntList([1, 5, 9, 0, 9, 1]) }
#   Datum { i: IntList([6, 4, 9, 5, 2, 7, 8, 2, 4]), o: IntList([6, 5, 4, 9, 5, 2, 7, 8, 2, 4]) }
#   Datum { i: IntList([6, 5, 3, 3]), o: IntList([6, 5, 5, 3, 3]) }
#   Datum { i: IntList([6, 0, 2, 0, 4, 8, 1, 7, 5, 3]), o: IntList([6, 5, 0, 2, 0, 4, 8, 1, 7, 5, 3]) }
#   Datum { i: IntList([7, 4, 3, 1, 2, 1, 8]), o: IntList([7, 5, 4, 3, 1, 2, 1, 8]) }
#   Datum { i: IntList([8, 4, 4, 4, 8, 4]), o: IntList([8, 5, 4, 4, 4, 8, 4]) }
#   Datum { i: IntList([1, 7, 3, 0, 1, 2, 1, 3, 0, 3]), o: IntList([1, 5, 7, 3, 0, 1, 2, 1, 3, 0, 3]) }
#   Datum { i: IntList([9, 8, 6, 1, 5, 1, 4, 4, 3, 2]), o: IntList([9, 5, 8, 6, 1, 5, 1, 4, 4, 3, 2]) }
#   Datum { i: IntList([0, 2, 6]), o: IntList([0, 5, 2, 6]) }
#   Datum { i: IntList([7, 6, 1, 9, 6, 8, 3, 6]), o: IntList([7, 5, 6, 1, 9, 6, 8, 3, 6]) }
#   Datum { i: IntList([1, 1]), o: IntList([1, 5, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c022,0,2,1,1106862,906194,1060913,1060913,600.001980331,601.897400666
c022,0,2,2,370753,348645,357905,357905,1200.004755332,1203.088037649
c022,0,2,3,187544,172059,176866,176866,1800.007987731,1803.934409421
c022,0,2,4,138180,126861,131108,131108,2400.008106318,2404.846063821
c022,0,2,5,89392,81134,84013,84013,3000.016197322,3005.84632681
c022,0,2,6,74052,67199,69597,69597,3600.019539813,3606.718452898
c022,0,2,7,63780,57183,59670,59670,4200.026770598,4208.30426449
c022,0,2,8,50831,46239,47527,47527,4800.031578623,4809.238695282
c022,0,2,9,42657,38485,39880,39880,5400.043515813,5410.069619512
c022,0,2,10,41216,36975,38192,38192,6000.0521601440005,6010.968604889
c022,0,2,11,34649,31324,32238,32238,6600.072072085,6611.745769652
# search time: 6600.072s
# total time: 6612.049s
c022,1,2,1,1122617,1015282,1102112,1102112,600.000859592,600.390168769
c022,1,2,2,376354,352902,362933,362933,1200.001692869,1200.826752954
c022,1,2,3,182738,167176,171855,171855,1800.002955538,1801.186013967
c022,1,2,4,137379,126620,130394,130394,2400.003630931,2401.548622649
c022,1,2,5,88893,80881,83530,83530,3000.0112496499996,3001.986773419
c022,1,2,6,73643,66896,69166,69166,3600.0143290889996,3602.392514262
c022,1,2,7,64462,58443,60219,60219,4200.016195724999,4202.861880383
c022,1,2,8,52164,47384,48739,48739,4800.020422621999,4803.244043319
c022,1,2,9,41677,37689,38985,38985,5400.038751192999,5403.591731786
c022,1,2,10,41447,37137,38308,38308,6000.052110254999,6004.033054556
c022,1,2,11,34864,31103,32119,32119,6600.0577614349995,6604.352685264
# search time: 6600.058s
# total time: 13216.914s
c022,2,2,1,1080166,916359,1044034,1044034,600.001208807,600.282252362
c022,2,2,2,382174,358254,368273,368273,1200.00172096,1200.592644064
c022,2,2,3,187084,171409,176221,176221,1800.0028325110002,1800.828308416
c022,2,2,4,140465,129004,133112,133112,2400.005010613,2401.090022789
c022,2,2,5,89071,81346,83817,83817,3000.007111882,3001.39862486
c022,2,2,6,74498,67627,69717,69717,3600.0086467640003,3601.679502999
c022,2,2,7,64091,58230,59966,59966,4200.010518227,4201.92985047
c022,2,2,8,51897,47286,48547,48547,4800.014300967,4802.183145602
c022,2,2,9,43803,39866,41206,41206,5400.015499242,5402.437062991
c022,2,2,10,42001,37631,38849,38849,6000.021088729,6002.707896072
c022,2,2,11,36386,32901,34014,34014,6600.022734538001,6603.034765441
# search time: 6600.023s
# total time: 19820.661s
c022,3,2,1,1082425,883826,1037473,1037473,600.000336552,600.163123997
c022,3,2,2,371059,348287,358015,358015,1200.000808213,1200.395966408
c022,3,2,3,181983,166704,171269,171269,1800.002463926,1800.633587732
c022,3,2,4,135861,125222,128926,128926,2400.003137387,2400.826980449
c022,3,2,5,88177,80458,82982,82982,3000.005039731,3001.093699478
c022,3,2,6,73703,67306,69191,69191,3600.0149687010003,3601.342008283
c022,3,2,7,63469,57571,59518,59518,4200.015123687001,4201.606076188
c022,3,2,8,51450,46838,48212,48212,4800.064794865,4801.865492076
c022,3,2,9,42819,38747,40119,40119,5400.06488353,5402.119404944
c022,3,2,10,40625,36429,37677,37677,6000.074905369,6002.283867242
c022,3,2,11,35678,32405,33392,33392,6600.079230257999,6602.450687954
# search time: 6600.079s
# total time: 26423.638s
c022,4,2,1,1124537,1010862,1102340,1102340,600.001225039,600.300787127
c022,4,2,2,377168,354005,363664,363664,1200.00156801,1200.572628049
c022,4,2,3,180963,165612,170170,170170,1800.002325256,1800.720610977
c022,4,2,4,135600,124723,128823,128823,2400.005217325,2400.890115889
c022,4,2,5,87973,80113,82705,82705,3000.016262942,3001.127590309
c022,4,2,6,72009,65414,67525,67525,3600.021441526,3601.312017642
c022,4,2,7,64253,58502,60204,60204,4200.026935711,4201.514607134
c022,4,2,8,51057,46460,47719,47719,4800.039825896,4801.715730837
c022,4,2,9,43571,39354,40785,40785,5400.039911231001,5401.845775352
c022,4,2,10,41116,36645,37940,37940,6000.049763504001,6002.027800717
c022,4,2,11,35840,32345,33396,33396,6600.069363974001,6602.146419931
# search time: 6600.069s
# total time: 33026.092s
