    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.19s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c001_2.json out/1593091766/results/c001_2_best.csv out/1593091766/results/c001_2_predictions.csv out/1593091766/results/c001_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 4, 3, 2]), o: IntList([3]) }
#   Datum { i: IntList([9, 6, 9, 8, 6]), o: IntList([9]) }
#   Datum { i: IntList([0, 0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([8, 1, 8]), o: IntList([8]) }
#   Datum { i: IntList([5, 7, 5, 7, 5]), o: IntList([5]) }
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([7, 9, 3, 4]), o: IntList([3]) }
#   Datum { i: IntList([7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([5, 3, 6]), o: IntList([6]) }
#   Datum { i: IntList([2, 2, 2, 8]), o: IntList([2]) }
#   Datum { i: IntList([0, 6, 4, 4, 0, 6, 4]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c001,0,2,1,1309228,1070144,1254598,1254598,600.006107907,601.784423142
c001,0,2,2,827896,781542,803930,803930,1200.010595285,1202.84893488
c001,0,2,3,554965,516630,536968,536968,1800.0121103779998,1803.443961544
c001,0,2,4,545913,496743,521873,521873,2400.0124661319996,2404.109453251
c001,0,2,5,428991,398464,414277,414277,3000.0163176419996,3004.594443996
c001,0,2,6,377875,350396,364659,364659,3600.0165155529994,3605.073319691
c001,0,2,7,326900,302473,315370,315370,4200.020361257999,4205.529440164
c001,0,2,8,294851,271652,283866,283866,4800.021658661999,4805.937838666
c001,0,2,9,215213,196873,206336,206336,5400.028958955999,5406.537963146
c001,0,2,10,199256,182243,191586,191586,6000.0299521689985,6007.057456918
c001,0,2,11,178272,162883,171226,171226,6600.030719965998,6607.636335223
# search time: 6600.031s
# total time: 6608.079s
c001,1,2,1,1332866,1158094,1295366,1295366,600.001823978,600.338490818
c001,1,2,2,810936,765583,787571,787571,1200.003458657,1200.70231685
c001,1,2,3,550090,513217,533152,533152,1800.003765759,1800.961403119
c001,1,2,4,530454,483316,506863,506863,2400.015319505,2401.281308111
c001,1,2,5,424033,393058,409356,409356,3000.015434156,3001.531252937
c001,1,2,6,360112,333723,347866,347866,3600.015817904,3601.781557077
c001,1,2,7,322977,298693,311422,311422,4200.015927066,4202.039021157
c001,1,2,8,289833,266487,278643,278643,4800.01630613,4802.279301656
c001,1,2,9,212919,194540,204132,204132,5400.017033908,5402.562251393
c001,1,2,10,197891,181145,190257,190257,6000.018487636,6002.88154789
c001,1,2,11,175511,160102,168427,168427,6600.021583943,6603.192032066
# search time: 6600.022s
# total time: 13211.922s
c001,2,2,1,1289166,1059676,1236829,1236829,600.000035532,600.205370327
c001,2,2,2,809907,765926,787235,787235,1200.0024627849998,1200.484744667
c001,2,2,3,563180,525340,545199,545199,1800.003274325,1800.688746144
c001,2,2,4,538471,490430,514308,514308,2400.003773675,2400.917165026
c001,2,2,5,420954,390476,406538,406538,3000.003860895,3001.097460948
c001,2,2,6,367950,340634,354812,354812,3600.005323708,3601.285722343
c001,2,2,7,326969,301723,314863,314863,4200.0126275170005,4201.470523503
c001,2,2,8,292354,268893,281002,281002,4800.017434338,4801.681327684
c001,2,2,9,215436,197135,206557,206557,5400.017515159,5401.916762494
c001,2,2,10,199547,182221,191601,191601,6000.018958099,6002.121603144
c001,2,2,11,178527,162621,171374,171374,6600.019684216,6602.312977381
# search time: 6600.020s
# total time: 19815.088s
c001,3,2,1,1243869,1014557,1191950,1191950,600.001047327,600.174169419
c001,3,2,2,805211,760874,782510,782510,1200.00161537,1200.422184824
c001,3,2,3,548381,511923,531680,531680,1800.0027514150001,1800.594454434
c001,3,2,4,537130,489430,513199,513199,2400.002835311,2400.777523657
c001,3,2,5,423545,392663,409114,409114,3000.009752106,3000.93200814
c001,3,2,6,366220,338902,353238,353238,3600.010554062,3601.085393931
c001,3,2,7,324906,299887,313074,313074,4200.010886664,4201.241694345
c001,3,2,8,291116,267822,279908,279908,4800.012260873,4801.38240334
c001,3,2,9,214420,196007,205687,205687,5400.014297033,5401.558016542
c001,3,2,10,196703,179885,189016,189016,6000.014522902,6001.706361706
c001,3,2,11,177149,161780,170197,170197,6600.017199536,6601.853688585
# search time: 6600.017s
# total time: 26417.577s
c001,4,2,1,1280627,1112578,1244522,1244522,600.005569695,600.288221864
c001,4,2,2,822582,774082,797247,797247,1200.0072813699999,1200.504369701
c001,4,2,3,543948,508063,527448,527448,1800.012308671,1800.671457049
c001,4,2,4,535224,487542,511266,511266,2400.01325249,2400.850026488
c001,4,2,5,425793,394170,410552,410552,3000.014049389,3001.025706583
c001,4,2,6,367592,339939,354125,354125,3600.0186628829997,3601.171806178
c001,4,2,7,326068,301491,314482,314482,4200.022944034,4201.313979012
c001,4,2,8,288746,265946,277840,277840,4800.036271375,4801.454888077
c001,4,2,9,211702,193748,203109,203109,5400.038829613,5401.611648397
c001,4,2,10,199105,181849,191226,191226,6000.040181675,6001.754806914
c001,4,2,11,177118,161505,170019,170019,6600.04031456,6601.923887576
# search time: 6600.040s
# total time: 33020.149s
