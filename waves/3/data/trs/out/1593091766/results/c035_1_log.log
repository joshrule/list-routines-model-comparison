    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c035_1.json out/1593091766/results/c035_1_best.csv out/1593091766/results/c035_1_predictions.csv out/1593091766/results/c035_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 6, 7, 8]), o: IntList([4, 7, 6, 8]) }
#   Datum { i: IntList([7, 8, 6, 5, 1, 3, 2]), o: IntList([7, 6, 8, 5, 1, 3, 2]) }
#   Datum { i: IntList([7, 3, 3, 3, 1, 9, 2, 7]), o: IntList([3, 3, 3, 7, 1, 9, 2, 7]) }
#   Datum { i: IntList([9, 9, 6, 2, 0, 2, 6, 0, 4]), o: IntList([2, 9, 6, 9, 0, 2, 6, 0, 4]) }
#   Datum { i: IntList([9, 4, 6, 4, 4, 9]), o: IntList([4, 4, 6, 9, 4, 9]) }
#   Datum { i: IntList([0, 8, 2, 8, 6, 8, 0, 2, 0, 2]), o: IntList([8, 8, 2, 0, 6, 8, 0, 2, 0, 2]) }
#   Datum { i: IntList([6, 5, 4, 4]), o: IntList([6, 4, 5, 4]) }
#   Datum { i: IntList([9, 6, 9, 5, 3]), o: IntList([9, 9, 6, 5, 3]) }
#   Datum { i: IntList([7, 6, 7, 6, 6, 7]), o: IntList([6, 6, 7, 7, 6, 7]) }
#   Datum { i: IntList([3, 1, 3, 3, 1, 1, 1]), o: IntList([3, 3, 1, 3, 1, 1, 1]) }
#   Datum { i: IntList([9, 0, 7, 6, 4, 1, 1, 6, 4]), o: IntList([6, 0, 7, 9, 4, 1, 1, 6, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c035,0,1,1,1305274,1068276,1251118,1251118,600.000991484,601.728373416
c035,0,1,2,552424,515997,532021,532021,1200.001535458,1202.658629182
c035,0,1,3,294249,272467,282396,282396,1800.0029657670002,1803.165452327
c035,0,1,4,173721,161345,162361,162361,2400.006416613,2403.901282261
c035,0,1,5,120937,112074,112633,112633,3000.010291315,3004.530034312
c035,0,1,6,98474,89607,90144,90144,3600.012991255,3605.278222643
c035,0,1,7,73604,65596,65799,65799,4200.023195037,4205.989778473
c035,0,1,8,70434,63352,63773,63773,4800.027198383999,4806.622077933
c035,0,1,9,55699,48550,48894,48894,5400.076943664999,5407.565261853
c035,0,1,10,56437,51352,51650,51650,6000.085646931999,6008.247047614
c035,0,1,11,48326,43788,43997,43997,6600.0864015769985,6608.972031614
# search time: 6600.086s
# total time: 6609.383s
c035,1,1,1,1287881,1052982,1234488,1234488,600.005333008,600.280438251
c035,1,1,2,529307,496332,511078,511078,1200.005847489,1200.678359721
c035,1,1,3,289022,267469,277731,277731,1800.012371539,1800.932523442
c035,1,1,4,174787,162374,163407,163407,2400.013863876,2401.264450316
c035,1,1,5,119648,110710,111402,111402,3000.01594621,3001.59834391
c035,1,1,6,98445,89644,90162,90162,3600.018223581,3601.994399583
c035,1,1,7,73838,66197,66501,66501,4200.030968934,4202.35268326
c035,1,1,8,70368,63246,63636,63636,4800.034452108001,4802.680473066
c035,1,1,9,62765,56400,56767,56767,5400.036605589001,5402.987969366
c035,1,1,10,55361,50340,50657,50657,6000.050889919001,6003.334522656
c035,1,1,11,48017,44217,44510,44510,6600.063476747001,6603.73919915
# search time: 6600.063s
# total time: 13213.866s
c035,2,1,1,1300290,1064024,1246344,1246344,600.001760925,600.217802313
c035,2,1,2,554139,519414,534211,534211,1200.002998674,1200.510826126
c035,2,1,3,288001,266566,276745,276745,1800.003525446,1800.690011489
c035,2,1,4,175725,162788,163843,163843,2400.0078727249997,2400.943875249
c035,2,1,5,119019,110250,110889,110889,3000.0092989639998,3001.141745165
c035,2,1,6,98458,89706,90233,90233,3600.009993975,3601.431113007
c035,2,1,7,73875,66327,66586,66586,4200.017034824,4201.656432704
c035,2,1,8,70175,63557,64015,64015,4800.0197632399995,4801.840794186
c035,2,1,9,61820,55716,56088,56088,5400.026468452,5402.096464385
c035,2,1,10,55429,50546,50849,50849,6000.0285776499995,6002.387943272
c035,2,1,11,47095,42368,42565,42565,6600.048358157,6602.669543048
# search time: 6600.048s
# total time: 19817.280s
c035,3,1,1,1288589,1055366,1235447,1235447,600.000368434,600.206318417
c035,3,1,2,554611,519131,534142,534142,1200.0007443,1200.450381741
c035,3,1,3,284465,263169,273391,273391,1800.0018125259999,1800.598894636
c035,3,1,4,174037,160993,162026,162026,2400.002464049,2400.793219232
c035,3,1,5,119969,111096,111701,111701,3000.0041821550003,3000.964964072
c035,3,1,6,98142,89395,89984,89984,3600.0084821040004,3601.142664215
c035,3,1,7,72840,65268,65554,65554,4200.009261792,4201.314956832
c035,3,1,8,69656,62791,63232,63232,4800.011022762,4801.499048427
c035,3,1,9,63001,55518,55814,55814,5400.037020743,5401.725994691
c035,3,1,10,54763,48786,49030,49030,6000.040203785,6001.952092613
c035,3,1,11,47697,43325,43557,43557,6600.040335107,6602.119054475
# search time: 6600.040s
# total time: 26420.141s
c035,4,1,1,1267709,1040486,1215921,1215921,600.001323101,600.185419458
c035,4,1,2,546895,512890,527385,527385,1200.0035343650002,1200.390660359
c035,4,1,3,288654,267237,277294,277294,1800.0048511610003,1800.516144442
c035,4,1,4,172395,159990,161075,161075,2400.010376386,2400.676976701
c035,4,1,5,119689,110478,111108,111108,3000.0151744620002,3000.815158189
c035,4,1,6,98335,89605,90137,90137,3600.0169444000003,3600.957159737
c035,4,1,7,72350,64345,64502,64502,4200.034271721001,4201.092816575
c035,4,1,8,70038,62880,63239,63239,4800.040261553,4801.215494356
c035,4,1,9,63244,55691,55995,55995,5400.061720594,5401.36476099
c035,4,1,10,54745,49766,50099,50099,6000.0683967019995,6001.513494188
c035,4,1,11,46630,41985,42147,42147,6600.075687545,6601.713861618
# search time: 6600.076s
# total time: 33022.606s
