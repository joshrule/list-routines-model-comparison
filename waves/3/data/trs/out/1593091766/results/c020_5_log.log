    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c020_5.json out/1593091766/results/c020_5_best.csv out/1593091766/results/c020_5_predictions.csv out/1593091766/results/c020_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 5]), o: IntList([5, 5]) }
#   Datum { i: IntList([2, 2, 0, 2, 0, 2, 0, 0, 0]), o: IntList([0, 2, 0, 2, 0, 2, 0, 0, 0]) }
#   Datum { i: IntList([7, 7, 7, 9]), o: IntList([9, 7, 7, 9]) }
#   Datum { i: IntList([1, 3, 1, 4, 1, 1, 1, 6, 4, 0]), o: IntList([0, 3, 1, 4, 1, 1, 1, 6, 4, 0]) }
#   Datum { i: IntList([2, 2, 5, 5, 2, 5, 8]), o: IntList([8, 2, 5, 5, 2, 5, 8]) }
#   Datum { i: IntList([8, 7, 6, 8, 9, 4, 3]), o: IntList([3, 7, 6, 8, 9, 4, 3]) }
#   Datum { i: IntList([9, 4, 3, 7, 8]), o: IntList([8, 4, 3, 7, 8]) }
#   Datum { i: IntList([5, 9, 6]), o: IntList([6, 9, 6]) }
#   Datum { i: IntList([8, 9, 7, 2, 7, 0]), o: IntList([0, 9, 7, 2, 7, 0]) }
#   Datum { i: IntList([0, 5, 3, 5, 7, 7, 9, 9]), o: IntList([9, 5, 3, 5, 7, 7, 9, 9]) }
#   Datum { i: IntList([9, 9, 2, 3, 3, 3, 2, 1, 1]), o: IntList([1, 9, 2, 3, 3, 3, 2, 1, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c020,0,5,1,992119,812683,950876,950876,600.00108364,601.785594144
c020,0,5,2,647192,609202,627762,627762,1200.00368727,1202.797872723
c020,0,5,3,243679,217255,219390,219390,1800.004216472,1803.698243888
c020,0,5,4,189693,172604,173274,173274,2400.004427941,2404.443730164
c020,0,5,5,134550,123752,124342,124342,3000.00759568,3004.995521788
c020,0,5,6,97761,87972,88266,88266,3600.034905837,3605.696361288
c020,0,5,7,82976,73405,73863,73863,4200.037635183,4206.248726236
c020,0,5,8,73592,64642,64978,64978,4800.042436523,4806.882108685
c020,0,5,9,68833,61553,61882,61882,5400.057349349,5407.494178662
c020,0,5,10,59317,52681,52998,52998,6000.065255767,6008.181372536
c020,0,5,11,46757,41234,41441,41441,6600.068077356,6608.937865145
# search time: 6600.068s
# total time: 6609.303s
c020,1,5,1,1152335,988182,1116774,1116774,600.000037959,600.36015202
c020,1,5,2,661390,621569,640766,640766,1200.000189994,1200.737886896
c020,1,5,3,250458,225669,228179,228179,1800.002127926,1801.095493979
c020,1,5,4,173925,157817,158697,158697,2400.002289274,2401.464286658
c020,1,5,5,134309,123488,124058,124058,3000.0050721589996,3001.693208915
c020,1,5,6,90331,80438,80810,80810,3600.0116606999995,3602.011880737
c020,1,5,7,82072,72599,72972,72972,4200.013071136,4202.255309886
c020,1,5,8,73106,65158,65518,65518,4800.0164528,4802.565065363
c020,1,5,9,68415,60453,60712,60712,5400.0220464349995,5402.883637679
c020,1,5,10,59245,53587,53912,53912,6000.046091153999,6003.200318327
c020,1,5,11,47110,41867,42120,42120,6600.055494167,6603.700889723
# search time: 6600.055s
# total time: 13213.669s
c020,2,5,1,1139907,934065,1092914,1092914,600.000176775,600.203970763
c020,2,5,2,646668,609003,627510,627510,1200.0008282009999,1200.483024136
c020,2,5,3,243240,217398,219463,219463,1800.001285765,1800.723701938
c020,2,5,4,187895,170980,171626,171626,2400.001939089,2400.938075052
c020,2,5,5,134345,123258,123831,123831,3000.0048142590003,3001.127086848
c020,2,5,6,97636,87976,88346,88346,3600.0149581440005,3601.317220897
c020,2,5,7,82571,72999,73413,73413,4200.018550512001,4201.543878511
c020,2,5,8,72773,64068,64356,64356,4800.023512278,4801.773974962
c020,2,5,9,65584,58871,59244,59244,5400.027411959,5401.99809545
c020,2,5,10,58931,53272,53616,53616,6000.034126267001,6002.171430223
c020,2,5,11,47439,42258,42492,42492,6600.041989586,6602.438342214
# search time: 6600.042s
# total time: 19816.766s
c020,3,5,1,1141339,935765,1094415,1094415,600.000841345,600.17706665
c020,3,5,2,643836,606694,624760,624760,1200.001287126,1200.408424252
c020,3,5,3,234615,208502,210453,210453,1800.002141131,1800.614821466
c020,3,5,4,188237,171548,172242,172242,2400.006214878,2400.78854445
c020,3,5,5,126564,116160,116746,116746,3000.0094299559996,3001.061379627
c020,3,5,6,56549,50488,50707,50707,3600.010392248,3601.259238877
c020,3,5,7,47412,42476,42770,42770,4200.027569713,4201.427485459
c020,3,5,8,41945,37176,37340,37340,4800.038100773,4801.63961383
c020,3,5,9,38899,35509,35718,35718,5400.048086336,5401.82916005
c020,3,5,10,34171,31311,31534,31534,6000.066440302,6002.037129473
c020,3,5,11,26411,23322,23475,23475,6600.077958643,6602.25645862
# search time: 6600.078s
# total time: 26419.885s
c020,4,5,1,719460,626212,700161,700161,600.011829441,600.254115918
c020,4,5,2,398871,375346,386565,386565,1200.015666295,1200.473943065
c020,4,5,3,145379,129798,131057,131057,1800.020443328,1800.65224172
c020,4,5,4,113224,103287,103669,103669,2400.022627634,2400.824579459
c020,4,5,5,79675,72787,73148,73148,3000.030348681,3000.964095993
c020,4,5,6,57171,51259,51516,51516,3600.0309968109996,3601.049891677
c020,4,5,7,47005,41382,41595,41595,4200.038152798,4201.213707674
c020,4,5,8,41733,37042,37236,37236,4800.044779491,4801.412595732
c020,4,5,9,38708,35290,35513,35513,5400.050580372999,5401.548004736
c020,4,5,10,33265,30157,30349,30349,6000.052975143999,6001.69784847
c020,4,5,11,26894,23867,24028,24028,6600.055368311999,6601.91089055
# search time: 6600.055s
# total time: 33022.077s
