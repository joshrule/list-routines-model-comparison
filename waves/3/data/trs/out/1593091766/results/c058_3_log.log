    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c058_3.json out/1593091766/results/c058_3_best.csv out/1593091766/results/c058_3_predictions.csv out/1593091766/results/c058_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 2, 9, 5, 3, 6, 4, 5]), o: IntList([5]) }
#   Datum { i: IntList([9, 8, 9, 8, 9, 8, 5, 0, 2, 5]), o: IntList([0, 2, 5]) }
#   Datum { i: IntList([3, 0, 1, 4, 8, 2, 7]), o: IntList([]) }
#   Datum { i: IntList([2, 8, 6, 3, 9, 5, 7, 6, 4]), o: IntList([6, 4]) }
#   Datum { i: IntList([9, 2, 4, 8, 0, 5, 3, 1, 7]), o: IntList([1, 7]) }
#   Datum { i: IntList([9, 0, 5, 1, 1, 0, 5, 1]), o: IntList([1]) }
#   Datum { i: IntList([1, 9, 8, 2, 0, 4, 6, 7]), o: IntList([7]) }
#   Datum { i: IntList([2, 6, 2, 3, 2, 3, 6]), o: IntList([]) }
#   Datum { i: IntList([8, 2, 9, 1, 5, 3, 4, 0, 8, 6]), o: IntList([0, 8, 6]) }
#   Datum { i: IntList([5, 1, 1, 2, 8, 5, 7, 5, 4, 7]), o: IntList([5, 4, 7]) }
#   Datum { i: IntList([5, 7, 4, 9, 1, 0, 3, 5, 0]), o: IntList([5, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c058,0,3,1,664358,567833,643155,643155,600.001224534,602.955140012
c058,0,3,2,405217,378872,391334,391334,1200.002458876,1205.432465204
c058,0,3,3,233080,214916,219182,219182,1800.002939488,1806.998508156
c058,0,3,4,146972,135845,140844,140844,2400.00558562,2409.419143852
c058,0,3,5,104051,95765,99324,99324,3000.0067519990002,3011.476677852
c058,0,3,6,78584,71813,74749,74749,3600.018634641,3613.555382072
c058,0,3,7,111032,101690,105886,105886,4200.031576726,4215.65981848
c058,0,3,8,94522,86340,89999,89999,4800.032629444,4817.767370995
c058,0,3,9,84598,76941,80460,80460,5400.034667612,5419.996612147
c058,0,3,10,70714,64198,67211,67211,6000.039650207,6022.020787598
c058,0,3,11,57458,52243,54693,54693,6600.060735555,6624.085691
# search time: 6600.061s
# total time: 6624.305s
c058,1,3,1,1062693,869561,1018636,1018636,600.010837546,600.285768807
c058,1,3,2,633252,594709,612927,612927,1200.0111466429998,1200.98434882
c058,1,3,3,379884,349952,357012,357012,1800.0129184959999,1801.540036447
c058,1,3,4,239048,221943,229890,229890,2400.029301302,2402.256502029
c058,1,3,5,170721,158298,163612,163612,3000.029840536,3003.050019892
c058,1,3,6,132803,121979,126911,126911,3600.030913652,3603.692764132
c058,1,3,7,110995,101711,105998,105998,4200.037260776,4204.448185747
c058,1,3,8,93661,85527,89196,89196,4800.045524352,4805.377745105
c058,1,3,9,83145,75809,79183,79183,5400.055358479,5406.151031241
c058,1,3,10,67624,61525,64416,64416,6000.057951723,6006.927059321
c058,1,3,11,56856,51776,54137,54137,6600.059420031,6607.590426584
# search time: 6600.059s
# total time: 13232.303s
c058,2,3,1,1047590,859088,1004701,1004701,600.000030815,600.200834422
c058,2,3,2,651174,609811,629062,629062,1200.004284859,1200.622294256
c058,2,3,3,377205,347249,354471,354471,1800.005781667,1800.966515971
c058,2,3,4,239777,222902,230570,230570,2400.006016789,2401.412177178
c058,2,3,5,171862,158691,164419,164419,3000.010027152,3001.860261597
c058,2,3,6,132195,121580,126303,126303,3600.010318519,3602.342984054
c058,2,3,7,111659,102154,106555,106555,4200.017276613,4202.867640647
c058,2,3,8,92293,84466,88055,88055,4800.017990347,4803.27236504
c058,2,3,9,81833,74507,77743,77743,5400.020745721999,5403.718537362
c058,2,3,10,67820,61671,64494,64494,6000.023182235999,6004.207160439
c058,2,3,11,58484,52958,55581,55581,6600.027987551999,6604.881036372
# search time: 6600.028s
# total time: 19837.602s
c058,3,3,1,1065874,871243,1021371,1021371,600.008480778,600.179571717
c058,3,3,2,621215,584126,601981,601981,1200.008599748,1200.497091662
c058,3,3,3,378219,348426,355548,355548,1800.009819415,1800.743339818
c058,3,3,4,242151,224938,232842,232842,2400.012840965,2401.086382138
c058,3,3,5,175754,162582,168500,168500,3000.0140429860003,3001.467821491
c058,3,3,6,135881,125117,129967,129967,3600.01454043,3601.860973792
c058,3,3,7,70139,64117,66807,66807,4200.019482255,4202.306700356
c058,3,3,8,53656,48911,51058,51058,4800.037794457,4802.638541178
c058,3,3,9,47561,43177,45217,45217,5400.044997654,5403.06191246
c058,3,3,10,38342,34934,36562,36562,6000.0579039290005,6003.461552337
c058,3,3,11,31800,28963,30313,30313,6600.092144639,6603.82481593
# search time: 6600.092s
# total time: 26441.822s
c058,4,3,1,635213,519498,608539,608539,600.003334828,600.152427812
c058,4,3,2,404800,377959,390447,390447,1200.005276969,1200.439073488
c058,4,3,3,224670,206989,211199,211199,1800.006007445,1800.682152571
c058,4,3,4,143999,133051,137969,137969,2400.008702651,2400.991576901
c058,4,3,5,100653,92919,96161,96161,3000.042016367,3001.371413597
c058,4,3,6,77790,71238,74088,74088,3600.043155042,3601.746804223
c058,4,3,7,63121,57729,60115,60115,4200.0493340739995,4202.060613392
c058,4,3,8,51732,47344,49277,49277,4800.051310405999,4802.44027849
c058,4,3,9,47477,43117,45117,45117,5400.060992038999,5402.755548159
c058,4,3,10,37513,34137,35719,35719,6000.090824936999,6003.061168711
c058,4,3,11,32274,29392,30774,30774,6600.102207872998,6603.226427121
# search time: 6600.102s
# total time: 33045.375s
