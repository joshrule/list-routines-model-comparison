    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c020_3.json out/1593091766/results/c020_3_best.csv out/1593091766/results/c020_3_predictions.csv out/1593091766/results/c020_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 9, 6]), o: IntList([6, 9, 6]) }
#   Datum { i: IntList([9, 4, 3, 7, 8]), o: IntList([8, 4, 3, 7, 8]) }
#   Datum { i: IntList([8, 7, 6, 8, 9, 4, 3]), o: IntList([3, 7, 6, 8, 9, 4, 3]) }
#   Datum { i: IntList([8, 5]), o: IntList([5, 5]) }
#   Datum { i: IntList([2, 2, 0, 2, 0, 2, 0, 0, 0]), o: IntList([0, 2, 0, 2, 0, 2, 0, 0, 0]) }
#   Datum { i: IntList([9, 9, 2, 3, 3, 3, 2, 1, 1]), o: IntList([1, 9, 2, 3, 3, 3, 2, 1, 1]) }
#   Datum { i: IntList([0, 5, 3, 5, 7, 7, 9, 9]), o: IntList([9, 5, 3, 5, 7, 7, 9, 9]) }
#   Datum { i: IntList([8, 9, 7, 2, 7, 0]), o: IntList([0, 9, 7, 2, 7, 0]) }
#   Datum { i: IntList([7, 7, 7, 9]), o: IntList([9, 7, 7, 9]) }
#   Datum { i: IntList([2, 2, 5, 5, 2, 5, 8]), o: IntList([8, 2, 5, 5, 2, 5, 8]) }
#   Datum { i: IntList([1, 3, 1, 4, 1, 1, 1, 6, 4, 0]), o: IntList([0, 3, 1, 4, 1, 1, 1, 6, 4, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c020,0,3,1,1323348,1088872,1270219,1270219,600.012790847,601.786478863
c020,0,3,2,614169,579352,595313,595313,1200.014790138,1202.734156373
c020,0,3,3,376074,353021,357394,357394,1800.015017567,1803.488426863
c020,0,3,4,224543,209876,210660,210660,2400.018247956,2404.199444493
c020,0,3,5,211890,195142,195991,195991,3000.032362691,3004.744255412
c020,0,3,6,141377,128454,129098,129098,3600.0332210779998,3605.223284002
c020,0,3,7,102357,92071,92555,92555,4200.034058763,4205.772007173
c020,0,3,8,77614,68855,69314,69314,4800.036477346,4806.522548781
c020,0,3,9,69177,61477,61911,61911,5400.043834851999,5407.102857154
c020,0,3,10,62984,55192,55459,55459,6000.052755493999,6007.829089758
c020,0,3,11,55221,49502,49829,49829,6600.059681172999,6608.451131524
# search time: 6600.060s
# total time: 6608.850s
c020,1,3,1,1347222,1180299,1311921,1311921,600.001322432,600.338447082
c020,1,3,2,648179,608756,626645,626645,1200.002611483,1200.716392466
c020,1,3,3,378410,355892,360312,360312,1800.0038413480002,1801.042355046
c020,1,3,4,234856,220572,222203,222203,2400.003877436,2401.320910203
c020,1,3,5,206728,190151,190998,190998,3000.005850256,3001.57076934
c020,1,3,6,140599,127807,128307,128307,3600.0098451559998,3601.836928901
c020,1,3,7,103003,92298,92816,92816,4200.021964844,4202.063389546
c020,1,3,8,76464,67548,67948,67948,4800.022567809,4802.360890789
c020,1,3,9,68213,60492,60922,60922,5400.025898181,5402.602580615
c020,1,3,10,63218,56606,57036,57036,6000.030630543,6002.89311142
c020,1,3,11,54647,49037,49354,49354,6600.0319231720005,6603.259778987
# search time: 6600.032s
# total time: 13212.825s
c020,2,3,1,1264978,1031874,1212241,1212241,600.001973815,600.186992783
c020,2,3,2,653950,614304,632090,632090,1200.0023632319999,1200.448216582
c020,2,3,3,366737,343763,347029,347029,1800.003326171,1800.69563142
c020,2,3,4,229487,215005,216082,216082,2400.005903107,2400.903345799
c020,2,3,5,209384,192711,193552,193552,3000.007183014,3001.075978474
c020,2,3,6,141745,128784,129435,129435,3600.009142945,3601.233347886
c020,2,3,7,101868,91460,91904,91904,4200.014563894,4201.403827073
c020,2,3,8,77251,68665,69085,69085,4800.036900289,4801.624560059
c020,2,3,9,68271,60808,61237,61237,5400.039312951,5401.812673369
c020,2,3,10,62898,56500,56912,56912,6000.055071345,6001.974601949
c020,2,3,11,54937,49425,49710,49710,6600.059274727,6602.146616411
# search time: 6600.059s
# total time: 19815.989s
c020,3,3,1,1275707,1094011,1236087,1236087,600.002802719,600.246645564
c020,3,3,2,646976,607046,624925,624925,1200.003078673,1200.471709899
c020,3,3,3,375797,353338,357848,357848,1800.0032750719997,1800.655428422
c020,3,3,4,233639,219628,221120,221120,2400.0051469249997,2400.811429268
c020,3,3,5,204267,187846,188729,188729,3000.007058938,3000.976871531
c020,3,3,6,141098,128200,128798,128798,3600.0092388939997,3601.120624314
c020,3,3,7,102523,91777,92319,92319,4200.020602658,4201.263784422
c020,3,3,8,76307,67495,67900,67900,4800.021732379,4801.45490103
c020,3,3,9,59654,52439,52854,52854,5400.025250514001,5401.673608383
c020,3,3,10,63070,56366,56757,56757,6000.039489843,6001.804330009
c020,3,3,11,54315,47624,47856,47856,6600.0478103390005,6602.049660459
# search time: 6600.048s
# total time: 26418.435s
c020,4,3,1,1295235,1064150,1242720,1242720,600.001235562,600.187028991
c020,4,3,2,623400,585789,603296,603296,1200.005270888,1200.385586204
c020,4,3,3,362835,339760,342955,342955,1800.007015267,1800.544177122
c020,4,3,4,227934,213468,214520,214520,2400.009266142,2400.694452152
c020,4,3,5,207447,190880,191684,191684,3000.011113687,3000.810787639
c020,4,3,6,139793,127035,127649,127649,3600.013585457,3600.928876402
c020,4,3,7,103372,92407,92953,92953,4200.018518392,4201.041789159
c020,4,3,8,78818,70526,71003,71003,4800.027255848,4801.185450354
c020,4,3,9,67571,59900,60316,60316,5400.028052012,5401.348364947
c020,4,3,10,63384,56962,57343,57343,6000.030084629,6001.480975839
c020,4,3,11,53527,46439,46651,46651,6600.038376476,6601.656897419
# search time: 6600.038s
# total time: 33020.930s
