    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c072_3.json out/1593091766/results/c072_3_best.csv out/1593091766/results/c072_3_predictions.csv out/1593091766/results/c072_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([9]), o: IntList([9, 9]) }
#   Datum { i: IntList([1, 6, 1, 8, 8, 2]), o: IntList([1, 1, 6, 6, 1, 1, 8, 8, 8, 8, 2, 2]) }
#   Datum { i: IntList([3, 3]), o: IntList([3, 3, 3, 3]) }
#   Datum { i: IntList([5, 5, 5, 2, 5, 2]), o: IntList([5, 5, 5, 5, 5, 5, 2, 2, 5, 5, 2, 2]) }
#   Datum { i: IntList([2, 2, 7, 7, 7, 9]), o: IntList([2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 9, 9]) }
#   Datum { i: IntList([6, 9, 2, 8, 0, 5]), o: IntList([6, 6, 9, 9, 2, 2, 8, 8, 0, 0, 5, 5]) }
#   Datum { i: IntList([5, 6, 4, 8, 9, 7, 3]), o: IntList([5, 5, 6, 6, 4, 4, 8, 8, 9, 9, 7, 7, 3, 3]) }
#   Datum { i: IntList([1, 3, 3, 7]), o: IntList([1, 1, 3, 3, 3, 3, 7, 7]) }
#   Datum { i: IntList([4, 6, 8, 8, 4]), o: IntList([4, 4, 6, 6, 8, 8, 8, 8, 4, 4]) }
#   Datum { i: IntList([0, 0, 0, 0, 0, 0]), o: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c072,0,3,1,721947,590685,691606,691606,600.025680654,602.78035789
c072,0,3,2,249639,231671,238300,238300,1200.0314354739999,1204.562179921
c072,0,3,3,213866,195711,199178,199178,1800.031600023,1805.754799769
c072,0,3,4,92187,81590,82064,82064,2400.032910653,2406.942032834
c072,0,3,5,79548,70710,71089,71089,3000.034515822,3007.901713551
c072,0,3,6,52900,45913,46111,46111,3600.0366904039997,3609.019655981
c072,0,3,7,46300,40844,41198,41198,4200.053873533,4209.694106563
c072,0,3,8,27867,24555,24775,24775,4800.064253271,4810.931931456
c072,0,3,9,25372,22672,22861,22861,5400.075362056999,5411.900029005
c072,0,3,10,38837,34372,34649,34649,6000.0893314859995,6012.652686402
c072,0,3,11,37786,33699,33890,33890,6600.106511888999,6613.435981017
# search time: 6600.107s
# total time: 6613.662s
c072,1,3,1,1161001,1006499,1127637,1127637,600.000852367,600.442835028
c072,1,3,2,391665,365430,375396,375396,1200.012889747,1200.950704961
c072,1,3,3,350039,320991,326477,326477,1800.013511512,1801.378297815
c072,1,3,4,154165,135902,136654,136654,2400.01571952,2401.764190555
c072,1,3,5,131134,117011,117646,117646,3000.018735371,3002.12616239
c072,1,3,6,88054,77352,77628,77628,3600.0234212749997,3602.551216773
c072,1,3,7,79342,70162,70863,70863,4200.029783594,4202.843266583
c072,1,3,8,49283,42433,42760,42760,4800.0318072850005,4803.324923289
c072,1,3,9,43559,38288,38562,38562,5400.0423909,5403.765329
c072,1,3,10,40409,35754,36046,36046,6000.048300342,6004.140640576
c072,1,3,11,37564,33206,33408,33408,6600.060881358,6604.462098517
# search time: 6600.061s
# total time: 13218.711s
c072,2,3,1,1192973,1033177,1158437,1158437,600.000080085,600.300745322
c072,2,3,2,397532,370563,380756,380756,1200.00061404,1200.61381582
c072,2,3,3,341162,312100,317961,317961,1800.009722717,1800.89173328
c072,2,3,4,151708,133910,134657,134657,2400.010094513,2401.133074118
c072,2,3,5,129286,115159,115737,115737,3000.0133397319996,3001.382202374
c072,2,3,6,86409,75851,76096,76096,3600.0145457049994,3601.618420228
c072,2,3,7,78447,69400,70038,70038,4200.023872264999,4201.784587057
c072,2,3,8,44741,38833,39237,39237,4800.032304832999,4802.112250434
c072,2,3,9,43973,39004,39292,39292,5400.034858554999,5402.294370145
c072,2,3,10,39401,34747,35005,35005,6000.036806330999,6002.501114028
c072,2,3,11,37130,32875,33053,33053,6600.049706532999,6602.718125555
# search time: 6600.050s
# total time: 19821.809s
c072,3,3,1,1176255,1015042,1141436,1141436,600.001091735,600.256630528
c072,3,3,2,398173,371207,381312,381312,1200.00173175,1200.512314046
c072,3,3,3,346746,317644,323271,323271,1800.003829549,1800.720470388
c072,3,3,4,151870,133684,134433,134433,2400.005225506,2400.925676647
c072,3,3,5,129735,115636,116277,116277,3000.008323345,3001.105741149
c072,3,3,6,87208,76763,77002,77002,3600.014449243,3601.298024439
c072,3,3,7,79711,70745,71351,71351,4200.019711627,4201.444382944
c072,3,3,8,50164,43834,44216,44216,4800.027294799,4801.715184553
c072,3,3,9,43024,37958,38225,38225,5400.030129998,5401.905215837
c072,3,3,10,39045,34552,34812,34812,6000.046902315,6002.138477223
c072,3,3,11,37440,33246,33446,33446,6600.062218169,6602.317108238
# search time: 6600.062s
# total time: 26424.540s
c072,4,3,1,1095487,929555,1059065,1059065,600.00026142,600.215308965
c072,4,3,2,388542,361978,372302,372302,1200.0012086460001,1200.419892338
c072,4,3,3,349360,319927,325591,325591,1800.0016925730001,1800.599645541
c072,4,3,4,147223,129604,130299,130299,2400.005343874,2400.776224188
c072,4,3,5,130846,116435,117041,117041,3000.024027558,3000.951006635
c072,4,3,6,86293,74796,75287,75287,3600.036352561,3601.092808048
c072,4,3,7,78950,69840,70559,70559,4200.042808995,4201.207970698
c072,4,3,8,49156,42462,42801,42801,4800.050836987,4801.377710062
c072,4,3,9,44162,39325,39630,39630,5400.112434443,5401.603633327
c072,4,3,10,40337,35672,35944,35944,6000.122944995,6001.75350627
c072,4,3,11,37708,33816,34020,34020,6600.132069445,6601.877881542
# search time: 6600.132s
# total time: 33027.050s
