    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c068_1.json out/1593091766/results/c068_1_best.csv out/1593091766/results/c068_1_predictions.csv out/1593091766/results/c068_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c068,0,1,1,1340423,1159146,1301371,1301371,600.001596433,601.904259832
c068,0,1,2,316448,295646,304137,304137,1200.00297531,1202.808858644
c068,0,1,3,150232,137862,138968,138968,1800.004786277,1803.690188107
c068,0,1,4,125945,109839,110498,110498,2400.006905741,2404.586531197
c068,0,1,5,118188,103085,103495,103495,3000.007695316,3005.247052043
c068,0,1,6,88809,75662,75967,75967,3600.009924593,3605.848506167
c068,0,1,7,62155,51373,51603,51603,4200.022647569,4206.716796767
c068,0,1,8,64721,54188,54467,54467,4800.039136736,4807.184298956
c068,0,1,9,56374,47389,47646,47646,5400.0418601989995,5407.73343511
c068,0,1,10,44428,36995,37233,37233,6000.045457454,6008.193277871
c068,0,1,11,39023,31960,32229,32229,6600.066316673,6608.685382278
# search time: 6600.066s
# total time: 6609.047s
c068,1,1,1,1228753,1042183,1187961,1187961,600.004300163,600.320031151
c068,1,1,2,308979,288532,297049,297049,1200.005356002,1200.713283197
c068,1,1,3,148670,136517,137660,137660,1800.0111389960002,1801.147585586
c068,1,1,4,125285,109353,110020,110020,2400.012679929,2401.540031276
c068,1,1,5,113071,98406,98714,98714,3000.013110378,3001.85575808
c068,1,1,6,88349,75079,75398,75398,3600.033271099,3602.162174556
c068,1,1,7,62978,52802,53115,53115,4200.03507036,4202.5339718
c068,1,1,8,62875,52061,52264,52264,4800.046176232,4802.836791353
c068,1,1,9,56054,47551,47877,47877,5400.052987217,5403.113498453
c068,1,1,10,43283,35641,35818,35818,6000.088849508,6003.462992529
c068,1,1,11,38406,31781,32060,32060,6600.0974093879995,6603.792307205
# search time: 6600.097s
# total time: 13213.588s
c068,2,1,1,1279490,1047159,1226704,1226704,600.000115241,600.236848113
c068,2,1,2,310382,289517,298204,298204,1200.0042072669999,1200.508894447
c068,2,1,3,148936,136606,137703,137703,1800.0050297879998,1800.796800913
c068,2,1,4,125071,109226,109896,109896,2400.00984544,2401.084360563
c068,2,1,5,116373,101800,102226,102226,3000.015987041,3001.318741363
c068,2,1,6,87989,74816,75151,75151,3600.0168534,3601.53781269
c068,2,1,7,62634,52673,52977,52977,4200.027673736,4201.825318047
c068,2,1,8,64055,53453,53743,53743,4800.034664874,4801.978815102
c068,2,1,9,56463,48002,48333,48333,5400.041332694,5402.195457746
c068,2,1,10,43986,36370,36598,36598,6000.051073969,6002.382378308
c068,2,1,11,38257,31545,31779,31779,6600.061082155,6602.620809696
# search time: 6600.061s
# total time: 19816.732s
c068,3,1,1,1333124,1183249,1303414,1303414,600.003441259,600.349583714
c068,3,1,2,309508,289117,297664,297664,1200.003512576,1200.55088806
c068,3,1,3,145960,133167,134286,134286,1800.0036496120001,1800.799731411
c068,3,1,4,127565,112165,112866,112866,2400.0044774810003,2400.989423413
c068,3,1,5,113369,98861,99206,99206,3000.0275400500004,3001.180776986
c068,3,1,6,76502,64229,64568,64568,3600.0275526880005,3601.365601951
c068,3,1,7,62246,52460,52799,52799,4200.035435545001,4201.569851938
c068,3,1,8,63743,52720,52954,52954,4800.042718265001,4801.731432595
c068,3,1,9,56424,47958,48309,48309,5400.060896678001,5401.898105022
c068,3,1,10,43974,36254,36455,36455,6000.105802213001,6002.137687364
c068,3,1,11,38733,31642,31928,31928,6600.141146947001,6602.309130519
# search time: 6600.141s
# total time: 26419.657s
c068,4,1,1,1313148,1142447,1277056,1277056,600.000274064,600.286545458
c068,4,1,2,319257,298028,306438,306438,1200.0011680789999,1200.467749716
c068,4,1,3,150188,137934,138989,138989,1800.001600336,1800.639577536
c068,4,1,4,125632,110083,110720,110720,2400.0057842799997,2400.85169985
c068,4,1,5,115104,100350,100742,100742,3000.010185666,3000.988979354
c068,4,1,6,85394,72101,72277,72277,3600.012682423,3601.139616452
c068,4,1,7,62063,52259,52559,52559,4200.021091483,4201.284030694
c068,4,1,8,63171,52797,53064,53064,4800.02306822,4801.408290823
c068,4,1,9,55847,47229,47523,47523,5400.045795017,5401.563607859
c068,4,1,10,43240,35529,35712,35712,6000.050033806,6001.696886251
c068,4,1,11,38941,31968,32225,32225,6600.05112557,6601.787851575
# search time: 6600.051s
# total time: 33022.296s
