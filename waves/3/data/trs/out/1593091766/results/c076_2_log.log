    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c076_2.json out/1593091766/results/c076_2_best.csv out/1593091766/results/c076_2_predictions.csv out/1593091766/results/c076_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 2, 3]), o: IntList([3]) }
#   Datum { i: IntList([0, 9, 5, 7, 3, 8, 6, 7]), o: IntList([6, 4, 5, 3, 4]) }
#   Datum { i: IntList([6, 0, 9, 7, 1, 0]), o: IntList([3, 6, 4]) }
#   Datum { i: IntList([0, 9, 4, 7]), o: IntList([6, 4]) }
#   Datum { i: IntList([7, 8, 4, 2, 5, 0, 1, 9, 7]), o: IntList([4, 5, 6, 4]) }
#   Datum { i: IntList([8, 0]), o: IntList([5]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8, 8, 8, 8]), o: IntList([5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([7, 7, 0, 7, 6, 9, 2, 2, 7, 2]), o: IntList([4, 4, 4, 3, 6, 4]) }
#   Datum { i: IntList([6, 2, 2, 2, 6, 3, 3, 6]), o: IntList([3, 3, 3]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 9, 9, 7]), o: IntList([6, 6, 4, 4, 4, 6, 6, 4]) }
#   Datum { i: IntList([4, 1, 4, 4, 1, 4]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c076,0,2,1,1277430,1082868,1234661,1234661,600.002503055,601.790343074
c076,0,2,2,868346,817826,842247,842247,1200.007057335,1202.742375641
c076,0,2,3,337292,312283,315338,315338,1800.0074517399999,1803.534728404
c076,0,2,4,273738,257250,259326,259326,2400.0090894639998,2404.229227303
c076,0,2,5,231757,216074,217138,217138,3000.0098644789996,3004.86108804
c076,0,2,6,166199,155256,155947,155947,3600.0099018289993,3605.510095885
c076,0,2,7,144784,137552,142205,142205,4200.012439691,4206.036900526
c076,0,2,8,89819,84926,88232,88232,4800.024114395999,4806.593556349
c076,0,2,9,71103,67235,70161,70161,5400.030223147,5407.185618988
c076,0,2,10,61358,57470,60042,60042,6000.036659437,6007.81388627
c076,0,2,11,49394,46300,48492,48492,6600.044780785,6608.501935239
# search time: 6600.045s
# total time: 6609.008s
c076,1,2,1,1159037,1003933,1125630,1125630,600.004891507,600.364742566
c076,1,2,2,745818,703708,724105,724105,1200.009009978,1200.758445488
c076,1,2,3,359287,331167,334390,334390,1800.010222023,1801.130031411
c076,1,2,4,278242,261376,263539,263539,2400.011496512,2401.490423784
c076,1,2,5,239789,223718,224820,224820,3000.0118679710004,3001.80682965
c076,1,2,6,169898,158860,159718,159718,3600.0305896470004,3602.165257635
c076,1,2,7,147629,140135,145194,145194,4200.037005063001,4202.487383888
c076,1,2,8,93915,89187,92641,92641,4800.0378555550005,4802.784840691
c076,1,2,9,72450,68432,71294,71294,5400.041494860001,5403.078629379
c076,1,2,10,62343,58433,60972,60972,6000.046817787001,6003.45623165
c076,1,2,11,49475,46238,48540,48540,6600.047324113,6603.8004095
# search time: 6600.047s
# total time: 13213.536s
c076,2,2,1,1163040,952723,1115215,1115215,600.000138233,600.202091929
c076,2,2,2,799900,752732,775185,775185,1200.000293814,1200.513648052
c076,2,2,3,376969,348679,352201,352201,1800.0071260610002,1800.769225798
c076,2,2,4,281332,263976,266152,266152,2400.0071947220003,2401.016713853
c076,2,2,5,239351,223383,224491,224491,3000.007667657,3001.237972426
c076,2,2,6,170082,158806,159683,159683,3600.0085774460003,3601.4944413
c076,2,2,7,149855,142446,147443,147443,4200.013893333,4201.691228313
c076,2,2,8,93040,88099,91477,91477,4800.020679999,4801.900857925
c076,2,2,9,72740,68711,71529,71529,5400.021032114,5402.076792561
c076,2,2,10,63314,59317,61946,61946,6000.02327674,6002.337096306
c076,2,2,11,49293,46097,48317,48317,6600.026247179,6602.570073834
# search time: 6600.026s
# total time: 19816.618s
c076,3,2,1,1211142,1044271,1175098,1175098,600.004179412,600.270239988
c076,3,2,2,777833,731965,754166,754166,1200.004209579,1200.533641197
c076,3,2,3,401536,370061,373755,373755,1800.004784884,1800.737116053
c076,3,2,4,311961,294090,296497,296497,2400.004884294,2400.909626821
c076,3,2,5,262180,245249,246627,246627,3000.007026139,3001.094463769
c076,3,2,6,190548,178286,179252,179252,3600.014862674,3601.274890946
c076,3,2,7,164112,156024,161408,161408,4200.015230604,4201.439397814
c076,3,2,8,104375,99048,102835,102835,4800.017694822,4801.575533054
c076,3,2,9,81183,76749,79940,79940,5400.017976966999,5401.737378241
c076,3,2,10,69530,65237,68081,68081,6000.026089098999,6001.956735424
c076,3,2,11,55923,52583,54927,54927,6600.029282477999,6602.113296295
# search time: 6600.029s
# total time: 26419.429s
c076,4,2,1,1300068,1069957,1247406,1247406,600.008287134,600.209240025
c076,4,2,2,864957,816287,839927,839927,1200.0085107640002,1200.466685749
c076,4,2,3,418407,387259,391115,391115,1800.0095435690002,1800.648771836
c076,4,2,4,311402,293224,295653,295653,2400.009880426,2400.820552637
c076,4,2,5,261662,244067,245230,245230,3000.0123392160003,3000.967378817
c076,4,2,6,212305,197766,198590,198590,3600.0136644960003,3601.109886048
c076,4,2,7,188563,179244,185463,185463,4200.014423214,4201.233434558
c076,4,2,8,116767,110426,114601,114601,4800.016904646,4801.361544533
c076,4,2,9,91984,86819,90255,90255,5400.017316232999,5401.492650314
c076,4,2,10,78328,73454,76590,76590,6000.035688284999,6001.707627318
c076,4,2,11,64393,60393,63223,63223,6600.0547632669995,6601.825433233
# search time: 6600.055s
# total time: 33022.348s
