    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c059_4.json out/1593091766/results/c059_4_best.csv out/1593091766/results/c059_4_predictions.csv out/1593091766/results/c059_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 7, 2, 6, 5, 4, 4, 0]), o: IntList([6, 7, 2, 0, 5, 4, 4, 6]) }
#   Datum { i: IntList([1, 0, 7, 8, 6, 4, 2, 6, 1, 9]), o: IntList([1, 0, 7, 6, 6, 4, 2, 8, 1, 9]) }
#   Datum { i: IntList([8, 9, 9, 6, 5, 2, 4, 0, 0]), o: IntList([8, 9, 9, 0, 5, 2, 4, 6, 0]) }
#   Datum { i: IntList([7, 3, 4, 0, 1, 6, 8, 1, 5]), o: IntList([7, 3, 4, 1, 1, 6, 8, 0, 5]) }
#   Datum { i: IntList([5, 2, 8, 8, 8, 8, 2, 5]), o: IntList([5, 2, 8, 5, 8, 8, 2, 8]) }
#   Datum { i: IntList([3, 1, 1, 5, 1, 0, 7, 0, 7]), o: IntList([3, 1, 1, 0, 1, 0, 7, 5, 7]) }
#   Datum { i: IntList([8, 3, 9, 2, 7, 4, 6, 3]), o: IntList([8, 3, 9, 3, 7, 4, 6, 2]) }
#   Datum { i: IntList([0, 5, 3, 8, 1, 9, 4, 6, 2]), o: IntList([0, 5, 3, 6, 1, 9, 4, 8, 2]) }
#   Datum { i: IntList([9, 5, 5, 9, 3, 7, 6, 3, 9, 3]), o: IntList([9, 5, 5, 3, 3, 7, 6, 9, 9, 3]) }
#   Datum { i: IntList([6, 1, 8, 5, 2, 3, 7, 9, 0, 4]), o: IntList([6, 1, 8, 9, 2, 3, 7, 5, 0, 4]) }
#   Datum { i: IntList([5, 2, 4, 3, 7, 0, 8, 6]), o: IntList([5, 2, 4, 6, 7, 0, 8, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c059,0,4,1,651027,560657,631221,631221,600.003926059,602.834276215
c059,0,4,2,278391,259058,266554,266554,1200.004343821,1204.667562859
c059,0,4,3,149452,135904,139489,139489,1800.005290608,1806.149287032
c059,0,4,4,114121,104489,108500,108500,2400.010348882,2407.072264948
c059,0,4,5,89250,82077,84616,84616,3000.016560684,3008.966771452
c059,0,4,6,41488,37917,38945,38945,3600.027764722,3610.06575824
c059,0,4,7,32480,28868,30416,30416,4200.039177269,4211.23411833
c059,0,4,8,24027,21837,22379,22379,4800.066759172,4813.326443187
c059,0,4,9,20913,19071,19590,19590,5400.124661292,5415.458556146
c059,0,4,10,17460,15847,16367,16367,6000.166210374,6017.841508001
c059,0,4,11,15423,14077,14528,14528,6600.171590697,6620.008131592
# search time: 6600.172s
# total time: 6620.182s
c059,1,4,1,619177,506729,593545,593545,600.01804615,600.342140467
c059,1,4,2,173973,161923,166590,166590,1200.019316767,1201.056695909
c059,1,4,3,91087,83067,85425,85425,1800.023618706,1801.735797196
c059,1,4,4,67731,62167,64389,64389,2400.028902461,2402.277997322
c059,1,4,5,51729,47556,48977,48977,3000.042335768,3002.827259888
c059,1,4,6,42243,38288,39753,39753,3600.053367451,3603.40126731
c059,1,4,7,34713,31666,32552,32552,4200.060762552001,4203.856738769
c059,1,4,8,43880,39803,40902,40902,4800.067926859001,4804.948445264
c059,1,4,9,37694,34428,35299,35299,5400.076301416001,5405.994675727
c059,1,4,10,31026,28404,29138,29138,6000.089384203001,6006.974558694
c059,1,4,11,27208,24884,25510,25510,6600.102751558001,6608.064612487
# search time: 6600.103s
# total time: 13228.497s
c059,2,4,1,1071424,878454,1027230,1027230,600.009710499,600.265043237
c059,2,4,2,286589,266966,274781,274781,1200.0108341579999,1200.685945475
c059,2,4,3,151737,139355,142755,142755,1800.0120603319997,1801.030387826
c059,2,4,4,114054,104708,108498,108498,2400.0125848529997,2401.312182096
c059,2,4,5,87806,80617,83283,83283,3000.0176486269997,3001.595791487
c059,2,4,6,75777,69693,71512,71512,3600.0220374359997,3601.887400529
c059,2,4,7,57180,50551,53911,53911,4200.025255545,4202.204863994
c059,2,4,8,42368,38288,39608,39608,4800.057183329,4802.704104099
c059,2,4,9,36894,33655,34553,34553,5400.062054640999,5403.132593009
c059,2,4,10,31748,28982,29689,29689,6000.064880841999,6003.661989366
c059,2,4,11,27183,24732,25412,25412,6600.077738275999,6604.218705638
# search time: 6600.078s
# total time: 19833.054s
c059,3,4,1,1075719,926503,1043349,1043349,600.003782718,600.307487592
c059,3,4,2,288166,268121,275798,275798,1200.0044750420002,1200.586306748
c059,3,4,3,153083,139646,143496,143496,1800.006295052,1800.860926613
c059,3,4,4,110793,101114,105500,105500,2400.010037978,2401.018837221
c059,3,4,5,88142,80945,83665,83665,3000.012466041,3001.250006611
c059,3,4,6,72880,66639,68837,68837,3600.014352944,3601.443272932
c059,3,4,7,59421,54338,55969,55969,4200.022076239,4201.71357635
c059,3,4,8,44175,40130,41287,41287,4800.02470089,4802.124707986
c059,3,4,9,37666,34279,35183,35183,5400.024815534,5402.648552707
c059,3,4,10,31464,28799,29524,29524,6000.030878697,6003.192842679
c059,3,4,11,26987,24611,25229,25229,6600.038365755,6603.631132178
# search time: 6600.038s
# total time: 26437.016s
c059,4,4,1,1013637,824365,970832,970832,600.000064842,600.159689327
c059,4,4,2,284953,265324,273030,273030,1200.0015559,1200.3826047
c059,4,4,3,153207,140254,143976,143976,1800.0025317690001,1800.58650976
c059,4,4,4,113895,104432,108350,108350,2400.008732178,2400.755834069
c059,4,4,5,87096,79773,82790,82790,3000.010614359,3000.899432863
c059,4,4,6,74190,67854,69978,69978,3600.017888764,3601.060561024
c059,4,4,7,58633,53168,55209,55209,4200.01815206,4201.333972659
c059,4,4,8,43471,39566,40737,40737,4800.030413503,4801.654936139
c059,4,4,9,37423,34107,34991,34991,5400.03996312,5402.015940476
c059,4,4,10,31114,28465,29118,29118,6000.05196353,6002.414852573
c059,4,4,11,26326,24151,24763,24763,6600.054636459,6603.110184721
# search time: 6600.055s
# total time: 33040.537s
