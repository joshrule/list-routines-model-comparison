    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c029_2.json out/1593091766/results/c029_2_best.csv out/1593091766/results/c029_2_predictions.csv out/1593091766/results/c029_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 6, 6]), o: IntList([6]) }
#   Datum { i: IntList([5, 2, 2, 2, 5, 2]), o: IntList([2, 2, 5, 2]) }
#   Datum { i: IntList([5, 9, 1, 3, 0, 0, 3]), o: IntList([1, 3, 0, 0, 3]) }
#   Datum { i: IntList([2, 3, 1, 6, 0, 9, 5, 7, 4, 8]), o: IntList([1, 6, 0, 9, 5, 7, 4, 8]) }
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([7, 0, 4, 1, 7]), o: IntList([4, 1, 7]) }
#   Datum { i: IntList([5, 1, 0, 0, 5, 8, 1, 8, 3, 0]), o: IntList([0, 0, 5, 8, 1, 8, 3, 0]) }
#   Datum { i: IntList([7, 5, 1, 9, 4, 4, 4, 8]), o: IntList([1, 9, 4, 4, 4, 8]) }
#   Datum { i: IntList([8, 1, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([2, 2]), o: IntList([]) }
#   Datum { i: IntList([2, 7, 6, 2, 0, 6, 7, 6, 5]), o: IntList([6, 2, 0, 6, 7, 6, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c029,0,2,1,1146024,939223,1098868,1098868,600.000532066,601.912844385
c029,0,2,2,709461,672314,691013,691013,1200.012586906,1202.904536665
c029,0,2,3,450643,409473,419658,419658,1800.013703413,1803.733571501
c029,0,2,4,231994,214369,220410,220410,2400.016192414,2404.444734678
c029,0,2,5,169495,150087,154448,154448,3000.016462418,3005.072262191
c029,0,2,6,153075,140946,146064,146064,3600.019301937,3605.716495526
c029,0,2,7,141767,131858,137240,137240,4200.021306419,4206.274630626
c029,0,2,8,96326,87164,90758,90758,4800.025354982,4806.928887448
c029,0,2,9,81664,73744,76905,76905,5400.025691047,5407.54219429
c029,0,2,10,77601,69779,72809,72809,6000.03179781,6008.229575769
c029,0,2,11,75877,68192,71243,71243,6600.032207941,6608.757486474
# search time: 6600.032s
# total time: 6609.075s
c029,1,2,1,1180041,1025349,1146610,1146610,600.000202993,600.361101923
c029,1,2,2,708085,671671,690011,690011,1200.0017839050001,1200.770470603
c029,1,2,3,447847,406929,417103,417103,1800.0021673770002,1801.133261254
c029,1,2,4,230304,213094,219040,219040,2400.002986287,2401.458973894
c029,1,2,5,169827,150312,154945,154945,3000.00365887,3001.720478905
c029,1,2,6,152436,140865,145606,145606,3600.02254186,3602.079465034
c029,1,2,7,141476,131409,137069,137069,4200.026137299,4202.382696936
c029,1,2,8,97795,88746,92300,92300,4800.032907265,4802.673556545
c029,1,2,9,81711,73990,77044,77044,5400.040805573,5402.972342852
c029,1,2,10,77004,69446,72384,72384,6000.051381498,6003.249963415
c029,1,2,11,74837,67321,70271,70271,6600.054250980001,6603.531960777
# search time: 6600.054s
# total time: 13213.168s
c029,2,2,1,1162917,1009799,1129970,1129970,600.000075756,600.262715941
c029,2,2,2,702797,667759,685708,685708,1202.217313187,1202.751468663
c029,2,2,3,435359,396290,405761,405761,1802.2214808019999,1803.013377457
c029,2,2,4,231005,213435,219466,219466,2402.222753406,2403.24461654
c029,2,2,5,170843,150952,155767,155767,3002.225973492,3003.412956912
c029,2,2,6,154700,142302,147412,147412,3602.2307944,3603.6257594
c029,2,2,7,140681,131165,136439,136439,4202.233623624,4203.809636902
c029,2,2,8,96630,87617,90972,90972,4802.240988857,4804.055772336
c029,2,2,9,81811,73793,77033,77033,5402.242943799,5404.247841864
c029,2,2,10,77341,69697,72653,72653,6002.249399409,6004.43773512
c029,2,2,11,76035,68397,71324,71324,6602.253373148,6604.666409815
# search time: 6602.253s
# total time: 19818.283s
c029,3,2,1,1150984,995663,1117054,1117054,600.001236261,600.272610941
c029,3,2,2,720228,683043,701624,701624,1200.002555383,1200.530334531
c029,3,2,3,448105,407510,417518,417518,1800.0037018050002,1800.751431191
c029,3,2,4,232400,214880,220863,220863,2400.0048699420004,2400.952322764
c029,3,2,5,169920,150146,154764,154764,3000.0073407560003,3001.090083965
c029,3,2,6,100825,92548,96024,96024,3600.0112524160004,3601.203649928
c029,3,2,7,142617,132840,138204,138204,4200.0146819,4201.351966559
c029,3,2,8,96713,87831,91245,91245,4800.016260104,4801.537922481
c029,3,2,9,81960,74295,77340,77340,5400.02544048,5401.707511544
c029,3,2,10,77344,69926,72737,72737,6000.033734279999,6001.918225326
c029,3,2,11,75998,68450,71455,71455,6600.041133282999,6602.030670949
# search time: 6600.041s
# total time: 26420.984s
c029,4,2,1,1144206,938455,1097352,1097352,600.0051393,600.18263711
c029,4,2,2,707372,670791,689349,689349,1200.005357298,1200.401416846
c029,4,2,3,447482,406805,417085,417085,1800.005701199,1800.581888448
c029,4,2,4,231652,214484,220470,220470,2400.006825378,2400.74427389
c029,4,2,5,168927,148983,153770,153770,3000.006993953,3000.860436766
c029,4,2,6,151260,138421,143926,143926,3600.007950594,3600.985633905
c029,4,2,7,142435,132829,138044,138044,4200.008858743,4201.120450334
c029,4,2,8,97170,88203,91614,91614,4800.012155755,4801.238956378
c029,4,2,9,81316,73432,76432,76432,5400.020041939,5401.443548365
c029,4,2,10,76634,69233,72122,72122,6000.026661392,6001.579090211
c029,4,2,11,76022,68357,71384,71384,6600.045763882001,6601.751759745
# search time: 6600.046s
# total time: 33023.228s
