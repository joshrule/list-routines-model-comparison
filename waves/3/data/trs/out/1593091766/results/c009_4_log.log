    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.61s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c009_4.json out/1593091766/results/c009_4_best.csv out/1593091766/results/c009_4_predictions.csv out/1593091766/results/c009_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 7, 0]), o: IntList([6, 7, 0]) }
#   Datum { i: IntList([9, 4, 9, 9, 4, 9, 9]), o: IntList([9, 4, 9, 9, 4, 9]) }
#   Datum { i: IntList([0, 5, 2, 2, 2]), o: IntList([0, 5, 2, 2, 2]) }
#   Datum { i: IntList([3, 2, 1, 4, 3, 0, 4]), o: IntList([3, 2, 1, 4, 3, 0]) }
#   Datum { i: IntList([7]), o: IntList([7]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([5, 3, 7, 3, 8, 7, 8, 7]), o: IntList([5, 3, 7, 3, 8, 7]) }
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1, 1, 1, 1]) }
#   Datum { i: IntList([5, 8, 8, 9, 9, 5, 8, 5]), o: IntList([5, 8, 8, 9, 9, 5]) }
#   Datum { i: IntList([6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([6, 2, 4, 4, 4, 8, 8]), o: IntList([6, 2, 4, 4, 4, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c009,0,4,1,1150648,944017,1103543,1103543,600.00258759,601.954498962
c009,0,4,2,549711,512214,531876,531876,1200.0032277189998,1203.002848132
c009,0,4,3,286249,266221,268542,268542,1800.0061450009998,1803.938095292
c009,0,4,4,211564,196257,199458,199458,2400.006217363,2404.705321342
c009,0,4,5,141968,129268,131795,131795,3000.0067581149997,3005.629392208
c009,0,4,6,141969,125489,128485,128485,3600.010560803,3606.420692773
c009,0,4,7,148919,130029,135129,135129,4200.011960648,4207.023977996
c009,0,4,8,106406,90908,93747,93747,4800.016804904,4807.667452645
c009,0,4,9,100330,85261,87747,87747,5400.023594295,5408.169109681
c009,0,4,10,82867,70883,72841,72841,6000.028353029,6008.699822402
c009,0,4,11,68091,59630,62871,62871,6600.02846452,6609.519576713
# search time: 6600.028s
# total time: 6609.836s
c009,1,4,1,1169701,1008757,1135007,1135007,600.000010511,600.399423197
c009,1,4,2,555890,516273,536965,536965,1200.009952722,1200.811650549
c009,1,4,3,290170,270264,272695,272695,1800.010131366,1801.217249702
c009,1,4,4,212104,196868,200256,200256,2400.011461752,2401.522327551
c009,1,4,5,141168,128775,131264,131264,3000.012715645,3001.947979801
c009,1,4,6,137772,121731,124689,124689,3600.016514944,3602.301372256
c009,1,4,7,148142,129487,134548,134548,4200.024853686,4202.572428096
c009,1,4,8,107935,92076,94953,94953,4800.036344622,4802.910814156
c009,1,4,9,99867,84897,87440,87440,5400.039789498,5403.166310144
c009,1,4,10,81929,69925,71767,71767,6000.039975999,6003.43575063
c009,1,4,11,68150,59643,62881,62881,6600.044261116,6603.751093469
# search time: 6600.044s
# total time: 13214.073s
c009,2,4,1,1168788,1016520,1136205,1136205,600.000099824,600.335799241
c009,2,4,2,570351,530258,550478,550478,1200.0004702669999,1200.625183103
c009,2,4,3,289556,269884,272293,272293,1800.0013268599998,1800.860302647
c009,2,4,4,210292,194789,198084,198084,2400.0013273699997,2401.088160188
c009,2,4,5,143859,131257,133681,133681,3000.009886676,3001.36722678
c009,2,4,6,137920,121836,124850,124850,3600.010966158,3601.630186555
c009,2,4,7,146584,128361,133363,133363,4200.013865182,4201.823187139
c009,2,4,8,107512,92031,94915,94915,4800.017226444,4802.033296402
c009,2,4,9,98899,83409,85714,85714,5400.020613171,5402.239356683
c009,2,4,10,82059,70558,72525,72525,6000.021456791,6002.469098727
c009,2,4,11,69732,61094,64317,64317,6600.024246982,6602.729248831
# search time: 6600.024s
# total time: 19817.274s
c009,3,4,1,1124699,920331,1078040,1078040,600.002246374,600.186889686
c009,3,4,2,568097,527360,547912,547912,1200.00605689,1200.434288837
c009,3,4,3,285245,265046,267380,267380,1800.006302192,1800.640860591
c009,3,4,4,213808,199414,202706,202706,2400.006779354,2400.814166611
c009,3,4,5,144453,132101,134434,134434,3000.0073517280002,3000.974944897
c009,3,4,6,140844,124560,127389,127389,3600.0082853480003,3601.185889576
c009,3,4,7,147830,128914,134013,134013,4200.010180937001,4201.325376599
c009,3,4,8,105459,90288,93047,93047,4800.012829792001,4801.502798648
c009,3,4,9,99291,84392,86882,86882,5400.014950417001,5401.669740693
c009,3,4,10,81406,69962,71863,71863,6000.034098502001,6001.814200969
c009,3,4,11,69376,60697,64003,64003,6600.035400599001,6602.022774789
# search time: 6600.035s
# total time: 26419.776s
c009,4,4,1,1123250,922366,1077684,1077684,600.000093174,600.17694085
c009,4,4,2,536843,499377,519287,519287,1200.000484792,1200.369710156
c009,4,4,3,284914,264968,267293,267293,1800.012189958,1800.563642673
c009,4,4,4,209488,194328,197458,197458,2400.0128507629997,2400.713345677
c009,4,4,5,143379,130768,133235,133235,3000.0187925349996,3000.890703904
c009,4,4,6,137163,121395,124365,124365,3600.0227357229996,3601.065470454
c009,4,4,7,145968,127838,132817,132817,4200.023357784,4201.179003505
c009,4,4,8,105615,90221,93075,93075,4800.02538329,4801.287757996
c009,4,4,9,97754,82865,85359,85359,5400.0269042889995,5401.397799802
c009,4,4,10,80512,69144,71071,71071,6000.033372141999,6001.506047706
c009,4,4,11,69014,60380,63657,63657,6600.044752671999,6601.819218265
# search time: 6600.045s
# total time: 33022.218s
