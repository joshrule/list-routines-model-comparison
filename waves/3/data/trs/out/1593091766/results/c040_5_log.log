    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c040_5.json out/1593091766/results/c040_5_best.csv out/1593091766/results/c040_5_predictions.csv out/1593091766/results/c040_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 4, 7, 3, 5, 4]), o: IntList([4, 4, 7, 3, 5, 4, 3]) }
#   Datum { i: IntList([1, 9, 2, 2, 3, 1, 4, 6, 6, 9]), o: IntList([1, 9, 2, 2, 3, 1, 4, 6, 6, 9, 9]) }
#   Datum { i: IntList([4, 6, 8, 4, 7]), o: IntList([4, 6, 8, 4, 7, 3]) }
#   Datum { i: IntList([6, 1, 0, 0]), o: IntList([6, 1, 0, 0]) }
#   Datum { i: IntList([6, 6, 9, 3, 9, 6, 9, 6]), o: IntList([6, 6, 9, 3, 9, 6, 9, 6, 3]) }
#   Datum { i: IntList([0, 1, 2, 6, 3, 9, 5, 7, 2, 0]), o: IntList([0, 1, 2, 6, 3, 9, 5, 7, 2, 0]) }
#   Datum { i: IntList([0, 0, 0]), o: IntList([0, 0, 0]) }
#   Datum { i: IntList([9, 4, 1, 3, 2, 0, 6, 8]), o: IntList([9, 4, 1, 3, 2, 0, 6, 8]) }
#   Datum { i: IntList([0, 9, 0, 9]), o: IntList([0, 9, 0, 9, 9]) }
#   Datum { i: IntList([2, 9, 0, 5, 7]), o: IntList([2, 9, 0, 5, 7, 9]) }
#   Datum { i: IntList([1, 1, 2]), o: IntList([1, 1, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c040,0,5,1,1112220,913597,1066885,1066885,600.001945137,601.904887751
c040,0,5,2,339458,315947,324888,324888,1200.00260148,1203.024640885
c040,0,5,3,144717,136071,137104,137104,1800.002627844,1804.209839077
c040,0,5,4,126076,118503,118953,118953,2400.005454528,2405.033647833
c040,0,5,5,107435,99697,100262,100262,3000.009894978,3006.439116129
c040,0,5,6,46179,41949,42268,42268,3600.011500907,3607.234602815
c040,0,5,7,35803,33468,33789,33789,4200.018467333,4208.182108573
c040,0,5,8,34698,32257,32505,32505,4800.019941216,4809.079244445
c040,0,5,9,30466,28428,28690,28690,5400.034767338,5409.70239076
c040,0,5,10,26465,24687,24973,24973,6000.046257678,6010.69805272
c040,0,5,11,23579,22032,22184,22184,6600.05592424,6611.569405254
# search time: 6600.056s
# total time: 6611.932s
c040,1,5,1,676622,585285,656949,656949,600.000100878,600.363886846
c040,1,5,2,207434,192963,198439,198439,1200.001463874,1200.880103115
c040,1,5,3,89147,84384,84783,84783,1800.002346706,1801.392452742
c040,1,5,4,73270,68477,68650,68650,2400.0065295599998,2401.875188837
c040,1,5,5,64778,59759,60079,60079,3000.017663353,3002.385960056
c040,1,5,6,46139,42130,42444,42444,3600.0192855249998,3602.975994762
c040,1,5,7,34575,32209,32498,32498,4200.056783979,4203.55933223
c040,1,5,8,34956,32722,32966,32966,4800.062686336,4804.094208117
c040,1,5,9,30169,28178,28446,28446,5400.074673104,5404.771867665
c040,1,5,10,26253,24294,24594,24594,6000.079997466,6005.320171158
c040,1,5,11,23359,21841,22012,22012,6600.082474145001,6605.946921832
# search time: 6600.082s
# total time: 13218.607s
c040,2,5,1,680382,590286,660903,660903,600.00233701,600.289955553
c040,2,5,2,203089,188775,194090,194090,1200.003303048,1200.656541394
c040,2,5,3,85221,80269,80721,80721,1800.0073245929998,1801.070533982
c040,2,5,4,73506,68685,68894,68894,2400.007744234,2401.368015828
c040,2,5,5,64238,59603,59895,59895,3000.016074625,3001.670493386
c040,2,5,6,46883,43185,43521,43521,3600.026793695,3601.996384585
c040,2,5,7,35735,33498,33793,33793,4200.036376961,4202.405353503
c040,2,5,8,35624,33236,33487,33487,4800.05914868,4802.787345286
c040,2,5,9,30607,28582,28839,28839,5400.104362193,5403.22247894
c040,2,5,10,26568,24685,24959,24959,6000.121413899,6003.592658502
c040,2,5,11,23306,21674,21829,21829,6600.125727381,6603.97967874
# search time: 6600.126s
# total time: 19823.057s
c040,3,5,1,680521,586204,659994,659994,600.001197144,600.253872011
c040,3,5,2,203349,189053,194434,194434,1200.003311701,1200.562374584
c040,3,5,3,88398,83640,84012,84012,1800.005740167,1800.859425076
c040,3,5,4,73889,69234,69488,69488,2400.0070430670003,2401.164699078
c040,3,5,5,64310,59627,59937,59937,3000.010986575,3001.406121795
c040,3,5,6,46224,42053,42370,42370,3600.018715553,3601.8286713
c040,3,5,7,35638,33485,33801,33801,4200.030232867,4202.168844146
c040,3,5,8,35501,33154,33407,33407,4800.042202483,4802.40046784
c040,3,5,9,30532,28562,28844,28844,5400.049115328,5402.669581979
c040,3,5,10,26623,24741,25035,25035,6000.058321846,6002.962299405
c040,3,5,11,24147,22666,22835,22835,6600.074483234,6603.224512624
# search time: 6600.074s
# total time: 26426.549s
c040,4,5,1,685048,586391,663453,663453,600.002397808,600.252584622
c040,4,5,2,206960,192221,197708,197708,1200.0060916749999,1200.518293033
c040,4,5,3,86347,81485,81932,81932,1800.021881181,1800.789963453
c040,4,5,4,73172,68419,68621,68621,2400.032482027,2401.031766159
c040,4,5,5,64039,59239,59542,59542,3000.03268257,3001.229018577
c040,4,5,6,46727,43125,43465,43465,3600.033542625,3601.49198956
c040,4,5,7,34967,32552,32858,32858,4200.047162606,4201.7095941
c040,4,5,8,34557,32401,32652,32652,4800.055859172,4801.874123671
c040,4,5,9,29734,27726,28027,28027,5400.078813852,5402.264716249
c040,4,5,10,26764,24881,25198,25198,6000.0910915760005,6002.611432967
c040,4,5,11,23998,22447,22618,22618,6600.092789168,6602.79037282
# search time: 6600.093s
# total time: 33029.952s
