    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.76s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c003_2.json out/1593091766/results/c003_2_best.csv out/1593091766/results/c003_2_predictions.csv out/1593091766/results/c003_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 6, 4, 3, 2, 7, 6, 1]), o: IntList([6]) }
#   Datum { i: IntList([6, 8, 5, 0, 2, 9, 8, 2]), o: IntList([8]) }
#   Datum { i: IntList([0, 5, 7, 4, 9, 1, 3, 6, 7, 8]), o: IntList([3]) }
#   Datum { i: IntList([5, 2, 0, 3, 1, 8, 9, 4, 9, 5]), o: IntList([9]) }
#   Datum { i: IntList([9, 3, 0, 4, 3, 6, 4, 8, 7]), o: IntList([4]) }
#   Datum { i: IntList([6, 1, 6, 4, 4, 7, 0, 4, 6, 1]), o: IntList([0]) }
#   Datum { i: IntList([7, 2, 3, 9, 0, 4, 5, 6]), o: IntList([5]) }
#   Datum { i: IntList([1, 3, 1, 1, 5, 5, 1, 9, 1, 3]), o: IntList([1]) }
#   Datum { i: IntList([0, 8, 7, 8, 0, 8, 7, 0, 0, 8]), o: IntList([7]) }
#   Datum { i: IntList([1, 0, 8, 6, 7, 2, 9, 3, 5, 4]), o: IntList([9]) }
#   Datum { i: IntList([6, 9, 0, 8, 2, 8, 2, 3, 2]), o: IntList([2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c003,0,2,1,1169085,955080,1120295,1120295,600.004110084,601.766152656
c003,0,2,2,695128,652878,672851,672851,1200.004882685,1203.266103211
c003,0,2,3,490192,452598,471477,471477,1800.005308818,1804.416353486
c003,0,2,4,245305,227696,236955,236955,2400.005836515,2405.774016302
c003,0,2,5,178912,165364,172429,172429,3000.007629791,3007.227649094
c003,0,2,6,140186,129139,134721,134721,3600.009219012,3608.708708931
c003,0,2,7,109918,101041,105554,105554,4200.010301822,4210.251425685
c003,0,2,8,91152,83725,87464,87464,4800.019437889,4811.710748048
c003,0,2,9,75081,68815,71962,71962,5400.026135394,5413.089079835
c003,0,2,10,61852,56764,59514,59514,6000.0298777240005,6014.408872854
c003,0,2,11,50801,46627,48838,48838,6600.049149122,6615.809733407
# search time: 6600.049s
# total time: 6616.047s
c003,1,2,1,1243679,1093491,1212661,1212661,600.000118008,600.328485228
c003,1,2,2,708386,666453,686432,686432,1200.001057895,1200.86761828
c003,1,2,3,518000,478686,498443,498443,1800.002037468,1801.341863464
c003,1,2,4,247352,229803,239151,239151,2400.011615478,2401.980714913
c003,1,2,5,177061,163679,170619,170619,3000.0144055809997,3002.650361575
c003,1,2,6,139032,128009,133559,133559,3600.0144082709994,3603.24906509
c003,1,2,7,108849,100149,104485,104485,4200.01985319,4203.968095163
c003,1,2,8,91236,83592,87376,87376,4800.024672271,4804.790522654
c003,1,2,9,74924,68498,71689,71689,5400.030245262,5405.589344412
c003,1,2,10,60938,55999,58580,58580,6000.043067611,6006.195951118
c003,1,2,11,50055,45996,48053,48053,6600.053929724,6606.761898984
# search time: 6600.054s
# total time: 13223.153s
c003,2,2,1,1255462,1086584,1219988,1219988,600.006516913,600.297369646
c003,2,2,2,713215,670896,691285,691285,1200.0066203790002,1200.654720461
c003,2,2,3,508946,469964,489398,489398,1800.0130484800002,1801.015229524
c003,2,2,4,247197,229687,238997,238997,2400.017345135,2401.433762931
c003,2,2,5,179767,166149,173199,173199,3000.020770823,3001.900808844
c003,2,2,6,141169,129918,135661,135661,3600.026777106,3602.365094144
c003,2,2,7,111477,102573,107078,107078,4200.032037344,4202.849002297
c003,2,2,8,89598,82613,86048,86048,4800.043176369,4803.200185987
c003,2,2,9,74214,67741,70923,70923,5400.051290750001,5403.767626096
c003,2,2,10,61942,56798,59427,59427,6000.057640785,6004.319837643
c003,2,2,11,51882,47444,49830,49830,6600.071137373,6604.720908807
# search time: 6600.071s
# total time: 19828.216s
c003,3,2,1,1196978,982373,1148038,1148038,600.007543806,600.186385856
c003,3,2,2,720434,675921,696831,696831,1200.007793306,1200.494699833
c003,3,2,3,507036,467892,487479,487479,1800.008464112,1800.763094765
c003,3,2,4,245415,227728,237192,237192,2400.009661278,2401.029217867
c003,3,2,5,177973,164292,171471,171471,3000.01099718,3001.356443809
c003,3,2,6,140629,129583,135219,135219,3600.012701704,3601.730349396
c003,3,2,7,108934,100382,104665,104665,4200.022262135,4201.984365458
c003,3,2,8,90650,83231,86925,86925,4800.025090032001,4802.311287259
c003,3,2,9,74052,67707,70866,70866,5400.032138832001,5402.794681384
c003,3,2,10,62533,57426,60066,60066,6000.039343385,6003.056179143
c003,3,2,11,52283,47956,50211,50211,6600.0403066280005,6603.345284214
# search time: 6600.040s
# total time: 26431.902s
c003,4,2,1,1234016,1074937,1200067,1200067,600.000021821,600.242904812
c003,4,2,2,728472,684284,704788,704788,1200.00029708,1200.504222544
c003,4,2,3,512303,473211,492878,492878,1800.005618527,1800.717928478
c003,4,2,4,244564,227121,236418,236418,2400.006045428,2400.983538165
c003,4,2,5,177773,164231,171272,171272,3000.009769928,3001.252856925
c003,4,2,6,139512,128509,134052,134052,3600.019206006,3601.537358492
c003,4,2,7,109128,100489,104807,104807,4200.019831728,4201.827707759
c003,4,2,8,90335,83034,86703,86703,4800.023308656,4802.017034106
c003,4,2,9,74980,68608,71729,71729,5400.029166355,5402.276010188
c003,4,2,10,60029,55202,57695,57695,6000.034629592,6002.566181764
c003,4,2,11,50428,46375,48470,48470,6600.053590021,6602.741521238
# search time: 6600.054s
# total time: 33034.997s
