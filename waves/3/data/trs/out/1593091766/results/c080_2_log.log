    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c080_2.json out/1593091766/results/c080_2_best.csv out/1593091766/results/c080_2_predictions.csv out/1593091766/results/c080_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 2, 5, 7]), o: IntList([7, 5, 2, 6]) }
#   Datum { i: IntList([4, 2, 1, 0, 6]), o: IntList([6, 0, 1, 2, 4]) }
#   Datum { i: IntList([6, 7, 5, 1, 2, 4]), o: IntList([4, 2, 1, 5, 7, 6]) }
#   Datum { i: IntList([9, 3, 3, 9, 3, 9, 9, 3, 3]), o: IntList([3, 3, 9, 9, 3, 9, 3, 3, 9]) }
#   Datum { i: IntList([0, 0, 0, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8, 0, 0, 0]) }
#   Datum { i: IntList([3, 3, 8, 4, 0, 7, 0, 5]), o: IntList([5, 0, 7, 0, 4, 8, 3, 3]) }
#   Datum { i: IntList([6, 7, 9, 1, 4, 8, 2, 0, 2, 3]), o: IntList([3, 2, 0, 2, 8, 4, 1, 9, 7, 6]) }
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([5, 5, 5, 0]) }
#   Datum { i: IntList([6, 3, 1]), o: IntList([1, 3, 6]) }
#   Datum { i: IntList([9, 5, 3, 0, 7, 4, 7, 1, 6]), o: IntList([6, 1, 7, 4, 7, 0, 3, 5, 9]) }
#   Datum { i: IntList([0, 7]), o: IntList([7, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c080,0,2,1,1150802,1009753,1121276,1121276,600.00000441,602.084050864
c080,0,2,2,487015,455450,468589,468589,1200.00037518,1203.103571516
c080,0,2,3,274020,258737,261497,261497,1800.0022417330001,1803.979637388
c080,0,2,4,197281,185349,186300,186300,2400.003006326,2404.71348562
c080,0,2,5,132430,123384,123672,123672,3000.003633848,3005.356002918
c080,0,2,6,100992,93453,93926,93926,3600.005975691,3605.972757309
c080,0,2,7,77510,70444,71061,71061,4200.007068824,4206.669936218
c080,0,2,8,59462,54958,55225,55225,4800.012518419,4807.336055819
c080,0,2,9,55485,51402,51635,51635,5400.0156474450005,5408.016951397
c080,0,2,10,52683,48510,48794,48794,6000.0306251950005,6008.728608917
c080,0,2,11,44411,40889,41188,41188,6600.034749306001,6609.361803974
# search time: 6600.035s
# total time: 6609.742s
c080,1,2,1,1079882,913904,1043399,1043399,600.000851479,600.339005831
c080,1,2,2,477680,446321,459638,459638,1200.0017477319998,1200.742140005
c080,1,2,3,289945,274268,277133,277133,1800.0028100219997,1801.113766555
c080,1,2,4,201530,189319,190300,190300,2400.0048243019996,2401.45670374
c080,1,2,5,135440,126260,126725,126725,3000.008339447,3001.785054273
c080,1,2,6,104266,96137,96501,96501,3600.008774305,3602.103063403
c080,1,2,7,77384,69741,70345,70345,4200.016017367,4202.498399593
c080,1,2,8,61179,56612,56897,56897,4800.020070373001,4802.790169297
c080,1,2,9,57356,53151,53448,53448,5400.021075377001,5403.132057942
c080,1,2,10,53542,48955,49228,49228,6000.023324591,6003.388166756
c080,1,2,11,44967,41387,41616,41616,6600.033695575001,6603.703801751
# search time: 6600.034s
# total time: 13214.168s
c080,2,2,1,1117878,946028,1080073,1080073,600.000071583,600.239649227
c080,2,2,2,505521,472798,486489,486489,1200.000517234,1200.529642371
c080,2,2,3,301250,285163,288068,288068,1800.001340477,1800.81118666
c080,2,2,4,203415,190917,191878,191878,2400.00207106,2401.024933899
c080,2,2,5,135912,126781,127256,127256,3000.00764423,3001.201172068
c080,2,2,6,104833,97148,97624,97624,3600.01341745,3601.4428701
c080,2,2,7,77293,69535,70153,70153,4200.042401372,4201.689458017
c080,2,2,8,61879,57271,57614,57614,4800.049418787,4801.894699239
c080,2,2,9,57477,53191,53484,53484,5400.068097278,5402.184020241
c080,2,2,10,54132,49735,50029,50029,6000.07863549,6002.402721655
c080,2,2,11,45866,42219,42502,42502,6600.081864357,6602.650382524
# search time: 6600.082s
# total time: 19817.524s
c080,3,2,1,1112734,986824,1087523,1087523,600.008686953,600.294710629
c080,3,2,2,499573,467204,480775,480775,1200.010614805,1200.518702434
c080,3,2,3,320812,302421,305786,305786,1800.010670897,1800.731267841
c080,3,2,4,223663,210015,211125,211125,2400.010933349,2400.914801776
c080,3,2,5,149671,139741,140110,140110,3000.012447322,3001.07370793
c080,3,2,6,116964,107763,108202,108202,3600.0137701229996,3601.239569675
c080,3,2,7,86127,77619,78273,78273,4200.028544739999,4201.44717477
c080,3,2,8,67831,62536,62858,62858,4800.029535592999,4801.617171472
c080,3,2,9,63801,59144,59441,59441,5400.0332244109995,5401.788802142
c080,3,2,10,60261,55608,55966,55966,6000.046922975,6001.999227961
c080,3,2,11,51078,46973,47254,47254,6600.054580552,6602.156285443
# search time: 6600.055s
# total time: 26420.344s
c080,4,2,1,1307867,1134289,1270281,1270281,600.000759609,600.243126201
c080,4,2,2,533369,499234,514224,514224,1200.001118949,1200.451363103
c080,4,2,3,331005,313199,316398,316398,1800.0021233050002,1800.635679039
c080,4,2,4,223269,208545,209501,209501,2400.00345276,2400.79681095
c080,4,2,5,149816,139827,140306,140306,3000.006166597,3000.932011845
c080,4,2,6,133143,122873,123346,123346,3600.0087998980002,3601.07768159
c080,4,2,7,98138,88580,89296,89296,4200.013742549,4201.265953292
c080,4,2,8,78147,71791,72171,72171,4800.015144448,4801.403956977
c080,4,2,9,73399,67338,67655,67655,5400.018347077999,5401.552101442
c080,4,2,10,67158,60777,61212,61212,6000.025251876999,6001.759286417
c080,4,2,11,59053,54314,54661,54661,6600.0278270399995,6601.898945601
# search time: 6600.028s
# total time: 33024.326s
