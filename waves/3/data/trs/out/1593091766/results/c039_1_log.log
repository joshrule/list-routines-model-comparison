    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c039_1.json out/1593091766/results/c039_1_best.csv out/1593091766/results/c039_1_predictions.csv out/1593091766/results/c039_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 0, 0, 7, 3]), o: IntList([4, 0, 0, 7, 3, 9, 3]) }
#   Datum { i: IntList([8, 0, 6, 7, 4]), o: IntList([8, 0, 6, 7, 4]) }
#   Datum { i: IntList([2, 7, 7, 2, 7, 7, 7, 2]), o: IntList([2, 7, 7, 2, 7, 7, 7, 2, 9, 3]) }
#   Datum { i: IntList([9, 3, 6, 1]), o: IntList([9, 3, 6, 1]) }
#   Datum { i: IntList([1, 9, 5, 5, 9, 1, 5, 5]), o: IntList([1, 9, 5, 5, 9, 1, 5, 5, 3]) }
#   Datum { i: IntList([5, 5, 4]), o: IntList([5, 5, 4]) }
#   Datum { i: IntList([2, 2, 2, 2, 2]), o: IntList([2, 2, 2, 2, 2, 9, 3]) }
#   Datum { i: IntList([0, 7, 0, 0, 0, 0, 7]), o: IntList([0, 7, 0, 0, 0, 0, 7, 3]) }
#   Datum { i: IntList([8, 8, 3, 3, 3]), o: IntList([8, 8, 3, 3, 3]) }
#   Datum { i: IntList([7, 5, 8, 5]), o: IntList([7, 5, 8, 5]) }
#   Datum { i: IntList([4, 1, 1, 9, 0, 1, 8]), o: IntList([4, 1, 1, 9, 0, 1, 8, 9, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c039,0,1,1,712514,624427,693825,693825,600.004558471,603.187562536
c039,0,1,2,208320,194828,200093,200093,1200.0057530230001,1204.915151267
c039,0,1,3,150122,142309,144295,144295,1800.0068783680001,1806.194258491
c039,0,1,4,84013,78528,78855,78855,2400.010389588,2407.352497429
c039,0,1,5,74450,68999,69474,69474,3000.0135010890003,3008.367216212
c039,0,1,6,50860,46965,47315,47315,3600.021528306,3609.645893179
c039,0,1,7,47509,43048,43389,43389,4200.028735565,4210.873296663
c039,0,1,8,42007,38136,38390,38390,4800.032152029999,4811.85377252
c039,0,1,9,33680,30491,30757,30757,5400.047659143999,5413.190604523
c039,0,1,10,31676,29060,29299,29299,6000.057126665999,6014.260998723
c039,0,1,11,29706,27298,27529,27529,6600.062534452999,6615.329205669
# search time: 6600.063s
# total time: 6615.607s
c039,1,1,1,679982,554828,651189,651189,600.000092017,600.341524404
c039,1,1,2,213386,199163,204612,204612,1200.001018118,1201.015915837
c039,1,1,3,146994,137828,140405,140405,1800.004404676,1801.583195204
c039,1,1,4,82513,76976,77244,77244,2400.006955515,2402.209136851
c039,1,1,5,74175,68708,69185,69185,3000.020751899,3002.684005817
c039,1,1,6,50441,46514,46860,46860,3600.037665404,3603.446666056
c039,1,1,7,47340,43002,43387,43387,4200.039585804,4203.999898475
c039,1,1,8,42114,38252,38519,38519,4800.0675359980005,4804.518748026
c039,1,1,9,34495,31443,31717,31717,5400.094527334,5405.052051176
c039,1,1,10,31381,28858,29085,29085,6000.112068652001,6005.582878854
c039,1,1,11,29503,27139,27362,27362,6600.114948879001,6606.257187528
# search time: 6600.115s
# total time: 13222.536s
c039,2,1,1,704520,610950,684705,684705,600.001612438,600.33131374
c039,2,1,2,212087,198153,203518,203518,1200.002362237,1200.739624141
c039,2,1,3,147105,137902,140443,140443,1800.0041250979998,1801.145554006
c039,2,1,4,83517,78146,78472,78472,2400.006660684,2401.485053843
c039,2,1,5,74159,68573,69043,69043,3000.00685567,3001.698208801
c039,2,1,6,83923,77076,77579,77579,3600.011151331,3602.187266517
c039,2,1,7,83336,75376,75924,75924,4200.02313625,4202.638667858
c039,2,1,8,72918,65401,65772,65772,4800.025088462,4803.007857349
c039,2,1,9,58481,52085,52491,52491,5400.03407333,5403.444716103
c039,2,1,10,55768,50682,51043,51043,6000.0428722,6003.789960764
c039,2,1,11,51300,46234,46572,46572,6600.0512924879995,6604.195171609
# search time: 6600.051s
# total time: 19827.057s
c039,3,1,1,1151467,1012360,1122578,1122578,600.006372825,600.330009298
c039,3,1,2,336210,314716,323402,323402,1200.006508493,1200.638490532
c039,3,1,3,246971,232522,236467,236467,1800.0068984549998,1800.886917731
c039,3,1,4,141371,132200,132745,132745,2400.007197981,2401.13957651
c039,3,1,5,126000,117061,117948,117948,3000.011977705,3001.342350943
c039,3,1,6,50398,46534,46900,46900,3600.02292132,3601.600812483
c039,3,1,7,46417,41949,42273,42273,4200.026285397,4201.927475993
c039,3,1,8,41689,37806,38074,38074,4800.027261108,4802.135537047
c039,3,1,9,33787,30700,30966,30966,5400.033400867,5402.474045268
c039,3,1,10,30633,27869,28069,28069,6000.074083271,6002.811442889
c039,3,1,11,28776,26301,26524,26524,6600.079025687,6603.076364213
# search time: 6600.079s
# total time: 26430.779s
c039,4,1,1,676316,551742,647666,647666,600.012378142,600.187589231
c039,4,1,2,211240,196753,202400,202400,1200.013181305,1200.410669921
c039,4,1,3,144846,135899,138415,138415,1800.020603233,1800.609723811
c039,4,1,4,80790,75402,75661,75661,2400.023196805,2400.794249627
c039,4,1,5,72937,67659,68102,68102,3000.0260218470003,3001.008202437
c039,4,1,6,50196,46276,46627,46627,3600.0285398570004,3601.254993661
c039,4,1,7,47163,42756,43132,43132,4200.037368485,4201.512648337
c039,4,1,8,41672,37696,37944,37944,4800.044110821,4801.732326535
c039,4,1,9,34345,31280,31572,31572,5400.0621921619995,5401.97511948
c039,4,1,10,31223,28517,28744,28744,6000.079489780999,6002.192157736
c039,4,1,11,29868,27408,27647,27647,6600.081113717999,6602.375376753
# search time: 6600.081s
# total time: 33033.805s
