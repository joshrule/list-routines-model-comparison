    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c046_4.json out/1593091766/results/c046_4_best.csv out/1593091766/results/c046_4_predictions.csv out/1593091766/results/c046_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 7, 0, 5, 0, 3]), o: IntList([7, 4, 7, 0, 5, 0, 3]) }
#   Datum { i: IntList([3, 3, 4, 3, 3, 8, 4, 4]), o: IntList([7, 3, 3, 4, 3, 3, 8, 4, 4]) }
#   Datum { i: IntList([]), o: IntList([7]) }
#   Datum { i: IntList([8, 8, 5, 5]), o: IntList([7, 8, 8, 5, 5]) }
#   Datum { i: IntList([9, 1, 6, 5, 2, 1, 0, 1, 9]), o: IntList([7, 9, 1, 6, 5, 2, 1, 0, 1, 9]) }
#   Datum { i: IntList([3, 8, 6, 7, 0, 3, 4]), o: IntList([7, 3, 8, 6, 7, 0, 3, 4]) }
#   Datum { i: IntList([7, 3, 5]), o: IntList([7, 7, 3, 5]) }
#   Datum { i: IntList([6, 9, 6, 9, 6]), o: IntList([7, 6, 9, 6, 9, 6]) }
#   Datum { i: IntList([1, 4]), o: IntList([7, 1, 4]) }
#   Datum { i: IntList([2, 2, 0, 0, 2, 2, 0, 2, 0, 2]), o: IntList([7, 2, 2, 0, 0, 2, 2, 0, 2, 0, 2]) }
#   Datum { i: IntList([9]), o: IntList([7, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c046,0,4,1,1297246,1112814,1257090,1257090,600.004134763,601.877463412
c046,0,4,2,411997,378944,389076,389076,1200.0042055469999,1202.888679166
c046,0,4,3,225883,203353,207853,207853,1800.0054063869998,1803.622964255
c046,0,4,4,231624,207112,211199,211199,2400.0077760329996,2404.08654843
c046,0,4,5,185329,165338,168556,168556,3000.0109968259994,3004.500320006
c046,0,4,6,128659,112035,114505,114505,3600.0145982249996,3604.94756737
c046,0,4,7,105193,89555,91532,91532,4200.018820353,4205.374817538
c046,0,4,8,97189,82988,84509,84509,4800.0219704579995,4805.847479987
c046,0,4,9,86938,72518,73893,73893,5400.030994416999,5406.256764883
c046,0,4,10,82218,68759,70018,70018,6000.04682885,6006.68745652
c046,0,4,11,67400,56640,57759,57759,6600.049495890999,6607.047870859
# search time: 6600.049s
# total time: 6607.382s
c046,1,4,1,1218601,1032670,1177742,1177742,600.000059893,600.289106673
c046,1,4,2,403576,371212,381240,381240,1200.000730316,1200.676362955
c046,1,4,3,223654,200030,204396,204396,1800.00166111,1801.01625115
c046,1,4,4,224847,200518,204903,204903,2400.003930819,2401.228666422
c046,1,4,5,181121,160956,164219,164219,3000.007746723,3001.449112696
c046,1,4,6,127425,110899,113310,113310,3600.008157845,3601.6173276
c046,1,4,7,104695,89163,90981,90981,4200.008350462,4201.834158494
c046,1,4,8,96579,81959,83543,83543,4800.008822954,4802.036385251
c046,1,4,9,86311,72470,73845,73845,5400.012961589,5402.234221542
c046,1,4,10,81746,68222,69515,69515,6000.019353276,6002.429649809
c046,1,4,11,67345,55987,57080,57080,6600.021555158,6602.653559445
# search time: 6600.022s
# total time: 13210.565s
c046,2,4,1,1248614,1024817,1197778,1197778,600.001366119,600.212995176
c046,2,4,2,406041,373774,383710,383710,1200.0014409629998,1200.482251583
c046,2,4,3,223022,199018,203282,203282,1800.0034073009997,1800.704482719
c046,2,4,4,225214,199858,205086,205086,2400.0058621199996,2400.855317591
c046,2,4,5,181806,161435,164851,164851,3000.0068112639997,3001.007805179
c046,2,4,6,126839,110578,112945,112945,3600.0090848229997,3601.159046128
c046,2,4,7,105442,89478,91300,91300,4200.018364515,4201.344321627
c046,2,4,8,97131,82696,84251,84251,4800.020833523,4801.483021874
c046,2,4,9,86627,72539,73966,73966,5400.029968966,5401.603661898
c046,2,4,10,81321,68405,69730,69730,6000.045538894,6001.744245524
c046,2,4,11,67382,56302,57411,57411,6600.046820319,6601.893821099
# search time: 6600.047s
# total time: 19812.990s
c046,3,4,1,1304300,1137123,1269729,1269729,600.000109679,600.310866102
c046,3,4,2,410989,377674,387769,387769,1200.00104458,1200.524810594
c046,3,4,3,225458,202981,207703,207703,1800.0025972530002,1800.692085533
c046,3,4,4,227127,202644,206966,206966,2400.0060581260004,2400.819821947
c046,3,4,5,181647,161259,164553,164553,3000.0083082910005,3000.9618924
c046,3,4,6,127835,111069,113281,113281,3600.0118103710006,3601.089198425
c046,3,4,7,105154,89581,91217,91217,4200.014987916001,4201.228236919
c046,3,4,8,96942,82586,84127,84127,4800.022724574001,4801.37585773
c046,3,4,9,86381,72554,73872,73872,5400.025938375001,5401.485702337
c046,3,4,10,81710,68358,69730,69730,6000.030902127,6001.660931195
c046,3,4,11,66981,56203,57351,57351,6600.033574277,6601.796644699
# search time: 6600.034s
# total time: 26415.412s
c046,4,4,1,1269093,1118920,1237907,1237907,600.003465913,600.290171411
c046,4,4,2,415841,383006,393330,393330,1200.003486986,1200.480572089
c046,4,4,3,211896,187902,191864,191864,1800.0058924620002,1800.667405841
c046,4,4,4,226180,202473,206513,206513,2400.0072567630004,2400.777020315
c046,4,4,5,178649,158393,162085,162085,3000.0085501460003,3000.883805438
c046,4,4,6,126807,110574,112934,112934,3600.0208495600004,3600.994959405
c046,4,4,7,104792,89250,90819,90819,4200.022866783001,4201.133438345
c046,4,4,8,95810,81641,83235,83235,4800.024343119001,4801.230494183
c046,4,4,9,85508,71992,73280,73280,5400.025048055001,5401.33276769
c046,4,4,10,81369,68192,69555,69555,6000.030602207001,6001.437702064
c046,4,4,11,66544,55901,57007,57007,6600.036378914001,6601.734024718
# search time: 6600.036s
# total time: 33018.987s
