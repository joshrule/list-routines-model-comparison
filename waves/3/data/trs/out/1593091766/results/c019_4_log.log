    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c019_4.json out/1593091766/results/c019_4_best.csv out/1593091766/results/c019_4_predictions.csv out/1593091766/results/c019_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 2, 6, 7, 9]), o: IntList([8, 2, 6, 7, 9]) }
#   Datum { i: IntList([3, 7, 2, 0, 4, 9, 8]), o: IntList([3, 7, 2, 0, 4, 3, 8]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 7, 4, 0, 8, 9, 0]), o: IntList([1, 1, 7, 4, 0, 3, 9, 0]) }
#   Datum { i: IntList([7, 1, 8, 6, 5, 0, 4, 5, 3, 9]), o: IntList([7, 1, 8, 6, 5, 3, 4, 5, 3, 9]) }
#   Datum { i: IntList([9, 9, 9, 2, 0, 2, 3]), o: IntList([9, 9, 9, 2, 0, 3, 3]) }
#   Datum { i: IntList([1, 1, 8]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([4, 3, 5, 8, 3, 2, 7, 9, 1]), o: IntList([4, 3, 5, 8, 3, 3, 7, 9, 1]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6, 6, 6]) }
#   Datum { i: IntList([4, 5, 5, 0, 4, 2]), o: IntList([4, 5, 5, 0, 4, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c019,0,4,1,1120318,920517,1074820,1074820,600.003681565,601.880043657
c019,0,4,2,434594,401296,416932,416932,1200.003814897,1202.996476882
c019,0,4,3,216531,198689,200752,200752,1800.005416231,1804.162368816
c019,0,4,4,235487,213470,221315,221315,2400.005868049,2404.811086314
c019,0,4,5,96293,86182,88418,88418,3000.0067436010004,3005.887962878
c019,0,4,6,109588,95968,99243,99243,3600.01203474,3606.394622806
c019,0,4,7,84150,74393,77031,77031,4200.012660254,4207.057206737
c019,0,4,8,70241,61614,64247,64247,4800.021862028,4807.870152121
c019,0,4,9,69773,61310,63995,63995,5400.027531203,5408.463312977
c019,0,4,10,56823,49497,51703,51703,6000.030245548,6009.065510316
c019,0,4,11,51597,45247,47480,47480,6600.04268047,6609.562922835
# search time: 6600.043s
# total time: 6609.950s
c019,1,4,1,1167956,1037866,1141592,1141592,600.000137123,600.399735871
c019,1,4,2,442719,409568,424613,424613,1200.0005179549999,1200.809287861
c019,1,4,3,221992,205332,207333,207333,1800.00152097,1801.262278793
c019,1,4,4,233309,212138,219703,219703,2400.005221515,2401.537889392
c019,1,4,5,103290,91674,94429,94429,3000.01145406,3002.044214463
c019,1,4,6,106627,92751,96531,96531,3600.0153967099995,3602.280955927
c019,1,4,7,86494,76098,79525,79525,4200.025940627999,4202.591055021
c019,1,4,8,76133,66905,70265,70265,4800.036470487999,4802.889137542
c019,1,4,9,69244,60629,63688,63688,5400.037624682999,5403.233203956
c019,1,4,10,58877,51476,54006,54006,6000.047293844999,6003.56481982
c019,1,4,11,54564,47821,50381,50381,6600.055555317,6603.848353409
# search time: 6600.056s
# total time: 13214.429s
c019,2,4,1,1144706,1007149,1116540,1116540,600.002534346,600.268495073
c019,2,4,2,440363,407372,422824,422824,1200.003231407,1200.549962148
c019,2,4,3,221758,204159,206185,206185,1800.0037497399999,1800.829256707
c019,2,4,4,235573,213600,221476,221476,2400.008041646,2401.061267461
c019,2,4,5,97606,87082,89517,89517,3000.009217707,3001.352996263
c019,2,4,6,106912,93444,96707,96707,3600.011131137,3601.515599896
c019,2,4,7,83816,73765,76333,76333,4200.015325882,4201.717366275
c019,2,4,8,70391,61798,64391,64391,4800.0172025560005,4802.00192596
c019,2,4,9,69487,61159,63888,63888,5400.021878751,5402.262514867
c019,2,4,10,56503,49172,51316,51316,6000.024161982,6002.497639446
c019,2,4,11,53445,46822,49087,49087,6600.035205647,6602.719526794
# search time: 6600.035s
# total time: 19817.719s
c019,3,4,1,1079679,886186,1035871,1035871,600.000778661,600.166983292
c019,3,4,2,425890,393454,409197,409197,1200.001302654,1200.402960573
c019,3,4,3,226548,209695,211606,211606,1800.0048241640002,1800.637641254
c019,3,4,4,234642,212575,220384,220384,2400.0051822990004,2400.806575333
c019,3,4,5,88373,78801,80819,80819,3000.0107744640004,3001.048908148
c019,3,4,6,104239,90854,93708,93708,3600.0131116740004,3601.221548097
c019,3,4,7,83119,73062,75715,75715,4200.01774997,4201.419728516
c019,3,4,8,72893,63934,66751,66751,4800.0234848420005,4801.609650515
c019,3,4,9,68937,60578,63283,63283,5400.028127920001,5401.794467254
c019,3,4,10,56264,49075,51268,51268,6000.033930453001,6002.048175665
c019,3,4,11,52526,45830,48152,48152,6600.040585113001,6602.179891663
# search time: 6600.041s
# total time: 26420.748s
c019,4,4,1,1059021,867057,1015794,1015794,600.00006157,600.147523301
c019,4,4,2,425468,394008,408993,408993,1200.002063359,1200.361414693
c019,4,4,3,217977,200223,202265,202265,1800.004003115,1800.564868589
c019,4,4,4,233192,211651,219402,219402,2400.005904409,2400.712127401
c019,4,4,5,104911,93022,96052,96052,3000.0072693479997,3000.924386402
c019,4,4,6,106842,93150,96565,96565,3600.0099640099997,3601.045411354
c019,4,4,7,79922,69775,72358,72358,4200.013422123,4201.249432077
c019,4,4,8,71956,62865,65725,65725,4800.016165452,4801.440867304
c019,4,4,9,68495,60124,62890,62890,5400.02003231,5401.636590489
c019,4,4,10,54985,47821,50083,50083,6000.025763705,6001.827590576
c019,4,4,11,53298,46784,49056,49056,6600.031419007,6601.941723149
# search time: 6600.031s
# total time: 33023.274s
