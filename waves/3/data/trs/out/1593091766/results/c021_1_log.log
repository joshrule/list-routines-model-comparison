    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c021_1.json out/1593091766/results/c021_1_best.csv out/1593091766/results/c021_1_predictions.csv out/1593091766/results/c021_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 6, 9, 3]), o: IntList([1, 8, 6, 9, 3]) }
#   Datum { i: IntList([7, 4]), o: IntList([7, 8, 4]) }
#   Datum { i: IntList([0, 2, 3]), o: IntList([0, 8, 2, 3]) }
#   Datum { i: IntList([7, 9, 1, 2, 6, 3, 0, 4, 7, 5]), o: IntList([7, 8, 9, 1, 2, 6, 3, 0, 4, 7, 5]) }
#   Datum { i: IntList([0, 8, 6, 4, 0]), o: IntList([0, 8, 8, 6, 4, 0]) }
#   Datum { i: IntList([4, 9, 5, 1, 7, 3]), o: IntList([4, 8, 9, 5, 1, 7, 3]) }
#   Datum { i: IntList([1, 8, 1, 1, 6, 2, 1, 4, 4, 3]), o: IntList([1, 8, 8, 1, 1, 6, 2, 1, 4, 4, 3]) }
#   Datum { i: IntList([2, 9, 1, 7, 4, 6, 0]), o: IntList([2, 8, 9, 1, 7, 4, 6, 0]) }
#   Datum { i: IntList([9, 2, 1, 9, 3, 3, 1, 8, 9, 2]), o: IntList([9, 8, 2, 1, 9, 3, 3, 1, 8, 9, 2]) }
#   Datum { i: IntList([5, 5, 5, 5, 5, 5, 5, 5]), o: IntList([5, 8, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([6, 6, 0, 5, 2, 6, 0, 3, 2]), o: IntList([6, 8, 6, 0, 5, 2, 6, 0, 3, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c021,0,1,1,724114,632139,704505,704505,600.000074242,604.08518268
c021,0,1,2,273150,255021,262387,262387,1200.001111588,1205.742194091
c021,0,1,3,192038,178105,185692,185692,1800.003433417,1806.546219373
c021,0,1,4,154032,143946,149347,149347,2400.012642944,2407.212004851
c021,0,1,5,83467,76256,79238,79238,3000.015685491,3008.052841425
c021,0,1,6,70284,64237,66547,66547,3600.017951961,3608.801134307
c021,0,1,7,58639,53407,55245,55245,4200.024430279,4209.538443351
c021,0,1,8,43322,39284,40788,40788,4800.049962931,4810.322050225
c021,0,1,9,37167,33806,34928,34928,5400.05525953,5411.102486692
c021,0,1,10,29507,26834,27732,27732,6000.074480232,6011.951176471
c021,0,1,11,25475,23040,23838,23838,6600.100407612,6612.912764681
# search time: 6600.100s
# total time: 6613.104s
c021,1,1,1,697563,573426,668969,668969,600.000119838,600.330516832
c021,1,1,2,266806,249742,256719,256719,1200.001100596,1200.973954783
c021,1,1,3,200154,186696,193493,193493,1800.0064289870002,1801.375110794
c021,1,1,4,153018,143198,148435,148435,2400.0286759110004,2401.695209006
c021,1,1,5,83771,76811,79585,79585,3000.0340992790007,3002.060591883
c021,1,1,6,69593,63234,65862,65862,3600.0415384630005,3602.459595518
c021,1,1,7,56800,51425,53723,53723,4200.054022532,4202.930433764
c021,1,1,8,43035,39121,40505,40505,4800.054351251,4803.361901969
c021,1,1,9,36707,33552,34566,34566,5400.0546457380005,5403.807142414
c021,1,1,10,29387,26614,27505,27505,6000.057413888,6004.287212286
c021,1,1,11,25084,22849,23627,23627,6600.060535151,6604.899802581
# search time: 6600.061s
# total time: 13218.357s
c021,2,1,1,676735,553124,648350,648350,600.000050258,600.228091626
c021,2,1,2,281913,263184,270547,270547,1200.000236513,1200.646075181
c021,2,1,3,201966,188124,195069,195069,1800.003881992,1800.897028426
c021,2,1,4,148001,137364,143379,143379,2400.004267052,2401.105818549
c021,2,1,5,83717,76851,79650,79650,3000.0091524110003,3001.377036835
c021,2,1,6,70200,64092,66373,66373,3600.02500859,3601.631403632
c021,2,1,7,58254,53290,55013,55013,4200.027078456,4201.904612899
c021,2,1,8,43258,39116,40634,40634,4800.031430383,4802.172442399
c021,2,1,9,36746,33580,34714,34714,5400.036204888,5402.494959017
c021,2,1,10,29441,26818,27703,27703,6000.053218999999,6002.833144719
c021,2,1,11,25747,23404,24235,24235,6600.059561302,6603.202452762
# search time: 6600.060s
# total time: 19821.854s
c021,3,1,1,700519,573104,671208,671208,600.000100773,600.215678063
c021,3,1,2,263707,247000,253848,253848,1200.000668408,1200.536188653
c021,3,1,3,203939,190527,197180,197180,1800.014359147,1800.740573
c021,3,1,4,154903,143966,150035,150035,2400.022326068,2400.924286652
c021,3,1,5,83673,76680,79548,79548,3000.02515933,3001.125743066
c021,3,1,6,70777,64617,66969,66969,3600.025823651,3601.337875272
c021,3,1,7,56664,51659,53605,53605,4200.02962571,4201.549420438
c021,3,1,8,43408,39373,40765,40765,4800.050272902,4801.862184321
c021,3,1,9,36523,33139,34331,34331,5400.0646292540005,5402.088487241
c021,3,1,10,29337,26575,27552,27552,6000.079749068001,6002.328339694
c021,3,1,11,25169,22919,23691,23691,6600.094119556001,6602.547467126
# search time: 6600.094s
# total time: 26424.705s
c021,4,1,1,715679,609550,692420,692420,600.002802536,600.265539151
c021,4,1,2,277537,259607,266751,266751,1200.003325941,1200.521222076
c021,4,1,3,206203,192907,199347,199347,1800.008737266,1800.715449395
c021,4,1,4,151399,141182,146603,146603,2400.011027214,2400.871900137
c021,4,1,5,83856,76888,79623,79623,3000.0172334480003,3001.057242775
c021,4,1,6,69899,63795,66126,66126,3600.021391305,3601.226344018
c021,4,1,7,96056,87917,91180,91180,4200.023187055001,4201.377297706
c021,4,1,8,74106,67708,70015,70015,4800.024963552,4801.57739542
c021,4,1,9,62507,56924,58911,58911,5400.032573393,5401.788014457
c021,4,1,10,50299,45817,47315,47315,6000.038032575,6002.028010894
c021,4,1,11,42553,38161,39750,39750,6600.044449763001,6602.26745145
# search time: 6600.044s
# total time: 33027.295s
