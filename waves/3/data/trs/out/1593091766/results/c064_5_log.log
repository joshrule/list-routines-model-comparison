    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c064_5.json out/1593091766/results/c064_5_best.csv out/1593091766/results/c064_5_predictions.csv out/1593091766/results/c064_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 2]), o: IntList([]) }
#   Datum { i: IntList([4, 9, 4, 9, 4, 9, 9, 9, 9, 9]), o: IntList([9, 4, 9, 4, 9, 9, 9, 9]) }
#   Datum { i: IntList([3, 0, 3]), o: IntList([0]) }
#   Datum { i: IntList([2, 0, 3, 1, 4, 8]), o: IntList([0, 3, 1, 4]) }
#   Datum { i: IntList([2, 1, 1, 2, 2, 7, 2, 7]), o: IntList([1, 1, 2, 2, 7, 2]) }
#   Datum { i: IntList([4, 5, 0, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([6, 6, 5, 8, 5, 6, 5, 8, 4, 1]), o: IntList([6, 5, 8, 5, 6, 5, 8, 4]) }
#   Datum { i: IntList([6, 1, 9, 5, 0, 2, 3, 7]), o: IntList([1, 9, 5, 0, 2, 3]) }
#   Datum { i: IntList([3, 8, 3, 8, 3]), o: IntList([8, 3, 8]) }
#   Datum { i: IntList([2, 0, 4, 5, 7, 9, 8]), o: IntList([0, 4, 5, 7, 9]) }
#   Datum { i: IntList([5, 7, 7, 9, 8, 1, 4, 0, 6]), o: IntList([7, 7, 9, 8, 1, 4, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c064,0,5,1,1384673,1222751,1351265,1351265,600.000087465,602.031648105
c064,0,5,2,1002282,927974,978444,978444,1200.0056514130001,1202.808526506
c064,0,5,3,330826,307060,316302,316302,1800.0061605370001,1803.458868757
c064,0,5,4,269783,250127,259442,259442,2400.006387022,2403.991784923
c064,0,5,5,227174,208112,214739,214739,3000.011092227,3004.422006741
c064,0,5,6,164187,147847,151894,151894,3600.014364031,3604.87355594
c064,0,5,7,146534,132798,135913,135913,4200.023312903,4205.324868755
c064,0,5,8,98339,88451,90824,90824,4800.037133408,4805.796316284
c064,0,5,9,82335,73934,75835,75835,5400.039141133,5406.3105037
c064,0,5,10,72321,66611,69217,69217,6000.0427239,6006.835996274
c064,0,5,11,65009,58391,60073,60073,6600.052669073,6607.337394845
# search time: 6600.053s
# total time: 6608.028s
c064,1,5,1,1347339,1161577,1306930,1306930,600.000759799,600.36274799
c064,1,5,2,988069,914457,964808,964808,1200.005699498,1200.727344321
c064,1,5,3,332075,307758,317658,317658,1800.006101896,1801.001622699
c064,1,5,4,265487,246265,254804,254804,2400.008363587,2401.294776545
c064,1,5,5,219437,200662,206698,206698,3000.0123493660003,3001.572673048
c064,1,5,6,163910,147138,150679,150679,3600.014574619,3601.813183883
c064,1,5,7,145182,131017,134332,134332,4200.027261294,4202.078814327
c064,1,5,8,98060,88396,90810,90810,4800.028522554,4802.337594338
c064,1,5,9,81911,73332,75219,75219,5400.03078475,5402.629365852
c064,1,5,10,73199,67718,70596,70596,6000.037007419,6002.876162922
c064,1,5,11,64027,56473,57875,57875,6600.0409234399995,6603.181640902
# search time: 6600.041s
# total time: 13211.719s
c064,2,5,1,1347725,1178119,1311948,1311948,600.000455003,600.326047779
c064,2,5,2,999411,924651,975548,975548,1200.0062771439998,1200.623799837
c064,2,5,3,330120,305782,315128,315128,1800.0067402539999,1800.842535545
c064,2,5,4,264989,245796,254389,254389,2400.0069969779997,2401.045457567
c064,2,5,5,222071,203718,210077,210077,3000.007879373,3001.20184535
c064,2,5,6,162595,146058,149760,149760,3600.011521978,3601.384233473
c064,2,5,7,147253,132920,136039,136039,4200.011935449,4201.556792373
c064,2,5,8,96796,87079,89348,89348,4800.014471861,4801.782490686
c064,2,5,9,81291,72843,74530,74530,5400.020366081,5401.977705452
c064,2,5,10,70851,65443,67779,67779,6000.023875473,6002.186603891
c064,2,5,11,63922,56254,57565,57565,6600.031644982,6602.389877611
# search time: 6600.032s
# total time: 19815.050s
c064,3,5,1,1341203,1168805,1304541,1304541,600.000108859,600.259363253
c064,3,5,2,982229,909496,958998,958998,1200.000382986,1200.518346502
c064,3,5,3,327451,303476,312853,312853,1800.0020436099999,1800.691659236
c064,3,5,4,262317,243312,251665,251665,2400.005386843,2400.8493021
c064,3,5,5,217593,199071,204963,204963,3000.0091509510003,3000.990608542
c064,3,5,6,162983,146493,150233,150233,3600.0119040080003,3601.122310541
c064,3,5,7,143938,129609,132723,132723,4200.013970141001,4201.273629286
c064,3,5,8,96995,87144,89317,89317,4800.022467352001,4801.473521342
c064,3,5,9,81369,72749,74465,74465,5400.026776317,5401.608618158
c064,3,5,10,71626,66184,68605,68605,6000.0292089350005,6001.775677232
c064,3,5,11,63301,56130,57438,57438,6600.031152089001,6601.927671197
# search time: 6600.031s
# total time: 26417.686s
c064,4,5,1,1342112,1160781,1302896,1302896,600.00098783,600.266395694
c064,4,5,2,996979,924648,973567,973567,1200.001094445,1200.513152067
c064,4,5,3,331109,307261,317089,317089,1800.001912493,1800.667106966
c064,4,5,4,267058,247639,256634,256634,2400.0044181920002,2400.79860764
c064,4,5,5,217095,198516,204385,204385,3000.013290313,3000.93598504
c064,4,5,6,163280,147089,151029,151029,3600.014309259,3601.041163505
c064,4,5,7,146089,131724,134852,134852,4200.017451377,4201.167815121
c064,4,5,8,97223,87392,89765,89765,4800.018992392,4801.329858828
c064,4,5,9,82945,73455,75335,75335,5400.02104262,5401.443025697
c064,4,5,10,72757,67188,70106,70106,6000.029129857,6001.539632971
c064,4,5,11,65036,58519,60193,60193,6600.047023662,6601.709865682
# search time: 6600.047s
# total time: 33020.134s
