    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c046_3.json out/1593091766/results/c046_3_best.csv out/1593091766/results/c046_3_predictions.csv out/1593091766/results/c046_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 9, 6, 9, 6]), o: IntList([7, 6, 9, 6, 9, 6]) }
#   Datum { i: IntList([1, 4]), o: IntList([7, 1, 4]) }
#   Datum { i: IntList([]), o: IntList([7]) }
#   Datum { i: IntList([4, 7, 0, 5, 0, 3]), o: IntList([7, 4, 7, 0, 5, 0, 3]) }
#   Datum { i: IntList([7, 3, 5]), o: IntList([7, 7, 3, 5]) }
#   Datum { i: IntList([9, 1, 6, 5, 2, 1, 0, 1, 9]), o: IntList([7, 9, 1, 6, 5, 2, 1, 0, 1, 9]) }
#   Datum { i: IntList([3, 3, 4, 3, 3, 8, 4, 4]), o: IntList([7, 3, 3, 4, 3, 3, 8, 4, 4]) }
#   Datum { i: IntList([2, 2, 0, 0, 2, 2, 0, 2, 0, 2]), o: IntList([7, 2, 2, 0, 0, 2, 2, 0, 2, 0, 2]) }
#   Datum { i: IntList([8, 8, 5, 5]), o: IntList([7, 8, 8, 5, 5]) }
#   Datum { i: IntList([9]), o: IntList([7, 9]) }
#   Datum { i: IntList([3, 8, 6, 7, 0, 3, 4]), o: IntList([7, 3, 8, 6, 7, 0, 3, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c046,0,3,1,1364058,1201183,1329453,1329453,600.000222222,601.950213584
c046,0,3,2,452921,418893,429888,429888,1200.000326364,1202.907695769
c046,0,3,3,391546,352847,361682,361682,1800.0006894040002,1803.617092606
c046,0,3,4,338202,308792,315719,315719,2400.0008233860003,2404.033203128
c046,0,3,5,232953,208307,212804,212804,3000.0022319530003,3004.404282681
c046,0,3,6,196220,175302,178885,178885,3600.0027784780004,3604.745351008
c046,0,3,7,137072,120584,123419,123419,4200.006082035001,4205.036868014
c046,0,3,8,106677,91479,93864,93864,4800.006656888001,4805.315774982
c046,0,3,9,83179,70616,72289,72289,5400.010381359001,5405.616816555
c046,0,3,10,76244,64765,66339,66339,6000.017671944001,6005.927007431
c046,0,3,11,76714,65631,66945,66945,6600.019372204001,6606.236854188
# search time: 6600.019s
# total time: 6606.589s
c046,1,3,1,1349352,1199258,1318924,1318924,600.005188814,600.394254993
c046,1,3,2,465691,430356,441613,441613,1200.0099600600001,1200.765826203
c046,1,3,3,385803,347143,355995,355995,1800.0099785720001,1801.056047648
c046,1,3,4,333944,304760,311714,311714,2400.012619987,2401.26541431
c046,1,3,5,230339,206063,210425,210425,3000.0144347100004,3001.465256899
c046,1,3,6,192610,172069,175873,175873,3600.0266569270007,3601.655668862
c046,1,3,7,136371,120088,122858,122858,4200.0288816970005,4201.809816017
c046,1,3,8,106177,91478,93597,93597,4800.032827607,4801.98166607
c046,1,3,9,82663,69957,71590,71590,5400.035152731,5402.139121525
c046,1,3,10,75814,64513,66019,66019,6000.057763584,6002.318059758
c046,1,3,11,75848,64886,66213,66213,6600.060143699,6602.497788364
# search time: 6600.060s
# total time: 13209.645s
c046,2,3,1,1337529,1170698,1302831,1302831,600.000067669,600.286405887
c046,2,3,2,452707,418236,429451,429451,1200.001553186,1200.543149563
c046,2,3,3,394274,354611,363473,363473,1800.010769586,1800.759827975
c046,2,3,4,337635,307462,314390,314390,2400.011395331,2400.914416207
c046,2,3,5,227779,203122,208398,208398,3000.014305142,3001.051061066
c046,2,3,6,192664,172230,176008,176008,3600.014975445,3601.189358459
c046,2,3,7,136044,119841,122657,122657,4200.017145368,4201.307160923
c046,2,3,8,106220,91543,93757,93757,4800.023007303999,4801.443240191
c046,2,3,9,82418,69622,71174,71174,5400.023870552,5401.530084679
c046,2,3,10,75703,64552,66114,66114,6000.0276977369995,6001.671011365
c046,2,3,11,75892,64905,66152,66152,6600.031256609,6601.800057435
# search time: 6600.031s
# total time: 19811.995s
c046,3,3,1,1336999,1184114,1305886,1305886,600.000059941,600.316674005
c046,3,3,2,457003,422792,433737,433737,1200.001349174,1200.530768061
c046,3,3,3,382014,343269,351918,351918,1800.0018124120002,1800.710052711
c046,3,3,4,334148,305103,311761,311761,2400.003504451,2400.84643597
c046,3,3,5,230703,205962,210561,210561,3000.005349463,3000.983380777
c046,3,3,6,192780,171814,175659,175659,3600.006664991,3601.104085302
c046,3,3,7,135689,119188,122196,122196,4200.0105754100005,4201.207370742
c046,3,3,8,112035,95955,98051,98051,4800.01205157,4801.295508887
c046,3,3,9,82029,69584,71252,71252,5400.017804063,5401.392559548
c046,3,3,10,75600,64274,65743,65743,6000.061816745,6001.518278213
c046,3,3,11,75509,64593,65848,65848,6600.0621746100005,6601.636059132
# search time: 6600.062s
# total time: 26414.179s
c046,4,3,1,1280748,1050073,1228073,1228073,600.006597729,600.191657107
c046,4,3,2,447888,415009,425573,425573,1200.013405796,1200.387419547
c046,4,3,3,382815,343885,352416,352416,1800.015392353,1800.541797366
c046,4,3,4,334716,304448,311585,311585,2400.017263147,2400.655195141
c046,4,3,5,226622,202026,207096,207096,3000.018413246,3000.76267197
c046,4,3,6,192096,171718,175500,175500,3600.0186468459997,3600.849559474
c046,4,3,7,136766,120308,123158,123158,4200.019411458,4200.925014868
c046,4,3,8,105603,90894,93023,93023,4800.02642091,4801.014020602
c046,4,3,9,81915,69472,71114,71114,5400.0289181729995,5401.111663312
c046,4,3,10,74602,63358,65031,65031,6000.029516275999,6001.194621959
c046,4,3,11,75380,64357,65672,65672,6600.031981691999,6601.275835886
# search time: 6600.032s
# total time: 33016.204s
