    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c080_1.json out/1593091766/results/c080_1_best.csv out/1593091766/results/c080_1_predictions.csv out/1593091766/results/c080_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([5, 5, 5, 0]) }
#   Datum { i: IntList([6, 7, 9, 1, 4, 8, 2, 0, 2, 3]), o: IntList([3, 2, 0, 2, 8, 4, 1, 9, 7, 6]) }
#   Datum { i: IntList([6, 3, 1]), o: IntList([1, 3, 6]) }
#   Datum { i: IntList([0, 7]), o: IntList([7, 0]) }
#   Datum { i: IntList([9, 5, 3, 0, 7, 4, 7, 1, 6]), o: IntList([6, 1, 7, 4, 7, 0, 3, 5, 9]) }
#   Datum { i: IntList([9, 3, 3, 9, 3, 9, 9, 3, 3]), o: IntList([3, 3, 9, 9, 3, 9, 3, 3, 9]) }
#   Datum { i: IntList([0, 0, 0, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8, 0, 0, 0]) }
#   Datum { i: IntList([4, 2, 1, 0, 6]), o: IntList([6, 0, 1, 2, 4]) }
#   Datum { i: IntList([6, 2, 5, 7]), o: IntList([7, 5, 2, 6]) }
#   Datum { i: IntList([3, 3, 8, 4, 0, 7, 0, 5]), o: IntList([5, 0, 7, 0, 4, 8, 3, 3]) }
#   Datum { i: IntList([6, 7, 5, 1, 2, 4]), o: IntList([4, 2, 1, 5, 7, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c080,0,1,1,1282870,1055303,1231232,1231232,600.003557298,601.726526456
c080,0,1,2,527534,494339,509308,509308,1200.003714806,1202.689054287
c080,0,1,3,222513,205087,206555,206555,1800.004176336,1803.574827992
c080,0,1,4,194970,176843,177429,177429,2400.007541692,2404.332695999
c080,0,1,5,185845,167205,167872,167872,3000.009475305,3004.875906926
c080,0,1,6,121043,109505,110150,110150,3600.015767434,3605.497478466
c080,0,1,7,98641,88486,88879,88879,4200.0187501069995,4206.03068759
c080,0,1,8,77884,69764,70166,70166,4800.037559435,4806.700021642
c080,0,1,9,70148,63200,63431,63431,5400.038051699,5407.315934887
c080,0,1,10,64468,58760,59099,59099,6000.051373818,6007.844286995
c080,0,1,11,54213,49785,50116,50116,6600.054505605,6608.476003084
# search time: 6600.055s
# total time: 6608.909s
c080,1,1,1,1310797,1143649,1275112,1275112,600.00012488,600.398656565
c080,1,1,2,553513,519046,533487,533487,1200.000227569,1200.775922344
c080,1,1,3,214187,196632,198096,198096,1800.0019955129999,1801.095447101
c080,1,1,4,221831,201125,201717,201717,2400.0028564629997,2401.408391732
c080,1,1,5,212259,190282,190838,190838,3000.0030933049998,3001.673854814
c080,1,1,6,132438,120309,120988,120988,3600.006738232,3602.007251448
c080,1,1,7,112259,101250,101705,101705,4200.008649171999,4202.272513114
c080,1,1,8,90163,81225,81673,81673,4800.019458749,4802.596370002
c080,1,1,9,79670,71352,71585,71585,5400.0232466649995,5402.845882432
c080,1,1,10,72256,64612,64814,64814,6000.0293394909995,6003.18658378
c080,1,1,11,60228,54881,55179,55179,6600.037527856999,6603.57433672
# search time: 6600.038s
# total time: 13213.308s
c080,2,1,1,1455166,1192093,1395260,1395260,600.002710324,600.248344862
c080,2,1,2,589489,554430,570304,570304,1200.0041500799998,1200.523082007
c080,2,1,3,241171,221714,223351,223351,1800.0046506449999,1800.792506443
c080,2,1,4,223962,203235,203819,203819,2400.005242883,2401.000891481
c080,2,1,5,212304,191482,192221,192221,3000.015910194,3001.184561926
c080,2,1,6,128808,116933,117582,117582,3600.019833247,3601.420043394
c080,2,1,7,102824,92381,92656,92656,4200.021916412,4201.578962568
c080,2,1,8,86229,77256,77647,77647,4800.023966705,4801.770077474
c080,2,1,9,76792,68833,69061,69061,5400.030444356,5401.955072481
c080,2,1,10,70946,64715,65043,65043,6000.031993028,6002.130001346
c080,2,1,11,58455,53430,53743,53743,6600.033266015,6602.335498301
# search time: 6600.033s
# total time: 19816.900s
c080,3,1,1,1339715,1095670,1284772,1284772,600.007743703,600.197837058
c080,3,1,2,586829,550674,566133,566133,1200.008127456,1200.417672992
c080,3,1,3,235826,217317,218864,218864,1800.008547163,1800.597312773
c080,3,1,4,211935,192558,193158,193158,2400.010284518,2400.772756402
c080,3,1,5,201283,181135,181829,181829,3000.01297273,3000.892877369
c080,3,1,6,133431,120884,121546,121546,3600.013771896,3601.081238413
c080,3,1,7,112014,100656,101119,101119,4200.016631755,4201.2158764
c080,3,1,8,90267,80722,81168,81168,4800.018763651,4801.375752064
c080,3,1,9,79813,71483,71712,71712,5400.026601162,5401.54255073
c080,3,1,10,74631,66560,66860,66860,6000.028918274999,6001.712093593
c080,3,1,11,61386,56098,56407,56407,6600.036293461999,6601.926718485
# search time: 6600.036s
# total time: 26419.699s
c080,4,1,1,1494138,1291938,1450360,1450360,600.001787133,600.326899988
c080,4,1,2,615009,575882,592988,592988,1200.0031294169999,1200.533973248
c080,4,1,3,239409,219558,221330,221330,1800.0079266159998,1800.697939138
c080,4,1,4,221814,201271,201963,201963,2400.008941523,2400.840579621
c080,4,1,5,212168,190740,191478,191478,3000.01058953,3000.953983091
c080,4,1,6,138186,125054,125834,125834,3600.010786163,3601.101229322
c080,4,1,7,107781,96711,97008,97008,4200.011418074,4201.212399499
c080,4,1,8,88903,79314,79650,79650,4800.015628293,4801.378927591
c080,4,1,9,82148,74150,74475,74475,5400.019794565,5401.529666678
c080,4,1,10,72809,65369,65804,65804,6000.022605482,6001.686706282
c080,4,1,11,62601,57208,57577,57577,6600.0306101549995,6601.794468337
# search time: 6600.031s
# total time: 33022.335s
