    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c046_2.json out/1593091766/results/c046_2_best.csv out/1593091766/results/c046_2_predictions.csv out/1593091766/results/c046_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 3, 5]), o: IntList([7, 7, 3, 5]) }
#   Datum { i: IntList([9]), o: IntList([7, 9]) }
#   Datum { i: IntList([9, 1, 6, 5, 2, 1, 0, 1, 9]), o: IntList([7, 9, 1, 6, 5, 2, 1, 0, 1, 9]) }
#   Datum { i: IntList([3, 8, 6, 7, 0, 3, 4]), o: IntList([7, 3, 8, 6, 7, 0, 3, 4]) }
#   Datum { i: IntList([4, 7, 0, 5, 0, 3]), o: IntList([7, 4, 7, 0, 5, 0, 3]) }
#   Datum { i: IntList([6, 9, 6, 9, 6]), o: IntList([7, 6, 9, 6, 9, 6]) }
#   Datum { i: IntList([1, 4]), o: IntList([7, 1, 4]) }
#   Datum { i: IntList([]), o: IntList([7]) }
#   Datum { i: IntList([2, 2, 0, 0, 2, 2, 0, 2, 0, 2]), o: IntList([7, 2, 2, 0, 0, 2, 2, 0, 2, 0, 2]) }
#   Datum { i: IntList([3, 3, 4, 3, 3, 8, 4, 4]), o: IntList([7, 3, 3, 4, 3, 3, 8, 4, 4]) }
#   Datum { i: IntList([8, 8, 5, 5]), o: IntList([7, 8, 8, 5, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c046,0,2,1,1357613,1179407,1319639,1319639,600.000222511,601.946709417
c046,0,2,2,611757,570473,585828,585828,1200.000529189,1202.895215911
c046,0,2,3,431492,405478,419096,419096,1800.000784104,1803.291344994
c046,0,2,4,230096,211674,218477,218477,2400.001746746,2403.604689959
c046,0,2,5,167717,153570,158254,158254,3000.0056070090004,3003.962550695
c046,0,2,6,135447,123139,126960,126960,3600.0059535950004,3604.303971647
c046,0,2,7,120651,108489,112826,112826,4200.007849214,4204.600211971
c046,0,2,8,108360,94372,96384,96384,4800.009708335,4804.999848993
c046,0,2,9,109936,93378,95187,95187,5400.009802165,5405.292956022
c046,0,2,10,84271,70721,72060,72060,6000.018313214,6005.598299715
c046,0,2,11,70913,58887,60059,60059,6600.025918596,6605.929887632
# search time: 6600.026s
# total time: 6606.324s
c046,1,2,1,1304050,1133087,1267588,1267588,600.002171792,600.362822184
c046,1,2,2,608331,567129,582601,582601,1200.002706889,1200.730373527
c046,1,2,3,416625,393094,406602,406602,1800.0051770649998,1800.938081974
c046,1,2,4,228510,209739,216776,216776,2400.012255493,2401.119648821
c046,1,2,5,164139,149720,154914,154914,3000.013024371,3001.301189704
c046,1,2,6,134481,122888,126609,126609,3600.014484113,3601.491050903
c046,1,2,7,120579,108960,112941,112941,4200.01600709,4201.663675179
c046,1,2,8,108723,95233,97284,97284,4800.019345949,4801.879521354
c046,1,2,9,109508,92896,94811,94811,5400.0195075930005,5402.058188654
c046,1,2,10,84335,71064,72551,72551,6000.019594216001,6002.237016686
c046,1,2,11,70602,58640,59796,59796,6600.025374625001,6602.444303952
# search time: 6600.025s
# total time: 13209.430s
c046,2,2,1,1372937,1191838,1334050,1334050,600.000292827,600.291896026
c046,2,2,2,609339,568040,583513,583513,1200.001173376,1200.562268707
c046,2,2,3,432371,406137,420096,420096,1800.0046397840001,1800.7277986
c046,2,2,4,223339,204430,211745,211745,2400.0057093230002,2400.854085614
c046,2,2,5,166168,151876,156852,156852,3000.0116397340003,3000.97815093
c046,2,2,6,133919,122028,125778,125778,3600.013501923,3601.091132701
c046,2,2,7,118130,106975,111170,111170,4200.014470871,4201.211410153
c046,2,2,8,107747,94160,96136,96136,4800.018683045,4801.347608215
c046,2,2,9,109462,92633,94495,94495,5400.019719438,5401.466286817
c046,2,2,10,83513,70469,71824,71824,6000.023862735,6001.574360434
c046,2,2,11,70663,58332,59561,59561,6600.033202549,6601.681442062
# search time: 6600.033s
# total time: 19811.646s
c046,3,2,1,1365383,1202932,1331984,1331984,600.001576951,600.317986351
c046,3,2,2,606000,564766,580239,580239,1200.002070204,1200.540631487
c046,3,2,3,430880,405381,419037,419037,1800.013436448,1800.696717157
c046,3,2,4,226025,207621,214875,214875,2400.014779958,2400.806801503
c046,3,2,5,162028,146689,152822,152822,3000.015604501,3000.920784842
c046,3,2,6,132730,120930,124895,124895,3600.019585725,3601.031689873
c046,3,2,7,123080,111707,115062,115062,4200.0199575080005,4201.113608129
c046,3,2,8,107110,93275,95187,95187,4800.022867991001,4801.235997474
c046,3,2,9,108891,92312,94142,94142,5400.0235366570005,5401.327834422
c046,3,2,10,83931,70672,72194,72194,6000.040132916,6001.445676605
c046,3,2,11,70756,58600,59732,59732,6600.045116948,6601.548418024
# search time: 6600.045s
# total time: 26413.728s
c046,4,2,1,1334911,1162526,1299286,1299286,600.011538869,600.265780905
c046,4,2,2,601039,560406,575797,575797,1200.0187056539999,1200.473419297
c046,4,2,3,426162,401645,414959,414959,1800.0202982199999,1800.610967944
c046,4,2,4,228549,210716,217241,217241,2400.024403692,2400.704915009
c046,4,2,5,164802,150884,155448,155448,3000.027430918,3000.801823325
c046,4,2,6,134846,123185,126705,126705,3600.028527806,3600.893421857
c046,4,2,7,120056,109233,112552,112552,4200.03156514,4200.981022274
c046,4,2,8,104223,90054,91937,91937,4800.045591901,4801.106423434
c046,4,2,9,109008,92801,94647,94647,5400.048092735,5401.189988066
c046,4,2,10,83497,70197,71698,71698,6000.056947343,6001.269682119
c046,4,2,11,69959,58178,59302,59302,6600.063113976,6601.3378662
# search time: 6600.063s
# total time: 33015.586s
