    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c029_1.json out/1593091766/results/c029_1_best.csv out/1593091766/results/c029_1_predictions.csv out/1593091766/results/c029_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 1, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([2, 2]), o: IntList([]) }
#   Datum { i: IntList([5, 1, 0, 0, 5, 8, 1, 8, 3, 0]), o: IntList([0, 0, 5, 8, 1, 8, 3, 0]) }
#   Datum { i: IntList([6, 6, 6]), o: IntList([6]) }
#   Datum { i: IntList([7, 0, 4, 1, 7]), o: IntList([4, 1, 7]) }
#   Datum { i: IntList([5, 9, 1, 3, 0, 0, 3]), o: IntList([1, 3, 0, 0, 3]) }
#   Datum { i: IntList([5, 2, 2, 2, 5, 2]), o: IntList([2, 2, 5, 2]) }
#   Datum { i: IntList([2, 3, 1, 6, 0, 9, 5, 7, 4, 8]), o: IntList([1, 6, 0, 9, 5, 7, 4, 8]) }
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([7, 5, 1, 9, 4, 4, 4, 8]), o: IntList([1, 9, 4, 4, 4, 8]) }
#   Datum { i: IntList([2, 7, 6, 2, 0, 6, 7, 6, 5]), o: IntList([6, 2, 0, 6, 7, 6, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c029,0,1,1,1133152,974651,1098714,1098714,600.001464473,602.035150125
c029,0,1,2,639980,603001,620437,620437,1200.001685747,1203.148521446
c029,0,1,3,577224,541734,560726,560726,1800.002327401,1803.715805321
c029,0,1,4,235137,221354,228008,228008,2400.006904891,2404.318705731
c029,0,1,5,219246,206109,212413,212413,3000.0113350809997,3004.867530916
c029,0,1,6,165718,156063,160978,160978,3600.016353778,3605.473973322
c029,0,1,7,143393,131275,136185,136185,4200.019282788,4206.037458223
c029,0,1,8,121142,110112,114157,114157,4800.019709603,4806.592643422
c029,0,1,9,92419,83503,86908,86908,5400.024397813,5407.216343141
c029,0,1,10,90476,81589,85144,85144,6000.0316402650005,6007.843645428
c029,0,1,11,75919,68260,71303,71303,6600.0348425600005,6608.422017914
# search time: 6600.035s
# total time: 6608.744s
c029,1,1,1,1114314,916164,1069089,1069089,600.004530883,600.229534511
c029,1,1,2,633826,595997,613883,613883,1200.004978933,1200.626465407
c029,1,1,3,583997,549752,567982,567982,1800.008484444,1800.898810067
c029,1,1,4,232813,218832,225796,225796,2400.009984897,2401.174647831
c029,1,1,5,211050,198589,204801,204801,3000.010919423,3001.456006357
c029,1,1,6,163920,154289,159237,159237,3600.011124128,3601.789351099
c029,1,1,7,142815,130614,135567,135567,4200.013086326,4202.065381471
c029,1,1,8,71689,64922,67459,67459,4800.01434317,4802.389182156
c029,1,1,9,52543,47296,49283,49283,5400.027269207,5402.732690994
c029,1,1,10,51193,46067,48061,48061,6000.033664412,6002.975182301
c029,1,1,11,43192,39037,40717,40717,6600.048825538,6603.309480843
# search time: 6600.049s
# total time: 13212.553s
c029,2,1,1,672271,548986,643917,643917,600.006937771,600.188868125
c029,2,1,2,403135,379038,390053,390053,1200.0069631800002,1200.497260111
c029,2,1,3,362988,339522,351647,351647,1800.0093337540002,1800.746771778
c029,2,1,4,143080,133581,138229,138229,2400.009907825,2400.989565867
c029,2,1,5,127515,119126,123328,123328,3000.011024788,3001.244429651
c029,2,1,6,99757,93131,96662,96662,3600.0147934250003,3601.501036121
c029,2,1,7,83565,76193,79203,79203,4200.023648762,4201.705479513
c029,2,1,8,71528,64705,67346,67346,4800.024061195,4801.896373765
c029,2,1,9,52034,46839,48739,48739,5400.026440125001,5402.229837874
c029,2,1,10,49792,44746,46633,46633,6000.0392764690005,6002.431639545
c029,2,1,11,43446,39129,40862,40862,6600.050657326001,6602.615744165
# search time: 6600.051s
# total time: 19815.622s
c029,3,1,1,687679,561034,658589,658589,600.001342186,600.167564601
c029,3,1,2,404436,380126,391328,391328,1200.007335962,1200.428493465
c029,3,1,3,370056,345150,358092,358092,1800.008153752,1800.641691189
c029,3,1,4,142886,133747,138064,138064,2400.012654478,2400.856304446
c029,3,1,5,127478,118871,123169,123169,3000.014106732,3001.055191838
c029,3,1,6,99787,93214,96775,96775,3600.014753289,3601.242670015
c029,3,1,7,132913,121717,126268,126268,4200.0175325380005,4201.441287115
c029,3,1,8,119940,108776,113039,113039,4800.019026302,4801.632897313
c029,3,1,9,91370,82526,85917,85917,5400.023498549001,5401.842693388
c029,3,1,10,89755,81125,84528,84528,6000.029235700001,6002.039884177
c029,3,1,11,76488,68728,71787,71787,6600.0312551960005,6602.235780515
# search time: 6600.031s
# total time: 26418.286s
c029,4,1,1,1076395,881628,1032439,1032439,600.000085973,600.152829425
c029,4,1,2,633195,597568,614018,614018,1200.004236961,1200.390847931
c029,4,1,3,576171,542467,560696,560696,1800.004359692,1800.576841477
c029,4,1,4,229098,215376,222178,222178,2400.005568718,2400.734570273
c029,4,1,5,213535,200567,206927,206927,3000.0066312830004,3000.888182423
c029,4,1,6,165721,156359,160985,160985,3600.0084508650007,3601.052326237
c029,4,1,7,140099,128422,133109,133109,4200.012177359001,4201.218123896
c029,4,1,8,119448,108274,112510,112510,4800.0126761910005,4801.352505641
c029,4,1,9,91524,82871,86227,86227,5400.014631634001,5401.476928804
c029,4,1,10,88795,80129,83480,83480,6000.018054602,6001.633960894
c029,4,1,11,76193,68612,71602,71602,6600.021390299,6601.908001844
# search time: 6600.021s
# total time: 33020.571s
