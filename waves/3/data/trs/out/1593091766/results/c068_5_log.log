    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c068_5.json out/1593091766/results/c068_5_best.csv out/1593091766/results/c068_5_predictions.csv out/1593091766/results/c068_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c068,0,5,1,1100310,900741,1054911,1054911,600.001859407,601.873666245
c068,0,5,2,216314,200297,205747,205747,1200.0058800870002,1203.185530074
c068,0,5,3,154108,144208,145367,145367,1800.011388152,1804.31438501
c068,0,5,4,111071,103814,104164,104164,2400.01448466,2406.131730765
c068,0,5,5,40084,37101,37251,37251,3000.015260143,3007.289224721
c068,0,5,6,35927,33591,33702,33702,3600.049046643,3608.132212048
c068,0,5,7,27380,25205,25481,25481,4200.061230018,4208.922840677
c068,0,5,8,26189,23912,24206,24206,4800.076646498,4809.725687052
c068,0,5,9,21327,19068,19309,19309,5400.0943343,5410.647315727
c068,0,5,10,17861,15719,15910,15910,6000.130203849,6011.608597225
c068,0,5,11,18029,15533,15699,15699,6600.153327074,6612.441130438
# search time: 6600.153s
# total time: 6612.727s
c068,1,5,1,678626,554376,650064,650064,600.011875216,600.306052131
c068,1,5,2,132720,122847,126215,126215,1200.014054154,1200.918764278
c068,1,5,3,92650,86835,87576,87576,1800.019768091,1801.522677649
c068,1,5,4,67009,63146,63421,63421,2400.028395847,2402.064423092
c068,1,5,5,41557,38671,38863,38863,3000.05589938,3002.680119927
c068,1,5,6,36434,34180,34389,34389,3600.0575222429998,3603.117223705
c068,1,5,7,28189,26072,26348,26348,4200.059448665999,4203.613320872
c068,1,5,8,25230,22321,22663,22663,4800.075000174,4804.137217028
c068,1,5,9,20503,18157,18412,18412,5400.096621867,5404.600243854
c068,1,5,10,17757,15554,15747,15747,6000.144615213,6004.986085436
c068,1,5,11,30037,25552,25761,25761,6600.1613652940005,6605.361039357
# search time: 6600.161s
# total time: 13218.693s
c068,2,5,1,1067308,920722,1035928,1035928,600.000008422,600.330423684
c068,2,5,2,217955,202087,207532,207532,1200.010317027,1200.716484174
c068,2,5,3,151781,141784,143022,143022,1800.010453968,1801.079720338
c068,2,5,4,112346,105556,106002,106002,2400.014323042,2401.412001676
c068,2,5,5,69845,64814,65066,65066,3000.0255581869997,3001.714496601
c068,2,5,6,62345,58171,58391,58391,3600.0273747839997,3602.001302373
c068,2,5,7,48695,44717,45084,45084,4200.031608019,4202.338756968
c068,2,5,8,45389,41013,41411,41411,4800.0429214,4802.639527654
c068,2,5,9,35386,31711,32071,32071,5400.057639328999,5402.962506689
c068,2,5,10,30779,26986,27244,27244,6000.07896346,6003.320243293
c068,2,5,11,29837,25020,25285,25285,6600.096788108,6603.683070778
# search time: 6600.097s
# total time: 19822.723s
c068,3,5,1,1099578,900875,1054260,1054260,600.000464442,600.20128978
c068,3,5,2,221979,205787,211179,211179,1200.004211072,1200.516917521
c068,3,5,3,147368,136796,137964,137964,1800.0043895520002,1800.816069234
c068,3,5,4,110330,103040,103382,103382,2400.0064694430002,2401.095215951
c068,3,5,5,68547,63465,63689,63689,3000.00984344,3001.42245702
c068,3,5,6,61838,57583,57864,57864,3600.022342327,3601.603415534
c068,3,5,7,48193,43476,43865,43865,4200.022641477,4201.832221368
c068,3,5,8,44881,40054,40435,40435,4800.041563821001,4802.06979838
c068,3,5,9,35388,31628,31987,31987,5400.05253718,5402.270136779
c068,3,5,10,30402,26318,26578,26578,6000.058609939,6002.489792023
c068,3,5,11,30267,25886,26138,26138,6600.086476649,6602.651424714
# search time: 6600.086s
# total time: 26425.775s
c068,4,5,1,1112183,909501,1065858,1065858,600.000736596,600.189025494
c068,4,5,2,222042,205794,211239,211239,1200.00304765,1200.406294478
c068,4,5,3,152214,142281,143456,143456,1800.0045237150002,1800.604061748
c068,4,5,4,111117,103731,104073,104073,2400.0064667200004,2400.806193893
c068,4,5,5,69909,64917,65175,65175,3000.0214476120004,3001.018818578
c068,4,5,6,60790,56264,56466,56466,3600.0468710570003,3601.223495988
c068,4,5,7,48247,43576,43959,43959,4200.05569277,4201.441459007
c068,4,5,8,45218,40271,40664,40664,4800.06594951,4801.629019659
c068,4,5,9,35062,30872,31219,31219,5400.086872423,5401.81800081
c068,4,5,10,31097,27405,27662,27662,6000.098964025001,6002.00048207
c068,4,5,11,29500,24978,25193,25193,6600.105423998001,6602.241141156
# search time: 6600.105s
# total time: 33028.534s
