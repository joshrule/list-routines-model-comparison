    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.37s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c002_5.json out/1593091766/results/c002_5_best.csv out/1593091766/results/c002_5_predictions.csv out/1593091766/results/c002_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 3]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([3, 1]), o: IntList([]) }
#   Datum { i: IntList([7, 3, 2, 1, 6, 2, 4, 5]), o: IntList([2]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([5, 5]), o: IntList([]) }
#   Datum { i: IntList([8, 8, 4, 7, 7, 9, 5, 0]), o: IntList([4]) }
#   Datum { i: IntList([7, 7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([4]), o: IntList([]) }
#   Datum { i: IntList([9, 9, 9, 9, 0, 0, 9]), o: IntList([9]) }
#   Datum { i: IntList([9, 3, 6, 0]), o: IntList([6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c002,0,5,1,1238793,1051923,1197748,1197748,600.006555884,601.908552191
c002,0,5,2,948988,881444,927711,927711,1200.008725058,1202.723804475
c002,0,5,3,745620,694149,721254,721254,1800.010512458,1803.733044874
c002,0,5,4,657439,620918,642011,642011,2400.010547377,2404.181139721
c002,0,5,5,539259,503691,525906,525906,3000.025321914,3004.773756984
c002,0,5,6,533582,494843,517246,517246,3600.026086648,3605.261011761
c002,0,5,7,490515,453830,474352,474352,4200.027037052,4205.720816957
c002,0,5,8,334173,307311,320347,320347,4800.032432792001,4806.189363643
c002,0,5,9,270565,253358,263582,263582,5400.032445307001,5406.673253447
c002,0,5,10,263087,245823,255913,255913,6000.033227070001,6007.105191423
c002,0,5,11,206510,193595,201162,201162,6600.034915106001,6607.535725247
# search time: 6600.035s
# total time: 6608.241s
c002,1,5,1,1301821,1066177,1247893,1247893,600.004890485,600.235501306
c002,1,5,2,955748,891540,936054,936054,1200.005040554,1200.559609742
c002,1,5,3,783261,727644,757199,757199,1800.005474985,1800.952338342
c002,1,5,4,677108,637434,660269,660269,2400.006372041,2401.202382537
c002,1,5,5,536805,501944,523847,523847,3000.0072938949997,3001.487198072
c002,1,5,6,536287,497062,519619,519619,3600.0087400159996,3601.77630692
c002,1,5,7,484823,449514,469968,469968,4200.019171168,4202.055160762
c002,1,5,8,338242,311004,324356,324356,4800.019544128,4802.312362267
c002,1,5,9,269966,252209,262161,262161,5400.021081519,5402.59151709
c002,1,5,10,263889,246752,256729,256729,6000.022587622,6002.825361438
c002,1,5,11,209891,196128,203900,203900,6600.024366594,6603.084821237
# search time: 6600.024s
# total time: 13212.415s
c002,2,5,1,1353805,1172791,1315090,1315090,600.000064045,600.340708268
c002,2,5,2,922923,857666,903173,903173,1200.005249152,1200.595541699
c002,2,5,3,758665,706926,733875,733875,1800.0055196160001,1800.878561313
c002,2,5,4,740449,702389,723300,723300,2400.005535485,2401.112513806
c002,2,5,5,536278,501233,522967,522967,3000.006163737,3001.329516113
c002,2,5,6,529596,489489,511932,511932,3600.006898144,3601.549822809
c002,2,5,7,486258,449860,470548,470548,4200.007785319,4201.761254945
c002,2,5,8,337127,310287,323395,323395,4800.0090128229995,4801.96944687
c002,2,5,9,273019,255174,265369,265369,5400.009149668,5402.15545544
c002,2,5,10,261403,243796,253683,253683,6000.010132388,6002.351174295
c002,2,5,11,205735,191764,199352,199352,6600.010718243,6602.592456525
# search time: 6600.011s
# total time: 19816.161s
c002,3,5,1,1300302,1068031,1247580,1247580,600.009727223,600.210353419
c002,3,5,2,969400,900858,947963,947963,1200.013123971,1200.468554527
c002,3,5,3,759047,706541,734313,734313,1800.01847162,1800.728940491
c002,3,5,4,686711,645175,669284,669284,2400.019166533,2400.916480502
c002,3,5,5,543697,507152,529296,529296,3000.019618991,3001.114614651
c002,3,5,6,536043,497379,519827,519827,3600.023090323,3601.292180367
c002,3,5,7,484712,448327,468944,468944,4200.023437666,4201.463231908
c002,3,5,8,365206,335457,350424,350424,4800.026192876,4801.629070422
c002,3,5,9,295378,275076,286873,286873,5400.02687171,5401.770705314
c002,3,5,10,282592,262856,274294,274294,6000.027558717999,6001.916911916
c002,3,5,11,229527,213399,222566,222566,6600.028386335999,6602.072789143
# search time: 6600.028s
# total time: 26419.632s
c002,4,5,1,1350508,1187728,1317158,1317158,600.000075008,600.311596526
c002,4,5,2,960984,895189,940543,940543,1200.018396326,1200.583239475
c002,4,5,3,738182,687781,714173,714173,1800.0185448399998,1800.7994805
c002,4,5,4,676439,638238,660389,660389,2400.0186782339997,2400.973499987
c002,4,5,5,542633,506394,528598,528598,3000.019180941,3001.140441739
c002,4,5,6,535869,496655,519224,519224,3600.0200589839997,3601.300955227
c002,4,5,7,485154,449033,469372,469372,4200.029220627,4201.472538897
c002,4,5,8,338252,311118,324472,324472,4800.029975744999,4801.636403325
c002,4,5,9,267306,250364,260495,260495,5400.030748531999,5401.78024531
c002,4,5,10,263075,245782,255728,255728,6000.033793036999,6001.910571569
c002,4,5,11,208881,194766,202514,202514,6600.0353234509985,6602.043116473
# search time: 6600.035s
# total time: 33022.658s
