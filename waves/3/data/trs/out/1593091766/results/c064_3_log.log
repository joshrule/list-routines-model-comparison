    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c064_3.json out/1593091766/results/c064_3_best.csv out/1593091766/results/c064_3_predictions.csv out/1593091766/results/c064_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 8, 3, 8, 3]), o: IntList([8, 3, 8]) }
#   Datum { i: IntList([6, 1, 9, 5, 0, 2, 3, 7]), o: IntList([1, 9, 5, 0, 2, 3]) }
#   Datum { i: IntList([4, 9, 4, 9, 4, 9, 9, 9, 9, 9]), o: IntList([9, 4, 9, 4, 9, 9, 9, 9]) }
#   Datum { i: IntList([2, 0, 3, 1, 4, 8]), o: IntList([0, 3, 1, 4]) }
#   Datum { i: IntList([2, 0, 4, 5, 7, 9, 8]), o: IntList([0, 4, 5, 7, 9]) }
#   Datum { i: IntList([3, 0, 3]), o: IntList([0]) }
#   Datum { i: IntList([0, 2]), o: IntList([]) }
#   Datum { i: IntList([5, 7, 7, 9, 8, 1, 4, 0, 6]), o: IntList([7, 7, 9, 8, 1, 4, 0]) }
#   Datum { i: IntList([4, 5, 0, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([6, 6, 5, 8, 5, 6, 5, 8, 4, 1]), o: IntList([6, 5, 8, 5, 6, 5, 8, 4]) }
#   Datum { i: IntList([2, 1, 1, 2, 2, 7, 2, 7]), o: IntList([1, 1, 2, 2, 7, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c064,0,3,1,1282681,1047120,1228784,1228784,600.001597967,601.69884075
c064,0,3,2,607823,571854,587654,587654,1200.002875425,1202.710982768
c064,0,3,3,301101,281931,284230,284230,1800.0047560019998,1803.594259502
c064,0,3,4,189593,175816,177011,177011,2400.006093354,2404.310669926
c064,0,3,5,147668,137543,138137,138137,3000.007200664,3005.07996387
c064,0,3,6,127667,118254,118749,118749,3600.0093934889996,3605.771595481
c064,0,3,7,120221,107446,107888,107888,4200.012187872,4206.35242994
c064,0,3,8,107516,95930,97567,97567,4800.013670201,4807.126490345
c064,0,3,9,86393,75568,77436,77436,5400.016298158001,5407.732006907
c064,0,3,10,83347,72499,74780,74780,6000.030446111001,6008.370451398
c064,0,3,11,63894,56289,58115,58115,6600.035536125,6609.041762037
# search time: 6600.036s
# total time: 6609.464s
c064,1,3,1,1270419,1041192,1218317,1218317,600.000032561,600.267431659
c064,1,3,2,572811,540078,555369,555369,1200.000630825,1200.663903894
c064,1,3,3,298959,279920,282239,282239,1800.0006916799998,1801.080780748
c064,1,3,4,178664,165832,166648,166648,2400.0042561759997,2401.44560758
c064,1,3,5,152757,143013,143760,143760,3000.005399242,3001.768548344
c064,1,3,6,127337,117796,118327,118327,3600.012652173,3602.128709117
c064,1,3,7,120600,107472,108058,108058,4200.013551551,4202.466001485
c064,1,3,8,106642,95338,97013,97013,4800.016235871,4802.81208953
c064,1,3,9,86154,76062,77991,77991,5400.028036644,5403.145547507
c064,1,3,10,80035,71014,73112,73112,6000.029082034,6003.459025121
c064,1,3,11,64379,57546,59499,59499,6600.032877498,6603.748528232
# search time: 6600.033s
# total time: 13213.959s
c064,2,3,1,1318979,1140628,1280583,1280583,600.0019713,600.307403248
c064,2,3,2,590688,556202,571657,571657,1200.002472743,1200.588037117
c064,2,3,3,299571,280408,282675,282675,1800.005129875,1800.862098238
c064,2,3,4,187217,173785,174898,174898,2400.006405877,2401.086779493
c064,2,3,5,144912,135149,135671,135671,3000.006739472,3001.320613198
c064,2,3,6,126557,117082,117551,117551,3600.012955367,3601.57672143
c064,2,3,7,119094,105794,106264,106264,4200.013977199,4201.809144976
c064,2,3,8,106657,95177,96843,96843,4800.014021731,4802.112958369
c064,2,3,9,86030,76862,78813,78813,5400.048149686,5402.394117401
c064,2,3,10,80215,70808,72655,72655,6000.054942927,6002.663657922
c064,2,3,11,63610,55855,57583,57583,6600.060615028,6602.913545351
# search time: 6600.061s
# total time: 19817.622s
c064,3,3,1,1311926,1129122,1272283,1272283,600.000116427,600.297948792
c064,3,3,2,577724,544534,559475,559475,1200.0067896169999,1200.531329115
c064,3,3,3,295933,277364,279636,279636,1800.007164009,1800.755147559
c064,3,3,4,186071,172359,173546,173546,2400.0073531850003,2400.945234213
c064,3,3,5,144892,135212,135783,135783,3000.0101743350006,3001.100394782
c064,3,3,6,125451,115707,116212,116212,3600.0123556930007,3601.273136401
c064,3,3,7,120005,107245,107866,107866,4200.018039497001,4201.48075174
c064,3,3,8,105550,94173,95720,95720,4800.019796963001,4801.672604886
c064,3,3,9,85943,76904,78930,78930,5400.023478752,5401.825144667
c064,3,3,10,81368,72488,74794,74794,6000.025557209,6002.012194733
c064,3,3,11,63454,56592,58476,58476,6600.0308978230005,6602.183785031
# search time: 6600.031s
# total time: 26420.793s
c064,4,3,1,1292824,1118779,1255264,1255264,600.000146479,600.287434781
c064,4,3,2,593165,558843,574031,574031,1200.001075073,1200.501263805
c064,4,3,3,297251,278288,280541,280541,1800.002739453,1800.686166156
c064,4,3,4,178108,165424,166230,166230,2400.006516066,2400.815012174
c064,4,3,5,144432,134732,135273,135273,3000.007580086,3000.969420216
c064,4,3,6,125515,115681,116075,116075,3600.008275547,3601.102944268
c064,4,3,7,118361,105453,105891,105891,4200.009697942,4201.240485491
c064,4,3,8,105983,94360,95943,95943,4800.023187735999,4801.442614852
c064,4,3,9,86186,76065,77978,77978,5400.028833279999,5401.571787003
c064,4,3,10,82385,72414,74539,74539,6000.0362065009995,6001.71034368
c064,4,3,11,63509,56533,58418,58418,6600.046706394,6601.865872105
# search time: 6600.047s
# total time: 33023.751s
