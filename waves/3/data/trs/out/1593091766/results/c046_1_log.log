    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c046_1.json out/1593091766/results/c046_1_best.csv out/1593091766/results/c046_1_predictions.csv out/1593091766/results/c046_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 8, 5, 5]), o: IntList([7, 8, 8, 5, 5]) }
#   Datum { i: IntList([]), o: IntList([7]) }
#   Datum { i: IntList([9]), o: IntList([7, 9]) }
#   Datum { i: IntList([1, 4]), o: IntList([7, 1, 4]) }
#   Datum { i: IntList([3, 8, 6, 7, 0, 3, 4]), o: IntList([7, 3, 8, 6, 7, 0, 3, 4]) }
#   Datum { i: IntList([9, 1, 6, 5, 2, 1, 0, 1, 9]), o: IntList([7, 9, 1, 6, 5, 2, 1, 0, 1, 9]) }
#   Datum { i: IntList([2, 2, 0, 0, 2, 2, 0, 2, 0, 2]), o: IntList([7, 2, 2, 0, 0, 2, 2, 0, 2, 0, 2]) }
#   Datum { i: IntList([4, 7, 0, 5, 0, 3]), o: IntList([7, 4, 7, 0, 5, 0, 3]) }
#   Datum { i: IntList([3, 3, 4, 3, 3, 8, 4, 4]), o: IntList([7, 3, 3, 4, 3, 3, 8, 4, 4]) }
#   Datum { i: IntList([7, 3, 5]), o: IntList([7, 7, 3, 5]) }
#   Datum { i: IntList([6, 9, 6, 9, 6]), o: IntList([7, 6, 9, 6, 9, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c046,0,1,1,1323796,1084642,1269217,1269217,600.000055707,601.719773739
c046,0,1,2,529306,480580,493591,493591,1200.000562542,1202.844729621
c046,0,1,3,467207,432119,442088,442088,1800.0058881659997,1803.37448569
c046,0,1,4,403846,369516,378477,378477,2400.0103605409995,2403.755965889
c046,0,1,5,326896,300819,307287,307287,3000.0124530319995,3004.087779491
c046,0,1,6,211137,189725,193914,193914,3600.0125056709994,3604.366870597
c046,0,1,7,148777,129529,132164,132164,4200.013508468,4204.643021991
c046,0,1,8,108840,91501,93422,93422,4800.015124944,4804.890139419
c046,0,1,9,95064,79640,81274,81274,5400.019658574,5405.152464286
c046,0,1,10,76902,63855,65120,65120,6000.023135998,6005.472195351
c046,0,1,11,72829,60231,61516,61516,6600.034842146,6605.767606204
# search time: 6600.035s
# total time: 6606.109s
c046,1,1,1,1285795,1050388,1232205,1232205,600.006243402,600.257761935
c046,1,1,2,533296,484353,497803,497803,1200.006690145,1200.653940096
c046,1,1,3,464620,429522,439230,439230,1800.007279646,1800.897708243
c046,1,1,4,400887,366913,375749,375749,2400.007412953,2401.090379885
c046,1,1,5,324081,298254,304996,304996,3000.008310758,3001.277810118
c046,1,1,6,210098,188327,192802,192802,3600.01035373,3601.450163313
c046,1,1,7,148656,129294,131865,131865,4200.012858105,4201.578601465
c046,1,1,8,108823,91687,93574,93574,4800.023159348,4801.762401622
c046,1,1,9,94251,78741,80510,80510,5400.026361131,5401.89128852
c046,1,1,10,76328,63540,64787,64787,6000.032491025,6002.08817659
c046,1,1,11,72357,60019,61228,61228,6600.037448926,6602.261310228
# search time: 6600.037s
# total time: 13208.914s
c046,2,1,1,1328822,1176738,1297529,1297529,600.000793382,600.321315259
c046,2,1,2,536766,487402,501126,501126,1200.0093155499999,1200.605394263
c046,2,1,3,462566,426948,436832,436832,1800.009903745,1800.782829615
c046,2,1,4,398136,364953,373983,373983,2400.011136912,2400.946870798
c046,2,1,5,322868,296606,303270,303270,3000.011802033,3001.081061459
c046,2,1,6,209310,187798,192239,192239,3600.0139070140003,3601.205260078
c046,2,1,7,147488,128295,130761,130761,4200.018027847001,4201.303489622
c046,2,1,8,108590,91483,93364,93364,4800.022960839001,4801.428135251
c046,2,1,9,93684,78827,80560,80560,5400.024655715001,5401.514801183
c046,2,1,10,76850,63642,64882,64882,6000.038499438001,6001.62048105
c046,2,1,11,72203,59912,61047,61047,6600.041014305001,6601.758299092
# search time: 6600.041s
# total time: 19811.213s
c046,3,1,1,1313924,1149582,1279387,1279387,600.002782386,600.276011037
c046,3,1,2,536559,487634,501288,501288,1200.003697518,1200.486659927
c046,3,1,3,458153,423890,433511,433511,1800.0039642830002,1800.647177696
c046,3,1,4,405673,370585,379632,379632,2400.004331358,2400.796470355
c046,3,1,5,319292,293018,300435,300435,3000.005364167,3000.919012266
c046,3,1,6,207135,185522,190440,190440,3600.0088261700002,3601.031558257
c046,3,1,7,147582,128120,130751,130751,4200.010266518,4201.122332318
c046,3,1,8,107606,90334,92412,92412,4800.014269835,4801.199974101
c046,3,1,9,93914,78605,80227,80227,5400.017043602,5401.286796558
c046,3,1,10,76471,63360,64550,64550,6000.0247394299995,6001.374197947
c046,3,1,11,72035,59606,60760,60760,6600.031696714999,6601.480641868
# search time: 6600.032s
# total time: 26413.234s
c046,4,1,1,1324975,1155833,1288827,1288827,600.003951296,600.295400611
c046,4,1,2,533102,484096,497483,497483,1200.004854008,1200.49486101
c046,4,1,3,462262,426337,436291,436291,1800.004924537,1800.632405365
c046,4,1,4,413956,378452,387105,387105,2400.008724128,2400.768370522
c046,4,1,5,327336,300011,306651,306651,3000.009537556,3000.883065723
c046,4,1,6,209114,187775,192275,192275,3600.011521508,3600.979122943
c046,4,1,7,147435,128267,130869,130869,4200.014039378,4201.05429909
c046,4,1,8,108846,91935,93752,93752,4800.015746613,4801.118069132
c046,4,1,9,93759,78591,80183,80183,5400.024863511,5401.195819712
c046,4,1,10,75805,63045,64293,64293,6000.028710872,6001.2878102
c046,4,1,11,72629,60176,61325,61325,6600.030168822001,6601.360712657
# search time: 6600.030s
# total time: 33015.127s
