    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c053_3.json out/1593091766/results/c053_3_best.csv out/1593091766/results/c053_3_predictions.csv out/1593091766/results/c053_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 0, 2, 0, 2]), o: IntList([2, 2, 2, 0, 2]) }
#   Datum { i: IntList([7, 4, 6, 5, 0, 8, 4, 2]), o: IntList([7, 7, 6, 5, 0, 8, 4, 2]) }
#   Datum { i: IntList([6, 5, 8, 9, 1, 3, 4, 1, 0]), o: IntList([6, 6, 8, 9, 1, 3, 4, 1, 0]) }
#   Datum { i: IntList([9, 1, 5, 8, 4, 3, 7, 6, 5, 2]), o: IntList([9, 9, 5, 8, 4, 3, 7, 6, 5, 2]) }
#   Datum { i: IntList([0, 5, 7, 6, 7, 1]), o: IntList([0, 0, 7, 6, 7, 1]) }
#   Datum { i: IntList([8, 9, 6, 4]), o: IntList([8, 8, 6, 4]) }
#   Datum { i: IntList([9, 3, 7, 0, 1, 5, 5, 0]), o: IntList([9, 9, 7, 0, 1, 5, 5, 0]) }
#   Datum { i: IntList([1, 4, 2]), o: IntList([1, 1, 2]) }
#   Datum { i: IntList([8, 6, 3, 6, 6, 3, 3]), o: IntList([8, 8, 3, 6, 6, 3, 3]) }
#   Datum { i: IntList([9, 2, 2, 8, 0, 0, 2, 1, 1]), o: IntList([9, 9, 2, 8, 0, 0, 2, 1, 1]) }
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c053,0,3,1,718584,617409,696482,696482,600.000845282,602.979381213
c053,0,3,2,260340,244730,251132,251132,1200.018284288,1204.768340795
c053,0,3,3,133224,122672,127382,127382,1800.0309070469998,1805.696668619
c053,0,3,4,88470,81345,84393,84393,2400.0357099679995,2406.648823778
c053,0,3,5,61697,56112,58351,58351,3000.0439433879997,3007.714123232
c053,0,3,6,46286,41476,42869,42869,3600.073671158,3608.995017628
c053,0,3,7,41060,37940,38955,38955,4200.123040128,4210.895921647
c053,0,3,8,36180,32490,33541,33541,4800.147262794,4812.062839846
c053,0,3,9,34157,30614,31485,31485,5400.167667241,5413.632981938
c053,0,3,10,30839,27768,28637,28637,6000.185304046,6014.947938999
c053,0,3,11,24931,22697,23224,23224,6600.191295468,6616.30240209
# search time: 6600.191s
# total time: 6616.561s
c053,1,3,1,724092,623049,702350,702350,600.01229035,600.445010143
c053,1,3,2,263669,247673,254050,254050,1200.013915862,1201.12220301
c053,1,3,3,135623,124767,129648,129648,1800.016388085,1801.542918059
c053,1,3,4,87216,80055,83059,83059,2400.017422118,2401.991070931
c053,1,3,5,60857,55543,57727,57727,3000.028839518,3002.478275888
c053,1,3,6,47690,43100,44640,44640,3600.031051458,3602.971783414
c053,1,3,7,39870,36944,37934,37934,4200.037657357,4203.812324545
c053,1,3,8,35435,31597,32722,32722,4800.0761400930005,4804.561470148
c053,1,3,9,34182,30669,31474,31474,5400.105205687,5405.28885752
c053,1,3,10,30709,27569,28450,28450,6000.1066502290005,6005.822617458
c053,1,3,11,25259,23201,23776,23776,6600.111249276,6606.364403292
# search time: 6600.111s
# total time: 13223.353s
c053,2,3,1,678479,556344,650529,650529,600.000991619,600.238847944
c053,2,3,2,258750,243239,249543,249543,1200.00220296,1200.688339565
c053,2,3,3,131945,121702,126367,126367,1800.0039507420001,1800.992081457
c053,2,3,4,87608,80177,83445,83445,2400.022875791,2401.310669054
c053,2,3,5,60625,55433,57490,57490,3000.027020784,3001.577558688
c053,2,3,6,46830,42404,43892,43892,3600.036774391,3601.883991732
c053,2,3,7,39839,36897,37843,37843,4200.0410060720005,4202.312588795
c053,2,3,8,35494,31838,32917,32917,4800.054442457001,4802.76402199
c053,2,3,9,34327,30991,31857,31857,5400.073104076001,5403.297205242
c053,2,3,10,30990,27858,28764,28764,6000.077737391001,6003.885533832
c053,2,3,11,24246,22105,22714,22714,6600.1139620190015,6604.294842181
# search time: 6600.114s
# total time: 19828.263s
c053,3,3,1,696107,601171,675482,675482,600.000158442,600.283329784
c053,3,3,2,254811,239594,245922,245922,1200.000947233,1200.606886719
c053,3,3,3,131985,121279,126161,126161,1800.001235493,1800.832729623
c053,3,3,4,87467,80144,83411,83411,2400.011459962,2401.057078741
c053,3,3,5,60910,55437,57581,57581,3000.011578432,3001.330274947
c053,3,3,6,47348,42915,44446,44446,3600.012776206,3601.734738661
c053,3,3,7,39109,36071,37027,37027,4200.0322485,4202.153609889
c053,3,3,8,35813,32234,33252,33252,4800.037037874,4802.477871162
c053,3,3,9,33789,30282,31108,31108,5400.0476560669995,5402.843295338
c053,3,3,10,30823,27797,28727,28727,6000.110244639999,6003.167795624
c053,3,3,11,25181,23059,23578,23578,6600.118158607999,6603.613352896
# search time: 6600.118s
# total time: 26432.314s
c053,4,3,1,686399,562481,657887,657887,600.002029425,600.198015944
c053,4,3,2,261534,245615,252068,252068,1200.003032604,1200.472333903
c053,4,3,3,205262,189568,197051,197051,1800.0033796510002,1800.650088966
c053,4,3,4,144108,132525,137747,137747,2400.008875682,2400.837336181
c053,4,3,5,101706,93048,96721,96721,3000.011739442,3001.025988603
c053,4,3,6,78388,70221,72419,72419,3600.0124113,3601.314089297
c053,4,3,7,67024,62059,63685,63685,4200.015626656001,4201.584418658
c053,4,3,8,59817,53387,55020,55020,4800.030404161001,4801.855205008
c053,4,3,9,56776,51220,52696,52696,5400.046180633,5402.108189419
c053,4,3,10,52413,47395,48877,48877,6000.053315700001,6002.319077727
c053,4,3,11,42794,38800,39899,39899,6600.060692114001,6602.588300676
# search time: 6600.061s
# total time: 33035.419s
