    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c023_4.json out/1593091766/results/c023_4_best.csv out/1593091766/results/c023_4_predictions.csv out/1593091766/results/c023_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 8]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([3, 7, 3, 7, 3, 3, 2, 2, 7, 3]), o: IntList([3, 5, 7, 3, 7, 3, 3, 2, 2, 7, 3]) }
#   Datum { i: IntList([7, 0, 2]), o: IntList([7, 8, 0, 2]) }
#   Datum { i: IntList([5, 2, 2, 6, 1, 9, 4, 2]), o: IntList([5, 5, 2, 2, 6, 1, 9, 4, 2]) }
#   Datum { i: IntList([7, 4, 5, 9, 9, 5, 8]), o: IntList([7, 5, 4, 5, 9, 9, 5, 8]) }
#   Datum { i: IntList([2, 0, 5, 4]), o: IntList([2, 8, 0, 5, 4]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([1, 5, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([0, 2, 9, 8, 0, 0, 5, 9, 2, 9]), o: IntList([0, 5, 2, 9, 8, 0, 0, 5, 9, 2, 9]) }
#   Datum { i: IntList([0, 2, 7, 9, 5, 8, 6, 3, 0, 9]), o: IntList([0, 5, 2, 7, 9, 5, 8, 6, 3, 0, 9]) }
#   Datum { i: IntList([9, 7, 2, 3, 0, 1, 6, 8, 4]), o: IntList([9, 5, 7, 2, 3, 0, 1, 6, 8, 4]) }
#   Datum { i: IntList([9, 7, 6, 1, 2]), o: IntList([9, 5, 7, 6, 1, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c023,0,4,1,1340568,1096214,1284850,1284850,600.004880786,601.763838616
c023,0,4,2,617750,580546,596853,596853,1200.004986861,1202.595682809
c023,0,4,3,222765,199395,201320,201320,1800.006744053,1803.368789582
c023,0,4,4,200630,183718,185714,185714,2400.020346375,2403.870995887
c023,0,4,5,131384,119776,120783,120783,3000.0207727059997,3004.382122923
c023,0,4,6,105227,95124,95807,95807,3600.0227929259995,3604.966664537
c023,0,4,7,94443,84272,84930,84930,4200.025738589,4205.48974417
c023,0,4,8,80844,71946,72475,72475,4800.0300451309995,4805.945471726
c023,0,4,9,61482,55167,55611,55611,5400.036996162,5406.467139253
c023,0,4,10,47790,43287,43630,43630,6000.040386417,6006.976266274
c023,0,4,11,40823,36890,37235,37235,6600.0464070670005,6607.49862576
# search time: 6600.046s
# total time: 6607.886s
c023,1,4,1,1378921,1215118,1345500,1345500,600.003857977,600.399308899
c023,1,4,2,630699,592793,608890,608890,1200.010775788,1200.77330639
c023,1,4,3,225408,202970,205027,205027,1800.01223417,1801.131193102
c023,1,4,4,196838,180381,182333,182333,2400.012871719,2401.362516352
c023,1,4,5,137791,124938,127262,127262,3000.013008795,3001.600108232
c023,1,4,6,105455,94780,95547,95547,3600.014878921,3601.827865452
c023,1,4,7,94511,84059,84761,84761,4200.02131493,4202.085741176
c023,1,4,8,80500,71705,72254,72254,4800.027795346,4802.345426765
c023,1,4,9,61436,54179,54581,54581,5400.038240926,5402.691457309
c023,1,4,10,47189,41834,42135,42135,6000.043169272,6003.028751705
c023,1,4,11,39502,35610,35930,35930,6600.055236272,6603.311809708
# search time: 6600.055s
# total time: 13211.895s
c023,2,4,1,1320852,1081543,1266436,1266436,600.000090964,600.228110668
c023,2,4,2,615681,579551,595183,595183,1200.0026138389999,1200.491360567
c023,2,4,3,223497,201493,203625,203625,1800.00620501,1800.724137346
c023,2,4,4,192748,175596,176713,176713,2400.00686481,2400.891407455
c023,2,4,5,131452,120040,121078,121078,3000.008337756,3001.10800868
c023,2,4,6,104621,94088,94828,94828,3600.012924516,3601.311692064
c023,2,4,7,94363,84152,84815,84815,4200.017605993,4201.481851481
c023,2,4,8,80069,71057,71567,71567,4800.025475178,4801.696392887
c023,2,4,9,61029,53642,54018,54018,5400.035214146001,5401.897938733
c023,2,4,10,47499,42220,42529,42529,6000.037981800001,6002.124134616
c023,2,4,11,38603,34980,35265,35265,6600.051944250001,6602.301193368
# search time: 6600.052s
# total time: 19815.220s
c023,3,4,1,1330848,1150771,1291837,1291837,600.000079542,600.275180969
c023,3,4,2,621888,584435,600452,600452,1200.001086834,1200.494647065
c023,3,4,3,215655,192919,194791,194791,1800.003782451,1800.705550514
c023,3,4,4,194292,176880,178120,178120,2400.006243401,2400.86268146
c023,3,4,5,132857,121275,122468,122468,3000.008441512,3001.008883266
c023,3,4,6,105127,94234,94966,94966,3600.026151981,3601.180954946
c023,3,4,7,93793,83470,84160,84160,4200.03408697,4201.329606347
c023,3,4,8,80613,71806,72371,72371,4800.0494896810005,4801.503061595
c023,3,4,9,60751,54492,54895,54895,5400.053131213001,5401.656752122
c023,3,4,10,47407,42735,43094,43094,6000.065176729,6001.813324959
c023,3,4,11,39803,36147,36465,36465,6600.075772663,6601.963614734
# search time: 6600.076s
# total time: 26417.567s
c023,4,4,1,1318757,1082062,1264286,1264286,600.001467007,600.215246225
c023,4,4,2,627443,589408,605670,605670,1200.002600649,1200.420418067
c023,4,4,3,215571,192558,194374,194374,1800.003932098,1800.584777974
c023,4,4,4,198165,181892,183912,183912,2400.017961128,2400.719903408
c023,4,4,5,133002,121405,122601,122601,3000.021571762,3000.835047567
c023,4,4,6,105365,94405,95160,95160,3600.02770038,3600.959965639
c023,4,4,7,94166,84004,84739,84739,4200.030750783,4201.105248844
c023,4,4,8,79862,70957,71518,71518,4800.033348456001,4801.223900037
c023,4,4,9,60808,53595,53967,53967,5400.033861667001,5401.37274316
c023,4,4,10,47603,42195,42529,42529,6000.040324327,6001.542656042
c023,4,4,11,38648,35134,35407,35407,6600.042725319,6601.664885038
# search time: 6600.043s
# total time: 33020.283s
