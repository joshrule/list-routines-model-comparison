    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c058_4.json out/1593091766/results/c058_4_best.csv out/1593091766/results/c058_4_predictions.csv out/1593091766/results/c058_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 0, 5, 1, 1, 0, 5, 1]), o: IntList([1]) }
#   Datum { i: IntList([7, 2, 9, 5, 3, 6, 4, 5]), o: IntList([5]) }
#   Datum { i: IntList([8, 2, 9, 1, 5, 3, 4, 0, 8, 6]), o: IntList([0, 8, 6]) }
#   Datum { i: IntList([9, 2, 4, 8, 0, 5, 3, 1, 7]), o: IntList([1, 7]) }
#   Datum { i: IntList([2, 6, 2, 3, 2, 3, 6]), o: IntList([]) }
#   Datum { i: IntList([2, 8, 6, 3, 9, 5, 7, 6, 4]), o: IntList([6, 4]) }
#   Datum { i: IntList([3, 0, 1, 4, 8, 2, 7]), o: IntList([]) }
#   Datum { i: IntList([9, 8, 9, 8, 9, 8, 5, 0, 2, 5]), o: IntList([0, 2, 5]) }
#   Datum { i: IntList([5, 1, 1, 2, 8, 5, 7, 5, 4, 7]), o: IntList([5, 4, 7]) }
#   Datum { i: IntList([5, 7, 4, 9, 1, 0, 3, 5, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([1, 9, 8, 2, 0, 4, 6, 7]), o: IntList([7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c058,0,4,1,1052148,860188,1008286,1008286,600.004702802,601.852071436
c058,0,4,2,606734,572833,589299,589299,1200.004887624,1203.454754849
c058,0,4,3,444912,407796,425287,425287,1800.005755464,1804.68798757
c058,0,4,4,286541,264492,275540,275540,2400.007712207,2405.983483035
c058,0,4,5,90265,82446,86232,86232,3000.0081381440004,3007.545785938
c058,0,4,6,82308,75851,79015,79015,3600.0289757430005,3608.993887787
c058,0,4,7,63755,58559,61179,61179,4200.049914431001,4210.782699379
c058,0,4,8,53405,49051,51306,51306,4800.065744279001,4812.444641565
c058,0,4,9,43498,39659,41411,41411,5400.068351266001,5414.060864192
c058,0,4,10,36332,32985,34558,34558,6000.097597090001,6015.531781981
c058,0,4,11,32194,29105,30578,30578,6600.106790019001,6616.940318324
# search time: 6600.107s
# total time: 6617.210s
c058,1,4,1,651725,553871,630265,630265,600.006548969,600.293066949
c058,1,4,2,381979,358547,369871,369871,1200.0080399950002,1200.952936176
c058,1,4,3,258591,236686,246963,246963,1800.008753131,1801.636104842
c058,1,4,4,170920,157152,163828,163828,2400.00935952,2402.0927714
c058,1,4,5,88758,81166,84781,84781,3000.013180595,3003.047117777
c058,1,4,6,83524,77004,80306,80306,3600.01623698,3603.914315025
c058,1,4,7,64227,59179,61696,61696,4200.020521621,4204.986047857
c058,1,4,8,56407,51734,54128,54128,4800.032919869,4806.048505191
c058,1,4,9,45741,41610,43532,43532,5400.040468827,5406.850946286
c058,1,4,10,37429,33965,35569,35569,6000.049152061,6007.69217266
c058,1,4,11,30535,27622,28942,28942,6600.090696871001,6608.909145276
# search time: 6600.091s
# total time: 13226.515s
c058,2,4,1,633846,539085,612921,612921,600.004425995,600.246913605
c058,2,4,2,396500,372367,383655,383655,1200.0047777700001,1200.705420573
c058,2,4,3,260372,238573,248936,248936,1800.0051778660002,1801.143045785
c058,2,4,4,173218,159341,165974,165974,2400.017232693,2401.484853931
c058,2,4,5,88484,81087,84592,84592,3000.023929092,3002.188630177
c058,2,4,6,83934,77220,80578,80578,3600.034926299,3602.696599021
c058,2,4,7,64653,59496,62142,62142,4200.046618265,4203.424201469
c058,2,4,8,55937,51309,53695,53695,4800.048567614,4804.158469654
c058,2,4,9,44327,40247,42076,42076,5400.051176162,5404.737560802
c058,2,4,10,36771,33525,35046,35046,6000.05188474,6005.49653536
c058,2,4,11,31183,28257,29659,29659,6600.074341185,6606.204489571
# search time: 6600.074s
# total time: 19833.017s
c058,3,4,1,643471,552708,623601,623601,600.002447391,600.229708009
c058,3,4,2,386623,363221,374440,374440,1200.002684967,1200.616275931
c058,3,4,3,259985,238022,248364,248364,1800.00328661,1801.011037824
c058,3,4,4,174553,160251,166956,166956,2400.012891472,2401.288783695
c058,3,4,5,90464,82554,86367,86367,3000.023489563,3001.822344589
c058,3,4,6,82911,76578,79673,79673,3600.0306591380004,3602.345133339
c058,3,4,7,64355,59227,61758,61758,4200.034081177,4202.725810016
c058,3,4,8,55328,50816,53145,53145,4800.048600444,4803.268768716
c058,3,4,9,43719,39846,41567,41567,5400.04935371,5403.852052105
c058,3,4,10,37154,33767,35361,35361,6000.074664105,6004.578118775
c058,3,4,11,31154,28260,29612,29612,6600.084096741,6605.189859659
# search time: 6600.084s
# total time: 26438.505s
c058,4,4,1,628728,513694,602353,602353,600.019751677,600.174722885
c058,4,4,2,399783,374596,386529,386529,1200.023176932,1200.498960975
c058,4,4,3,264502,242509,253031,253031,1800.0239385680002,1800.781499101
c058,4,4,4,173872,159993,166763,166763,2400.024573343,2400.994482358
c058,4,4,5,89027,81327,84984,84984,3000.028229805,3001.417095924
c058,4,4,6,82910,76335,79653,79653,3600.041176516,3601.806246559
c058,4,4,7,62323,57426,59889,59889,4200.056814402,4202.142339588
c058,4,4,8,96877,89034,92976,92976,4800.058070352,4802.515113026
c058,4,4,9,76698,69934,72969,72969,5400.061530606,5402.831071619
c058,4,4,10,66439,60369,63198,63198,6000.064258005,6003.261724373
c058,4,4,11,57364,52080,54550,54550,6600.065104305,6603.761505186
# search time: 6600.065s
# total time: 33042.622s
