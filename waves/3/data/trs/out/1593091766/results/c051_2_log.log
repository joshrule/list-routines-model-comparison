    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c051_2.json out/1593091766/results/c051_2_best.csv out/1593091766/results/c051_2_predictions.csv out/1593091766/results/c051_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 1, 1]), o: IntList([0, 0, 0, 0, 0, 0, 1, 1]) }
#   Datum { i: IntList([6, 7, 6, 6, 7, 7]), o: IntList([6, 6, 6, 6, 6, 6, 7, 6, 6, 7, 7]) }
#   Datum { i: IntList([5, 4, 4, 4, 2, 2, 5]), o: IntList([5, 5, 5, 5, 5, 5, 4, 4, 4, 2, 2, 5]) }
#   Datum { i: IntList([3, 3, 2, 6, 4]), o: IntList([3, 3, 3, 3, 3, 3, 3, 2, 6, 4]) }
#   Datum { i: IntList([8]), o: IntList([8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([2, 6, 4, 0, 8, 7, 0, 0, 9]), o: IntList([2, 2, 2, 2, 2, 2, 6, 4, 0, 8, 7, 0, 0, 9]) }
#   Datum { i: IntList([5, 7, 0, 7, 3, 5, 8]), o: IntList([5, 5, 5, 5, 5, 5, 7, 0, 7, 3, 5, 8]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 4, 4, 4, 4, 4, 1]) }
#   Datum { i: IntList([1, 9, 3, 8, 8, 1, 3, 3, 3]), o: IntList([1, 1, 1, 1, 1, 1, 9, 3, 8, 8, 1, 3, 3, 3]) }
#   Datum { i: IntList([9, 9, 9, 9]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([2, 4, 5, 1, 3, 6, 8, 0]), o: IntList([2, 2, 2, 2, 2, 2, 4, 5, 1, 3, 6, 8, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c051,0,2,1,705550,600500,682099,682099,600.000736789,602.895083189
c051,0,2,2,315347,289872,297990,297990,1200.00098949,1204.521747612
c051,0,2,3,170010,157701,163497,163497,1800.0033082139998,1805.30102306
c051,0,2,4,109094,97454,103925,103925,2400.0072578299996,2406.076638406
c051,0,2,5,82427,74626,76954,76954,3000.0125413709998,3007.142487782
c051,0,2,6,78058,71104,73395,73395,3600.0138003019997,3608.003499132
c051,0,2,7,57607,51057,53324,53324,4200.018299366,4209.026067931
c051,0,2,8,51234,45223,47123,47123,4800.025460555,4809.59956473
c051,0,2,9,48403,43058,44480,44480,5400.032428337,5410.247570689
c051,0,2,10,39553,35251,36274,36274,6000.033130119,6010.960989158
c051,0,2,11,36419,32445,33425,33425,6600.050085414,6611.802726946
# search time: 6600.050s
# total time: 6612.007s
c051,1,2,1,1106244,905329,1060855,1060855,600.000244226,600.302749987
c051,1,2,2,317627,291713,300294,300294,1200.001333056,1200.818797862
c051,1,2,3,169987,157332,163235,163235,1800.008110327,1801.118254271
c051,1,2,4,114525,105562,109232,109232,2400.0110578599997,2401.437310841
c051,1,2,5,83189,75653,77991,77991,3000.015562398,3001.816172213
c051,1,2,6,79275,72380,74793,74793,3600.020008938,3602.113730555
c051,1,2,7,57831,51683,53612,53612,4200.023479582,4202.505578205
c051,1,2,8,51186,45470,47014,47014,4800.032576079,4802.803398302
c051,1,2,9,47472,42214,43494,43494,5400.041070609001,5403.133563376
c051,1,2,10,39482,35027,36191,36191,6000.051410763001,6003.439439755
c051,1,2,11,35988,32113,33089,33089,6600.0646066300005,6603.865974643
# search time: 6600.065s
# total time: 13216.271s
c051,2,2,1,1117485,913769,1071229,1071229,600.008916097,600.215730033
c051,2,2,2,319908,294114,302373,302373,1200.009726441,1200.548923456
c051,2,2,3,168296,155873,161733,161733,1800.0106773440002,1800.740872566
c051,2,2,4,119740,111161,114084,114084,2400.0107277160005,2400.964968353
c051,2,2,5,82807,75411,77656,77656,3000.0144530980006,3001.225139908
c051,2,2,6,77082,69728,72475,72475,3600.0161377290005,3601.412111133
c051,2,2,7,57248,51232,53131,53131,4200.033350796,4201.617456853
c051,2,2,8,51488,45875,47350,47350,4800.043824233,4801.830374352
c051,2,2,9,47251,42257,43631,43631,5400.053933693,5402.048124918
c051,2,2,10,39169,34872,35998,35998,6000.069696496,6002.299942482
c051,2,2,11,35924,32118,33060,33060,6600.079223504,6602.46634183
# search time: 6600.079s
# total time: 19819.136s
c051,3,2,1,1155979,996398,1121288,1121288,600.001594508,600.250975341
c051,3,2,2,319447,294035,302164,302164,1200.002541149,1200.501044745
c051,3,2,3,166780,154389,160405,160405,1800.007552735,1800.670265848
c051,3,2,4,114668,105636,109100,109100,2400.008975371,2400.823982986
c051,3,2,5,83086,75465,77910,77910,3000.010172018,3000.997099348
c051,3,2,6,77411,70449,72808,72808,3600.012429585,3601.197334097
c051,3,2,7,57315,51281,53130,53130,4200.021724243,4201.337678982
c051,3,2,8,51419,45634,47281,47281,4800.021784514,4801.505178544
c051,3,2,9,47652,42597,43901,43901,5400.025905498999,5401.713065065
c051,3,2,10,39564,35218,36279,36279,6000.041147069,6001.847748238
c051,3,2,11,35628,31959,32843,32843,6600.047936675999,6602.082156224
# search time: 6600.048s
# total time: 26421.597s
c051,4,2,1,1157134,1000610,1123494,1123494,600.001534787,600.236444741
c051,4,2,2,313900,288266,296466,296466,1200.0022658130001,1200.437291949
c051,4,2,3,171130,158230,164299,164299,1800.0034161060003,1800.594340878
c051,4,2,4,67844,61730,64443,64443,2400.013294052,2400.704521406
c051,4,2,5,46399,42164,43363,43363,3000.0204142700004,3000.958715397
c051,4,2,6,43835,39608,41108,41108,3600.02139978,3601.151391419
c051,4,2,7,31954,28142,29482,29482,4200.021746685,4201.298584729
c051,4,2,8,49800,44455,45835,45835,4800.032125819,4801.425922611
c051,4,2,9,47080,41971,43284,43284,5400.032556290999,5401.546147994
c051,4,2,10,39156,34971,35983,35983,6000.044232306,6001.634184195
c051,4,2,11,35549,31438,32605,32605,6600.047594285999,6601.760627497
# search time: 6600.048s
# total time: 33023.737s
