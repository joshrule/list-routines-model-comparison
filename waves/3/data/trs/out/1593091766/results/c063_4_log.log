    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c063_4.json out/1593091766/results/c063_4_best.csv out/1593091766/results/c063_4_predictions.csv out/1593091766/results/c063_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 6, 2, 6, 6, 6]), o: IntList([6, 6, 6]) }
#   Datum { i: IntList([4, 1, 1, 4, 1, 1, 3]), o: IntList([1, 3]) }
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([1, 7, 9, 9, 8, 4, 1, 7, 8]), o: IntList([9, 9, 8, 4, 1, 7, 8]) }
#   Datum { i: IntList([0, 3, 9, 4, 6, 6, 7, 8, 2]), o: IntList([3, 9, 4, 6, 6, 7, 8, 2]) }
#   Datum { i: IntList([0, 9, 7, 1, 1, 5, 4, 3, 6, 6]), o: IntList([9, 7, 1, 1, 5, 4, 3, 6, 6]) }
#   Datum { i: IntList([0, 5, 0, 5, 5, 7]), o: IntList([5, 0, 5, 5, 7]) }
#   Datum { i: IntList([0, 2, 0]), o: IntList([2, 0]) }
#   Datum { i: IntList([3, 8, 8, 7, 7, 7, 8, 8]), o: IntList([7, 7, 8, 8]) }
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([2]) }
#   Datum { i: IntList([3, 8, 4, 4]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c063,0,4,1,701653,609076,681755,681755,600.002551353,603.025514103
c063,0,4,2,323062,304498,312964,312964,1200.002901149,1204.913023808
c063,0,4,3,210956,198702,201250,201250,1800.0113036950002,1806.798069085
c063,0,4,4,131210,123430,123948,123948,2400.013106769,2408.146941753
c063,0,4,5,79020,73323,73649,73649,3000.021493355,3009.563614599
c063,0,4,6,68391,62589,63023,63023,3600.023629566,3610.437058253
c063,0,4,7,45770,42108,42311,42311,4200.025665472,4211.118523855
c063,0,4,8,36782,33477,33747,33747,4800.036391754,4812.426288399
c063,0,4,9,35811,32609,32814,32814,5400.04694318,5413.641656893
c063,0,4,10,32346,29385,29609,29609,6000.089047059,6014.868466575
c063,0,4,11,30410,27371,27549,27549,6600.113682079,6616.108255428
# search time: 6600.114s
# total time: 6616.389s
c063,1,4,1,690748,589997,668749,668749,600.015774145,600.412180827
c063,1,4,2,325925,307243,315797,315797,1200.020970709,1201.113961704
c063,1,4,3,216051,204520,207011,207011,1800.021725386,1801.840805516
c063,1,4,4,130706,122907,123434,123434,2400.02623718,2402.439136547
c063,1,4,5,78697,73022,73361,73361,3000.043482472,3003.098415413
c063,1,4,6,67936,62011,62447,62447,3600.045043223,3603.563294947
c063,1,4,7,43966,40510,40770,40770,4200.046680741,4204.139647515
c063,1,4,8,35864,32732,32908,32908,4800.051301666001,4804.815700334
c063,1,4,9,33657,30565,30726,30726,5400.075014827001,5405.576664804
c063,1,4,10,29987,27168,27330,27330,6000.084118852001,6006.301855038
c063,1,4,11,30524,27555,27758,27758,6600.085594704001,6606.983112756
# search time: 6600.086s
# total time: 13223.858s
c063,2,4,1,701159,603958,680114,680114,600.007155354,600.309813169
c063,2,4,2,323831,305247,313808,313808,1200.007894375,1200.754221113
c063,2,4,3,216045,204377,206894,206894,1800.011604391,1801.223288638
c063,2,4,4,127769,120072,120465,120465,2400.01186693,2401.673271125
c063,2,4,5,78838,73193,73545,73545,3000.022344147,3002.10451444
c063,2,4,6,66036,60513,60845,60845,3600.0355526099997,3602.452384645
c063,2,4,7,41970,38349,38551,38551,4200.048394044,4203.000380663
c063,2,4,8,38013,34833,35063,35063,4800.055271973,4803.363301774
c063,2,4,9,33773,30669,30850,30850,5400.078191205001,5403.869306004
c063,2,4,10,31382,28369,28585,28585,6000.082764264001,6004.330423268
c063,2,4,11,30615,27562,27774,27774,6600.0909704840005,6604.774263449
# search time: 6600.091s
# total time: 19829.123s
c063,3,4,1,676473,574846,654004,654004,600.000061313,600.240385898
c063,3,4,2,322588,304159,312704,312704,1200.005075826,1200.594197348
c063,3,4,3,210976,199067,201533,201533,1800.02094093,1800.982785946
c063,3,4,4,129594,122006,122568,122568,2400.022332648,2401.284737808
c063,3,4,5,75419,70179,70382,70382,3000.035997169,3001.6074814
c063,3,4,6,67911,62197,62597,62597,3600.036392114,3601.79466551
c063,3,4,7,43789,40305,40563,40563,4200.038085015,4202.028913499
c063,3,4,8,35553,32413,32570,32570,4800.038431386,4802.481068611
c063,3,4,9,34188,31014,31218,31218,5400.039594709,5402.946151298
c063,3,4,10,30415,27414,27628,27628,6000.042632237,6003.3305873
c063,3,4,11,29102,26233,26410,26410,6600.0646633530005,6603.612339562
# search time: 6600.065s
# total time: 26433.245s
c063,4,4,1,693589,594793,671914,671914,600.000246085,600.228130024
c063,4,4,2,512181,483745,496826,496826,1200.000685114,1200.521335613
c063,4,4,3,352403,332975,337021,337021,1800.0012435429999,1800.820845548
c063,4,4,4,215254,202080,202930,202930,2400.008424245,2401.078768303
c063,4,4,5,130382,121128,121698,121698,3000.0120870339997,3001.338697088
c063,4,4,6,110127,101736,102229,102229,3600.014241086,3601.520665042
c063,4,4,7,76273,69360,69760,69760,4200.0173480799995,4201.732786396
c063,4,4,8,63952,58005,58394,58394,4800.021171175,4802.030287966
c063,4,4,9,59788,53651,53947,53947,5400.023441818999,5402.280310375
c063,4,4,10,52594,47583,47850,47850,6000.029593179999,6002.537454188
c063,4,4,11,51620,46403,46681,46681,6600.047338885999,6602.764782508
# search time: 6600.047s
# total time: 33036.571s
