    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c018_1.json out/1593091766/results/c018_1_best.csv out/1593091766/results/c018_1_predictions.csv out/1593091766/results/c018_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 3, 2, 8, 4, 6]), o: IntList([5, 3, 2, 8, 4, 3]) }
#   Datum { i: IntList([6, 1, 1, 6, 1, 6, 4]), o: IntList([6, 1, 1, 6, 1, 3, 4]) }
#   Datum { i: IntList([7, 5, 7, 7, 0, 5, 7, 5, 5]), o: IntList([7, 5, 7, 7, 0, 3, 7, 5, 5]) }
#   Datum { i: IntList([9, 9, 3, 0, 0, 9, 0, 0, 9, 3]), o: IntList([9, 9, 3, 0, 0, 3, 0, 0, 9, 3]) }
#   Datum { i: IntList([6, 5, 9, 6, 9, 9, 5, 8]), o: IntList([6, 5, 9, 6, 9, 3, 5, 8]) }
#   Datum { i: IntList([0, 9, 7, 8, 1, 4, 2, 5, 3, 8]), o: IntList([0, 9, 7, 8, 1, 3, 2, 5, 3, 8]) }
#   Datum { i: IntList([7, 7, 7, 7, 7, 7, 7]), o: IntList([7, 7, 7, 7, 7, 3, 7]) }
#   Datum { i: IntList([9, 3, 1, 8, 3, 9, 3, 3, 1]), o: IntList([9, 3, 1, 8, 3, 3, 3, 3, 1]) }
#   Datum { i: IntList([8, 8, 6, 8, 5, 1, 4, 0, 5]), o: IntList([8, 8, 6, 8, 5, 3, 4, 0, 5]) }
#   Datum { i: IntList([0, 6, 0, 6, 6, 6]), o: IntList([0, 6, 0, 6, 6, 3]) }
#   Datum { i: IntList([8, 8, 5, 0, 5, 8]), o: IntList([8, 8, 5, 0, 5, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c018,0,1,1,1264512,1098416,1228780,1228780,600.000070333,601.880682499
c018,0,1,2,417728,390124,401436,401436,1200.000518476,1202.921340167
c018,0,1,3,253231,231719,238169,238169,1800.00168306,1803.764143956
c018,0,1,4,167817,153712,159612,159612,2400.003648237,2404.282400717
c018,0,1,5,124582,114286,118220,118220,3000.011605525,3004.86375571
c018,0,1,6,85188,78198,80331,80331,3600.012356579,3605.700240802
c018,0,1,7,68914,63094,64756,64756,4200.022265209,4206.560602955
c018,0,1,8,59850,54421,56078,56078,4800.035907542,4807.42898848
c018,0,1,9,51599,47148,48340,48340,5400.043079501,5408.19001122
c018,0,1,10,44203,40474,41320,41320,6000.047406973,6009.021369545
c018,0,1,11,41334,37373,38358,38358,6600.060221395,6610.017205831
# search time: 6600.060s
# total time: 6610.296s
c018,1,1,1,1242613,1021238,1192062,1192062,600.002716376,600.26332917
c018,1,1,2,443708,413251,425096,425096,1200.003132349,1200.674578292
c018,1,1,3,247678,225902,231983,231983,1800.003331073,1801.013248698
c018,1,1,4,167136,153025,158949,158949,2400.004524088,2401.28987251
c018,1,1,5,118144,106795,111972,111972,3000.007224766,3001.58152874
c018,1,1,6,84851,77730,79954,79954,3600.007385813,3602.035804761
c018,1,1,7,68268,62541,64222,64222,4200.0129461609995,4202.402880561
c018,1,1,8,60560,54869,56664,56664,4800.022341622,4802.812197218
c018,1,1,9,51833,47213,48502,48502,5400.036408579999,5403.302322253
c018,1,1,10,43885,40083,41014,41014,6000.053692359999,6003.802381604
c018,1,1,11,41551,37547,38530,38530,6600.061633459999,6604.277840718
# search time: 6600.062s
# total time: 13215.022s
c018,2,1,1,1321059,1173135,1291312,1291312,600.000717607,600.353208307
c018,2,1,2,410151,382689,394333,394333,1200.0034834449998,1200.650696171
c018,2,1,3,251843,230422,236765,236765,1800.0045569339998,1800.936073987
c018,2,1,4,167528,153642,159366,159366,2400.005769653,2401.103391279
c018,2,1,5,118984,107590,112554,112554,3000.008723551,3001.314472012
c018,2,1,6,84949,77589,79861,79861,3600.0223512479997,3601.622490242
c018,2,1,7,68303,62568,64154,64154,4200.026252477,4201.877022915
c018,2,1,8,59635,54578,55982,55982,4800.029017725,4802.202391921
c018,2,1,9,51757,47318,48478,48478,5400.055348527,5402.408452769
c018,2,1,10,44411,40547,41413,41413,6000.061286376,6002.703124943
c018,2,1,11,41704,37518,38556,38556,6600.0663120009995,6603.021506646
# search time: 6600.066s
# total time: 19818.418s
c018,3,1,1,1253949,1076501,1215365,1215365,600.001179393,600.247543966
c018,3,1,2,431304,402264,413849,413849,1200.001552124,1200.485075362
c018,3,1,3,246698,225409,231225,231225,1800.002211301,1800.680397887
c018,3,1,4,165596,151985,157664,157664,2400.004184344,2400.829841419
c018,3,1,5,121698,111364,115354,115354,3000.006720543,3000.964908946
c018,3,1,6,84180,76536,79206,79206,3600.010362849,3601.182392268
c018,3,1,7,67971,62372,63954,63954,4200.010460666,4201.367003511
c018,3,1,8,60285,55103,56615,56615,4800.013360776999,4801.594878103
c018,3,1,9,50947,46353,47611,47611,5400.0232093899995,5401.834852328
c018,3,1,10,44346,40446,41425,41425,6000.025441948,6002.07274482
c018,3,1,11,41112,36867,38005,38005,6600.0384162539995,6602.310586967
# search time: 6600.038s
# total time: 26421.273s
c018,4,1,1,1205040,985013,1155452,1155452,600.000575076,600.170821733
c018,4,1,2,406054,378568,390090,390090,1200.000723074,1200.36787996
c018,4,1,3,245766,224354,230286,230286,1800.002474989,1800.534914874
c018,4,1,4,166398,152515,158479,158479,2400.0055839399997,2400.655178966
c018,4,1,5,117126,105769,111038,111038,3000.0059720349996,3000.756128225
c018,4,1,6,83919,76368,78989,78989,3600.0101372609997,3600.939282059
c018,4,1,7,68596,62770,64442,64442,4200.0144085169995,4201.106376489
c018,4,1,8,60454,55223,56710,56710,4800.023786103,4801.287762003
c018,4,1,9,49738,45504,46619,46619,5400.042001329,5401.451739812
c018,4,1,10,44280,40355,41355,41355,6000.043586999001,6001.590243734
c018,4,1,11,41612,37590,38592,38592,6600.0490001630005,6601.780859691
# search time: 6600.049s
# total time: 33023.446s
