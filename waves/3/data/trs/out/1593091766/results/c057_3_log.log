    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c057_3.json out/1593091766/results/c057_3_best.csv out/1593091766/results/c057_3_predictions.csv out/1593091766/results/c057_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 5, 4, 5, 5, 9, 5, 4]), o: IntList([4, 5, 4, 5, 5, 9, 4, 5, 4]) }
#   Datum { i: IntList([2, 5, 6, 3, 2, 9, 2, 0, 0, 0]), o: IntList([2, 5, 6, 3, 2, 9, 4, 2, 0, 0, 0]) }
#   Datum { i: IntList([6, 6, 3, 3, 6, 7, 3, 7, 3, 3]), o: IntList([6, 6, 3, 3, 6, 7, 4, 3, 7, 3, 3]) }
#   Datum { i: IntList([1, 8, 0, 8, 1, 6, 5]), o: IntList([1, 8, 0, 8, 1, 6, 4, 5]) }
#   Datum { i: IntList([2, 9, 9, 2, 9, 9, 2, 2, 2]), o: IntList([2, 9, 9, 2, 9, 9, 4, 2, 2, 2]) }
#   Datum { i: IntList([5, 9, 3, 7, 2, 1, 6, 0, 8]), o: IntList([5, 9, 3, 7, 2, 1, 4, 6, 0, 8]) }
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3, 4, 3]) }
#   Datum { i: IntList([2, 3, 9, 7, 6, 0, 0, 8]), o: IntList([2, 3, 9, 7, 6, 0, 4, 0, 8]) }
#   Datum { i: IntList([3, 9, 9, 3, 3, 9, 3, 9, 3, 3]), o: IntList([3, 9, 9, 3, 3, 9, 4, 3, 9, 3, 3]) }
#   Datum { i: IntList([2, 7, 8, 4, 0, 6, 5, 1]), o: IntList([2, 7, 8, 4, 0, 6, 4, 5, 1]) }
#   Datum { i: IntList([0, 4, 1, 1, 2, 4, 0, 0, 0]), o: IntList([0, 4, 1, 1, 2, 4, 4, 0, 0, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c057,0,3,1,1258455,1121318,1231930,1231930,600.001002081,602.094504092
c057,0,3,2,312803,292488,300567,300567,1200.0015610350001,1203.064547185
c057,0,3,3,174853,162263,165734,165734,1800.012647988,1803.768457809
c057,0,3,4,117992,108943,111989,111989,2400.016084115,2404.426353504
c057,0,3,5,73663,68343,70203,70203,3000.021186292,3005.701065367
c057,0,3,6,65904,60213,61849,61849,3600.030913385,3606.773565871
c057,0,3,7,54204,49185,50818,50818,4200.031356807,4207.804603067
c057,0,3,8,48354,44151,45321,45321,4800.042924324,4809.037893336
c057,0,3,9,41931,38190,39091,39091,5400.058408037,5410.043018324
c057,0,3,10,35337,32465,33273,33273,6000.081842988,6011.279075661
c057,0,3,11,31284,28557,29353,29353,6600.085308749,6612.202437118
# search time: 6600.085s
# total time: 6612.453s
c057,1,3,1,1196771,1015928,1157113,1157113,600.005061342,600.318687641
c057,1,3,2,313105,292228,300645,300645,1200.005580736,1200.747120512
c057,1,3,3,169976,157325,160545,160545,1800.0074163939998,1801.060885553
c057,1,3,4,118322,108855,112041,112041,2400.0090130149997,2401.383917451
c057,1,3,5,72799,67585,69417,69417,3000.014134581,3001.97408785
c057,1,3,6,65086,59689,61166,61166,3600.0210422279997,3602.527351178
c057,1,3,7,53531,49198,50491,50491,4200.021615936,4203.047382822
c057,1,3,8,47967,43572,44902,44902,4800.0362804999995,4803.600947591
c057,1,3,9,40811,37189,38102,38102,5400.044948069999,5404.128104519
c057,1,3,10,35784,32566,33509,33509,6000.047401740999,6004.596534475
c057,1,3,11,31295,28562,29344,29344,6600.074107617998,6605.199419134
# search time: 6600.074s
# total time: 13218.145s
c057,2,3,1,1258438,1087317,1221566,1221566,600.000038844,600.291420181
c057,2,3,2,307294,287199,295254,295254,1200.000916284,1200.582956913
c057,2,3,3,174512,161418,165240,165240,1800.0031420609998,1800.798048057
c057,2,3,4,115840,105998,109144,109144,2400.003736777,2401.005021966
c057,2,3,5,73120,68020,69898,69898,3000.005095064,3001.396226094
c057,2,3,6,65584,60032,61567,61567,3600.005970211,3601.716145014
c057,2,3,7,53303,48404,50008,50008,4200.01607376,4202.022764014
c057,2,3,8,47975,43683,44869,44869,4800.026636502,4802.394561601
c057,2,3,9,41511,37728,38744,38744,5400.056685881,5402.795507924
c057,2,3,10,35970,32819,33790,33790,6000.080628195999,6003.143223265
c057,2,3,11,30366,27727,28462,28462,6600.086114149999,6603.377222123
# search time: 6600.086s
# total time: 19821.758s
c057,3,3,1,1264817,1098423,1229155,1229155,600.000122849,600.276148112
c057,3,3,2,303715,284177,292079,292079,1200.0001676050001,1200.506721319
c057,3,3,3,173942,161197,164997,164997,1800.0029631450002,1800.671372864
c057,3,3,4,117363,107752,111070,111070,2400.0036735930003,2400.831005948
c057,3,3,5,72691,67434,69360,69360,3000.0074899670003,3001.139184554
c057,3,3,6,65877,60394,61845,61845,3600.010731712,3601.482923344
c057,3,3,7,54764,50023,51300,51300,4200.011779458,4201.668257998
c057,3,3,8,47857,43776,44893,44893,4800.018635841,4801.929288527
c057,3,3,9,41679,37849,38891,38891,5400.028680124,5402.205048823
c057,3,3,10,35665,32437,33333,33333,6000.033254266,6002.369686764
c057,3,3,11,31154,28345,29251,29251,6600.035127217,6602.683685501
# search time: 6600.035s
# total time: 26424.792s
c057,4,3,1,1249714,1085868,1214279,1214279,600.004767351,600.254502669
c057,4,3,2,310141,289705,297921,297921,1200.005615106,1200.445734219
c057,4,3,3,173727,160842,164532,164532,1800.006212516,1800.588513384
c057,4,3,4,117409,107726,111121,111121,2400.007669424,2400.730076949
c057,4,3,5,73979,68534,70425,70425,3000.010089144,3000.95695154
c057,4,3,6,65627,60176,61729,61729,3600.0233484480004,3601.200891764
c057,4,3,7,53717,49091,50422,50422,4200.048867781001,4201.366674339
c057,4,3,8,46639,42654,43738,43738,4800.058772173001,4801.605474518
c057,4,3,9,41544,37721,38800,38800,5400.065907899001,5401.864479386
c057,4,3,10,35118,32059,32861,32861,6000.089444816002,6002.12460305
c057,4,3,11,30965,28302,29053,29053,6600.090053812001,6602.321214966
# search time: 6600.090s
# total time: 33027.597s
