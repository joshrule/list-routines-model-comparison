    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c069_3.json out/1593091766/results/c069_3_best.csv out/1593091766/results/c069_3_predictions.csv out/1593091766/results/c069_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 4, 7]), o: IntList([9, 3, 4, 0, 8, 4, 7, 7, 2, 9, 1]) }
#   Datum { i: IntList([4, 0, 9, 3, 0, 8, 8]), o: IntList([9, 3, 4, 0, 4, 0, 9, 3, 0, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 0, 4, 1, 1, 0]), o: IntList([9, 3, 4, 0, 8, 0, 4, 1, 1, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([6, 6, 6, 6, 6, 6]), o: IntList([9, 3, 4, 0, 6, 6, 6, 6, 6, 6, 7, 2, 9, 1]) }
#   Datum { i: IntList([2, 5, 2, 5, 5]), o: IntList([9, 3, 4, 0, 2, 5, 2, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([9, 3, 4, 0, 0, 5, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 1, 6, 3, 2, 7, 3]), o: IntList([9, 3, 4, 0, 8, 1, 6, 3, 2, 7, 3, 7, 2, 9, 1]) }
#   Datum { i: IntList([7, 1]), o: IntList([9, 3, 4, 0, 7, 1, 7, 2, 9, 1]) }
#   Datum { i: IntList([5, 8, 8]), o: IntList([9, 3, 4, 0, 5, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([8]), o: IntList([9, 3, 4, 0, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([]), o: IntList([9, 3, 4, 0, 7, 2, 9, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c069,0,3,1,1334518,1147014,1293568,1293568,600.000034792,601.807046219
c069,0,3,2,265632,247843,255170,255170,1200.000302146,1202.633529133
c069,0,3,3,124226,117014,117860,117860,1800.005717756,1803.593807498
c069,0,3,4,87305,82153,82438,82438,2400.010488249,2404.289626171
c069,0,3,5,69742,64887,65136,65136,3000.016398423,3004.911840088
c069,0,3,6,55032,49820,50092,50092,3600.0175343479996,3605.617327069
c069,0,3,7,47101,44074,44268,44268,4200.023330776,4206.245776642
c069,0,3,8,38799,35314,35576,35576,4800.035037773,4806.97042709
c069,0,3,9,35861,33051,33179,33179,5400.048451662,5407.63722921
c069,0,3,10,33633,29821,30064,30064,6000.065832873,6008.295223805
c069,0,3,11,31689,27509,27752,27752,6600.081169128,6608.935956879
# search time: 6600.081s
# total time: 6609.232s
c069,1,3,1,1352499,1170792,1313283,1313283,600.000804588,600.419289191
c069,1,3,2,265809,248146,255413,255413,1200.0010986870002,1200.787210128
c069,1,3,3,121006,113572,114494,114494,1800.0030036050002,1801.167095198
c069,1,3,4,86769,81358,81592,81592,2400.0039336150003,2401.516272427
c069,1,3,5,69251,64343,64579,64579,3000.0070320600003,3001.830408416
c069,1,3,6,55628,50788,51092,51092,3600.010033634,3602.096003349
c069,1,3,7,47081,44113,44329,44329,4200.0244561810005,4202.442895146
c069,1,3,8,39221,36123,36345,36345,4800.028835452001,4802.755116899
c069,1,3,9,36002,33398,33581,33581,5400.035494504001,5403.118966141
c069,1,3,10,33250,29467,29739,29739,6000.037956665001,6003.431188318
c069,1,3,11,30612,26234,26442,26442,6600.053549491001,6603.897737897
# search time: 6600.054s
# total time: 13213.778s
c069,2,3,1,1292840,1110813,1253208,1253208,600.003772556,600.293539761
c069,2,3,2,262965,245395,252682,252682,1200.00381733,1200.549893716
c069,2,3,3,124017,116842,117699,117699,1800.006494731,1800.836874853
c069,2,3,4,86329,80839,81089,81089,2400.0099853,2401.09594092
c069,2,3,5,69275,64332,64570,64570,3000.035956195,3001.345964319
c069,2,3,6,55527,50482,50784,50784,3600.047996718,3601.595350245
c069,2,3,7,45985,42826,42978,42978,4200.050550434,4201.785281071
c069,2,3,8,39273,36149,36388,36388,4800.05962732,4801.984342914
c069,2,3,9,35782,33222,33421,33421,5400.0734551,5402.132360049
c069,2,3,10,33276,29446,29702,29702,6000.083096826999,6002.354354913
c069,2,3,11,31001,26566,26767,26767,6600.089719733,6602.662388159
# search time: 6600.090s
# total time: 19816.767s
c069,3,3,1,1332520,1155790,1294587,1294587,600.000082195,600.344167542
c069,3,3,2,261248,244211,251213,251213,1200.000863165,1200.551896545
c069,3,3,3,119724,112260,113138,113138,1800.0015978380002,1800.750481262
c069,3,3,4,87103,81749,82044,82044,2400.001677497,2400.948297192
c069,3,3,5,69051,64096,64280,64280,3000.00611859,3001.111444972
c069,3,3,6,54657,49403,49692,49692,3600.008995313,3601.293527087
c069,3,3,7,46044,42966,43129,43129,4200.010471085,4201.448517173
c069,3,3,8,39319,36287,36506,36506,4800.012578564,4801.587700995
c069,3,3,9,35828,33113,33296,33296,5400.022974287001,5401.721348223
c069,3,3,10,33180,29273,29566,29566,6000.0265599350005,6001.886495815
c069,3,3,11,30793,26541,26727,26727,6600.031696370001,6602.063694106
# search time: 6600.032s
# total time: 26419.333s
c069,4,3,1,1251284,1060265,1209478,1209478,600.001142755,600.237903933
c069,4,3,2,262316,244683,252147,252147,1200.0056745010002,1200.408381797
c069,4,3,3,119794,112193,113111,113111,1800.0076349200003,1800.599390473
c069,4,3,4,85809,80418,80646,80646,2400.0120895630002,2400.752061053
c069,4,3,5,69142,64321,64487,64487,3000.016916254,3000.90458636
c069,4,3,6,55342,50355,50656,50656,3600.018377702,3601.02529665
c069,4,3,7,45846,42651,42793,42793,4200.023780589,4201.204529899
c069,4,3,8,38531,35128,35293,35293,4800.0305170520005,4801.363098416
c069,4,3,9,35818,33172,33381,33381,5400.035276116,5401.474200839
c069,4,3,10,33123,29476,29726,29726,6000.037430176,6001.632000066
c069,4,3,11,31606,27438,27663,27663,6600.060465575,6601.843537832
# search time: 6600.060s
# total time: 33021.833s
