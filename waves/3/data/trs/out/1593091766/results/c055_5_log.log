    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c055_5.json out/1593091766/results/c055_5_best.csv out/1593091766/results/c055_5_predictions.csv out/1593091766/results/c055_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 9, 7, 2, 0, 8, 5]), o: IntList([7, 2, 3, 9, 0, 8, 5]) }
#   Datum { i: IntList([0, 7, 8, 1, 1, 4, 8, 9, 7, 2]), o: IntList([8, 1, 0, 7, 1, 4, 8, 9, 7, 2]) }
#   Datum { i: IntList([9, 4, 4, 3, 9, 9, 3, 4]), o: IntList([4, 3, 9, 4, 9, 9, 3, 4]) }
#   Datum { i: IntList([9, 7, 7, 5, 5, 7]), o: IntList([7, 5, 9, 7, 5, 7]) }
#   Datum { i: IntList([2, 5, 3, 5, 3, 5, 3, 2, 5]), o: IntList([3, 5, 2, 5, 3, 5, 3, 2, 5]) }
#   Datum { i: IntList([2, 1, 6, 6, 8, 9, 8]), o: IntList([6, 6, 2, 1, 8, 9, 8]) }
#   Datum { i: IntList([6, 2, 3, 0, 3, 2, 8, 1]), o: IntList([3, 0, 6, 2, 3, 2, 8, 1]) }
#   Datum { i: IntList([0, 2, 6, 1, 9, 5, 6, 5, 3]), o: IntList([6, 1, 0, 2, 9, 5, 6, 5, 3]) }
#   Datum { i: IntList([8, 1, 7, 0, 5]), o: IntList([7, 0, 8, 1, 5]) }
#   Datum { i: IntList([4, 8, 7, 9]), o: IntList([7, 9, 4, 8]) }
#   Datum { i: IntList([8, 9, 4, 4]), o: IntList([4, 4, 8, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c055,0,5,1,1284409,1113057,1248097,1248097,600.000748153,601.902794017
c055,0,5,2,374710,349728,359341,359341,1200.002665652,1202.922272156
c055,0,5,3,192138,177502,184785,184785,1800.002748542,1803.472904956
c055,0,5,4,139852,127700,131509,131509,2400.0040942670003,2404.188413138
c055,0,5,5,109027,100078,103124,103124,3000.013253556,3005.082565264
c055,0,5,6,85154,77963,80379,80379,3600.0183961390003,3605.937639305
c055,0,5,7,72786,66575,68544,68544,4200.022467772,4206.760462168
c055,0,5,8,62598,57312,58819,58819,4800.023023919,4807.673608484
c055,0,5,9,53532,48269,50051,50051,5400.0233116829995,5408.617195557
c055,0,5,10,51267,46533,48057,48057,6000.026510774999,6009.305564441
c055,0,5,11,47364,42614,43820,43820,6600.034700216999,6610.103429188
# search time: 6600.035s
# total time: 6610.398s
c055,1,5,1,1236849,1012674,1185609,1185609,600.000142612,600.259251554
c055,1,5,2,373808,349016,358730,358730,1200.0013199979999,1200.695472351
c055,1,5,3,192110,177425,184729,184729,1800.0014733189998,1800.961794433
c055,1,5,4,134998,122985,126362,126362,2400.0059969569998,2401.339704982
c055,1,5,5,107301,98445,101590,101590,3000.0112124469997,3001.797125637
c055,1,5,6,83855,76896,79071,79071,3600.012474411,3602.216118074
c055,1,5,7,71700,65534,67521,67521,4200.018930832,4202.725021408
c055,1,5,8,61994,56694,58268,58268,4800.030384903,4803.246484999
c055,1,5,9,54383,49274,51154,51154,5400.032977424,5403.494195815
c055,1,5,10,50757,45888,47431,47431,6000.036619857,6003.821907761
c055,1,5,11,46507,41773,43021,43021,6600.041028497,6604.430116185
# search time: 6600.041s
# total time: 13215.402s
c055,2,5,1,1250316,1087533,1215528,1215528,600.002251475,600.288576824
c055,2,5,2,378344,353198,362947,362947,1200.003219618,1200.579401405
c055,2,5,3,192873,178081,185413,185413,1800.0127123299999,1800.768465423
c055,2,5,4,138326,126266,130012,130012,2400.0132711799997,2401.004724517
c055,2,5,5,107910,99207,102095,102095,3000.0182196079995,3001.264919463
c055,2,5,6,84203,76997,79421,79421,3600.0190405389994,3601.609114916
c055,2,5,7,71606,65319,67578,67578,4200.022490496999,4201.947561949
c055,2,5,8,62457,57393,58743,58743,4800.023768947,4802.250197878
c055,2,5,9,53408,48117,49861,49861,5400.025411813,5402.539632506
c055,2,5,10,50651,45844,47361,47361,6000.032173664999,6002.856813945
c055,2,5,11,47447,42499,43745,43745,6600.040106424999,6603.299274071
# search time: 6600.040s
# total time: 19818.994s
c055,3,5,1,1180994,961117,1131099,1131099,600.000092112,600.17470691
c055,3,5,2,372224,347133,356901,356901,1200.001708582,1200.398913233
c055,3,5,3,187858,173227,180744,180744,1800.011014196,1800.561536084
c055,3,5,4,134010,122025,125525,125525,2400.017728363,2400.76144573
c055,3,5,5,107124,98131,101340,101340,3000.018637647,3000.942296176
c055,3,5,6,83979,77084,79314,79314,3600.019791667,3601.226649177
c055,3,5,7,72075,66110,67860,67860,4200.022233703,4201.453771308
c055,3,5,8,61560,56216,57914,57914,4800.034790396,4801.693394461
c055,3,5,9,53891,48724,50564,50564,5400.036330235,5401.858632008
c055,3,5,10,49432,44520,46029,46029,6000.042715234,6002.054594472
c055,3,5,11,47033,42205,43482,43482,6600.048891203,6602.264742625
# search time: 6600.049s
# total time: 26421.720s
c055,4,5,1,1175401,997413,1136309,1136309,600.000107238,600.265351187
c055,4,5,2,365694,341782,351409,351409,1200.003549648,1200.462203195
c055,4,5,3,190900,176411,183481,183481,1800.0046708300001,1800.581933118
c055,4,5,4,134230,122364,125717,125717,2400.005941386,2400.724554347
c055,4,5,5,107285,98569,101548,101548,3000.0064921969997,3000.89719939
c055,4,5,6,84947,78010,80165,80165,3600.010239669,3601.102283149
c055,4,5,7,71919,66121,67863,67863,4200.013729205,4201.250278318
c055,4,5,8,61095,56045,57500,57500,4800.0201149330005,4801.434956635
c055,4,5,9,53109,47674,49517,49517,5400.020148469001,5401.651810464
c055,4,5,10,49354,44579,46099,46099,6000.031638708,6001.792585184
c055,4,5,11,46153,41477,42593,42593,6600.033650303,6601.962074306
# search time: 6600.034s
# total time: 33024.134s
