    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c062_5.json out/1593091766/results/c062_5_best.csv out/1593091766/results/c062_5_predictions.csv out/1593091766/results/c062_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([1, 9, 8]), o: IntList([1, 9]) }
#   Datum { i: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2, 4]), o: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2]) }
#   Datum { i: IntList([6, 8, 9, 3, 7, 5, 2, 1]), o: IntList([6, 8, 9, 3, 7, 5, 2]) }
#   Datum { i: IntList([4, 2, 0, 3, 4, 0, 0, 3, 4]), o: IntList([4, 2, 0, 3, 4, 0, 0, 3]) }
#   Datum { i: IntList([1, 2, 5, 4, 5, 4, 7]), o: IntList([1, 2, 5, 4, 5, 4]) }
#   Datum { i: IntList([1, 9, 2, 8, 0, 6]), o: IntList([1, 9, 2, 8, 0]) }
#   Datum { i: IntList([2, 5, 2, 7]), o: IntList([2, 5, 2]) }
#   Datum { i: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6, 3]), o: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6]) }
#   Datum { i: IntList([7, 6, 0, 7, 3]), o: IntList([7, 6, 0, 7]) }
#   Datum { i: IntList([8]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c062,0,5,1,754279,648182,731110,731110,600.000040137,603.029585487
c062,0,5,2,554917,518319,536489,536489,1200.015380582,1204.355972751
c062,0,5,3,342489,319272,325467,325467,1800.015589499,1805.428125333
c062,0,5,4,133231,117514,118174,118174,2400.017184974,2406.252524892
c062,0,5,5,90264,79319,79782,79782,3000.017195407,3006.973368802
c062,0,5,6,63717,55869,56199,56199,3600.024283192,3607.80304642
c062,0,5,7,46940,41659,41900,41900,4200.034597625,4208.682557759
c062,0,5,8,42156,37502,37929,37929,4800.047303674,4809.578653034
c062,0,5,9,38444,35062,35330,35330,5400.056630656,5410.410742861
c062,0,5,10,31270,28173,28496,28496,6000.0689885110005,6011.375317709
c062,0,5,11,29034,26183,26520,26520,6600.0792049970005,6612.314360361
# search time: 6600.079s
# total time: 6612.597s
c062,1,5,1,735558,635497,713857,713857,600.002648155,600.380324472
c062,1,5,2,823547,772228,798367,798367,1200.006073981,1200.861728054
c062,1,5,3,561248,524404,534203,534203,1800.0061425950003,1801.330784182
c062,1,5,4,221704,195068,196118,196118,2400.007290506,2401.692506716
c062,1,5,5,150066,133241,133932,133932,3000.008784702,3002.037836509
c062,1,5,6,104505,92110,92506,92506,3600.00897822,3602.40676832
c062,1,5,7,86767,76035,76515,76515,4200.017851537999,4202.757685885
c062,1,5,8,71621,63713,64369,64369,4800.018740529999,4803.212687758
c062,1,5,9,66518,60319,60746,60746,5400.021712674999,5403.589546765
c062,1,5,10,52711,47546,48005,48005,6000.050696894999,6003.930012203
c062,1,5,11,49649,44556,45018,45018,6600.051133663999,6604.392617886
# search time: 6600.051s
# total time: 13217.495s
c062,2,5,1,1181211,1024547,1147490,1147490,600.000093458,600.309524129
c062,2,5,2,830025,778784,805094,805094,1200.000285745,1200.621613293
c062,2,5,3,343499,320855,326880,326880,1800.000621796,1800.917703925
c062,2,5,4,128219,113185,113882,113882,2400.009728224,2401.118811259
c062,2,5,5,87251,76884,77280,77280,3000.018608926,3001.327763369
c062,2,5,6,62337,54552,54897,54897,3600.026974202,3601.583415372
c062,2,5,7,84460,74187,74654,74654,4200.032057674,4201.86600052
c062,2,5,8,68453,60428,61095,61095,4800.036935640999,4802.166780474
c062,2,5,9,64889,58292,58665,58665,5400.037280233999,5402.401367702
c062,2,5,10,52355,47260,47704,47704,6000.040613943999,6002.789690602
c062,2,5,11,47562,42492,42965,42965,6600.047486547999,6603.120667731
# search time: 6600.047s
# total time: 19821.250s
c062,3,5,1,1182948,1019399,1147667,1147667,600.00158679,600.310657244
c062,3,5,2,822388,772550,798444,798444,1200.00185995,1200.573251615
c062,3,5,3,576178,540091,550312,550312,1800.0019874109998,1800.803609574
c062,3,5,4,216868,188853,189807,189807,2400.0038681349997,2400.993199785
c062,3,5,5,147766,130575,131036,131036,3000.004038409,3001.194992642
c062,3,5,6,106108,93321,93862,93862,3600.0077283909995,3601.377808065
c062,3,5,7,85510,74934,75388,75388,4200.014910053999,4201.523262045
c062,3,5,8,71569,63688,64331,64331,4800.018202437,4801.724493326
c062,3,5,9,64068,57663,58059,58059,5400.022169492,5401.896079372
c062,3,5,10,52587,47450,47894,47894,6000.02511027,6002.122337463
c062,3,5,11,49749,44862,45320,45320,6600.030767943001,6602.29594675
# search time: 6600.031s
# total time: 26424.437s
c062,4,5,1,1156213,991183,1120197,1120197,600.003387688,600.22572051
c062,4,5,2,828332,777292,803412,803412,1200.0037425780001,1200.462225333
c062,4,5,3,562835,526866,536500,536500,1800.004859302,1800.673659244
c062,4,5,4,215954,188182,189128,189128,2400.006624509,2400.818673994
c062,4,5,5,146270,129348,129880,129880,3000.008739673,3000.930517767
c062,4,5,6,104841,92338,92849,92849,3600.010494651,3601.034036995
c062,4,5,7,74936,65413,65867,65867,4200.018416764,4201.23054265
c062,4,5,8,70831,63065,63715,63715,4800.023014761,4801.39774065
c062,4,5,9,66078,59817,60268,60268,5400.031941805,5401.549705643
c062,4,5,10,50713,45749,46199,46199,6000.035676256,6001.704608931
c062,4,5,11,48844,43972,44449,44449,6600.048955764,6601.923679358
# search time: 6600.049s
# total time: 33026.975s
