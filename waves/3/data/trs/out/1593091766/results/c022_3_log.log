    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c022_3.json out/1593091766/results/c022_3_best.csv out/1593091766/results/c022_3_predictions.csv out/1593091766/results/c022_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 2, 6]), o: IntList([0, 5, 2, 6]) }
#   Datum { i: IntList([1, 1]), o: IntList([1, 5, 1]) }
#   Datum { i: IntList([6, 0, 2, 0, 4, 8, 1, 7, 5, 3]), o: IntList([6, 5, 0, 2, 0, 4, 8, 1, 7, 5, 3]) }
#   Datum { i: IntList([7, 6, 1, 9, 6, 8, 3, 6]), o: IntList([7, 5, 6, 1, 9, 6, 8, 3, 6]) }
#   Datum { i: IntList([7, 4, 3, 1, 2, 1, 8]), o: IntList([7, 5, 4, 3, 1, 2, 1, 8]) }
#   Datum { i: IntList([9, 8, 6, 1, 5, 1, 4, 4, 3, 2]), o: IntList([9, 5, 8, 6, 1, 5, 1, 4, 4, 3, 2]) }
#   Datum { i: IntList([6, 4, 9, 5, 2, 7, 8, 2, 4]), o: IntList([6, 5, 4, 9, 5, 2, 7, 8, 2, 4]) }
#   Datum { i: IntList([8, 4, 4, 4, 8, 4]), o: IntList([8, 5, 4, 4, 4, 8, 4]) }
#   Datum { i: IntList([1, 9, 0, 9, 1]), o: IntList([1, 5, 9, 0, 9, 1]) }
#   Datum { i: IntList([6, 5, 3, 3]), o: IntList([6, 5, 5, 3, 3]) }
#   Datum { i: IntList([1, 7, 3, 0, 1, 2, 1, 3, 0, 3]), o: IntList([1, 5, 7, 3, 0, 1, 2, 1, 3, 0, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c022,0,3,1,738528,632997,715757,715757,600.000154403,603.095075518
c022,0,3,2,319980,300079,308277,308277,1200.0008429240002,1204.62623184
c022,0,3,3,213837,199580,207062,207062,1800.0123899940002,1805.421403858
c022,0,3,4,109711,101661,105196,105196,2400.016125567,2406.02726971
c022,0,3,5,79823,73613,76397,76397,3000.020730743,3006.571241336
c022,0,3,6,53735,48945,50356,50356,3600.0233245580002,3607.599865585
c022,0,3,7,40348,36437,37647,37647,4200.023465957001,4208.573622019
c022,0,3,8,32773,29654,30529,30529,4800.028186274,4809.724327391
c022,0,3,9,29059,26452,27187,27187,5400.03798375,5410.871494756
c022,0,3,10,27678,24969,25851,25851,6000.044430103,6011.832873295
c022,0,3,11,23440,21030,21583,21583,6600.079444508,6613.096602622
# search time: 6600.079s
# total time: 6613.302s
c022,1,3,1,696999,571345,668183,668183,600.000086501,600.330153682
c022,1,3,2,313875,294731,302789,302789,1200.025719583,1200.982575726
c022,1,3,3,214286,200041,207422,207422,1800.0257254409998,1801.354346655
c022,1,3,4,109393,100967,104651,104651,2400.035574874,2401.640124352
c022,1,3,5,78867,72559,75299,75299,3000.044675016,3001.900913389
c022,1,3,6,53255,48148,49667,49667,3600.047822219,3602.324404944
c022,1,3,7,40176,36492,37574,37574,4200.06336305,4202.836091415
c022,1,3,8,32516,29458,30357,30357,4800.069260828999,4803.357063718
c022,1,3,9,29063,26316,27098,27098,5400.085320597999,5403.951500984
c022,1,3,10,27321,24699,25524,25524,6000.091397222999,6004.604450821
c022,1,3,11,24020,21421,21971,21971,6600.111171969999,6605.196266017
# search time: 6600.111s
# total time: 13218.908s
c022,2,3,1,675607,552524,647599,647599,600.008777454,600.239982666
c022,2,3,2,311269,292433,300352,300352,1200.031909928,1200.675258304
c022,2,3,3,206438,193181,200234,200234,1800.032304252,1800.906586746
c022,2,3,4,110306,102109,105495,105495,2400.0356268279997,2401.147510097
c022,2,3,5,78398,72310,74938,74938,3000.038112424,3001.350173621
c022,2,3,6,53257,48056,49684,49684,3600.0399342809997,3601.68871014
c022,2,3,7,39718,36076,37186,37186,4200.047183217,4201.989579056
c022,2,3,8,32280,29092,30014,30014,4800.054378105,4802.351604655
c022,2,3,9,29364,26536,27337,27337,5400.061236439,5402.517911203
c022,2,3,10,47369,42914,44348,44348,6000.065549755,6002.92640877
c022,2,3,11,41549,36855,37981,37981,6600.072238529,6603.318301333
# search time: 6600.072s
# total time: 19822.437s
c022,3,3,1,1157952,1003015,1124685,1124685,600.000209487,600.32196101
c022,3,3,2,508360,477622,490431,490431,1200.002523603,1200.616837659
c022,3,3,3,342740,321700,333231,333231,1800.002719946,1800.803246444
c022,3,3,4,180780,168010,173684,173684,2400.0031992100003,2400.957475018
c022,3,3,5,130774,121093,125395,125395,3000.0032437940004,3001.080402384
c022,3,3,6,89724,81671,84070,84070,3600.0062713560005,3601.301579137
c022,3,3,7,67414,61345,63405,63405,4200.015848533,4201.529011253
c022,3,3,8,55830,50711,52190,52190,4800.020499559,4801.770573678
c022,3,3,9,50061,45395,46640,46640,5400.031958826,5402.031949566
c022,3,3,10,47087,42530,43958,43958,6000.040469684,6002.273217901
c022,3,3,11,41102,36377,37386,37386,6600.040781895,6602.476575514
# search time: 6600.041s
# total time: 26425.351s
c022,4,3,1,1035116,892781,1004046,1004046,600.000622566,600.3999356960001
c022,4,3,2,325002,304389,312792,312792,1200.001881727,1200.639072519
c022,4,3,3,206943,193078,200407,200407,1800.006301723,1800.795514631
c022,4,3,4,106414,98256,101889,101889,2400.006913611,2400.897427997
c022,4,3,5,78023,71975,74663,74663,3000.012830304,3001.008080199
c022,4,3,6,53602,48578,49986,49986,3600.01943587,3601.202046268
c022,4,3,7,39893,35974,37296,37296,4200.027359162,4201.414160218
c022,4,3,8,32430,29287,30209,30209,4800.049978706,4801.623242521
c022,4,3,9,28755,26036,26772,26772,5400.067483574,5401.83235704
c022,4,3,10,27732,25044,25930,25930,6000.069346697001,6001.960271151
c022,4,3,11,24078,21441,22100,22100,6600.084797894,6602.194430091
# search time: 6600.085s
# total time: 33027.961s
