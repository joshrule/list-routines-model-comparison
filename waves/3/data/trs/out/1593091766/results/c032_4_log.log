    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c032_4.json out/1593091766/results/c032_4_best.csv out/1593091766/results/c032_4_predictions.csv out/1593091766/results/c032_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 0, 9, 4, 0, 5]), o: IntList([0, 5]) }
#   Datum { i: IntList([9, 6, 6, 6, 9, 0, 9, 7]), o: IntList([9, 0, 9, 7]) }
#   Datum { i: IntList([3, 7, 6, 9, 1, 8, 2]), o: IntList([1, 8, 2]) }
#   Datum { i: IntList([4, 7, 1, 4, 7, 0, 9, 5, 5]), o: IntList([7, 0, 9, 5, 5]) }
#   Datum { i: IntList([6, 0, 1, 2, 8, 4, 6, 4, 3]), o: IntList([1, 2, 8, 4, 6, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 5]), o: IntList([]) }
#   Datum { i: IntList([1, 4, 0, 4, 0]), o: IntList([0]) }
#   Datum { i: IntList([9, 3, 9, 9, 3, 3]), o: IntList([3, 3]) }
#   Datum { i: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), o: IntList([0, 0, 0, 0, 0, 0]) }
#   Datum { i: IntList([8, 0, 5, 2, 5, 8, 5, 6, 6, 3]), o: IntList([5, 2, 5, 8, 5, 6, 6, 3]) }
#   Datum { i: IntList([1, 1, 3, 1, 7, 6, 9, 2]), o: IntList([7, 6, 9, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c032,0,4,1,1251928,1023856,1200070,1200070,600.000042357,601.774727067
c032,0,4,2,653923,616522,634344,634344,1200.000379608,1202.939498963
c032,0,4,3,377436,349939,363060,363060,1800.0008062719999,1803.567638199
c032,0,4,4,299121,276748,287764,287764,2400.001381731,2404.165562295
c032,0,4,5,171486,159678,164493,164493,3000.005165442,3005.180051358
c032,0,4,6,124917,115103,115808,115808,3600.008076643,3606.030127018
c032,0,4,7,123355,115618,119322,119322,4200.008579548,4206.642096441
c032,0,4,8,109255,101966,104929,104929,4800.011297097,4807.349447848
c032,0,4,9,98715,91935,94902,94902,5400.017169904,5408.022256451
c032,0,4,10,77785,72194,75115,75115,6000.025433286,6008.765179527
c032,0,4,11,57829,53349,56084,56084,6600.043225646001,6609.400061754
# search time: 6600.043s
# total time: 6609.928s
c032,1,4,1,1262715,1035278,1210789,1210789,600.004583951,600.265536441
c032,1,4,2,681451,641448,659954,659954,1200.0050974790001,1200.706197698
c032,1,4,3,380083,352690,365640,365640,1800.008641375,1800.980207433
c032,1,4,4,297764,276087,286459,286459,2400.009465714,2401.283982189
c032,1,4,5,170785,158700,163693,163693,3000.013753956,3001.686503482
c032,1,4,6,124254,114460,115147,115147,3600.016621004,3602.123447794
c032,1,4,7,123360,115556,119317,119317,4200.018303774,4202.425736563
c032,1,4,8,110054,102677,105714,105714,4800.0216033219995,4802.762076386
c032,1,4,9,97704,91152,94479,94479,5400.023064679,5403.080139761
c032,1,4,10,77951,72357,74933,74933,6000.027387663,6003.434808852
c032,1,4,11,57606,52992,55610,55610,6600.028205574,6603.77471912
# search time: 6600.028s
# total time: 13214.362s
c032,2,4,1,1282005,1102441,1242967,1242967,600.000262703,600.329527752
c032,2,4,2,652647,615268,633077,633077,1200.000900421,1200.642642498
c032,2,4,3,367780,341587,354720,354720,1800.001120033,1800.836493868
c032,2,4,4,288314,267257,277486,277486,2400.001396053,2401.035415333
c032,2,4,5,167507,156125,160807,160807,3000.001617681,3001.345732057
c032,2,4,6,124589,114560,115241,115241,3600.005772425,3601.625937076
c032,2,4,7,116594,108859,111968,111968,4200.00761252,4201.906073094
c032,2,4,8,113258,105852,109402,109402,4800.009930025,4802.159642508
c032,2,4,9,96575,90094,93343,93343,5400.012810915,5402.387236961
c032,2,4,10,78569,72953,75500,75500,6000.013934785,6002.624433277
c032,2,4,11,57444,52892,55614,55614,6600.021433603,6602.800466933
# search time: 6600.021s
# total time: 19817.917s
c032,3,4,1,1231113,1005896,1179973,1179973,600.003349425,600.195522204
c032,3,4,2,652342,615132,632712,632712,1200.003963224,1200.45537035
c032,3,4,3,377384,350071,362952,362952,1800.006713141,1800.622396782
c032,3,4,4,289402,268088,278508,278508,2400.00825596,2400.769937745
c032,3,4,5,168840,157000,161915,161915,3000.009927846,3000.997736865
c032,3,4,6,130711,120296,121179,121179,3600.0109874520003,3601.198770022
c032,3,4,7,120114,112223,115872,115872,4200.011788157,4201.383335508
c032,3,4,8,109368,102051,105059,105059,4800.017469343,4801.543554627
c032,3,4,9,99596,93175,96145,96145,5400.018086831,5401.778542549
c032,3,4,10,77257,71782,74631,74631,6000.023563949,6001.930363641
c032,3,4,11,56503,51798,54624,54624,6600.03639101,6602.160550279
# search time: 6600.036s
# total time: 26420.861s
c032,4,4,1,1273157,1107558,1237760,1237760,600.001118713,600.302592251
c032,4,4,2,651563,613342,631758,631758,1200.001715241,1200.542015924
c032,4,4,3,367830,340827,353995,353995,1800.007982133,1800.698605848
c032,4,4,4,288965,268259,278175,278175,2400.01601374,2400.853884761
c032,4,4,5,168410,156516,161481,161481,3000.0177627929997,3001.013897491
c032,4,4,6,131735,121242,122167,122167,3600.019071542,3601.198209355
c032,4,4,7,118642,110906,114145,114145,4200.021178713,4201.36260673
c032,4,4,8,109055,101786,104782,104782,4800.027573338,4801.55625041
c032,4,4,9,97584,91036,94357,94357,5400.028968615001,5401.696825989
c032,4,4,10,78807,73027,75758,75758,6000.035029799001,6001.857616019
c032,4,4,11,56017,51276,53894,53894,6600.0775125870005,6602.055886369
# search time: 6600.078s
# total time: 33023.778s
