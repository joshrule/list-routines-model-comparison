    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c069_1.json out/1593091766/results/c069_1_best.csv out/1593091766/results/c069_1_predictions.csv out/1593091766/results/c069_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([9, 3, 4, 0, 0, 5, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([]), o: IntList([9, 3, 4, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 4, 7]), o: IntList([9, 3, 4, 0, 8, 4, 7, 7, 2, 9, 1]) }
#   Datum { i: IntList([8]), o: IntList([9, 3, 4, 0, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([7, 1]), o: IntList([9, 3, 4, 0, 7, 1, 7, 2, 9, 1]) }
#   Datum { i: IntList([4, 0, 9, 3, 0, 8, 8]), o: IntList([9, 3, 4, 0, 4, 0, 9, 3, 0, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([5, 8, 8]), o: IntList([9, 3, 4, 0, 5, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 0, 4, 1, 1, 0]), o: IntList([9, 3, 4, 0, 8, 0, 4, 1, 1, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([6, 6, 6, 6, 6, 6]), o: IntList([9, 3, 4, 0, 6, 6, 6, 6, 6, 6, 7, 2, 9, 1]) }
#   Datum { i: IntList([2, 5, 2, 5, 5]), o: IntList([9, 3, 4, 0, 2, 5, 2, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 1, 6, 3, 2, 7, 3]), o: IntList([9, 3, 4, 0, 8, 1, 6, 3, 2, 7, 3, 7, 2, 9, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c069,0,1,1,1187172,1025102,1152014,1152014,600.006082305,602.077135137
c069,0,1,2,214952,196950,202716,202716,1200.0073635489998,1203.077766663
c069,0,1,3,147634,132124,133991,133991,1800.0087589709997,1804.010481431
c069,0,1,4,98719,79608,80605,80605,2400.0090847459996,2405.036800214
c069,0,1,5,93124,75943,76415,76415,3000.0480354519996,3005.739285313
c069,0,1,6,78039,63852,64209,64209,3600.0566151339995,3606.427375066
c069,0,1,7,61320,49012,49250,49250,4200.063870362,4206.906227032
c069,0,1,8,50775,40756,40904,40904,4800.0701234,4807.46908577
c069,0,1,9,41307,34564,34802,34802,5400.076457281,5407.901839393
c069,0,1,10,35442,29291,29437,29437,6000.08691103,6008.419184256
c069,0,1,11,31651,25343,25465,25465,6600.169148852,6608.991303328
# search time: 6600.169s
# total time: 6609.279s
c069,1,1,1,1128487,918760,1080604,1080604,600.000097593,600.28395682
c069,1,1,2,214579,196634,202425,202425,1200.011206997,1200.731002387
c069,1,1,3,142596,127667,129525,129525,1800.013119612,1801.202029158
c069,1,1,4,98782,80287,81242,81242,2400.014014728,2401.64519267
c069,1,1,5,91176,74390,74878,74878,3000.0195905,3001.998260509
c069,1,1,6,78773,64669,65042,65042,3600.021557253,3602.284451547
c069,1,1,7,61712,49164,49441,49441,4200.033230989,4202.531712561
c069,1,1,8,51601,42279,42515,42515,4800.03911321,4802.789948185
c069,1,1,9,41265,34101,34295,34295,5400.050060496001,5403.090647307
c069,1,1,10,35400,29755,29949,29949,6000.055958527,6003.384388968
c069,1,1,11,32051,25808,26038,26038,6600.076442671,6603.686787628
# search time: 6600.076s
# total time: 13213.430s
c069,2,1,1,1097928,899000,1052719,1052719,600.001693081,600.217529915
c069,2,1,2,210121,192141,197810,197810,1200.0035768819998,1200.522567688
c069,2,1,3,144180,128905,130707,130707,1800.0059267309998,1800.793039549
c069,2,1,4,98800,80095,81031,81031,2400.005929516,2401.115581273
c069,2,1,5,90093,73934,74418,74418,3000.009995448,3001.355269549
c069,2,1,6,78593,64096,64464,64464,3600.013305236,3601.541029443
c069,2,1,7,60206,47609,47829,47829,4200.025671174,4201.732549298
c069,2,1,8,50810,40956,41148,41148,4800.0278188170005,4801.932535402
c069,2,1,9,40594,34030,34255,34255,5400.044197972001,5402.130545908
c069,2,1,10,35133,29438,29645,29645,6000.045237565001,6002.324447292
c069,2,1,11,31920,25807,26006,26006,6600.062151180001,6602.560473207
# search time: 6600.062s
# total time: 19816.445s
c069,3,1,1,1075039,910509,1039013,1039013,600.006274905,600.270669581
c069,3,1,2,214286,196118,201790,201790,1200.0096506710001,1200.523394813
c069,3,1,3,143365,128280,130121,130121,1800.015224787,1800.75000849
c069,3,1,4,99442,80575,81598,81598,2400.016931792,2400.989683488
c069,3,1,5,93261,75452,75846,75846,3000.022540817,3001.171967462
c069,3,1,6,77598,63594,63937,63937,3600.025595381,3601.320108056
c069,3,1,7,60848,48385,48658,48658,4200.0451883920005,4201.487920477
c069,3,1,8,51572,42002,42213,42213,4800.047954918,4801.591043769
c069,3,1,9,41121,33738,33931,33931,5400.051135506,5401.727527319
c069,3,1,10,20312,17168,17298,17298,6000.066369649,6001.914010659
c069,3,1,11,17590,14562,14690,14690,6600.089765677,6602.060254069
# search time: 6600.090s
# total time: 26418.947s
c069,4,1,1,663008,562105,640749,640749,600.000000558,600.219414818
c069,4,1,2,126241,115683,119007,119007,1200.003316731,1200.426042029
c069,4,1,3,84232,75206,76303,76303,1800.009611803,1800.614267822
c069,4,1,4,58997,47445,48038,48038,2400.009655747,2400.814092162
c069,4,1,5,53447,43883,44213,44213,3000.0123775780003,3000.972953247
c069,4,1,6,45661,36801,37012,37012,3600.019172912,3601.113983083
c069,4,1,7,35227,28516,28736,28736,4200.034803882,4201.234645933
c069,4,1,8,29355,24435,24587,24587,4800.047231681,4801.427688293
c069,4,1,9,22856,19221,19349,19349,5400.167116197,5401.645192123
c069,4,1,10,19847,16699,16829,16829,6000.195206859,6001.84087891
c069,4,1,11,19057,15024,15198,15198,6600.2087618059995,6601.961417733
# search time: 6600.209s
# total time: 33021.263s
