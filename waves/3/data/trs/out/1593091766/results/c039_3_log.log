    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c039_3.json out/1593091766/results/c039_3_best.csv out/1593091766/results/c039_3_predictions.csv out/1593091766/results/c039_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 5, 8, 5]), o: IntList([7, 5, 8, 5]) }
#   Datum { i: IntList([8, 8, 3, 3, 3]), o: IntList([8, 8, 3, 3, 3]) }
#   Datum { i: IntList([4, 0, 0, 7, 3]), o: IntList([4, 0, 0, 7, 3, 9, 3]) }
#   Datum { i: IntList([2, 7, 7, 2, 7, 7, 7, 2]), o: IntList([2, 7, 7, 2, 7, 7, 7, 2, 9, 3]) }
#   Datum { i: IntList([4, 1, 1, 9, 0, 1, 8]), o: IntList([4, 1, 1, 9, 0, 1, 8, 9, 3]) }
#   Datum { i: IntList([8, 0, 6, 7, 4]), o: IntList([8, 0, 6, 7, 4]) }
#   Datum { i: IntList([1, 9, 5, 5, 9, 1, 5, 5]), o: IntList([1, 9, 5, 5, 9, 1, 5, 5, 3]) }
#   Datum { i: IntList([0, 7, 0, 0, 0, 0, 7]), o: IntList([0, 7, 0, 0, 0, 0, 7, 3]) }
#   Datum { i: IntList([9, 3, 6, 1]), o: IntList([9, 3, 6, 1]) }
#   Datum { i: IntList([5, 5, 4]), o: IntList([5, 5, 4]) }
#   Datum { i: IntList([2, 2, 2, 2, 2]), o: IntList([2, 2, 2, 2, 2, 9, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c039,0,3,1,1158702,1005893,1125933,1125933,600.000131718,602.115148255
c039,0,3,2,516935,479909,498241,498241,1200.000756458,1203.151707392
c039,0,3,3,299415,279449,290562,290562,1800.001076894,1803.748942887
c039,0,3,4,194491,182879,185043,185043,2400.00142437,2404.453767016
c039,0,3,5,111221,102339,102814,102814,3000.0016103280004,3005.224465967
c039,0,3,6,91239,83496,84015,84015,3600.0076175600007,3605.83935048
c039,0,3,7,83940,76791,77302,77302,4200.013957896001,4206.335199392
c039,0,3,8,64413,58950,59273,59273,4800.027185096001,4806.927025146
c039,0,3,9,53508,48297,48549,48549,5400.030849937,5407.608281663
c039,0,3,10,50502,45077,45290,45290,6000.0341464620005,6008.222573664
c039,0,3,11,46759,42411,42638,42638,6600.034729265,6608.919421124
# search time: 6600.035s
# total time: 6609.294s
c039,1,3,1,1133976,922626,1085512,1085512,600.000159674,600.250326892
c039,1,3,2,494174,459704,477126,477126,1200.000689877,1200.656629326
c039,1,3,3,291576,272799,283288,283288,1800.006310045,1800.93366889
c039,1,3,4,179212,167190,168626,168626,2400.009886247,2401.340080178
c039,1,3,5,113751,105101,105672,105672,3000.011124872,3001.661351325
c039,1,3,6,89108,81277,81637,81637,3600.012762301,3602.00671497
c039,1,3,7,80616,73292,73744,73744,4200.026223929,4202.277170468
c039,1,3,8,64114,58526,58857,58857,4800.0353207709995,4802.560245439
c039,1,3,9,53583,49118,49446,49446,5400.054971570999,5402.93152651
c039,1,3,10,50140,45591,45855,45855,6000.060119078,6003.290677059
c039,1,3,11,47208,43278,43596,43596,6600.069708604,6603.627319365
# search time: 6600.070s
# total time: 13213.573s
c039,2,3,1,1159780,1009394,1128000,1128000,600.000040453,600.26305514
c039,2,3,2,501711,465771,484023,484023,1200.000516659,1200.54224129
c039,2,3,3,291842,273113,283244,283244,1800.001465625,1800.737761954
c039,2,3,4,179683,167481,169004,169004,2400.0024215860003,2400.994326833
c039,2,3,5,110140,101374,101795,101795,3000.0028495120005,3001.281272895
c039,2,3,6,90041,82268,82725,82725,3600.0052690060006,3601.485878658
c039,2,3,7,80194,73217,73686,73686,4200.0064314070005,4201.673894745
c039,2,3,8,64100,58321,58650,58650,4800.009937719001,4801.908860813
c039,2,3,9,53741,48439,48682,48682,5400.015751336001,5402.112801369
c039,2,3,10,51286,46225,46491,46491,6000.018770579001,6002.299202135
c039,2,3,11,46799,41918,42185,42185,6600.027432731002,6602.545288106
# search time: 6600.027s
# total time: 19816.764s
c039,3,3,1,1146245,999714,1114789,1114789,600.000470832,600.239825643
c039,3,3,2,497340,461426,479765,479765,1200.000536699,1200.469057341
c039,3,3,3,294084,275163,285471,285471,1800.0013259009997,1800.615890607
c039,3,3,4,193580,181880,184072,184072,2400.003307209,2400.801193489
c039,3,3,5,111250,102435,102886,102886,3000.0039298359998,3000.991603299
c039,3,3,6,90010,82228,82653,82653,3600.004726841,3601.155359191
c039,3,3,7,79810,72663,73121,73121,4200.008168494,4201.319878364
c039,3,3,8,63481,57067,57316,57316,4800.017275986999,4801.473214431
c039,3,3,9,53135,48556,48857,48857,5400.020075752,5401.678045418
c039,3,3,10,49869,45477,45745,45745,6000.034026193,6001.877739784
c039,3,3,11,46590,42676,42999,42999,6600.054576068,6602.040066652
# search time: 6600.055s
# total time: 26419.450s
c039,4,3,1,1107479,907299,1061780,1061780,600.00006486,600.167584974
c039,4,3,2,489188,454383,472061,472061,1200.004738676,1200.367195409
c039,4,3,3,293682,274103,285232,285232,1800.005975785,1800.49650305
c039,4,3,4,183988,172206,173811,173811,2400.006645781,2400.651964834
c039,4,3,5,113436,104675,105252,105252,3000.008532635,3000.817268618
c039,4,3,6,89158,81467,81886,81886,3600.018593288,3600.959533919
c039,4,3,7,80432,73134,73602,73602,4200.023525746999,4201.111933417
c039,4,3,8,63122,56742,56965,56965,4800.027904895999,4801.225952633
c039,4,3,9,52916,47628,47881,47881,5400.032146324999,5401.396439771
c039,4,3,10,49370,44725,44986,44986,6000.0387513979995,6001.572713817
c039,4,3,11,46015,41459,41693,41693,6600.041784239,6601.723845023
# search time: 6600.042s
# total time: 33021.826s
