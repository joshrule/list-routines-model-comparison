    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c030_3.json out/1593091766/results/c030_3_best.csv out/1593091766/results/c030_3_predictions.csv out/1593091766/results/c030_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 0, 0, 0, 4]), o: IntList([4]) }
#   Datum { i: IntList([4, 4, 4, 7, 7, 4, 7, 7]), o: IntList([7, 4, 7, 7]) }
#   Datum { i: IntList([2, 8, 4, 7, 1, 3, 9, 5, 6, 0]), o: IntList([1, 3, 9, 5, 6, 0]) }
#   Datum { i: IntList([2, 3, 1, 0, 2, 4, 3, 7, 3]), o: IntList([2, 4, 3, 7, 3]) }
#   Datum { i: IntList([5, 8, 5, 1]), o: IntList([]) }
#   Datum { i: IntList([8, 1, 9, 3, 6, 6, 9, 0, 4, 2]), o: IntList([6, 6, 9, 0, 4, 2]) }
#   Datum { i: IntList([8, 8, 2, 2, 2, 8, 5]), o: IntList([2, 8, 5]) }
#   Datum { i: IntList([1, 4, 8, 6, 0, 2, 0, 5]), o: IntList([0, 2, 0, 5]) }
#   Datum { i: IntList([3, 9, 5, 5, 1, 1]), o: IntList([1, 1]) }
#   Datum { i: IntList([6, 3, 8, 4, 5, 8, 7, 9, 8]), o: IntList([5, 8, 7, 9, 8]) }
#   Datum { i: IntList([3, 5, 4, 2]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c030,0,3,1,909603,744570,871772,871772,600.010304765,601.778410626
c030,0,3,2,676111,637754,656521,656521,1200.0109292460002,1203.200388879
c030,0,3,3,396046,360821,368082,368082,1800.0118542920002,1804.193237164
c030,0,3,4,187481,173528,178853,178853,2400.0135879530003,2405.200991023
c030,0,3,5,162207,144426,148259,148259,3000.015285036,3005.979992855
c030,0,3,6,137323,125560,130311,130311,3600.017314607,3606.907451195
c030,0,3,7,102194,93270,96912,96912,4200.023852863,4207.969437884
c030,0,3,8,90001,81898,85064,85064,4800.025550073,4808.926177785
c030,0,3,9,75222,68459,71093,71093,5400.037664098,5409.925011416
c030,0,3,10,68719,62276,64829,64829,6000.052769042,6010.906516912
c030,0,3,11,62471,57154,59910,59910,6600.067475289001,6612.036333075
# search time: 6600.067s
# total time: 6612.315s
c030,1,3,1,1107414,953256,1073873,1073873,600.000074842,600.293290566
c030,1,3,2,711076,669542,689286,689286,1200.0002969470002,1200.792536799
c030,1,3,3,381484,347491,353763,353763,1800.0027780610003,1801.21817046
c030,1,3,4,185455,171642,176868,176868,2400.0127756950005,2401.658262227
c030,1,3,5,160276,142552,146367,146367,3000.0128554500006,3002.052237926
c030,1,3,6,136920,125132,129910,129910,3600.018283941001,3602.496222071
c030,1,3,7,102812,93929,97508,97508,4200.022128142001,4202.930302667
c030,1,3,8,87741,79740,82988,82988,4800.025969912001,4803.316285325
c030,1,3,9,74762,67964,70619,70619,5400.034765598,5403.801736197
c030,1,3,10,69067,62669,65128,65128,6000.034900832001,6004.256749512
c030,1,3,11,62698,57321,59961,59961,6600.038205504001,6604.714782493
# search time: 6600.038s
# total time: 13217.501s
c030,2,3,1,1067856,904356,1031982,1031982,600.000278354,600.225182752
c030,2,3,2,695490,655250,674606,674606,1200.0008005720001,1200.558776859
c030,2,3,3,392821,357739,364969,364969,1800.0009769350002,1800.858983494
c030,2,3,4,188459,174312,179595,179595,2400.001635427,2401.143448035
c030,2,3,5,159494,142019,145868,145868,3000.003327967,3001.357742897
c030,2,3,6,136961,125235,129862,129862,3600.009411111,3601.616057203
c030,2,3,7,101313,92378,95980,95980,4200.023554058,4201.89607265
c030,2,3,8,85934,78255,81259,81259,4800.024803017,4802.200962671
c030,2,3,9,73919,67137,69876,69876,5400.028924058,5402.522802755
c030,2,3,10,69123,62641,65273,65273,6000.030727556,6002.760589004
c030,2,3,11,62865,57543,60266,60266,6600.031685346,6603.065169555
# search time: 6600.032s
# total time: 19821.200s
c030,3,3,1,1142646,981215,1107729,1107729,600.006090952,600.28456433
c030,3,3,2,697594,657066,676492,676492,1200.006117738,1200.553187144
c030,3,3,3,391469,356510,363833,363833,1800.006230521,1800.781690857
c030,3,3,4,186296,172268,177500,177500,2400.007712472,2401.016059736
c030,3,3,5,161193,143119,147079,147079,3000.009752068,3001.174867113
c030,3,3,6,133859,122620,127165,127165,3600.0117240010004,3601.420737797
c030,3,3,7,103044,93865,97540,97540,4200.0186183860005,4201.666470421
c030,3,3,8,88172,80377,83392,83392,4800.021040736001,4801.88299143
c030,3,3,9,74229,67531,70072,70072,5400.024851768001,5402.10593593
c030,3,3,10,69233,62699,65285,65285,6000.037471345001,6002.276886253
c030,3,3,11,61368,56201,58775,58775,6600.040891914001,6602.570275692
# search time: 6600.041s
# total time: 26424.223s
c030,4,3,1,1148365,998461,1116095,1116095,600.001678128,600.271533472
c030,4,3,2,695323,654844,674285,674285,1200.001852368,1200.514123507
c030,4,3,3,385285,350903,357390,357390,1800.0024977520002,1800.719381821
c030,4,3,4,185747,172179,177267,177267,2400.0026578760003,2400.890470791
c030,4,3,5,161414,143679,147388,147388,3000.0026887950003,3001.071965113
c030,4,3,6,134521,123175,127720,127720,3600.003365001,3601.254327619
c030,4,3,7,102586,93584,97105,97105,4200.003449222,4201.428003712
c030,4,3,8,86504,78744,81739,81739,4800.009432641,4801.689512015
c030,4,3,9,72598,66010,68470,68470,5400.009601508,5401.881882256
c030,4,3,10,67887,61484,64020,64020,6000.015120758,6002.077215064
c030,4,3,11,61570,56315,59032,59032,6600.030812521,6602.248922201
# search time: 6600.031s
# total time: 33027.080s
