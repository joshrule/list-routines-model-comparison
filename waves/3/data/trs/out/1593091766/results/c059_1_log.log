    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c059_1.json out/1593091766/results/c059_1_best.csv out/1593091766/results/c059_1_predictions.csv out/1593091766/results/c059_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 3, 9, 2, 7, 4, 6, 3]), o: IntList([8, 3, 9, 3, 7, 4, 6, 2]) }
#   Datum { i: IntList([5, 2, 4, 3, 7, 0, 8, 6]), o: IntList([5, 2, 4, 6, 7, 0, 8, 3]) }
#   Datum { i: IntList([8, 9, 9, 6, 5, 2, 4, 0, 0]), o: IntList([8, 9, 9, 0, 5, 2, 4, 6, 0]) }
#   Datum { i: IntList([7, 3, 4, 0, 1, 6, 8, 1, 5]), o: IntList([7, 3, 4, 1, 1, 6, 8, 0, 5]) }
#   Datum { i: IntList([6, 1, 8, 5, 2, 3, 7, 9, 0, 4]), o: IntList([6, 1, 8, 9, 2, 3, 7, 5, 0, 4]) }
#   Datum { i: IntList([1, 0, 7, 8, 6, 4, 2, 6, 1, 9]), o: IntList([1, 0, 7, 6, 6, 4, 2, 8, 1, 9]) }
#   Datum { i: IntList([6, 7, 2, 6, 5, 4, 4, 0]), o: IntList([6, 7, 2, 0, 5, 4, 4, 6]) }
#   Datum { i: IntList([3, 1, 1, 5, 1, 0, 7, 0, 7]), o: IntList([3, 1, 1, 0, 1, 0, 7, 5, 7]) }
#   Datum { i: IntList([9, 5, 5, 9, 3, 7, 6, 3, 9, 3]), o: IntList([9, 5, 5, 3, 3, 7, 6, 9, 9, 3]) }
#   Datum { i: IntList([5, 2, 8, 8, 8, 8, 2, 5]), o: IntList([5, 2, 8, 5, 8, 8, 2, 8]) }
#   Datum { i: IntList([0, 5, 3, 8, 1, 9, 4, 6, 2]), o: IntList([0, 5, 3, 6, 1, 9, 4, 8, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c059,0,1,1,1051322,859569,1007684,1007684,600.008343889,601.878671672
c059,0,1,2,284835,264205,272139,272139,1200.010129993,1203.120869523
c059,0,1,3,165147,150754,153141,153141,1800.012133236,1804.420813953
c059,0,1,4,101989,93346,96333,96333,2400.020053714,2405.639344949
c059,0,1,5,79372,73064,74976,74976,3000.02067752,3006.866776881
c059,0,1,6,61186,56199,57514,57514,3600.024777498,3608.176768153
c059,0,1,7,49311,45168,46261,46261,4200.031881852,4209.368019467
c059,0,1,8,42998,39239,40197,40197,4800.035034005,4810.428014522
c059,0,1,9,36451,33276,34158,34158,5400.04598444,5411.887033685
c059,0,1,10,30930,28342,29055,29055,6000.063317231,6013.340131212
c059,0,1,11,28979,26214,26947,26947,6600.08677651,6614.473836571
# search time: 6600.087s
# total time: 6614.698s
c059,1,1,1,1055697,863578,1011815,1011815,600.010336013,600.293219421
c059,1,1,2,291391,270412,278230,278230,1200.015771154,1200.815375278
c059,1,1,3,165292,150560,152903,152903,1800.018286315,1801.334095372
c059,1,1,4,103099,94322,97385,97385,2400.0203554600002,2401.896517333
c059,1,1,5,77417,71053,73087,73087,3000.0234043830005,3002.62045564
c059,1,1,6,60435,55324,56832,56832,3600.0246710620004,3603.244209229
c059,1,1,7,49404,45216,46261,46261,4200.038175161,4203.904625358
c059,1,1,8,42224,38505,39376,39376,4800.045955718,4804.673784407
c059,1,1,9,36522,33283,34102,34102,5400.056163048001,5405.213709994
c059,1,1,10,30888,28199,28948,28948,6000.062926823,6005.867875579
c059,1,1,11,27938,25467,26056,26056,6600.080697040001,6606.660720688
# search time: 6600.081s
# total time: 13221.709s
c059,2,1,1,1062155,874989,1019600,1019600,600.000154036,600.241856966
c059,2,1,2,286668,266129,273865,273865,1200.004112991,1200.607369078
c059,2,1,3,166418,152131,154429,154429,1800.011454861,1800.939688227
c059,2,1,4,101916,93605,96384,96384,2400.013387002,2401.338880895
c059,2,1,5,76806,70808,72675,72675,3000.018352817,3001.705560627
c059,2,1,6,59811,54817,56247,56247,3600.0198230670003,3602.085090661
c059,2,1,7,49331,45203,46262,46262,4200.028475135,4202.525451736
c059,2,1,8,42459,38677,39656,39656,4800.031340088,4803.068927497
c059,2,1,9,36548,33350,34185,34185,5400.060208142,5403.652694931
c059,2,1,10,31411,28609,29347,29347,6000.068704787001,6004.136425575
c059,2,1,11,27733,24987,25705,25705,6600.093259392001,6604.630201285
# search time: 6600.093s
# total time: 19826.673s
c059,3,1,1,1099026,951427,1067349,1067349,600.00040993,600.291863836
c059,3,1,2,291242,270241,278016,278016,1200.0007974310001,1200.553585885
c059,3,1,3,164306,150123,152514,152514,1800.0024734110002,1800.849848403
c059,3,1,4,101472,93212,95986,95986,2400.004847534,2401.165953427
c059,3,1,5,78908,72502,74401,74401,3000.015477761,3001.458462261
c059,3,1,6,61024,56245,57479,57479,3600.028532958,3601.791564894
c059,3,1,7,48685,44401,45657,45657,4200.030102237,4202.139871063
c059,3,1,8,27316,24881,25450,25450,4800.033126117,4802.539330214
c059,3,1,9,20494,18583,19096,19096,5400.048421827,5402.79271395
c059,3,1,10,17394,15865,16294,16294,6000.085515824,6003.239217995
c059,3,1,11,15573,14085,14505,14505,6600.1206702360005,6603.523808438
# search time: 6600.121s
# total time: 26430.542s
c059,4,1,1,656185,561732,635519,635519,600.003780872,600.222125738
c059,4,1,2,170981,158247,163133,163133,1200.012688472,1200.44111699
c059,4,1,3,102041,93329,94912,94912,1800.0143452480002,1800.633090475
c059,4,1,4,60383,55169,56776,56776,2400.021838679,2400.888605122
c059,4,1,5,77442,71286,73090,73090,3000.0242053700003,3001.196307086
c059,4,1,6,60486,55476,56859,56859,3600.0385574010006,3601.458609687
c059,4,1,7,48363,44133,45326,45326,4202.026553937,4203.717923835
c059,4,1,8,42770,39044,39968,39968,4802.038352646,4803.904601684
c059,4,1,9,36819,33503,34374,34374,5402.042964978,5404.249416318
c059,4,1,10,29776,27277,27877,27877,6002.044086718,6004.4487638
c059,4,1,11,27395,24694,25352,25352,6602.058005559999,6604.700950651
# search time: 6602.058s
# total time: 33035.590s
