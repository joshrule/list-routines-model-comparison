    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c054_2.json out/1593091766/results/c054_2_best.csv out/1593091766/results/c054_2_predictions.csv out/1593091766/results/c054_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 3, 6, 7, 0]), o: IntList([6, 6, 6, 7, 0]) }
#   Datum { i: IntList([9, 3, 9, 9, 0, 0]), o: IntList([9, 9, 9, 9, 0, 0]) }
#   Datum { i: IntList([4, 8, 4, 4, 8, 8, 8, 4, 8, 8]), o: IntList([4, 4, 4, 4, 8, 8, 8, 4, 8, 8]) }
#   Datum { i: IntList([2, 2, 7, 2, 2, 5, 7, 7, 0]), o: IntList([7, 7, 7, 2, 2, 5, 7, 7, 0]) }
#   Datum { i: IntList([8, 7, 3, 5, 5, 5, 5, 6]), o: IntList([3, 3, 3, 5, 5, 5, 5, 6]) }
#   Datum { i: IntList([7, 5, 2, 5, 7, 7, 2]), o: IntList([2, 2, 2, 5, 7, 7, 2]) }
#   Datum { i: IntList([4, 1, 1, 1, 1, 4, 4, 1, 3, 3]), o: IntList([1, 1, 1, 1, 1, 4, 4, 1, 3, 3]) }
#   Datum { i: IntList([9, 5, 9, 2, 3, 8, 2, 3, 8]), o: IntList([9, 9, 9, 2, 3, 8, 2, 3, 8]) }
#   Datum { i: IntList([4, 0, 0]), o: IntList([0, 0, 0]) }
#   Datum { i: IntList([5, 5, 9, 5]), o: IntList([9, 9, 9, 5]) }
#   Datum { i: IntList([6, 5, 6, 5, 6]), o: IntList([6, 6, 6, 5, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c054,0,2,1,1297505,1063942,1244095,1244095,600.000075294,601.717362605
c054,0,2,2,480747,441881,457429,457429,1200.00041192,1202.965309847
c054,0,2,3,291129,266371,272144,272144,1800.001168364,1803.781867924
c054,0,2,4,162091,149229,153903,153903,2400.002717622,2404.514708259
c054,0,2,5,119478,109491,113084,113084,3000.013116108,3005.232754116
c054,0,2,6,96316,88033,90891,90891,3600.013504995,3605.881390531
c054,0,2,7,80386,73122,75430,75430,4200.014832756,4206.537519026
c054,0,2,8,63815,58162,59640,59640,4800.019125249,4807.369962893
c054,0,2,9,55599,50195,51966,51966,5400.026658391001,5407.955595338
c054,0,2,10,52478,47028,48369,48369,6000.040580711001,6008.818785916
c054,0,2,11,50035,44688,45996,45996,6600.057475513001,6609.562422594
# search time: 6600.057s
# total time: 6609.866s
c054,1,2,1,1329129,1170674,1296379,1296379,600.001570056,600.409579166
c054,1,2,2,463944,425682,440963,440963,1200.0017500049998,1200.908929057
c054,1,2,3,289171,264236,269998,269998,1800.002740065,1801.274096202
c054,1,2,4,161905,149445,153911,153911,2400.00657538,2401.574939667
c054,1,2,5,119082,109355,112873,112873,3000.010983123,3001.903692792
c054,1,2,6,94785,86328,89449,89449,3600.012454219,3602.278466568
c054,1,2,7,80376,73124,75409,75409,4200.014073982,4202.597866459
c054,1,2,8,63167,57417,59026,59026,4800.025961947,4802.882151471
c054,1,2,9,55213,49890,51637,51637,5400.031648667,5403.195610427
c054,1,2,10,52322,46858,48263,48263,6000.035454614,6003.505189788
c054,1,2,11,49948,44488,45845,45845,6600.057259247,6603.932476212
# search time: 6600.057s
# total time: 13214.262s
c054,2,2,1,1224656,1005601,1175331,1175331,600.000143797,600.193158064
c054,2,2,2,470707,432561,447990,447990,1200.001707727,1200.52758907
c054,2,2,3,286489,261942,267498,267498,1800.003538034,1800.774924813
c054,2,2,4,160780,147912,152674,152674,2400.006961984,2400.982171722
c054,2,2,5,118546,108807,112374,112374,3000.007610266,3001.204084667
c054,2,2,6,95022,86794,89752,89752,3600.011901717,3601.42564346
c054,2,2,7,79455,71951,74457,74457,4200.012627706,4201.673690636
c054,2,2,8,63620,57827,59465,59465,4800.016600505,4801.938415577
c054,2,2,9,54202,48858,50441,50441,5400.025235264,5402.211863041
c054,2,2,10,52113,46884,48188,48188,6000.030721405,6002.469466098
c054,2,2,11,49932,44539,45852,45852,6600.039638116999,6602.677126228
# search time: 6600.040s
# total time: 19817.535s
c054,3,2,1,1272515,1042300,1219673,1219673,600.000214624,600.194067222
c054,3,2,2,456693,419801,434654,434654,1200.001561168,1200.470937182
c054,3,2,3,288323,263732,269409,269409,1800.002914652,1800.668240502
c054,3,2,4,160477,147780,152418,152418,2400.002933885,2400.846081724
c054,3,2,5,117201,107398,111003,111003,3000.007344575,3001.023617157
c054,3,2,6,94818,86714,89493,89493,3600.010912759,3601.165064826
c054,3,2,7,79676,72586,74825,74825,4200.018945646,4201.413847346
c054,3,2,8,63437,57536,59197,59197,4800.024979312,4801.67206364
c054,3,2,9,54614,49222,50927,50927,5400.033935306,5401.879424366
c054,3,2,10,51180,45918,47262,47262,6000.04057141,6002.116400371
c054,3,2,11,49286,44103,45412,45412,6600.044375351,6602.376497816
# search time: 6600.044s
# total time: 26420.353s
c054,4,2,1,1284422,1116524,1248659,1248659,600.000140762,600.257476079
c054,4,2,2,471811,433608,448817,448817,1200.000272665,1200.480503466
c054,4,2,3,287946,263338,269226,269226,1800.0014907290001,1800.669179859
c054,4,2,4,159835,147353,151955,151955,2400.003447686,2400.815924738
c054,4,2,5,118711,108855,112391,112391,3000.004819299,3000.987491662
c054,4,2,6,94893,86436,89519,89519,3600.011617755,3601.155755306
c054,4,2,7,79693,72498,74697,74697,4200.013573655,4201.309481744
c054,4,2,8,63729,57786,59524,59524,4800.015171077001,4801.47259644
c054,4,2,9,54490,49100,50664,50664,5400.017271145,5401.641639933
c054,4,2,10,52125,46449,47949,47949,6000.031542726,6001.824514543
c054,4,2,11,49243,44148,45351,45351,6600.0402635810005,6602.03704891
# search time: 6600.040s
# total time: 33022.821s
