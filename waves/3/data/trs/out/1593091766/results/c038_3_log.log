    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c038_3.json out/1593091766/results/c038_3_best.csv out/1593091766/results/c038_3_predictions.csv out/1593091766/results/c038_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c038,0,3,1,716238,618829,695120,695120,600.000195302,603.10408916
c038,0,3,2,303710,284188,291920,291920,1200.0017156449999,1204.711586388
c038,0,3,3,116009,106235,106982,106982,1800.0030986779998,1806.120601025
c038,0,3,4,99762,91247,91576,91576,2400.0043329349996,2406.943979463
c038,0,3,5,142244,129084,129835,129835,3000.0093186449994,3008.200074864
c038,0,3,6,138481,119030,119652,119652,3600.0104870169994,3609.348552807
c038,0,3,7,103578,86829,87431,87431,4200.015403527999,4210.440839817
c038,0,3,8,81068,67253,67903,67903,4800.018327262,4811.501887911
c038,0,3,9,70928,57991,58674,58674,5400.01923112,5412.725095626
c038,0,3,10,56119,46503,47072,47072,6000.024848228,6013.812514185
c038,0,3,11,55215,44108,44650,44650,6600.031559979,6614.750567991
# search time: 6600.032s
# total time: 6615.087s
c038,1,3,1,1299921,1067083,1246281,1246281,600.001361313,600.353279736
c038,1,3,2,557128,523404,537333,537333,1200.004933615,1200.874981596
c038,1,3,3,214764,196147,197816,197816,1800.019372721,1801.338822188
c038,1,3,4,191046,174551,175155,175155,2400.020577667,2401.761803907
c038,1,3,5,140395,127189,127894,127894,3000.022814737,3002.183685495
c038,1,3,6,132382,113499,114053,114053,3600.0256624269996,3602.615738305
c038,1,3,7,102115,85446,85999,85999,4200.026091238,4203.037239396
c038,1,3,8,78601,65117,65725,65725,4800.027476199,4803.515057386
c038,1,3,9,67919,55813,56531,56531,5400.032215801,5403.986770298
c038,1,3,10,56830,46481,47017,47017,6000.033260802,6004.464445757
c038,1,3,11,51891,41772,42303,42303,6600.034625052,6604.89593926
# search time: 6600.035s
# total time: 13220.676s
c038,2,3,1,1290753,1059880,1238005,1238005,600.001109292,600.249503941
c038,2,3,2,562584,526755,541638,541638,1200.001485668,1200.55341752
c038,2,3,3,220417,202130,203753,203753,1800.002309892,1800.843443932
c038,2,3,4,194423,178451,179223,179223,2400.00382811,2401.111559006
c038,2,3,5,137240,123861,124478,124478,3000.004164976,3001.42748238
c038,2,3,6,132045,113394,113989,113989,3600.005676586,3601.687828962
c038,2,3,7,98533,82562,83056,83056,4200.010264004,4202.006384817
c038,2,3,8,80514,66807,67435,67435,4800.012488315,4802.260307625
c038,2,3,9,69527,56984,57687,57687,5400.016270204,5402.540898405
c038,2,3,10,53858,44699,45300,45300,6000.040150954999,6002.960288186
c038,2,3,11,51785,41557,42127,42127,6600.067632699,6603.242907724
# search time: 6600.068s
# total time: 19824.606s
c038,3,3,1,1317342,1153655,1282862,1282862,600.002890538,600.349113348
c038,3,3,2,570237,534766,549122,549122,1200.0053619320001,1200.607004901
c038,3,3,3,215235,196526,198217,198217,1800.0061727720001,1800.828402296
c038,3,3,4,195174,179655,180449,180449,2400.008389922,2400.99497292
c038,3,3,5,140570,127518,128204,128204,3000.008595665,3001.200659075
c038,3,3,6,135306,116493,117122,117122,3600.0111827709998,3601.381906636
c038,3,3,7,102011,85374,85969,85969,4200.012357384,4201.56820932
c038,3,3,8,80396,66880,67506,67506,4800.015070001,4801.777503398
c038,3,3,9,70022,57307,57997,57997,5400.020031733,5401.97458301
c038,3,3,10,56574,46416,46968,46968,6000.034175262,6002.177350435
c038,3,3,11,55229,43938,44478,44478,6600.040220781,6602.411184708
# search time: 6600.040s
# total time: 26427.703s
c038,4,3,1,1238736,1054164,1198217,1198217,600.000091023,600.258355149
c038,4,3,2,572435,536533,550937,550937,1200.000269492,1200.478143681
c038,4,3,3,218797,200640,202355,202355,1800.004144587,1800.637232709
c038,4,3,4,192481,176697,177481,177481,2400.005907758,2400.767685418
c038,4,3,5,139292,126500,127197,127197,3000.008002402,3000.925631667
c038,4,3,6,135351,115970,116632,116632,3600.011738909,3601.089605689
c038,4,3,7,101402,85046,85637,85637,4200.01813413,4201.267515971
c038,4,3,8,79743,66496,67099,67099,4800.021429793001,4801.42472639
c038,4,3,9,69374,56645,57339,57339,5400.030201419,5401.603811858
c038,4,3,10,47930,39060,39543,39543,6000.057882181,6001.888301787
c038,4,3,11,46311,36994,37457,37457,6600.061674464,6602.022131894
# search time: 6600.062s
# total time: 33030.620s
