    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c019_1.json out/1593091766/results/c019_1_best.csv out/1593091766/results/c019_1_predictions.csv out/1593091766/results/c019_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6, 6, 6]) }
#   Datum { i: IntList([9, 9, 9, 2, 0, 2, 3]), o: IntList([9, 9, 9, 2, 0, 3, 3]) }
#   Datum { i: IntList([1, 1, 7, 4, 0, 8, 9, 0]), o: IntList([1, 1, 7, 4, 0, 3, 9, 0]) }
#   Datum { i: IntList([4, 3, 5, 8, 3, 2, 7, 9, 1]), o: IntList([4, 3, 5, 8, 3, 3, 7, 9, 1]) }
#   Datum { i: IntList([7, 1, 8, 6, 5, 0, 4, 5, 3, 9]), o: IntList([7, 1, 8, 6, 5, 3, 4, 5, 3, 9]) }
#   Datum { i: IntList([4, 5, 5, 0, 4, 2]), o: IntList([4, 5, 5, 0, 4, 3]) }
#   Datum { i: IntList([3, 7, 2, 0, 4, 9, 8]), o: IntList([3, 7, 2, 0, 4, 3, 8]) }
#   Datum { i: IntList([1, 1, 8]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([8, 2, 6, 7, 9]), o: IntList([8, 2, 6, 7, 9]) }
#   Datum { i: IntList([]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c019,0,1,1,1348927,1173720,1311366,1311366,600.000268173,601.903550065
c019,0,1,2,550954,514455,534456,534456,1200.022501517,1202.782852047
c019,0,1,3,283135,263724,266234,266234,1800.023293458,1803.580934606
c019,0,1,4,180027,167695,168877,168877,2400.0269772819997,2404.202968168
c019,0,1,5,135862,126630,128612,128612,3000.029579492,3004.732413343
c019,0,1,6,104747,96764,97594,97594,3600.037567633,3605.142861993
c019,0,1,7,83492,77620,78646,78646,4200.040280556,4205.840984202
c019,0,1,8,67755,62153,62771,62771,4800.048227022,4806.479998126
c019,0,1,9,59895,53886,54484,54484,5400.056965002,5407.141886207
c019,0,1,10,60850,54524,55236,55236,6000.059582719,6007.791743427
c019,0,1,11,53976,47243,47679,47679,6600.06465935,6608.348031912
# search time: 6600.065s
# total time: 6608.766s
c019,1,1,1,1271573,1093110,1233029,1233029,600.000264921,600.326532682
c019,1,1,2,536708,501629,520995,520995,1200.004507448,1200.687665578
c019,1,1,3,287238,268255,271384,271384,1800.004593748,1801.016398571
c019,1,1,4,170111,158258,159069,159069,2400.009844094,2401.368462122
c019,1,1,5,134988,125955,127839,127839,3000.012083527,3001.63229497
c019,1,1,6,102196,94058,94741,94741,3600.015898737,3601.869061958
c019,1,1,7,82781,76865,77782,77782,4200.022309735,4202.221658811
c019,1,1,8,65289,59488,60037,60037,4800.032753568999,4802.633134615
c019,1,1,9,59784,53771,54399,54399,5400.049590729999,5402.979172276
c019,1,1,10,60462,53942,54670,54670,6000.055614475999,6003.2878079
c019,1,1,11,54785,48456,48926,48926,6600.0564265739995,6603.622352653
# search time: 6600.056s
# total time: 13213.102s
c019,2,1,1,1276853,1096069,1237559,1237559,600.001358731,600.289921903
c019,2,1,2,537350,502571,521886,521886,1200.00379019,1200.574904817
c019,2,1,3,288759,270080,272965,272965,1800.003927145,1800.824442204
c019,2,1,4,169744,158137,158945,158945,2400.007884439,2401.057028637
c019,2,1,5,133898,124704,126916,126916,3000.00798421,3001.235208991
c019,2,1,6,104125,96038,96912,96912,3600.008753883,3601.39170625
c019,2,1,7,82116,76327,77294,77294,4200.012680317,4201.589768388
c019,2,1,8,67004,61475,62073,62073,4800.015723484,4801.838776823
c019,2,1,9,60738,55143,55793,55793,5400.017563312,5402.115214825
c019,2,1,10,60714,54216,54925,54925,6000.023774761999,6002.289778802
c019,2,1,11,55321,48835,49364,49364,6600.033694340999,6602.572281497
# search time: 6600.034s
# total time: 19816.575s
c019,3,1,1,1334541,1169526,1300467,1300467,600.000040377,600.286843908
c019,3,1,2,542515,507027,526445,526445,1200.001246953,1200.515275687
c019,3,1,3,278792,259444,261972,261972,1800.002352776,1800.710749113
c019,3,1,4,172227,160395,161231,161231,2400.006004305,2400.927391202
c019,3,1,5,135259,126245,128106,128106,3000.010227486,3001.063023179
c019,3,1,6,104155,96296,97110,97110,3600.010671758,3601.176804881
c019,3,1,7,81285,75421,76411,76411,4200.02333676,4201.387509934
c019,3,1,8,65257,59398,59968,59968,4800.0352457750005,4801.664859311
c019,3,1,9,59527,53731,54344,54344,5400.0454990240005,5401.900580465
c019,3,1,10,60843,54514,55209,55209,6000.046816937001,6002.081770941
c019,3,1,11,54965,48590,49070,49070,6600.053950855001,6602.278956276
# search time: 6600.054s
# total time: 26419.383s
c019,4,1,1,1238651,1052664,1197607,1197607,600.000561982,600.233025288
c019,4,1,2,539706,504630,524010,524010,1200.0018279370001,1200.441895563
c019,4,1,3,283830,264551,267449,267449,1800.020036152,1800.648292267
c019,4,1,4,172150,160292,161132,161132,2400.0219899070003,2400.799517184
c019,4,1,5,135778,126663,128378,128378,3000.0283594320003,3000.945654286
c019,4,1,6,103377,95490,96349,96349,3600.0348328980003,3601.03494121
c019,4,1,7,81995,76045,77074,77074,4200.036433979,4201.170033918
c019,4,1,8,64748,58997,59573,59573,4800.039069448,4801.391947544
c019,4,1,9,59475,53620,54249,54249,5400.039298437,5401.549644361
c019,4,1,10,59497,51751,52410,52410,6000.042597933,6001.692808981
c019,4,1,11,53077,46246,46672,46672,6600.054547298,6601.879517648
# search time: 6600.055s
# total time: 33022.280s
