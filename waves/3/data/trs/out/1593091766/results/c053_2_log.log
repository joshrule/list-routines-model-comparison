    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c053_2.json out/1593091766/results/c053_2_best.csv out/1593091766/results/c053_2_predictions.csv out/1593091766/results/c053_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4, 2]), o: IntList([1, 1, 2]) }
#   Datum { i: IntList([8, 6, 3, 6, 6, 3, 3]), o: IntList([8, 8, 3, 6, 6, 3, 3]) }
#   Datum { i: IntList([7, 4, 6, 5, 0, 8, 4, 2]), o: IntList([7, 7, 6, 5, 0, 8, 4, 2]) }
#   Datum { i: IntList([9, 1, 5, 8, 4, 3, 7, 6, 5, 2]), o: IntList([9, 9, 5, 8, 4, 3, 7, 6, 5, 2]) }
#   Datum { i: IntList([9, 2, 2, 8, 0, 0, 2, 1, 1]), o: IntList([9, 9, 2, 8, 0, 0, 2, 1, 1]) }
#   Datum { i: IntList([8, 9, 6, 4]), o: IntList([8, 8, 6, 4]) }
#   Datum { i: IntList([6, 5, 8, 9, 1, 3, 4, 1, 0]), o: IntList([6, 6, 8, 9, 1, 3, 4, 1, 0]) }
#   Datum { i: IntList([0, 5, 7, 6, 7, 1]), o: IntList([0, 0, 7, 6, 7, 1]) }
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
#   Datum { i: IntList([9, 3, 7, 0, 1, 5, 5, 0]), o: IntList([9, 9, 7, 0, 1, 5, 5, 0]) }
#   Datum { i: IntList([2, 0, 2, 0, 2]), o: IntList([2, 2, 2, 0, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c053,0,2,1,1349281,1180854,1313972,1313972,600.000119489,601.955410658
c053,0,2,2,645023,606134,623422,623422,1200.000132185,1202.840870649
c053,0,2,3,317423,294448,304750,304750,1800.0026820839998,1803.303300134
c053,0,2,4,210638,194454,201470,201470,2400.00623816,2403.753325404
c053,0,2,5,141985,130101,134658,134658,3000.007055677,3004.161340957
c053,0,2,6,93421,84838,87403,87403,3600.009602645,3604.81445313
c053,0,2,7,90578,82494,85187,85187,4200.0111515690005,4205.359017806
c053,0,2,8,74103,66905,69174,69174,4800.011531645001,4805.961250307
c053,0,2,9,64553,57902,59763,59763,5400.015924870001,5406.523172229
c053,0,2,10,66063,60081,60858,60858,6000.021793702001,6006.946122127
c053,0,2,11,54333,49248,49874,49874,6600.025879467001,6607.589223972
# search time: 6600.026s
# total time: 6607.896s
c053,1,2,1,1308790,1072629,1254872,1254872,600.001801043,600.2619894
c053,1,2,2,621566,584195,601763,601763,1200.002630406,1200.649775193
c053,1,2,3,315544,292491,302774,302774,1800.003662595,1800.889380494
c053,1,2,4,206423,190901,197514,197514,2400.006282679,2401.101438936
c053,1,2,5,140127,128429,132910,132910,3000.009792562,3001.324357326
c053,1,2,6,93448,84886,87508,87508,3600.011883692,3601.692845995
c053,1,2,7,89542,81313,84132,84132,4200.01898876,4201.97663215
c053,1,2,8,73197,66227,68399,68399,4800.019939595,4802.315964261
c053,1,2,9,63623,56864,58617,58617,5400.047001481,5402.718971668
c053,1,2,10,65812,59917,60685,60685,6000.054021164,6003.053146555
c053,1,2,11,53845,48741,49392,49392,6600.068441132,6603.367409405
# search time: 6600.068s
# total time: 13211.939s
c053,2,2,1,1240973,1049679,1198970,1198970,600.00012883,600.24812966
c053,2,2,2,631600,594024,611289,611289,1200.000235523,1200.530123372
c053,2,2,3,306296,284118,294427,294427,1800.0007322269998,1800.699167585
c053,2,2,4,194542,174800,186001,186001,2400.001458493,2400.847817152
c053,2,2,5,139688,127911,132496,132496,3000.002580907,3000.997411321
c053,2,2,6,93817,85885,88172,88172,3600.002830212,3601.233137184
c053,2,2,7,89889,81774,84549,84549,4200.01946402,4201.423885823
c053,2,2,8,72995,66213,68315,68315,4800.021406604999,4801.738460604
c053,2,2,9,63814,56820,58576,58576,5400.022754796999,5401.961351564
c053,2,2,10,65878,59890,60604,60604,6000.024890870999,6002.137300943
c053,2,2,11,53847,48909,49518,49518,6600.030995451999,6602.274782852
# search time: 6600.031s
# total time: 19814.520s
c053,3,2,1,1303082,1067050,1249253,1249253,600.000126163,600.213838708
c053,3,2,2,628574,591741,608483,608483,1200.0004720860002,1200.451534395
c053,3,2,3,312970,290769,300928,300928,1800.009465944,1800.613955364
c053,3,2,4,205023,189539,196136,196136,2400.010036679,2400.741527218
c053,3,2,5,140236,128330,132990,132990,3000.0129103060003,3000.871911771
c053,3,2,6,92809,84221,86816,86816,3600.0159847310006,3601.022454376
c053,3,2,7,88740,80841,83678,83678,4200.016685646001,4201.211239277
c053,3,2,8,72827,65871,68083,68083,4800.021998979001,4801.393101947
c053,3,2,9,64017,57173,58952,58952,5400.025761088002,5401.537265681
c053,3,2,10,65040,59110,59847,59847,6000.028107190002,6001.747003853
c053,3,2,11,55514,50383,51025,51025,6600.038669900002,6601.923367875
# search time: 6600.039s
# total time: 26416.934s
c053,4,2,1,1290292,1108904,1250768,1250768,600.003024024,600.257512141
c053,4,2,2,637976,600097,617055,617055,1200.003393062,1200.460827122
c053,4,2,3,316491,293842,304062,304062,1800.0045125729998,1800.584887811
c053,4,2,4,202963,187187,194021,194021,2400.006627323,2400.704112224
c053,4,2,5,141722,130473,134492,134492,3000.009090567,3000.805331899
c053,4,2,6,92892,84488,87131,87131,3600.011159652,3600.949715295
c053,4,2,7,89570,81123,84000,84000,4200.013708548,4201.090067896
c053,4,2,8,72867,65801,68159,68159,4800.021924316,4801.214475146
c053,4,2,9,63746,57134,58919,58919,5400.031547492,5401.367218946
c053,4,2,10,65705,59693,60415,60415,6000.032732852,6001.501164487
c053,4,2,11,54477,49245,49876,49876,6600.038380909,6601.68224998
# search time: 6600.038s
# total time: 33019.113s
