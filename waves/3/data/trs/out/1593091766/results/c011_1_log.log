    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c011_1.json out/1593091766/results/c011_1_best.csv out/1593091766/results/c011_1_predictions.csv out/1593091766/results/c011_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 3, 6, 0]), o: IntList([3, 6, 0]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 8, 7, 3, 7]), o: IntList([8, 5, 8]) }
#   Datum { i: IntList([9, 2, 6, 4, 6, 2, 0]), o: IntList([2, 6, 4]) }
#   Datum { i: IntList([1, 9, 3, 0, 2, 8, 5]), o: IntList([9, 3, 0]) }
#   Datum { i: IntList([5, 1, 1, 8, 1, 6, 7, 2, 7]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([5, 7, 5, 9, 7, 6, 8, 5, 6, 8]), o: IntList([7, 5, 9]) }
#   Datum { i: IntList([1, 1, 4, 0, 3, 1, 3, 5, 0]), o: IntList([1, 4, 0]) }
#   Datum { i: IntList([6, 8, 6, 9, 9, 8, 8, 6]), o: IntList([8, 6, 9]) }
#   Datum { i: IntList([0, 0, 3, 3, 7]), o: IntList([0, 3, 3]) }
#   Datum { i: IntList([6, 1, 3, 0, 4, 9]), o: IntList([1, 3, 0]) }
#   Datum { i: IntList([7, 2, 4, 2, 4, 7, 2, 2, 4]), o: IntList([2, 4, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c011,0,1,1,697963,570914,668821,668821,600.000057741,602.751751213
c011,0,1,2,345027,323584,332398,332398,1200.003770267,1204.503958893
c011,0,1,3,207839,191906,199270,199270,1800.005151982,1805.511029698
c011,0,1,4,165571,153279,158830,158830,2400.006331483,2406.507756062
c011,0,1,5,134494,123660,128794,128794,3000.009627166,3007.415432715
c011,0,1,6,83701,77566,80536,80536,3600.010975307,3609.133177327
c011,0,1,7,60765,56077,58241,58241,4200.023745152,4211.138361894
c011,0,1,8,48348,44819,46397,46397,4800.025224008,4812.980439707
c011,0,1,9,42118,39024,40365,40365,5400.040687027,5414.702842144
c011,0,1,10,38738,35771,37093,37093,6000.073321886,6016.623284215
c011,0,1,11,34038,31292,32885,32885,6600.131909608999,6618.509038907
# search time: 6600.132s
# total time: 6618.711s
c011,1,1,1,717291,628228,698519,698519,600.007255594,600.416370389
c011,1,1,2,370380,343232,354552,354552,1200.007731431,1200.943582269
c011,1,1,3,212809,196508,203773,203773,1800.0096551479999,1801.382983616
c011,1,1,4,163960,151591,157241,157241,2400.010970387,2401.791720914
c011,1,1,5,133749,123305,128051,128051,3000.0131196209995,3002.144941619
c011,1,1,6,83460,77077,80066,80066,3600.0131253619993,3602.803854301
c011,1,1,7,59344,55036,56960,56960,4200.013749235999,4203.675475729
c011,1,1,8,48871,45094,46867,46867,4800.018628532999,4804.508908613
c011,1,1,9,42739,39532,40854,40854,5400.031855089999,5405.443219728
c011,1,1,10,39175,36228,37504,37504,6000.036786141999,6006.303238941
c011,1,1,11,33850,31078,32674,32674,6600.038105546999,6607.342590466
# search time: 6600.038s
# total time: 13226.339s
c011,2,1,1,686839,562454,658235,658235,600.002665786,600.226117605
c011,2,1,2,367722,341239,352316,352316,1200.003588616,1200.572911112
c011,2,1,3,208155,192414,199544,199544,1800.0071776219997,1800.864831323
c011,2,1,4,166061,153681,159185,159185,2400.010125711,2401.184287369
c011,2,1,5,132942,122513,127165,127165,3000.013281603,3001.478640742
c011,2,1,6,83192,76847,79914,79914,3600.014403688,3602.078561251
c011,2,1,7,60735,55916,58219,58219,4200.017465939,4202.682809987
c011,2,1,8,49132,45509,47158,47158,4800.0259636050005,4803.346412179
c011,2,1,9,42308,39053,40497,40497,5400.040958257001,5404.049833017
c011,2,1,10,39354,36417,37671,37671,6000.057549977001,6004.607365068
c011,2,1,11,34744,31946,33566,33566,6600.079615025001,6605.280944923
# search time: 6600.080s
# total time: 19832.047s
c011,3,1,1,751497,659027,732307,732307,600.000139244,600.287625118
c011,3,1,2,370994,344032,355037,355037,1200.001411937,1200.575315016
c011,3,1,3,208508,192464,199847,199847,1800.004238776,1800.800087204
c011,3,1,4,161665,149670,155233,155233,2400.0119493820002,2401.021218578
c011,3,1,5,133665,123048,128198,128198,3000.012262308,3001.215205765
c011,3,1,6,82926,76714,79692,79692,3600.0144702810003,3601.508756621
c011,3,1,7,60309,55708,57829,57829,4200.025597692,4201.933467446
c011,3,1,8,49312,45689,47290,47290,4800.042557168,4802.441871818
c011,3,1,9,42211,38850,40334,40334,5400.044052562,5402.774986004
c011,3,1,10,38687,35663,37055,37055,6000.052895536,6003.246870784
c011,3,1,11,34006,31268,32836,32836,6600.068028651,6603.813731008
# search time: 6600.068s
# total time: 26436.059s
c011,4,1,1,911793,746710,873845,873845,600.000031996,600.16640224
c011,4,1,2,544675,511976,525609,525609,1200.000642589,1200.418882461
c011,4,1,3,340207,314990,326816,326816,1800.0047112490001,1800.5915458
c011,4,1,4,267305,248909,257367,257367,2400.005013595,2400.775432478
c011,4,1,5,225260,207671,216460,216460,3000.00601165,3000.934134642
c011,4,1,6,137718,128138,132953,132953,3600.0104647569997,3601.268950829
c011,4,1,7,103076,95477,99044,99044,4200.011683803,4201.582633995
c011,4,1,8,84313,78080,80911,80911,4800.016028548,4802.002714913
c011,4,1,9,72689,67239,69537,69537,5400.025705211,5402.395408429
c011,4,1,10,66141,61236,63374,63374,6000.037999137,6002.716820278
c011,4,1,11,59947,55207,57844,57844,6600.060265199,6603.064830732
# search time: 6600.060s
# total time: 33039.633s
