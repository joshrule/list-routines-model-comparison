    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c050_4.json out/1593091766/results/c050_4_best.csv out/1593091766/results/c050_4_predictions.csv out/1593091766/results/c050_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 7]), o: IntList([3, 3, 7]) }
#   Datum { i: IntList([4, 6, 7]), o: IntList([4, 4, 6, 7]) }
#   Datum { i: IntList([5, 8, 5, 5, 5, 8, 8]), o: IntList([5, 5, 8, 5, 5, 5, 8, 8]) }
#   Datum { i: IntList([2, 4, 9, 3]), o: IntList([2, 2, 4, 9, 3]) }
#   Datum { i: IntList([6, 0, 3, 0, 5, 2, 9, 7, 8, 1]), o: IntList([6, 6, 0, 3, 0, 5, 2, 9, 7, 8, 1]) }
#   Datum { i: IntList([3, 2, 3, 0, 2, 0, 4, 3]), o: IntList([3, 3, 2, 3, 0, 2, 0, 4, 3]) }
#   Datum { i: IntList([7, 9, 6, 6, 9, 2, 9, 9, 2, 9]), o: IntList([7, 7, 9, 6, 6, 9, 2, 9, 9, 2, 9]) }
#   Datum { i: IntList([6, 6, 9, 7, 5, 9]), o: IntList([6, 6, 6, 9, 7, 5, 9]) }
#   Datum { i: IntList([0, 4, 8, 4, 0]), o: IntList([0, 0, 4, 8, 4, 0]) }
#   Datum { i: IntList([4, 2, 6, 1, 5, 3, 1, 8, 9]), o: IntList([4, 4, 2, 6, 1, 5, 3, 1, 8, 9]) }
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c050,0,4,1,1140672,936318,1093999,1093999,600.004214425,601.908329094
c050,0,4,2,600033,558909,575445,575445,1200.0047796190001,1202.927574874
c050,0,4,3,344896,322947,334317,334317,1800.0060991110001,1803.422585464
c050,0,4,4,213207,196868,204157,204157,2400.0081747070003,2403.869148551
c050,0,4,5,176225,163372,169091,169091,3000.008514684,3004.253767309
c050,0,4,6,115529,106139,109605,109605,3600.0216615070003,3604.627549568
c050,0,4,7,86990,79174,81980,81980,4200.029361946001,4205.076980314
c050,0,4,8,66694,60473,62609,62609,4800.033201322,4805.613635537
c050,0,4,9,58184,52690,54334,54334,5400.036942555001,5406.09821302
c050,0,4,10,53311,48136,49754,49754,6000.044252557001,6006.595598439
c050,0,4,11,44985,40682,42024,42024,6600.075583295001,6607.153566337
# search time: 6600.076s
# total time: 6607.487s
c050,1,4,1,1185533,1019473,1149433,1149433,600.003982747,600.365102576
c050,1,4,2,607905,567181,583379,583379,1200.008301647,1200.755644292
c050,1,4,3,341144,318815,330381,330381,1800.009169466,1800.973020887
c050,1,4,4,216029,200533,206836,206836,2400.009687949,2401.178775315
c050,1,4,5,174198,161861,166924,166924,3000.010128772,3001.37593537
c050,1,4,6,112791,102952,107081,107081,3600.01424579,3601.55568502
c050,1,4,7,85778,78098,80782,80782,4200.015936085,4201.791718783
c050,1,4,8,65688,59727,61708,61708,4800.0460580280005,4802.116027867
c050,1,4,9,58356,52371,54430,54430,5400.046730713,5402.36267682
c050,1,4,10,52882,47747,49380,49380,6000.049885863,6002.632311834
c050,1,4,11,44387,39874,41208,41208,6600.06574051,6602.888413588
# search time: 6600.066s
# total time: 13211.193s
c050,2,4,1,1103678,938707,1067462,1067462,600.007041421,600.251597824
c050,2,4,2,597694,556896,573299,573299,1200.0103215650001,1200.536848367
c050,2,4,3,329165,306055,318782,318782,1800.010935449,1800.70979136
c050,2,4,4,211641,196131,202995,202995,2400.013196536,2400.84957022
c050,2,4,5,168934,156551,161848,161848,3000.015247009,3000.993248647
c050,2,4,6,112832,102937,106927,106927,3600.0191383330002,3601.128275449
c050,2,4,7,84865,76694,80203,80203,4200.0208597050005,4201.29158332
c050,2,4,8,65396,59559,61575,61575,4800.021799864,4801.459601966
c050,2,4,9,58360,52620,54408,54408,5400.044350461,5401.641556743
c050,2,4,10,52074,46881,48761,48761,6000.048235684,6001.806190184
c050,2,4,11,44363,39843,41203,41203,6600.07163388,6601.948517809
# search time: 6600.072s
# total time: 19813.544s
c050,3,4,1,1141972,980354,1106809,1106809,600.002443967,600.270301581
c050,3,4,2,602753,561907,578128,578128,1200.014392397,1200.525927652
c050,3,4,3,341018,319191,330624,330624,1800.015196095,1800.666897807
c050,3,4,4,212886,197114,203640,203640,2400.021998007,2400.799523326
c050,3,4,5,166649,153543,159743,159743,3000.022656551,3000.915527433
c050,3,4,6,112943,103893,107179,107179,3600.0250771630003,3601.023091599
c050,3,4,7,86272,78382,81047,81047,4200.025216709,4201.137130222
c050,3,4,8,65978,59690,61851,61851,4800.031184347,4801.278617837
c050,3,4,9,57674,52170,53898,53898,5400.035670626,5401.430044914
c050,3,4,10,52643,47389,49079,49079,6000.050262874,6001.570517754
c050,3,4,11,44466,40362,41582,41582,6600.059984613,6601.70849777
# search time: 6600.060s
# total time: 26415.812s
c050,4,4,1,1115027,945324,1077654,1077654,600.001082193,600.213439403
c050,4,4,2,594469,554056,570256,570256,1200.001590956,1200.415003551
c050,4,4,3,330344,307804,319828,319828,1800.005472914,1800.533605174
c050,4,4,4,204178,187814,195720,195720,2400.00652416,2400.643507271
c050,4,4,5,174378,161323,167191,167191,3000.007771643,3000.753241807
c050,4,4,6,113564,104432,107866,107866,3600.010481866,3600.859610596
c050,4,4,7,85272,76787,80182,80182,4200.014936957,4200.965205804
c050,4,4,8,65861,59938,61879,61879,4800.034410134,4801.102309648
c050,4,4,9,57812,52325,54050,54050,5400.037087336,5401.256728656
c050,4,4,10,52234,46977,48716,48716,6000.044502104,6001.419709748
c050,4,4,11,44497,39801,41212,41212,6600.0533067979995,6601.513723307
# search time: 6600.053s
# total time: 33017.898s
