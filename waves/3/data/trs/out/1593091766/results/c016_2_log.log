    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c016_2.json out/1593091766/results/c016_2_best.csv out/1593091766/results/c016_2_predictions.csv out/1593091766/results/c016_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 5, 5]), o: IntList([5, 8, 5]) }
#   Datum { i: IntList([1, 1, 2, 2, 9, 9, 2]), o: IntList([1, 8, 2, 2, 9, 9, 2]) }
#   Datum { i: IntList([6, 6, 4, 4, 6, 6, 6, 4, 6, 4]), o: IntList([6, 8, 4, 4, 6, 6, 6, 4, 6, 4]) }
#   Datum { i: IntList([9, 1, 8, 7, 2, 1, 0, 5, 7]), o: IntList([9, 8, 8, 7, 2, 1, 0, 5, 7]) }
#   Datum { i: IntList([3, 6, 1, 4, 0, 5, 2, 7]), o: IntList([3, 8, 1, 4, 0, 5, 2, 7]) }
#   Datum { i: IntList([9, 2]), o: IntList([9, 8]) }
#   Datum { i: IntList([2, 6, 7, 3, 1]), o: IntList([2, 8, 7, 3, 1]) }
#   Datum { i: IntList([5, 9, 4, 4, 5, 0]), o: IntList([5, 8, 4, 4, 5, 0]) }
#   Datum { i: IntList([8, 1, 9, 6, 0, 7, 5]), o: IntList([8, 8, 9, 6, 0, 7, 5]) }
#   Datum { i: IntList([1, 1, 0, 2]), o: IntList([1, 8, 0, 2]) }
#   Datum { i: IntList([6, 1, 2, 4, 3, 5, 3, 9, 0, 7]), o: IntList([6, 8, 2, 4, 3, 5, 3, 9, 0, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c016,0,2,1,1188798,1034918,1155994,1155994,600.00054212,602.129761597
c016,0,2,2,545538,514018,528034,528034,1200.006656582,1203.057804743
c016,0,2,3,274278,254812,264133,264133,1800.009069641,1803.540570788
c016,0,2,4,168052,152613,156566,156566,2400.011462615,2404.073493056
c016,0,2,5,128543,118131,122749,122749,3000.0137511149996,3004.487134026
c016,0,2,6,87969,77311,79260,79260,3600.0138722619995,3605.171717971
c016,0,2,7,87342,79549,82274,82274,4200.016177314999,4205.862727539
c016,0,2,8,78097,70890,73360,73360,4800.028193148999,4806.516860871
c016,0,2,9,67914,60828,63184,63184,5400.039348608999,5407.124477677
c016,0,2,10,58541,52570,54401,54401,6000.040525210999,6007.688104873
c016,0,2,11,56603,50806,52479,52479,6600.051835977999,6608.244173072
# search time: 6600.052s
# total time: 6608.542s
c016,1,2,1,1182683,1037604,1152893,1152893,600.001082174,600.339552891
c016,1,2,2,542601,511125,525111,525111,1200.007754881,1200.737633436
c016,1,2,3,279683,259178,268466,268466,1800.008795322,1800.945296988
c016,1,2,4,171250,155618,159700,159700,2400.01505906,2401.203663927
c016,1,2,5,125838,115829,120117,120117,3000.018215419,3001.384514247
c016,1,2,6,89016,78957,80928,80928,3600.019224698,3601.643945168
c016,1,2,7,86035,78116,80914,80914,4200.020486323,4201.93039938
c016,1,2,8,75331,67732,70825,70825,4800.031937909,4802.246159505
c016,1,2,9,66902,60140,62369,62369,5400.042383274,5402.588631078
c016,1,2,10,57698,51698,53597,53597,6000.061745868999,6002.919657155
c016,1,2,11,56554,50598,52325,52325,6600.075180444,6603.244028306
# search time: 6600.075s
# total time: 13212.226s
c016,2,2,1,1127378,923392,1080785,1080785,600.001199855,600.203787245
c016,2,2,2,535888,504279,518521,518521,1200.001826603,1200.469221747
c016,2,2,3,274791,255096,264328,264328,1800.005712556,1800.637743996
c016,2,2,4,159017,144530,147305,147305,2400.020740021,2400.813793597
c016,2,2,5,128199,117467,122274,122274,3000.0226234640004,3000.948144367
c016,2,2,6,87887,77114,79125,79125,3600.0285978930006,3601.151869102
c016,2,2,7,86073,78036,80931,80931,4200.034680307001,4201.337896428
c016,2,2,8,77756,70490,73037,73037,4800.046236291,4801.562930504
c016,2,2,9,66452,59942,62123,62123,5400.051489055,5401.759517833
c016,2,2,10,58306,51981,53953,53953,6000.057554927001,6001.943532845
c016,2,2,11,56345,50614,52336,52336,6600.061413692,6602.126225594
# search time: 6600.061s
# total time: 19814.795s
c016,3,2,1,1115300,913896,1069546,1069546,600.010495555,600.186099141
c016,3,2,2,517272,488810,502288,502288,1200.011262986,1200.403857486
c016,3,2,3,285416,264678,274728,274728,1800.016511678,1800.558038803
c016,3,2,4,159748,144998,148004,148004,2400.018859159,2400.712933675
c016,3,2,5,103693,94982,98716,98716,3000.0256012729997,3000.900751574
c016,3,2,6,51656,45556,46755,46755,3600.030148564,3601.044592957
c016,3,2,7,50799,45640,47502,47502,4200.0378971089995,4201.17221638
c016,3,2,8,44223,39976,41414,41414,4800.083884133,4801.389299687
c016,3,2,9,38545,34525,35733,35733,5400.094879984,5401.621939768
c016,3,2,10,34193,30612,31685,31685,6000.122935915,6001.83215505
c016,3,2,11,32377,28899,29947,29947,6600.128995307,6601.998410214
# search time: 6600.129s
# total time: 26417.230s
c016,4,2,1,692490,567347,663859,663859,600.000785856,600.16619181
c016,4,2,2,333437,313616,322262,322262,1200.005542464,1200.375758159
c016,4,2,3,167369,154912,160490,160490,1800.010765493,1800.511943594
c016,4,2,4,99374,89862,92064,92064,2400.012567762,2400.618843736
c016,4,2,5,74324,67709,70490,70490,3000.013704098,3000.720681407
c016,4,2,6,52866,47034,48448,48448,3600.014598273,3600.876349369
c016,4,2,7,49877,45030,46819,46819,4200.016795871,4201.053881337
c016,4,2,8,44972,40536,41985,41985,4800.034144526,4801.174652539
c016,4,2,9,38913,34889,36079,36079,5400.0450224100005,5401.320959318
c016,4,2,10,33631,30299,31302,31302,6000.052211081001,6001.462349582
c016,4,2,11,32631,29184,30162,30162,6600.063792570001,6601.576625303
# search time: 6600.064s
# total time: 33019.126s
