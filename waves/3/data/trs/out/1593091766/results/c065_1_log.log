    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c065_1.json out/1593091766/results/c065_1_best.csv out/1593091766/results/c065_1_predictions.csv out/1593091766/results/c065_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 0, 0, 8]), o: IntList([9, 1, 0, 0, 8, 7]) }
#   Datum { i: IntList([2, 2, 8]), o: IntList([9, 2, 2, 8, 7]) }
#   Datum { i: IntList([]), o: IntList([9, 7]) }
#   Datum { i: IntList([7]), o: IntList([9, 7, 7]) }
#   Datum { i: IntList([1, 3, 1, 5, 6, 4, 4, 3, 8]), o: IntList([9, 1, 3, 1, 5, 6, 4, 4, 3, 8, 7]) }
#   Datum { i: IntList([0, 8, 2, 4, 1, 9, 6]), o: IntList([9, 0, 8, 2, 4, 1, 9, 6, 7]) }
#   Datum { i: IntList([7, 8, 2, 1, 9]), o: IntList([9, 7, 8, 2, 1, 9, 7]) }
#   Datum { i: IntList([3, 6, 4, 3, 6, 3, 5, 5, 4, 5]), o: IntList([9, 3, 6, 4, 3, 6, 3, 5, 5, 4, 5, 7]) }
#   Datum { i: IntList([6, 6, 3, 0, 0, 3]), o: IntList([9, 6, 6, 3, 0, 0, 3, 7]) }
#   Datum { i: IntList([4, 8]), o: IntList([9, 4, 8, 7]) }
#   Datum { i: IntList([1, 1, 1, 2, 1, 1, 1, 2]), o: IntList([9, 1, 1, 1, 2, 1, 1, 1, 2, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c065,0,1,1,1302682,1070252,1249623,1249623,600.002340893,601.757156689
c065,0,1,2,433246,404927,416602,416602,1200.00306828,1202.743794146
c065,0,1,3,286790,256329,260724,260724,1800.0042880639999,1803.605123656
c065,0,1,4,286013,249088,252045,252045,2400.004615283,2404.253829946
c065,0,1,5,242727,216419,218957,218957,3000.0054968570003,3004.743257963
c065,0,1,6,137543,117733,118336,118336,3600.0069226530004,3605.309938003
c065,0,1,7,108383,91232,91718,91718,4200.010728339001,4205.780577324
c065,0,1,8,92852,75255,75627,75627,4800.011816758,4806.29329691
c065,0,1,9,71526,57711,58068,58068,5400.017583064,5406.745975094
c065,0,1,10,61633,48256,48581,48581,6000.023604711,6007.20696668
c065,0,1,11,57832,47130,47485,47485,6600.0340073120005,6607.654431726
# search time: 6600.034s
# total time: 6608.059s
c065,1,1,1,1301145,1064327,1246940,1246940,600.000857571,600.265753909
c065,1,1,2,416601,389458,400852,400852,1200.001535714,1200.647371837
c065,1,1,3,285734,255925,260225,260225,1800.002264726,1801.043385762
c065,1,1,4,281132,245925,248692,248692,2400.003458602,2401.377743984
c065,1,1,5,240666,214713,217457,217457,3000.003756743,3001.63803252
c065,1,1,6,138002,117592,118186,118186,3600.004756347,3601.890937098
c065,1,1,7,106593,89840,90234,90234,4200.007477163,4202.14029174
c065,1,1,8,92303,74998,75432,75432,4800.009917111,4802.393083341
c065,1,1,9,70520,56042,56377,56377,5400.011426614999,5402.658195763
c065,1,1,10,61620,49733,50125,50125,6000.019339027999,6002.89180172
c065,1,1,11,57471,47097,47499,47499,6600.021840431999,6603.124615789
# search time: 6600.022s
# total time: 13211.887s
c065,2,1,1,1227677,1037769,1186085,1186085,600.000032909,600.260700419
c065,2,1,2,441374,412552,424068,424068,1200.00141252,1200.526678839
c065,2,1,3,286557,256809,261071,261071,1800.0025709810002,1800.826132154
c065,2,1,4,282009,246010,248920,248920,2400.0026859460004,2401.03148225
c065,2,1,5,240499,214861,217378,217378,3000.0097101610004,3001.225191674
c065,2,1,6,140420,119588,120274,120274,3600.0127846310006,3601.404923869
c065,2,1,7,108575,91492,92006,92006,4200.016893125001,4201.557306826
c065,2,1,8,90951,73705,74083,74083,4800.020897245001,4801.756259223
c065,2,1,9,70386,56912,57298,57298,5400.033024890001,5401.930200681
c065,2,1,10,61394,48292,48628,48628,6000.038937123001,6002.136280302
c065,2,1,11,56274,46398,46773,46773,6600.049836447001,6602.29629181
# search time: 6600.050s
# total time: 19814.869s
c065,3,1,1,1239251,1069097,1202765,1202765,600.003455309,600.252988095
c065,3,1,2,421456,393554,405294,405294,1200.0077471089999,1200.461658921
c065,3,1,3,286308,256683,260960,260960,1800.0078550229998,1800.693147365
c065,3,1,4,283443,247007,249976,249976,2400.009322569,2400.895448725
c065,3,1,5,240972,214471,216962,216962,3000.0108991849997,3001.053267788
c065,3,1,6,136888,117053,117613,117613,3600.0118568199996,3601.207219498
c065,3,1,7,107123,90069,90538,90538,4200.014353732,4201.34967755
c065,3,1,8,92647,75291,75729,75729,4800.018051254,4801.481723354
c065,3,1,9,70029,56672,57069,57069,5400.0233863,5401.634613705
c065,3,1,10,61476,49459,49871,49871,6000.023922757,6001.751546392
c065,3,1,11,56167,44614,44895,44895,6600.026147788,6601.867689718
# search time: 6600.026s
# total time: 26417.421s
c065,4,1,1,1267345,1039441,1215538,1215538,600.001345819,600.189316594
c065,4,1,2,449305,419070,431001,431001,1200.001529221,1200.371281241
c065,4,1,3,281047,250012,254206,254206,1800.002525761,1800.546202242
c065,4,1,4,281071,245676,248425,248425,2400.005442758,2400.682684662
c065,4,1,5,240633,214351,216886,216886,3000.00722655,3000.794026156
c065,4,1,6,139082,118973,119636,119636,3600.011971889,3600.908645652
c065,4,1,7,107615,90475,90969,90969,4200.0156715699995,4201.023478181
c065,4,1,8,94966,76758,77239,77239,4800.018445287,4801.099746988
c065,4,1,9,65952,54122,54616,54616,5400.022925235,5401.229662412
c065,4,1,10,60672,48653,49033,49033,6000.023821064,6001.380426872
c065,4,1,11,57093,45440,45738,45738,6600.028506799,6601.471408288
# search time: 6600.029s
# total time: 33019.774s
