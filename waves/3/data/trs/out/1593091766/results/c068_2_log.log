    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c068_2.json out/1593091766/results/c068_2_best.csv out/1593091766/results/c068_2_predictions.csv out/1593091766/results/c068_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c068,0,2,1,1225756,1000721,1175154,1175154,600.005592608,601.630484812
c068,0,2,2,279475,260594,268025,268025,1200.005978011,1202.624717898
c068,0,2,3,124923,116456,117338,117338,1800.0085555730002,1803.635861901
c068,0,2,4,102303,94051,94254,94254,2400.011231324,2404.601611919
c068,0,2,5,82222,74080,74451,74451,3000.012341611,3005.422034002
c068,0,2,6,87394,76080,76410,76410,3600.012574958,3605.891615153
c068,0,2,7,57096,49343,49606,49606,4200.022073189,4206.636556044
c068,0,2,8,52127,45725,45986,45986,4800.0244662430005,4807.4474837
c068,0,2,9,44537,39150,39444,39444,5400.03605607,5408.278725843
c068,0,2,10,41284,36012,36232,36232,6000.043751145,6008.822272444
c068,0,2,11,35849,30404,30635,30635,6600.050253178,6609.432577
# search time: 6600.050s
# total time: 6609.767s
c068,1,2,1,1281269,1111016,1244619,1244619,600.002877759,600.387202623
c068,1,2,2,283769,264238,271869,271869,1200.004713588,1200.811094804
c068,1,2,3,120722,111840,112755,112755,1800.0167292679998,1801.285674773
c068,1,2,4,101358,93141,93354,93354,2400.0254882149998,2401.742723837
c068,1,2,5,80111,71495,71804,71804,3000.030838977,3002.159889708
c068,1,2,6,85494,74592,74865,74865,3600.0361463209997,3602.400857903
c068,1,2,7,55213,47078,47282,47282,4200.040727101,4202.816457168
c068,1,2,8,51820,45521,45752,45752,4800.053377576,4803.204532155
c068,1,2,9,45477,40088,40278,40278,5400.069503465999,5403.678161223
c068,1,2,10,40436,34933,35110,35110,6000.076442837999,6004.055380578
c068,1,2,11,34260,29190,29405,29405,6600.102877498999,6604.311021872
# search time: 6600.103s
# total time: 13214.671s
c068,2,2,1,1279360,1047916,1226730,1226730,600.000108974,600.242379783
c068,2,2,2,272884,254121,261814,261814,1200.002081545,1200.50561904
c068,2,2,3,123207,114504,115359,115359,1800.004278034,1800.790703629
c068,2,2,4,101780,93683,93914,93914,2400.007477755,2401.043599177
c068,2,2,5,81070,73357,73727,73727,3000.0089268029997,3001.27298721
c068,2,2,6,86541,75565,75873,75873,3600.0137689509997,3601.426441202
c068,2,2,7,54561,46852,47181,47181,4200.018198304,4201.743189227
c068,2,2,8,51860,45523,45763,45763,4800.020645143,4802.006037335
c068,2,2,9,45225,40024,40227,40227,5400.032110878001,5402.283112303
c068,2,2,10,40737,35359,35590,35590,6000.034965991001,6002.464519628
c068,2,2,11,35080,29536,29846,29846,6600.050376401001,6602.687260825
# search time: 6600.050s
# total time: 19817.947s
c068,3,2,1,1198581,1016948,1158704,1158704,600.000519454,600.246189249
c068,3,2,2,276005,257172,264881,264881,1200.002464053,1200.468760328
c068,3,2,3,121045,112140,113094,113094,1800.005937203,1800.714797231
c068,3,2,4,100931,92806,92991,92991,2400.0117755740002,2400.914221191
c068,3,2,5,79790,71249,71548,71548,3000.0139364230004,3001.196983668
c068,3,2,6,84817,73800,74025,74025,3600.016261314,3601.326911756
c068,3,2,7,55556,47452,47661,47661,4200.023041221,4201.531448572
c068,3,2,8,51501,45167,45391,45391,4800.025798819001,4801.800960969
c068,3,2,9,45714,40543,40767,40767,5400.031725305001,5401.993428475
c068,3,2,10,40484,35404,35608,35608,6000.037482405,6002.201170223
c068,3,2,11,34669,29407,29632,29632,6600.051073037001,6602.439189002
# search time: 6600.051s
# total time: 26420.972s
c068,4,2,1,1276221,1098801,1237695,1237695,600.000426757,600.295210545
c068,4,2,2,281359,261732,269567,269567,1200.001804007,1200.471785838
c068,4,2,3,119379,110626,111517,111517,1800.004648437,1800.660787314
c068,4,2,4,103839,95744,96036,96036,2400.022182475,2400.85504246
c068,4,2,5,80722,72734,73045,73045,3000.0270065140003,3001.046398125
c068,4,2,6,86156,75014,75338,75338,3600.0319025800004,3601.162242262
c068,4,2,7,56321,48456,48711,48711,4200.043938518001,4201.422908504
c068,4,2,8,51756,45312,45537,45537,4800.050451298001,4801.566810821
c068,4,2,9,44055,38532,38705,38705,5400.056035942001,5401.777096071
c068,4,2,10,40599,35557,35770,35770,6000.0698921680005,6001.947987029
c068,4,2,11,34092,28991,29183,29183,6600.070618674001,6602.076998955
# search time: 6600.071s
# total time: 33023.611s
