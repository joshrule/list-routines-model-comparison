    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c016_1.json out/1593091766/results/c016_1_best.csv out/1593091766/results/c016_1_predictions.csv out/1593091766/results/c016_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 0, 2]), o: IntList([1, 8, 0, 2]) }
#   Datum { i: IntList([6, 1, 2, 4, 3, 5, 3, 9, 0, 7]), o: IntList([6, 8, 2, 4, 3, 5, 3, 9, 0, 7]) }
#   Datum { i: IntList([5, 5, 5]), o: IntList([5, 8, 5]) }
#   Datum { i: IntList([8, 1, 9, 6, 0, 7, 5]), o: IntList([8, 8, 9, 6, 0, 7, 5]) }
#   Datum { i: IntList([9, 2]), o: IntList([9, 8]) }
#   Datum { i: IntList([5, 9, 4, 4, 5, 0]), o: IntList([5, 8, 4, 4, 5, 0]) }
#   Datum { i: IntList([3, 6, 1, 4, 0, 5, 2, 7]), o: IntList([3, 8, 1, 4, 0, 5, 2, 7]) }
#   Datum { i: IntList([9, 1, 8, 7, 2, 1, 0, 5, 7]), o: IntList([9, 8, 8, 7, 2, 1, 0, 5, 7]) }
#   Datum { i: IntList([1, 1, 2, 2, 9, 9, 2]), o: IntList([1, 8, 2, 2, 9, 9, 2]) }
#   Datum { i: IntList([2, 6, 7, 3, 1]), o: IntList([2, 8, 7, 3, 1]) }
#   Datum { i: IntList([6, 6, 4, 4, 6, 6, 6, 4, 6, 4]), o: IntList([6, 8, 4, 4, 6, 6, 6, 4, 6, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c016,0,1,1,1281929,1048187,1228723,1228723,600.010130598,601.73456284
c016,0,1,2,556003,518832,533749,533749,1200.016333644,1202.720109396
c016,0,1,3,253755,230675,236423,236423,1800.0163669150002,1803.335060119
c016,0,1,4,222723,205782,213995,213995,2400.020643869,2403.758897905
c016,0,1,5,168706,151700,157187,157187,3000.0231604950004,3004.331926096
c016,0,1,6,122830,114544,117797,117797,3600.0255129190004,3605.029684665
c016,0,1,7,124917,114046,117930,117930,4200.028023546,4205.550187959
c016,0,1,8,99539,90231,93620,93620,4800.029985109,4806.015996088
c016,0,1,9,77958,70643,73225,73225,5400.030449369,5406.540585279
c016,0,1,10,71683,64298,66576,66576,6000.039479878,6007.056009229
c016,0,1,11,65245,58804,60748,60748,6600.051589979,6607.554656647
# search time: 6600.052s
# total time: 6607.868s
c016,1,1,1,1245992,1057653,1204439,1204439,600.000051284,600.319640594
c016,1,1,2,558185,520977,535947,535947,1200.000356638,1200.702542432
c016,1,1,3,251268,228316,234091,234091,1800.0012241210002,1800.982987519
c016,1,1,4,218050,201682,209209,209209,2400.002747668,2401.192419902
c016,1,1,5,171032,154165,159268,159268,3000.0042522850003,3001.420476105
c016,1,1,6,122437,114142,117505,117505,3600.005688864,3601.748135596
c016,1,1,7,124072,113119,117226,117226,4200.00928266,4202.001953923
c016,1,1,8,99731,90579,93832,93832,4800.0142107130005,4802.269601045
c016,1,1,9,77881,69731,72986,72986,5400.017531844001,5402.530338074
c016,1,1,10,71724,64386,66612,66612,6000.019363178,6002.811373594
c016,1,1,11,64969,58435,60447,60447,6600.032070567,6603.117483992
# search time: 6600.032s
# total time: 13211.566s
c016,2,1,1,1277565,1046462,1225046,1225046,600.000115038,600.202307477
c016,2,1,2,523978,490706,504649,504649,1200.0006733,1200.469685889
c016,2,1,3,249481,226504,232188,232188,1800.0022624389999,1800.661123397
c016,2,1,4,216969,200987,208382,208382,2400.0027495699997,2400.788356234
c016,2,1,5,171617,154101,159563,159563,3000.0052072889994,3000.936472315
c016,2,1,6,121201,112582,116174,116174,3600.0059102629994,3601.156221901
c016,2,1,7,123839,112873,116993,116993,4200.007740855999,4201.344156267
c016,2,1,8,99087,89471,92989,92989,4800.016093671999,4801.543532953
c016,2,1,9,77298,70045,72442,72442,5400.026312282,5401.770199274
c016,2,1,10,71181,63584,65916,65916,6000.039045936,6001.948787775
c016,2,1,11,65176,58604,60554,60554,6600.045999876,6602.132397588
# search time: 6600.046s
# total time: 19814.214s
c016,3,1,1,1281736,1049845,1228795,1228795,600.005141036,600.206962812
c016,3,1,2,532820,499315,513218,513218,1200.00767571,1200.42772469
c016,3,1,3,248547,226299,231714,231714,1800.008367599,1800.584386139
c016,3,1,4,221964,205111,212902,212902,2400.015766981,2400.715863939
c016,3,1,5,157590,143023,148139,148139,3000.016142736,3000.854122795
c016,3,1,6,122437,113693,117260,117260,3600.0198254959996,3601.042299628
c016,3,1,7,121534,110915,114774,114774,4200.019942581999,4201.173428436
c016,3,1,8,98764,89725,92885,92885,4800.019994910999,4801.319817167
c016,3,1,9,77984,70872,73182,73182,5400.021872728999,5401.461658829
c016,3,1,10,69896,61626,64958,64958,6000.022765164,6001.604611896
c016,3,1,11,64832,58045,60117,60117,6600.023315423,6601.73953272
# search time: 6600.023s
# total time: 26416.289s
c016,4,1,1,1316456,1132019,1276239,1276239,600.000020672,600.289701586
c016,4,1,2,555190,518244,533180,533180,1200.00077043,1200.483096705
c016,4,1,3,242569,220063,225248,225248,1800.001585733,1800.632987807
c016,4,1,4,221367,204226,212457,212457,2400.007299547,2400.751169663
c016,4,1,5,169318,152470,157592,157592,3000.007737074,3000.863097963
c016,4,1,6,122471,113932,117452,117452,3600.0147691760003,3601.020451136
c016,4,1,7,123624,112748,116754,116754,4200.017003005,4201.13299986
c016,4,1,8,99155,89985,93233,93233,4800.023713655,4801.242548061
c016,4,1,9,77790,70358,72917,72917,5400.024233004,5401.348524573
c016,4,1,10,70727,62973,65640,65640,6000.034791307,6001.444580223
c016,4,1,11,65046,58359,60372,60372,6600.047735641,6601.557664476
# search time: 6600.048s
# total time: 33018.343s
