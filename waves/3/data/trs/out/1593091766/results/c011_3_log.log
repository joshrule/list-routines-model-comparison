    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c011_3.json out/1593091766/results/c011_3_best.csv out/1593091766/results/c011_3_predictions.csv out/1593091766/results/c011_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 1, 3, 0, 4, 9]), o: IntList([1, 3, 0]) }
#   Datum { i: IntList([7, 2, 4, 2, 4, 7, 2, 2, 4]), o: IntList([2, 4, 2]) }
#   Datum { i: IntList([6, 8, 6, 9, 9, 8, 8, 6]), o: IntList([8, 6, 9]) }
#   Datum { i: IntList([1, 1, 4, 0, 3, 1, 3, 5, 0]), o: IntList([1, 4, 0]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 8, 7, 3, 7]), o: IntList([8, 5, 8]) }
#   Datum { i: IntList([1, 9, 3, 0, 2, 8, 5]), o: IntList([9, 3, 0]) }
#   Datum { i: IntList([5, 1, 1, 8, 1, 6, 7, 2, 7]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([0, 0, 3, 3, 7]), o: IntList([0, 3, 3]) }
#   Datum { i: IntList([9, 2, 6, 4, 6, 2, 0]), o: IntList([2, 6, 4]) }
#   Datum { i: IntList([3, 3, 6, 0]), o: IntList([3, 6, 0]) }
#   Datum { i: IntList([5, 7, 5, 9, 7, 6, 8, 5, 6, 8]), o: IntList([7, 5, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c011,0,3,1,1105444,902518,1059045,1059045,600.000177504,601.917947951
c011,0,3,2,526360,494001,507961,507961,1200.000859976,1203.185398332
c011,0,3,3,335086,311445,320230,320230,1800.0021646209998,1804.153196799
c011,0,3,4,193736,180866,187316,187316,2400.0022399789996,2405.213753152
c011,0,3,5,150389,139445,144902,144902,3000.0063069339994,3006.444898391
c011,0,3,6,116799,108479,112398,112398,3600.0086428839995,3607.782290033
c011,0,3,7,93926,86788,90351,90351,4200.008995769999,4209.025865966
c011,0,3,8,77353,69869,73407,73407,4800.018119303999,4810.178168766
c011,0,3,9,72679,66693,69873,69873,5400.037375982999,5411.410555178
c011,0,3,10,69360,62594,66200,66200,6000.037579406999,6013.496705602
c011,0,3,11,34587,31555,33223,33223,6600.050133492999,6614.662491149
# search time: 6600.050s
# total time: 6614.933s
c011,1,3,1,663773,573635,644275,644275,600.000226773,600.310276816
c011,1,3,2,322038,301782,310468,310468,1200.000897982,1200.826456851
c011,1,3,3,195283,181224,186091,186091,1800.002565136,1801.353968003
c011,1,3,4,116988,108949,112666,112666,2400.0047139,2401.926176926
c011,1,3,5,89299,82850,85709,85709,3000.0068601039998,3002.59967026
c011,1,3,6,69620,64707,66752,66752,3600.017655543,3603.265306586
c011,1,3,7,55120,50855,52865,52865,4200.021945106,4204.081082806
c011,1,3,8,42701,38371,40302,40302,4800.025612938,4804.698471667
c011,1,3,9,40859,37656,39293,39293,5400.031871345001,5405.462425102
c011,1,3,10,40413,36737,38941,38941,6000.084563882001,6006.1078567
c011,1,3,11,34206,31215,32842,32842,6600.090657800001,6606.617217334
# search time: 6600.091s
# total time: 13221.957s
c011,2,3,1,673976,585606,654899,654899,600.000329737,600.290769161
c011,2,3,2,327390,306437,315406,315406,1200.0009354190001,1200.663066356
c011,2,3,3,200157,185948,191188,191188,1800.0024651200001,1800.972622163
c011,2,3,4,117770,109673,113408,113408,2400.0207291200004,2401.366987027
c011,2,3,5,89007,82603,85448,85448,3000.0283660510004,3001.82367855
c011,2,3,6,69178,64183,66260,66260,3600.0307670500006,3602.308232197
c011,2,3,7,54890,50634,52713,52713,4200.033139045001,4202.777239961
c011,2,3,8,43580,39400,41444,41444,4800.051469451001,4803.369310657
c011,2,3,9,41559,38223,39978,39978,5400.056581054001,5403.794096831
c011,2,3,10,39859,35889,38229,38229,6000.062354442001,6004.318902632
c011,2,3,11,33830,30998,32525,32525,6600.111348680001,6604.994987937
# search time: 6600.111s
# total time: 19827.245s
c011,3,3,1,656161,557702,634415,634415,600.000120437,600.234145227
c011,3,3,2,320990,301146,309664,309664,1200.001290515,1200.550101405
c011,3,3,3,200329,186362,191439,191439,1800.008561002,1800.850017255
c011,3,3,4,117130,109007,112727,112727,2400.012052338,2401.232166015
c011,3,3,5,87442,81316,83985,83985,3000.014905833,3001.569863635
c011,3,3,6,69625,64651,66722,66722,3600.018269358,3601.960876624
c011,3,3,7,54686,50343,52463,52463,4200.030800336,4202.245601419
c011,3,3,8,44803,40700,42717,42717,4800.058868702,4802.635174365
c011,3,3,9,40581,37426,39099,39099,5400.067654919,5402.971816777
c011,3,3,10,39217,35345,37633,37633,6000.079502017,6003.334777918
c011,3,3,11,33159,30315,31868,31868,6600.089116477,6603.847899422
# search time: 6600.089s
# total time: 26431.369s
c011,4,3,1,665663,571946,645082,645082,600.005116216,600.221657956
c011,4,3,2,322698,302421,311060,311060,1200.005463264,1200.508271528
c011,4,3,3,201615,187460,192704,192704,1800.0064282609999,1800.782329283
c011,4,3,4,118960,110643,114423,114423,2400.0092636219997,2401.09495761
c011,4,3,5,87772,81571,84302,84302,3000.0108899999996,3001.411649195
c011,4,3,6,67914,62951,65100,65100,3600.0123168739997,3601.750751642
c011,4,3,7,54941,50603,52720,52720,4200.022982343,4202.058118177
c011,4,3,8,43081,38997,40899,40899,4800.033928887,4802.552398191
c011,4,3,9,41054,37809,39523,39523,5400.0345816,5402.899800996
c011,4,3,10,39005,35386,37514,37514,6000.051633872999,6003.135867115
c011,4,3,11,34326,31322,32956,32956,6600.065108639999,6603.355145462
# search time: 6600.065s
# total time: 33035.053s
