    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c057_1.json out/1593091766/results/c057_1_best.csv out/1593091766/results/c057_1_predictions.csv out/1593091766/results/c057_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3, 4, 3]) }
#   Datum { i: IntList([2, 7, 8, 4, 0, 6, 5, 1]), o: IntList([2, 7, 8, 4, 0, 6, 4, 5, 1]) }
#   Datum { i: IntList([2, 3, 9, 7, 6, 0, 0, 8]), o: IntList([2, 3, 9, 7, 6, 0, 4, 0, 8]) }
#   Datum { i: IntList([2, 9, 9, 2, 9, 9, 2, 2, 2]), o: IntList([2, 9, 9, 2, 9, 9, 4, 2, 2, 2]) }
#   Datum { i: IntList([5, 9, 3, 7, 2, 1, 6, 0, 8]), o: IntList([5, 9, 3, 7, 2, 1, 4, 6, 0, 8]) }
#   Datum { i: IntList([4, 5, 4, 5, 5, 9, 5, 4]), o: IntList([4, 5, 4, 5, 5, 9, 4, 5, 4]) }
#   Datum { i: IntList([6, 6, 3, 3, 6, 7, 3, 7, 3, 3]), o: IntList([6, 6, 3, 3, 6, 7, 4, 3, 7, 3, 3]) }
#   Datum { i: IntList([2, 5, 6, 3, 2, 9, 2, 0, 0, 0]), o: IntList([2, 5, 6, 3, 2, 9, 4, 2, 0, 0, 0]) }
#   Datum { i: IntList([3, 9, 9, 3, 3, 9, 3, 9, 3, 3]), o: IntList([3, 9, 9, 3, 3, 9, 4, 3, 9, 3, 3]) }
#   Datum { i: IntList([0, 4, 1, 1, 2, 4, 0, 0, 0]), o: IntList([0, 4, 1, 1, 2, 4, 4, 0, 0, 0]) }
#   Datum { i: IntList([1, 8, 0, 8, 1, 6, 5]), o: IntList([1, 8, 0, 8, 1, 6, 4, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c057,0,1,1,1253898,1030904,1203281,1203281,600.005390443,601.691942154
c057,0,1,2,340625,320242,329098,329098,1200.005745131,1202.767655743
c057,0,1,3,190619,174426,182377,182377,1800.0074349019999,1803.417243792
c057,0,1,4,117667,109324,112255,112255,2400.012549444,2404.539156164
c057,0,1,5,85588,78549,80840,80840,3000.014158016,3005.659744367
c057,0,1,6,69058,63545,65094,65094,3600.017322107,3606.690609443
c057,0,1,7,57856,53174,54629,54629,4200.021080238,4207.78934495
c057,0,1,8,47914,43959,45016,45016,4800.034896669999,4808.908997083
c057,0,1,9,40277,36965,37833,37833,5400.049690004,5410.147460021
c057,0,1,10,34113,31323,32079,32079,6000.059278895,6011.185679411
c057,0,1,11,30083,27587,28215,28215,6600.067593408,6612.429461122
# search time: 6600.068s
# total time: 6612.676s
c057,1,1,1,1272762,1117769,1240514,1240514,600.000170312,600.398541302
c057,1,1,2,342368,321506,330360,330360,1200.0012419700001,1200.839598966
c057,1,1,3,185235,169407,177267,177267,1800.0032833520002,1801.086325583
c057,1,1,4,116539,107512,110818,110818,2400.0068108250002,2401.559069543
c057,1,1,5,83727,76623,79134,79134,3000.0195980030003,3002.159267261
c057,1,1,6,68104,62477,64155,64155,3600.0250256810004,3602.656153853
c057,1,1,7,57642,53025,54352,54352,4200.025864802001,4203.213622255
c057,1,1,8,48135,44048,45165,45165,4800.030674711001,4803.789391238
c057,1,1,9,39347,35930,36915,36915,5400.047327711,5404.299728207
c057,1,1,10,32992,30109,30937,30937,6000.060343799,6004.960680286
c057,1,1,11,29602,27051,27734,27734,6600.062701965,6605.488304734
# search time: 6600.063s
# total time: 13218.535s
c057,2,1,1,1206958,1024148,1166799,1166799,600.006103072,600.262536037
c057,2,1,2,344956,323637,332749,332749,1200.006356327,1200.550414036
c057,2,1,3,192891,177306,184459,184459,1800.010205575,1800.750010131
c057,2,1,4,118159,109275,112375,112375,2400.01262378,2401.108112418
c057,2,1,5,84490,77404,79772,79772,3000.0133492209998,3001.507917096
c057,2,1,6,67718,62078,63866,63866,3600.0135654809997,3601.854284878
c057,2,1,7,58052,53165,54550,54550,4200.015207136999,4202.219303753
c057,2,1,8,47782,43545,44830,44830,4800.0280313779995,4802.572115237
c057,2,1,9,39438,36044,37011,37011,5400.028334150999,5402.900937951
c057,2,1,10,34073,31092,31930,31930,6000.031214365999,6003.241917532
c057,2,1,11,30119,27507,28220,28220,6600.039081774999,6603.585689495
# search time: 6600.039s
# total time: 19822.481s
c057,3,1,1,1240627,1017039,1189548,1189548,600.000332975,600.195338936
c057,3,1,2,345231,324240,332981,332981,1200.001394704,1200.439643278
c057,3,1,3,185616,169869,177837,177837,1800.001685063,1800.596203941
c057,3,1,4,116972,108535,111441,111441,2400.008287732,2400.861437757
c057,3,1,5,85506,78390,80670,80670,3000.010551803,3001.155076023
c057,3,1,6,68414,62913,64488,64488,3600.011886319,3601.384819907
c057,3,1,7,57152,52514,53782,53782,4200.0239420689995,4201.621570541
c057,3,1,8,47462,43397,44517,44517,4800.034567295,4801.88132976
c057,3,1,9,38517,35237,36154,36154,5400.050938003,5402.165452047
c057,3,1,10,34247,31353,32212,32212,6000.068794682,6002.498259803
c057,3,1,11,29296,26932,27573,27573,6600.074134996999,6602.764323224
# search time: 6600.074s
# total time: 26425.611s
c057,4,1,1,1252369,1023571,1200201,1200201,600.000529226,600.186491886
c057,4,1,2,332845,311141,320878,320878,1200.0029243899999,1200.361214084
c057,4,1,3,190245,174342,181709,181709,1800.0049601409999,1800.487342549
c057,4,1,4,116658,107531,110774,110774,2400.009308465,2400.673655149
c057,4,1,5,83662,76431,78881,78881,3000.009566854,3000.935059776
c057,4,1,6,67662,61974,63761,63761,3600.018260926,3601.115266949
c057,4,1,7,56292,51068,52979,52979,4200.025748739,4201.32683274
c057,4,1,8,46956,42952,44042,44042,4800.028792069,4801.559212245
c057,4,1,9,39194,35871,36830,36830,5400.0318708059995,5401.797354902
c057,4,1,10,33968,31113,32022,32022,6000.0518769889995,6002.007145103
c057,4,1,11,30340,27762,28446,28446,6600.058497034,6602.238974861
# search time: 6600.058s
# total time: 33028.236s
