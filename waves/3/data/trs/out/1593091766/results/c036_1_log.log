    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c036_1.json out/1593091766/results/c036_1_best.csv out/1593091766/results/c036_1_predictions.csv out/1593091766/results/c036_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 5, 6, 5]), o: IntList([6, 6, 5, 5]) }
#   Datum { i: IntList([4, 1, 9, 2, 6, 7, 8]), o: IntList([4, 9, 1, 2, 6, 7, 8]) }
#   Datum { i: IntList([0, 6, 9, 7, 8, 4, 1, 2, 5, 3]), o: IntList([0, 9, 6, 7, 8, 4, 1, 2, 5, 3]) }
#   Datum { i: IntList([4, 3, 5, 0, 9]), o: IntList([4, 5, 3, 0, 9]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 6, 0, 3]), o: IntList([9, 1, 8, 2, 7, 6, 0, 3]) }
#   Datum { i: IntList([7, 0, 7, 0, 7, 4, 4, 0]), o: IntList([7, 7, 0, 0, 7, 4, 4, 0]) }
#   Datum { i: IntList([4, 9, 8, 6, 5, 1, 3, 2, 1, 7]), o: IntList([4, 8, 9, 6, 5, 1, 3, 2, 1, 7]) }
#   Datum { i: IntList([2, 7, 2, 5, 1, 8]), o: IntList([5, 7, 2, 2, 1, 8]) }
#   Datum { i: IntList([5, 7, 2, 3, 9, 1, 2, 0, 8]), o: IntList([3, 7, 2, 5, 9, 1, 2, 0, 8]) }
#   Datum { i: IntList([6, 3, 6, 2, 6, 9, 9]), o: IntList([6, 6, 3, 2, 6, 9, 9]) }
#   Datum { i: IntList([8, 4, 3, 5]), o: IntList([8, 3, 4, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c036,0,1,1,1332751,1152918,1293785,1293785,600.000007983,601.889844344
c036,0,1,2,552073,517239,531755,531755,1200.005574377,1202.818605684
c036,0,1,3,284944,263372,273784,273784,1800.0056808949998,1803.312258265
c036,0,1,4,143920,133684,138383,138383,2400.008680168,2404.011592373
c036,0,1,5,138315,127017,131099,131099,3000.0098160509997,3004.702040201
c036,0,1,6,107444,98055,101366,101366,3600.014681029,3605.373339098
c036,0,1,7,87811,79778,82447,82447,4200.020467736,4206.016368765
c036,0,1,8,67094,60747,62632,62632,4800.023557656,4806.824529521
c036,0,1,9,53421,48281,48877,48877,5400.03390393,5407.542018044
c036,0,1,10,44526,41405,41713,41713,6000.036283114,6008.281098304
c036,0,1,11,38641,34959,35192,35192,6600.039365607,6609.160801213
# search time: 6600.039s
# total time: 6609.543s
c036,1,1,1,1261749,1030071,1209395,1209395,600.000087066,600.237716526
c036,1,1,2,538608,504979,519344,519344,1200.000361983,1200.635788421
c036,1,1,3,283624,262441,272825,272825,1800.001999576,1800.86726156
c036,1,1,4,146274,136370,140642,140642,2400.005287156,2401.216123686
c036,1,1,5,135862,124377,128640,128640,3000.0058086090003,3001.528897116
c036,1,1,6,105763,96420,99908,99908,3600.0110359040004,3601.835482884
c036,1,1,7,86430,78395,81190,81190,4200.015873351001,4202.170867485
c036,1,1,8,66599,60355,62273,62273,4800.020608967001,4802.533855787
c036,1,1,9,56631,51837,52339,52339,5400.028397129001,5402.901904969
c036,1,1,10,42313,39020,39219,39219,6000.039830299001,6003.395690023
c036,1,1,11,38577,35052,35323,35323,6600.04289303,6603.722770469
# search time: 6600.043s
# total time: 13213.930s
c036,2,1,1,1282735,1051729,1230016,1230016,600.005983634,600.231517699
c036,2,1,2,518096,487115,500521,500521,1200.0064106089999,1200.521198091
c036,2,1,3,284011,262918,273069,273069,1800.012437934,1800.707327461
c036,2,1,4,144149,134042,138399,138399,2400.017743213,2400.97370308
c036,2,1,5,134519,123753,127754,127754,3000.018295199,3001.19221862
c036,2,1,6,105849,96715,99842,99842,3600.019999947,3601.400230126
c036,2,1,7,86339,78815,81133,81133,4200.021121632,4201.627520284
c036,2,1,8,65632,59202,61202,61202,4800.021886314,4801.906804213
c036,2,1,9,55736,51498,51999,51999,5400.031871448,5402.230596921
c036,2,1,10,43900,40852,41132,41132,6000.040840303,6002.472943674
c036,2,1,11,38307,34911,35169,35169,6600.058481378,6602.704547849
# search time: 6600.058s
# total time: 19817.291s
c036,3,1,1,1299291,1127380,1262595,1262595,600.003120834,600.286969774
c036,3,1,2,539238,506730,520308,520308,1200.004279791,1200.534403947
c036,3,1,3,285096,264039,274301,274301,1800.006049755,1800.684169977
c036,3,1,4,144737,134648,139175,139175,2400.009192046,2400.872894321
c036,3,1,5,134578,123173,127453,127453,3000.01191751,3001.042473317
c036,3,1,6,105534,96734,99845,99845,3600.0122357249998,3601.238381989
c036,3,1,7,86970,79162,81623,81623,4200.018936916,4201.421378388
c036,3,1,8,66632,60486,62325,62325,4800.02319932,4801.659477687
c036,3,1,9,54933,50913,51402,51402,5400.028039090999,5401.84230019
c036,3,1,10,42424,39329,39495,39495,6000.034965127999,6002.096566883
c036,3,1,11,38710,35345,35587,35587,6600.0430674829995,6602.241822458
# search time: 6600.043s
# total time: 26420.190s
c036,4,1,1,1300043,1067256,1247097,1247097,600.005444978,600.206345257
c036,4,1,2,548478,513661,528103,528103,1200.005927823,1200.421257002
c036,4,1,3,285733,264474,274501,274501,1800.007032357,1800.547143853
c036,4,1,4,144119,133955,138362,138362,2400.012484717,2400.719001169
c036,4,1,5,135753,124313,128682,128682,3000.015105258,3000.870635305
c036,4,1,6,107379,98235,101351,101351,3600.015744543,3601.033816814
c036,4,1,7,87265,79153,81832,81832,4200.022054083,4201.187986245
c036,4,1,8,65887,59862,61732,61732,4800.0275016119995,4801.364801218
c036,4,1,9,54152,49540,50129,50129,5400.039132741,5401.560233812
c036,4,1,10,43702,40719,40987,40987,6000.069302102,6001.725674028
c036,4,1,11,38852,35488,35764,35764,6600.070405116,6601.836438952
# search time: 6600.070s
# total time: 33022.947s
