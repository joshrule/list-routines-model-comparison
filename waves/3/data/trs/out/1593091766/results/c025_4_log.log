    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c025_4.json out/1593091766/results/c025_4_best.csv out/1593091766/results/c025_4_predictions.csv out/1593091766/results/c025_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 2, 4, 2, 7, 2]), o: IntList([1, 4, 2, 7, 2]) }
#   Datum { i: IntList([3, 3, 3]), o: IntList([3, 3]) }
#   Datum { i: IntList([3, 6, 7, 5, 8, 4, 2, 0]), o: IntList([3, 7, 5, 8, 4, 2, 0]) }
#   Datum { i: IntList([7, 2, 5, 0, 8, 4, 1]), o: IntList([7, 5, 0, 8, 4, 1]) }
#   Datum { i: IntList([6, 6, 6, 9, 6, 9, 9, 6, 9, 9]), o: IntList([6, 6, 9, 6, 9, 9, 6, 9, 9]) }
#   Datum { i: IntList([2, 6]), o: IntList([2]) }
#   Datum { i: IntList([3, 0, 4, 9, 5]), o: IntList([3, 4, 9, 5]) }
#   Datum { i: IntList([7, 1, 0, 8, 5, 1, 4]), o: IntList([7, 0, 8, 5, 1, 4]) }
#   Datum { i: IntList([7, 2, 9, 8, 2, 0, 1, 1, 2]), o: IntList([7, 9, 8, 2, 0, 1, 1, 2]) }
#   Datum { i: IntList([1, 6, 6, 0, 8, 3, 9, 0, 7, 9]), o: IntList([1, 6, 0, 8, 3, 9, 0, 7, 9]) }
#   Datum { i: IntList([1, 1, 4, 5]), o: IntList([1, 4, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c025,0,4,1,1101796,992227,1081224,1081224,600.000676452,602.372123329
c025,0,4,2,432789,405566,416786,416786,1200.008186299,1203.490465249
c025,0,4,3,342400,319470,330494,330494,1800.008668777,1804.049108454
c025,0,4,4,203812,189499,195390,195390,2400.0111542269997,2404.697631736
c025,0,4,5,152799,140805,146195,146195,3000.012558769,3005.373101688
c025,0,4,6,116510,103608,106756,106756,3600.01357239,3605.98629228
c025,0,4,7,111122,100317,103737,103737,4200.0193273059995,4206.54894217
c025,0,4,8,95573,85451,88158,88158,4800.025428976999,4807.168869964
c025,0,4,9,79934,71414,73449,73449,5400.028317694999,5407.852190977
c025,0,4,10,68183,60494,62536,62536,6000.031955788999,6008.451727795
c025,0,4,11,56629,50288,51798,51798,6600.035656307999,6609.098153151
# search time: 6600.036s
# total time: 6609.404s
c025,1,4,1,1140615,1004186,1111998,1111998,600.000826186,600.320994446
c025,1,4,2,414294,388171,399360,399360,1200.001040762,1200.733320794
c025,1,4,3,341937,318882,329986,329986,1800.004480862,1800.976416293
c025,1,4,4,204340,189597,195597,195597,2400.006374209,2401.274671652
c025,1,4,5,152870,141103,146395,146395,3000.00679915,3001.583034636
c025,1,4,6,116819,104088,107306,107306,3600.011015729,3601.84606176
c025,1,4,7,109570,99373,102693,102693,4200.0151868250005,4202.146968404
c025,1,4,8,95411,85688,88183,88183,4800.021110072001,4802.477681539
c025,1,4,9,79259,70887,72977,72977,5400.025767548001,5402.848893013
c025,1,4,10,67306,60056,62035,62035,6000.027209649001,6003.172402976
c025,1,4,11,55922,49636,51115,51115,6600.042856375001,6603.569935674
# search time: 6600.043s
# total time: 13213.464s
c025,2,4,1,1051239,856541,1007424,1007424,600.003791343,600.182110816
c025,2,4,2,418011,391380,402693,402693,1200.004573669,1200.454720653
c025,2,4,3,344935,321038,332419,332419,1800.005066441,1800.642243903
c025,2,4,4,125206,115508,119404,119404,2400.007402561,2400.875295745
c025,2,4,5,88174,80385,84064,84064,3000.01384203,3001.107626601
c025,2,4,6,116546,103502,106754,106754,3600.014403903,3601.281916968
c025,2,4,7,109947,99132,102649,102649,4200.018464874,4201.51415005
c025,2,4,8,95735,85660,88345,88345,4800.022129063,4801.764994804
c025,2,4,9,79711,71309,73312,73312,5400.02966409,5402.00024856
c025,2,4,10,67185,59297,61850,61850,6000.029908335,6002.225025436
c025,2,4,11,55665,49292,50968,50968,6600.038304987,6602.464662758
# search time: 6600.038s
# total time: 19816.490s
c025,3,4,1,1085775,942332,1054848,1054848,600.004488689,600.268361658
c025,3,4,2,420412,394427,405151,405151,1200.0048309580002,1200.519914296
c025,3,4,3,338746,316049,326937,326937,1800.0060086290002,1800.681301632
c025,3,4,4,199784,185622,191537,191537,2400.0102646140003,2400.85295337
c025,3,4,5,90577,83183,86336,86336,3000.0140109760005,3001.023123796
c025,3,4,6,114173,101158,104534,104534,3600.0150760130005,3601.188751283
c025,3,4,7,107241,96796,100322,100322,4200.030446783,4201.367934601
c025,3,4,8,93310,83512,86157,86157,4800.036538293,4801.557969179
c025,3,4,9,79238,70562,72737,72737,5400.037066564,5401.708335226
c025,3,4,10,67415,60111,61927,61927,6000.039361773001,6001.872633151
c025,3,4,11,54900,48910,50293,50293,6600.044701565001,6602.064701562
# search time: 6600.045s
# total time: 26418.845s
c025,4,4,1,1133987,974307,1099166,1099166,600.000038566,600.265534866
c025,4,4,2,426659,399614,410785,410785,1200.008627514,1200.469304493
c025,4,4,3,337883,315214,326460,326460,1800.008627913,1800.603985325
c025,4,4,4,200411,186113,192078,192078,2400.010987969,2400.747940845
c025,4,4,5,151466,140268,145188,145188,3000.014302475,3000.874324425
c025,4,4,6,70184,62520,64519,64519,3600.014720882,3601.01158041
c025,4,4,7,62999,57028,58891,58891,4200.026820988,4201.148542133
c025,4,4,8,55532,49523,51075,51075,4800.03425404,4801.324777797
c025,4,4,9,46539,41336,42568,42568,5400.037828394999,5401.442885511
c025,4,4,10,39249,34875,35900,35900,6000.042944868999,6001.569398511
c025,4,4,11,31993,28232,29138,29138,6600.045274060999,6601.719503422
# search time: 6600.045s
# total time: 33021.074s
