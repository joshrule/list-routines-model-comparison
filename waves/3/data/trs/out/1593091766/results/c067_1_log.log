    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c067_1.json out/1593091766/results/c067_1_best.csv out/1593091766/results/c067_1_predictions.csv out/1593091766/results/c067_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 8, 9, 9]), o: IntList([9, 8, 9, 4]) }
#   Datum { i: IntList([5, 0, 7, 6, 6, 0, 6, 0]), o: IntList([0, 0, 7, 6, 6, 0, 6, 5]) }
#   Datum { i: IntList([4, 7]), o: IntList([7, 4]) }
#   Datum { i: IntList([2, 1, 6, 3, 4, 0, 9, 8, 7, 4]), o: IntList([4, 1, 6, 3, 4, 0, 9, 8, 7, 2]) }
#   Datum { i: IntList([1, 3, 2, 8, 8, 5, 5]), o: IntList([5, 3, 2, 8, 8, 5, 1]) }
#   Datum { i: IntList([7, 5, 0, 2, 0, 9, 1, 6, 3]), o: IntList([3, 5, 0, 2, 0, 9, 1, 6, 7]) }
#   Datum { i: IntList([7, 6, 8, 0, 5, 1, 6, 9]), o: IntList([9, 6, 8, 0, 5, 1, 6, 7]) }
#   Datum { i: IntList([9, 1, 2, 8, 2, 4, 8, 2, 4, 1]), o: IntList([1, 1, 2, 8, 2, 4, 8, 2, 4, 9]) }
#   Datum { i: IntList([1, 6, 7, 3, 4]), o: IntList([4, 6, 7, 3, 1]) }
#   Datum { i: IntList([0, 0, 2]), o: IntList([2, 0, 0]) }
#   Datum { i: IntList([5, 8, 2, 4, 7, 4]), o: IntList([4, 8, 2, 4, 7, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c067,0,1,1,1289815,1127177,1255432,1255432,600.000040385,601.939210252
c067,0,1,2,527694,493443,508641,508641,1200.000462788,1202.870295202
c067,0,1,3,261919,244892,246919,246919,1800.00786143,1803.705320571
c067,0,1,4,240521,220377,221182,221182,2400.009000939,2404.329591015
c067,0,1,5,146072,133433,133802,133802,3000.01343804,3004.916595783
c067,0,1,6,113041,102515,102839,102839,3600.015559493,3605.484273769
c067,0,1,7,81378,72817,73439,73439,4200.018277928,4206.154018052
c067,0,1,8,69778,63410,63831,63831,4800.020769164001,4806.688600011
c067,0,1,9,55643,50910,51200,51200,5400.031150510001,5407.356267792
c067,0,1,10,49567,45406,45671,45671,6000.039362405001,6007.961929746
c067,0,1,11,48900,44944,45287,45287,6600.042258571001,6608.61542405
# search time: 6600.042s
# total time: 6609.011s
c067,1,1,1,1332978,1163492,1297326,1297326,600.000663575,600.363689168
c067,1,1,2,526493,492826,507269,507269,1200.005454767,1200.743113571
c067,1,1,3,253402,236369,238482,238482,1800.006178217,1801.09583475
c067,1,1,4,241543,221291,222056,222056,2400.0074715640003,2401.389325862
c067,1,1,5,145175,132460,133028,133028,3000.0078025240005,3001.646877464
c067,1,1,6,108203,98056,98655,98655,3600.01379084,3601.928291658
c067,1,1,7,79722,71540,72152,72152,4200.019655144,4202.258588255
c067,1,1,8,69516,63648,64027,64027,4800.020159327,4802.516312366
c067,1,1,9,54355,49767,50062,50062,5400.021938057001,5402.828800751
c067,1,1,10,50807,46430,46742,46742,6000.034352459001,6003.22581348
c067,1,1,11,47549,43443,43809,43809,6600.0352214800005,6603.546685922
# search time: 6600.035s
# total time: 13213.290s
c067,2,1,1,1334143,1151794,1295031,1295031,600.000121547,600.326639036
c067,2,1,2,536188,502709,516929,516929,1200.000810966,1200.597832579
c067,2,1,3,260216,243348,245425,245425,1800.001078004,1800.845876297
c067,2,1,4,240030,220567,221374,221374,2400.001317886,2401.061585062
c067,2,1,5,145570,132780,133326,133326,3000.0083336059997,3001.222195623
c067,2,1,6,114137,103304,103778,103778,3600.00912511,3601.403036461
c067,2,1,7,83389,75231,75906,75906,4200.030203986,4201.637622669
c067,2,1,8,69689,63538,63923,63923,4800.036111134,4801.857884913
c067,2,1,9,55648,51207,51524,51524,5400.038820106,5402.064854057
c067,2,1,10,49325,44921,45203,45203,6000.046366398,6002.283862053
c067,2,1,11,47485,43279,43637,43637,6600.053251221,6602.492124549
# search time: 6600.053s
# total time: 19816.427s
c067,3,1,1,1276997,1045207,1224169,1224169,600.00314033,600.191505496
c067,3,1,2,517655,485146,499291,499291,1200.003865556,1200.416366743
c067,3,1,3,260468,243564,245663,245663,1800.0044974789998,1800.582315066
c067,3,1,4,242643,223086,224123,224123,2400.005613108,2400.732702654
c067,3,1,5,145518,132539,132882,132882,3000.0063344210002,3000.880613064
c067,3,1,6,113605,102840,103269,103269,3600.0063616370003,3601.016769578
c067,3,1,7,82124,74046,74666,74666,4200.008301859,4201.202939068
c067,3,1,8,69349,63269,63648,63648,4800.011454995,4801.411695912
c067,3,1,9,55144,50623,50917,50917,5400.014874772,5401.604706598
c067,3,1,10,51351,46882,47233,47233,6000.018842828001,6001.794563399
c067,3,1,11,48413,44284,44625,44625,6600.031982013001,6602.04614047
# search time: 6600.032s
# total time: 26419.446s
c067,4,1,1,1232310,1044114,1190832,1190832,600.005016191,600.224035473
c067,4,1,2,547233,512556,526976,526976,1200.0097226560001,1200.414176243
c067,4,1,3,249915,233040,235120,235120,1800.0137324000002,1800.569707551
c067,4,1,4,238258,218215,219021,219021,2400.015880847,2400.701712066
c067,4,1,5,143544,131021,131378,131378,3000.01677486,3000.818751746
c067,4,1,6,111277,101099,101383,101383,3600.0174570520003,3600.937486491
c067,4,1,7,80874,72442,73054,73054,4200.018949032,4201.066915164
c067,4,1,8,68459,62560,62942,62942,4800.035693943,4801.169323796
c067,4,1,9,55091,50506,50783,50783,5400.041266545,5401.296758134
c067,4,1,10,51463,46983,47325,47325,6000.067077494,6001.421794628
c067,4,1,11,48004,43858,44196,44196,6600.071281763,6601.59730634
# search time: 6600.071s
# total time: 33021.704s
