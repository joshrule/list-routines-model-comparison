    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c031_5.json out/1593091766/results/c031_5_best.csv out/1593091766/results/c031_5_predictions.csv out/1593091766/results/c031_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 3, 8, 6, 6]), o: IntList([6]) }
#   Datum { i: IntList([8, 8, 8, 8]), o: IntList([]) }
#   Datum { i: IntList([1, 3, 7, 3, 1]), o: IntList([1]) }
#   Datum { i: IntList([4, 5, 9, 9, 4, 5, 4, 4, 9, 5]), o: IntList([4, 5, 4, 4, 9, 5]) }
#   Datum { i: IntList([1, 5, 9, 0, 6, 7, 4]), o: IntList([6, 7, 4]) }
#   Datum { i: IntList([9, 9, 9, 0, 5, 6, 4]), o: IntList([9, 0, 5, 6, 4]) }
#   Datum { i: IntList([0, 0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([7, 8, 8, 7, 8]), o: IntList([8]) }
#   Datum { i: IntList([7, 1, 7, 8]), o: IntList([]) }
#   Datum { i: IntList([7, 7, 6, 4, 9, 5]), o: IntList([6, 4, 9, 5]) }
#   Datum { i: IntList([0, 5, 5, 0, 9]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c031,0,5,1,685044,588106,663694,663694,600.00102748,602.913570942
c031,0,5,2,431376,402774,414920,414920,1200.001581206,1205.736544143
c031,0,5,3,462359,420550,442165,442165,1800.002333583,1807.003844205
c031,0,5,4,253688,236101,245108,245108,2400.029432101,2408.295081985
c031,0,5,5,138386,128008,132902,132902,3000.0319326510003,3009.408175176
c031,0,5,6,113858,105002,109548,109548,3600.0371294200004,3610.481453832
c031,0,5,7,85406,79692,82553,82553,4200.039876037001,4211.32472878
c031,0,5,8,73713,68601,71362,71362,4800.042653622001,4812.106614475
c031,0,5,9,62523,57728,60026,60026,5400.043741313001,5412.985088086
c031,0,5,10,63338,59303,61904,61904,6000.044701064001,6013.886816307
c031,0,5,11,48865,45046,47571,47571,6600.051502289001,6614.621976031
# search time: 6600.052s
# total time: 6614.984s
c031,1,5,1,665839,546322,638717,638717,600.001101473,600.23655852
c031,1,5,2,424538,397005,408621,408621,1200.001636821,1201.091042662
c031,1,5,3,462905,421349,441717,441717,1800.002352554,1801.721797367
c031,1,5,4,241286,224763,233333,233333,2400.009112319,2402.311386531
c031,1,5,5,134857,124945,129586,129586,3000.015119678,3002.852967582
c031,1,5,6,111644,102769,107312,107312,3600.01752362,3603.336334395
c031,1,5,7,79625,74049,76855,76855,4200.021179452,4203.735724861
c031,1,5,8,72819,67825,70401,70401,4800.024740199,4804.199559034
c031,1,5,9,61550,56892,58999,58999,5400.029786523,5404.741320584
c031,1,5,10,73598,68954,71749,71749,6000.034859519001,6005.053147578
c031,1,5,11,83740,77658,81219,81219,6600.035133661001,6605.48203086
# search time: 6600.035s
# total time: 13221.124s
c031,2,5,1,1080160,882444,1035450,1035450,600.000033703,600.204142684
c031,2,5,2,645610,606877,623655,623655,1200.0079139979998,1200.703693713
c031,2,5,3,738083,674524,705320,705320,1800.0133000859998,1801.128708653
c031,2,5,4,382763,358202,371184,371184,2400.014631617,2401.475303875
c031,2,5,5,224601,209792,216668,216668,3000.0179522959997,3001.774747323
c031,2,5,6,191553,178094,184689,184689,3600.019601662,3602.109725319
c031,2,5,7,138253,128717,133123,133123,4200.019926583,4202.323925049
c031,2,5,8,126501,117808,121547,121547,4800.022188690999,4802.589772927
c031,2,5,9,106803,99269,102664,102664,5400.026883500999,5402.882753611
c031,2,5,10,110843,104161,107844,107844,6000.033717066,6003.141988883
c031,2,5,11,83266,77310,80807,80807,6600.038616346,6603.421246699
# search time: 6600.039s
# total time: 19825.313s
c031,3,5,1,1089991,893842,1045321,1045321,600.002463986,600.189965681
c031,3,5,2,664103,624006,641100,641100,1200.002709466,1200.529806856
c031,3,5,3,749865,684273,717659,717659,1800.01418705,1800.839668806
c031,3,5,4,403691,379118,391587,391587,2400.015894007,2401.08670664
c031,3,5,5,219548,204574,211783,211783,3000.0160946710002,3001.324249849
c031,3,5,6,188612,175352,181882,181882,3600.0183593790002,3601.53857069
c031,3,5,7,141880,131992,136212,136212,4200.020703445,4201.68259468
c031,3,5,8,125715,116785,120544,120544,4800.024825423,4801.874572704
c031,3,5,9,105985,98440,101872,101872,5400.045295987,5402.145154056
c031,3,5,10,106878,100196,103468,103468,6000.047263575,6002.311688324
c031,3,5,11,83040,76955,80462,80462,6600.062609165,6602.518384115
# search time: 6600.063s
# total time: 26428.573s
c031,4,5,1,1136713,983041,1103529,1103529,600.00945777,600.226974183
c031,4,5,2,659158,618887,636245,636245,1200.010166362,1200.513003923
c031,4,5,3,735163,671275,701981,701981,1800.010224525,1800.770870354
c031,4,5,4,404770,378457,391910,391910,2400.0107641980003,2400.993780753
c031,4,5,5,224224,208924,216211,216211,3000.0151928970004,3001.138022357
c031,4,5,6,191526,177825,184647,184647,3600.0176807840003,3601.304985853
c031,4,5,7,137201,127671,131997,131997,4200.021176783001,4201.426429879
c031,4,5,8,124075,115466,119479,119479,4800.026769273,4801.606656926
c031,4,5,9,106564,98877,102359,102359,5400.035397544,5401.83255305
c031,4,5,10,104445,97748,100864,100864,6000.041174536001,6002.016373864
c031,4,5,11,81444,75453,78676,78676,6600.043206640001,6602.224791911
# search time: 6600.043s
# total time: 33031.694s
