    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c076_4.json out/1593091766/results/c076_4_best.csv out/1593091766/results/c076_4_predictions.csv out/1593091766/results/c076_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1, 4, 4, 1, 4]), o: IntList([]) }
#   Datum { i: IntList([6, 0, 9, 7, 1, 0]), o: IntList([3, 6, 4]) }
#   Datum { i: IntList([8, 0]), o: IntList([5]) }
#   Datum { i: IntList([0, 9, 5, 7, 3, 8, 6, 7]), o: IntList([6, 4, 5, 3, 4]) }
#   Datum { i: IntList([7, 7, 0, 7, 6, 9, 2, 2, 7, 2]), o: IntList([4, 4, 4, 3, 6, 4]) }
#   Datum { i: IntList([7, 8, 4, 2, 5, 0, 1, 9, 7]), o: IntList([4, 5, 6, 4]) }
#   Datum { i: IntList([6, 2, 3]), o: IntList([3]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 9, 9, 7]), o: IntList([6, 6, 4, 4, 4, 6, 6, 4]) }
#   Datum { i: IntList([0, 9, 4, 7]), o: IntList([6, 4]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8, 8, 8, 8]), o: IntList([5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([6, 2, 2, 2, 6, 3, 3, 6]), o: IntList([3, 3, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c076,0,4,1,1302958,1126644,1264808,1264808,600.000461108,601.848592177
c076,0,4,2,878891,805944,851331,851331,1200.0004829959998,1203.00249471
c076,0,4,3,550405,517630,534562,534562,1800.000767301,1803.894184434
c076,0,4,4,421090,397079,411204,411204,2400.002989105,2404.521188278
c076,0,4,5,244607,229339,234496,234496,3000.004397716,3005.120598756
c076,0,4,6,221590,211321,217624,217624,3600.0069555,3605.552201513
c076,0,4,7,149172,134854,138220,138220,4200.009487142,4206.099333505
c076,0,4,8,125841,115645,119935,119935,4800.011680949,4806.684937206
c076,0,4,9,102117,95612,99464,99464,5400.012758029,5407.235366233
c076,0,4,10,93640,87910,91911,91911,6000.020995356,6007.740559348
c076,0,4,11,70714,66684,70000,70000,6600.022686697999,6608.234122471
# search time: 6600.023s
# total time: 6608.696s
c076,1,4,1,1423362,1222367,1379575,1379575,600.003635631,600.312542689
c076,1,4,2,956169,879492,928152,928152,1200.00668437,1200.74125176
c076,1,4,3,610113,573124,591415,591415,1800.007853909,1801.133797046
c076,1,4,4,480490,453299,469329,469329,2400.0147821640003,2401.44965363
c076,1,4,5,274890,257435,263067,263067,3000.0167828350004,3001.694768656
c076,1,4,6,220229,209395,216440,216440,3600.0172934200004,3601.886471425
c076,1,4,7,148470,134798,138238,138238,4200.017874829,4202.151066629
c076,1,4,8,125032,114911,119172,119172,4800.019695203,4802.435241124
c076,1,4,9,99000,92356,96152,96152,5400.024151693,5402.720312302
c076,1,4,10,92827,87265,91166,91166,6000.025786778,6002.937480798
c076,1,4,11,66284,62428,65380,65380,6600.036940394,6603.281262946
# search time: 6600.037s
# total time: 13212.791s
c076,2,4,1,1504683,1325441,1467678,1467678,600.002674118,600.35391214
c076,2,4,2,979720,899092,949912,949912,1200.0035087649999,1200.669556177
c076,2,4,3,611498,574796,593669,593669,1800.003698383,1800.938324021
c076,2,4,4,464557,438014,452834,452834,2400.007041776,2401.155431374
c076,2,4,5,283758,266208,273004,273004,3000.007171158,3001.343909926
c076,2,4,6,219222,208497,215630,215630,3600.008531484,3601.489519059
c076,2,4,7,146289,132138,135437,135437,4200.01097017,4201.639369424
c076,2,4,8,125841,115859,120082,120082,4800.0140110600005,4801.879645438
c076,2,4,9,100018,93565,97250,97250,5400.023330802001,5402.0992496
c076,2,4,10,89647,83911,87660,87660,6000.027391822001,6002.293421396
c076,2,4,11,67866,63948,67085,67085,6600.036417124001,6602.544427798
# search time: 6600.036s
# total time: 19816.146s
c076,3,4,1,1475870,1283853,1434777,1434777,600.000101563,600.304830855
c076,3,4,2,979567,900146,950286,950286,1200.000289919,1200.581290817
c076,3,4,3,603932,567554,585602,585602,1800.000639831,1800.813364355
c076,3,4,4,467938,441163,456214,456214,2400.001449324,2400.988118288
c076,3,4,5,284783,266916,273890,273890,3000.0020017800002,3001.141319042
c076,3,4,6,219694,209006,215982,215982,3600.003377041,3601.263896944
c076,3,4,7,145848,132359,135503,135503,4200.006128222,4201.395964626
c076,3,4,8,126414,116421,120850,120850,4800.011470708,4801.54806573
c076,3,4,9,101885,95525,99359,99359,5400.0244267630005,5401.713032984
c076,3,4,10,93589,88046,91913,91913,6000.032962726001,6001.853821865
c076,3,4,11,70022,66061,69282,69282,6600.0359613440005,6601.960669159
# search time: 6600.036s
# total time: 26418.920s
c076,4,4,1,1459538,1196681,1399508,1399508,600.000077144,600.190655676
c076,4,4,2,986238,908081,957168,957168,1200.00156122,1200.45307741
c076,4,4,3,604643,567896,585825,585825,1800.0015772699999,1800.666275973
c076,4,4,4,481447,454264,470429,470429,2400.0019952899997,2400.832034445
c076,4,4,5,284860,266973,273979,273979,3000.003803577,3000.959572104
c076,4,4,6,221038,211141,217332,217332,3600.004506829,3601.075658409
c076,4,4,7,146835,133239,136686,136686,4200.008221477,4201.192936155
c076,4,4,8,127122,117006,121406,121406,4800.011262994,4801.368613487
c076,4,4,9,101868,95345,99226,99226,5400.0130604900005,5401.510189712
c076,4,4,10,93791,88213,92179,92179,6000.0154368720005,6001.598904841
c076,4,4,11,68435,64515,67639,67639,6600.019271767001,6601.727629818
# search time: 6600.019s
# total time: 33021.461s
