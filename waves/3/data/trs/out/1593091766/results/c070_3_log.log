    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c070_3.json out/1593091766/results/c070_3_best.csv out/1593091766/results/c070_3_predictions.csv out/1593091766/results/c070_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([7, 6, 9, 0, 5, 1, 2]), o: IntList([7, 6, 9, 0, 5, 1, 2, 7, 6, 9, 0, 5, 1, 2]) }
#   Datum { i: IntList([6, 7, 0, 9, 1, 8]), o: IntList([6, 7, 0, 9, 1, 8, 6, 7, 0, 9, 1, 8]) }
#   Datum { i: IntList([5, 5]), o: IntList([5, 5, 5, 5]) }
#   Datum { i: IntList([3, 2, 0, 9]), o: IntList([3, 2, 0, 9, 3, 2, 0, 9]) }
#   Datum { i: IntList([0, 8, 4, 3, 6, 8, 4]), o: IntList([0, 8, 4, 3, 6, 8, 4, 0, 8, 4, 3, 6, 8, 4]) }
#   Datum { i: IntList([4, 3, 5]), o: IntList([4, 3, 5, 4, 3, 5]) }
#   Datum { i: IntList([5, 2, 7, 8, 3, 2]), o: IntList([5, 2, 7, 8, 3, 2, 5, 2, 7, 8, 3, 2]) }
#   Datum { i: IntList([9, 0, 3, 3, 3, 1, 9]), o: IntList([9, 0, 3, 3, 3, 1, 9, 9, 0, 3, 3, 3, 1, 9]) }
#   Datum { i: IntList([7]), o: IntList([7, 7]) }
#   Datum { i: IntList([7, 1, 1, 2, 1, 2]), o: IntList([7, 1, 1, 2, 1, 2, 7, 1, 1, 2, 1, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c070,0,3,1,1023428,894878,996028,996028,600.003239185,603.375828929
c070,0,3,2,258442,238274,244927,244927,1200.004633814,1204.589335019
c070,0,3,3,120175,112913,113730,113730,1800.0099348130002,1805.644942703
c070,0,3,4,78736,73835,74122,74122,2400.0143047690003,2406.915545738
c070,0,3,5,72679,65235,65445,65445,3000.0184426970004,3007.966203069
c070,0,3,6,64231,57366,57563,57563,3600.0214571600004,3608.835904131
c070,0,3,7,48825,44547,44778,44778,4200.038656668001,4209.807919071
c070,0,3,8,48927,44323,44517,44517,4800.092932307001,4810.553521214
c070,0,3,9,44859,40005,40325,40325,5400.096304982001,5411.108567397
c070,0,3,10,35338,32039,32245,32245,6000.107999635001,6011.812941844
c070,0,3,11,37714,32997,33250,33250,6600.117572447001,6612.35575762
# search time: 6600.118s
# total time: 6612.703s
c070,1,3,1,1091871,937815,1058269,1058269,600.002434304,600.34787865
c070,1,3,2,264852,244093,250962,250962,1200.0026852259998,1200.847160484
c070,1,3,3,117163,109546,110423,110423,1800.0053558299996,1801.356897162
c070,1,3,4,78110,72971,73261,73261,2400.0057720569994,2401.819638051
c070,1,3,5,75259,67164,67429,67429,3000.0061814109995,3002.264079849
c070,1,3,6,66524,59303,59612,59612,3600.0094049239997,3602.698456309
c070,1,3,7,47590,42855,43047,43047,4200.015650404,4203.200959785
c070,1,3,8,49498,44912,45125,45125,4800.0211112179995,4803.499426563
c070,1,3,9,45385,40663,40990,40990,5400.0302884269995,5403.777902656
c070,1,3,10,35511,32314,32544,32544,6000.030521027,6004.069686917
c070,1,3,11,38482,33542,33788,33788,6600.034152383,6604.385657026
# search time: 6600.034s
# total time: 13217.518s
c070,2,3,1,1065114,901225,1029037,1029037,600.003459751,600.264315341
c070,2,3,2,257380,236776,243587,243587,1200.009884498,1200.599339637
c070,2,3,3,118983,111722,112580,112580,1800.015595392,1800.940851165
c070,2,3,4,79475,74624,74981,74981,2400.022663451,2401.304814693
c070,2,3,5,74788,66794,67102,67102,3000.029876081,3001.629396315
c070,2,3,6,65563,58648,58925,58925,3600.0350875950003,3601.871736554
c070,2,3,7,46513,42122,42297,42297,4200.04324007,4202.156245685
c070,2,3,8,49248,44740,44939,44939,4800.045020243,4802.399875317
c070,2,3,9,44882,40043,40361,40361,5400.046523584,5402.616538945
c070,2,3,10,35512,32208,32427,32427,6000.065395239,6002.842864539
c070,2,3,11,38381,33068,33341,33341,6600.071426298,6603.015211769
# search time: 6600.071s
# total time: 19820.982s
c070,3,3,1,1130640,925223,1083536,1083536,600.000130538,600.192732015
c070,3,3,2,261078,240525,247333,247333,1200.0029332049999,1200.444512631
c070,3,3,3,116238,108446,109334,109334,1800.003543271,1800.663316228
c070,3,3,4,79544,74788,75138,75138,2400.0106446339996,2400.891917843
c070,3,3,5,74310,66385,66732,66732,3000.0160128679995,3001.084016838
c070,3,3,6,65515,58724,58990,58990,3600.0221022959995,3601.265987122
c070,3,3,7,47009,42558,42745,42745,4200.022841483,4201.525971102
c070,3,3,8,49818,45498,45723,45723,4800.090315286,4801.741162694
c070,3,3,9,45211,40155,40502,40502,5400.091024734,5401.857538295
c070,3,3,10,34737,31417,31613,31613,6000.094682374,6002.031620932
c070,3,3,11,38068,33139,33393,33393,6600.095560219,6602.143931465
# search time: 6600.096s
# total time: 26423.603s
c070,4,3,1,1137588,984553,1104292,1104292,600.00007619,600.292557271
c070,4,3,2,258670,238389,244987,244987,1200.001160736,1200.493398766
c070,4,3,3,118988,111706,112547,112547,1800.004434607,1800.676286642
c070,4,3,4,79237,74449,74841,74841,2400.011384796,2400.867030206
c070,4,3,5,74642,66728,67018,67018,3000.021010922,3001.053457579
c070,4,3,6,64135,56757,56993,56993,3600.0220975370003,3601.2063579
c070,4,3,7,46367,42247,42575,42575,4200.029631157,4201.414058931
c070,4,3,8,49335,44496,44694,44694,4800.030760245,4801.535573966
c070,4,3,9,45413,40279,40598,40598,5400.032375804,5401.658059055
c070,4,3,10,35566,32339,32543,32543,6000.03890339,6001.788496391
c070,4,3,11,37413,32670,32919,32919,6600.044610904,6601.896726989
# search time: 6600.045s
# total time: 33025.971s
