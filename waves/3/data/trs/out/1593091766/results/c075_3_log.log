    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c075_3.json out/1593091766/results/c075_3_best.csv out/1593091766/results/c075_3_predictions.csv out/1593091766/results/c075_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 0, 4, 2, 8]), o: IntList([8, 4, 8]) }
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([6, 5, 2, 9]), o: IntList([6, 2]) }
#   Datum { i: IntList([1, 7, 0, 8, 8, 3, 1]), o: IntList([1, 0, 8, 1]) }
#   Datum { i: IntList([8, 9, 5, 5, 1, 5, 6, 4, 7]), o: IntList([8, 5, 1, 6, 7]) }
#   Datum { i: IntList([0, 1, 1, 9, 2, 0, 1, 0, 9, 2]), o: IntList([0, 1, 2, 1, 9]) }
#   Datum { i: IntList([0, 0, 2]), o: IntList([0, 2]) }
#   Datum { i: IntList([8, 6, 3]), o: IntList([8, 3]) }
#   Datum { i: IntList([7, 4, 5, 2, 5, 5, 2]), o: IntList([7, 5, 5, 2]) }
#   Datum { i: IntList([7, 3]), o: IntList([7]) }
#   Datum { i: IntList([9, 4, 4, 4, 9]), o: IntList([9, 4, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c075,0,3,1,1237226,1008807,1185701,1185701,600.000068801,601.618936597
c075,0,3,2,590819,557423,572568,572568,1200.0004495399999,1202.723609615
c075,0,3,3,563861,525310,531323,531323,1800.0012732239998,1803.641194733
c075,0,3,4,424882,397833,406286,406286,2400.014377563,2404.124996812
c075,0,3,5,268818,248069,250062,250062,3000.015151411,3004.754450944
c075,0,3,6,189258,173108,174395,174395,3600.020256426,3605.358285973
c075,0,3,7,139809,129031,129639,129639,4200.021973049,4205.970334903
c075,0,3,8,122389,115649,118546,118546,4800.024296428,4806.559489097
c075,0,3,9,110786,103550,107094,107094,5400.028930578999,5406.995851916
c075,0,3,10,107027,99981,103409,103409,6000.030751707,6007.546689984
c075,0,3,11,100740,93962,97576,97576,6600.032104088,6607.989954288
# search time: 6600.032s
# total time: 6608.463s
c075,1,3,1,1468912,1207386,1409450,1409450,600.000031935,600.27085691
c075,1,3,2,668739,630762,648469,648469,1200.000314339,1200.632178081
c075,1,3,3,633627,589504,596256,596256,1800.001096901,1801.022581964
c075,1,3,4,480040,450377,460038,460038,2400.004496071,2401.254966096
c075,1,3,5,310370,287277,289697,289697,3000.0046351240003,3001.557654634
c075,1,3,6,217763,199156,200490,200490,3600.0050403060004,3601.843115983
c075,1,3,7,160024,147569,148389,148389,4200.007920805,4202.119594641
c075,1,3,8,138524,130780,133923,133923,4800.008245646,4802.370489414
c075,1,3,9,126852,118865,122662,122662,5400.0303168850005,5402.635912548
c075,1,3,10,106528,99462,102454,102454,6000.030876109,6002.950755546
c075,1,3,11,101151,94136,97452,97452,6600.037696643,6603.196920122
# search time: 6600.038s
# total time: 13212.536s
c075,2,3,1,1517562,1327172,1479264,1479264,600.001714119,600.339681187
c075,2,3,2,688432,649553,666706,666706,1200.002410805,1200.588400358
c075,2,3,3,627820,584376,591026,591026,1800.007428747,1800.865273777
c075,2,3,4,479891,449737,459309,459309,2400.0077443729997,2401.041444441
c075,2,3,5,303427,280018,282329,282329,3000.0203764359994,3001.261808896
c075,2,3,6,213212,195041,196511,196511,3600.0217574559992,3601.422148049
c075,2,3,7,158726,146115,146950,146950,4200.029800744999,4201.627073917
c075,2,3,8,144320,136151,139978,139978,4800.0303838849995,4801.795983083
c075,2,3,9,124237,115908,119887,119887,5400.035445324999,5401.986718574
c075,2,3,10,105568,98388,101444,101444,6000.0449029559995,6002.187356436
c075,2,3,11,101146,94225,97916,97916,6600.051481246999,6602.33951386
# search time: 6600.051s
# total time: 19815.740s
c075,3,3,1,1389013,1178834,1342677,1342677,600.006722144,600.262198341
c075,3,3,2,667469,630333,647346,647346,1200.006752443,1200.470170787
c075,3,3,3,627937,584409,591042,591042,1800.0087251070001,1800.689746126
c075,3,3,4,473913,443797,453673,453673,2400.0093100500003,2400.842894389
c075,3,3,5,304034,280570,282848,282848,3000.0093168070002,3001.003082269
c075,3,3,6,214873,196779,198223,198223,3600.0108542760004,3601.154815572
c075,3,3,7,156916,144516,145281,145281,4200.014587337,4201.285281057
c075,3,3,8,144089,135875,139724,139724,4800.023746042,4801.426534679
c075,3,3,9,124630,116683,120489,120489,5400.0369908640005,5401.564225223
c075,3,3,10,107734,100637,104107,104107,6000.039219504,6001.709064014
c075,3,3,11,101143,94315,97578,97578,6600.044546189,6601.861404371
# search time: 6600.045s
# total time: 26418.818s
c075,4,3,1,1477974,1294321,1439433,1439433,600.002087188,600.26504358
c075,4,3,2,677906,639424,657216,657216,1200.002251181,1200.45821403
c075,4,3,3,643719,600204,607211,607211,1800.002627811,1800.64758478
c075,4,3,4,478823,448350,458135,458135,2400.003099559,2400.793403365
c075,4,3,5,313222,289859,292394,292394,3000.004345997,3000.933456822
c075,4,3,6,215786,197604,199095,199095,3600.0044021840004,3601.06538629
c075,4,3,7,157826,145488,146324,146324,4200.007661587,4201.183994639
c075,4,3,8,139937,132155,135407,135407,4800.008709944001,4801.277338945
c075,4,3,9,123077,114991,118721,118721,5400.024304550001,5401.388215485
c075,4,3,10,105171,98178,101077,101077,6000.0329599410015,6001.5086884
c075,4,3,11,102645,95921,99490,99490,6600.035339941001,6601.608440748
# search time: 6600.035s
# total time: 33021.271s
