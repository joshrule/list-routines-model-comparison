    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c038_4.json out/1593091766/results/c038_4_best.csv out/1593091766/results/c038_4_predictions.csv out/1593091766/results/c038_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c038,0,4,1,1125346,1002480,1102029,1102029,600.000099679,602.327583949
c038,0,4,2,341259,315567,323792,323792,1200.000153908,1203.626409555
c038,0,4,3,295009,268875,271485,271485,1800.002064973,1804.610114338
c038,0,4,4,150453,136162,136662,136662,2400.021898835,2406.096414594
c038,0,4,5,58898,51978,52470,52470,3000.025297319,3006.95399372
c038,0,4,6,46631,41402,41884,41884,3600.025726937,3607.717627064
c038,0,4,7,43156,38590,39032,39032,4200.02698118,4208.544919297
c038,0,4,8,38405,33357,33751,33751,4800.036807021,4809.363468603
c038,0,4,9,36303,31828,32192,32192,5400.0671967299995,5410.169127448
c038,0,4,10,27651,24086,24412,24412,6000.104629236,6010.989421309
c038,0,4,11,27370,23508,23805,23805,6600.109537746,6611.700976942
# search time: 6600.110s
# total time: 6612.044s
c038,1,4,1,674766,580507,654293,654293,600.002870644,600.343202132
c038,1,4,2,203018,187199,192060,192060,1200.003571653,1200.933127924
c038,1,4,3,175457,159753,161329,161329,1800.006358772,1801.425496419
c038,1,4,4,93395,84939,85330,85330,2400.0099991280003,2401.899652647
c038,1,4,5,59897,53475,54000,54000,3000.0181326910006,3002.397632189
c038,1,4,6,47235,42144,42621,42621,3600.032543720001,3602.874892943
c038,1,4,7,43360,38739,39185,39185,4200.047607509001,4203.367051769
c038,1,4,8,38820,33919,34320,34320,4800.048152743001,4803.78465358
c038,1,4,9,36693,32168,32539,32539,5400.049822178001,5404.277897454
c038,1,4,10,28005,24536,24871,24871,6000.060235119001,6004.79136059
c038,1,4,11,26499,22714,22964,22964,6600.065329755001,6605.265845041
# search time: 6600.065s
# total time: 13217.951s
c038,2,4,1,639255,521557,612491,612491,600.002737456,600.195418719
c038,2,4,2,205472,189515,194470,194470,1200.004823286,1200.661989162
c038,2,4,3,175366,159682,161291,161291,1800.005767299,1800.994573752
c038,2,4,4,91890,83882,84270,84270,2400.007329979,2401.380244295
c038,2,4,5,58828,51827,52334,52334,3000.0117558680004,3001.840765849
c038,2,4,6,46292,41140,41596,41596,3600.015995946,3602.174286102
c038,2,4,7,42693,38177,38625,38625,4200.016267283,4202.556863028
c038,2,4,8,38555,33284,33687,33687,4800.0415169670005,4802.950110528
c038,2,4,9,35943,31195,31572,31572,5400.042319305,5403.254958144
c038,2,4,10,28495,25035,25368,25368,6000.059200862001,6003.697924795
c038,2,4,11,27295,23548,23810,23810,6600.066794489001,6604.160901781
# search time: 6600.067s
# total time: 19822.549s
c038,3,4,1,657854,575125,640078,640078,600.009905031,600.266717973
c038,3,4,2,203751,187810,192823,192823,1200.011758156,1200.590226203
c038,3,4,3,170712,154802,156323,156323,1800.0128428960002,1800.872377735
c038,3,4,4,91435,83080,83434,83434,2400.020899648,2401.126862115
c038,3,4,5,58824,51721,52212,52212,3000.033162912,3001.439117226
c038,3,4,6,46618,41477,41927,41927,3600.034612513,3601.771098776
c038,3,4,7,41681,36933,37354,37354,4200.037675405,4202.107257684
c038,3,4,8,37892,32747,33132,33132,4800.044322175,4802.403175484
c038,3,4,9,35486,30707,31072,31072,5400.055033528,5402.720242274
c038,3,4,10,28152,24753,25084,25084,6000.073662433,6003.163115301
c038,3,4,11,26711,22849,23111,23111,6600.091846585,6603.430791435
# search time: 6600.092s
# total time: 26426.421s
c038,4,4,1,652708,534315,625195,625195,600.005563142,600.182878847
c038,4,4,2,198259,182863,187563,187563,1200.024838622,1200.496241728
c038,4,4,3,174597,158904,160482,160482,1800.026711725,1800.735382775
c038,4,4,4,91506,83518,83914,83914,2400.02847557,2400.968458915
c038,4,4,5,59258,52722,53234,53234,3000.034614277,3001.197558151
c038,4,4,6,46024,40583,41062,41062,3600.036902062,3601.454818729
c038,4,4,7,42551,38010,38423,38423,4200.04454807,4201.710984646
c038,4,4,8,38153,33204,33582,33582,4800.057602067,4802.019878642
c038,4,4,9,36133,31585,31947,31947,5400.062087752,5402.249694463
c038,4,4,10,28979,25334,25678,25678,6000.096703847,6002.548767409
c038,4,4,11,32614,27916,28209,28209,6600.096950942,6602.706014155
# search time: 6600.097s
# total time: 33029.548s
