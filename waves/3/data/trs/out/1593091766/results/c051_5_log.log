    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c051_5.json out/1593091766/results/c051_5_best.csv out/1593091766/results/c051_5_predictions.csv out/1593091766/results/c051_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 7, 6, 6, 7, 7]), o: IntList([6, 6, 6, 6, 6, 6, 7, 6, 6, 7, 7]) }
#   Datum { i: IntList([2, 4, 5, 1, 3, 6, 8, 0]), o: IntList([2, 2, 2, 2, 2, 2, 4, 5, 1, 3, 6, 8, 0]) }
#   Datum { i: IntList([1, 9, 3, 8, 8, 1, 3, 3, 3]), o: IntList([1, 1, 1, 1, 1, 1, 9, 3, 8, 8, 1, 3, 3, 3]) }
#   Datum { i: IntList([0, 1, 1]), o: IntList([0, 0, 0, 0, 0, 0, 1, 1]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 4, 4, 4, 4, 4, 1]) }
#   Datum { i: IntList([8]), o: IntList([8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([9, 9, 9, 9]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([3, 3, 2, 6, 4]), o: IntList([3, 3, 3, 3, 3, 3, 3, 2, 6, 4]) }
#   Datum { i: IntList([5, 4, 4, 4, 2, 2, 5]), o: IntList([5, 5, 5, 5, 5, 5, 4, 4, 4, 2, 2, 5]) }
#   Datum { i: IntList([2, 6, 4, 0, 8, 7, 0, 0, 9]), o: IntList([2, 2, 2, 2, 2, 2, 6, 4, 0, 8, 7, 0, 0, 9]) }
#   Datum { i: IntList([5, 7, 0, 7, 3, 5, 8]), o: IntList([5, 5, 5, 5, 5, 5, 7, 0, 7, 3, 5, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c051,0,5,1,1119093,916046,1072708,1072708,600.004103946,601.879338567
c051,0,5,2,237067,216733,222780,222780,1200.004731696,1203.089015807
c051,0,5,3,118631,106189,114153,114153,1800.0077610619999,1803.683777589
c051,0,5,4,79682,72780,75166,75166,2400.0112681399996,2404.543542613
c051,0,5,5,69118,61961,63644,63644,3000.0199382299998,3005.4324623
c051,0,5,6,62995,56762,58507,58507,3600.0217937629996,3606.360047988
c051,0,5,7,60644,54592,56430,56430,4200.024764524,4207.066152171
c051,0,5,8,52772,45785,48783,48783,4800.053978819,4807.93853452
c051,0,5,9,43345,38467,39974,39974,5400.055173141,5408.800202068
c051,0,5,10,35347,31347,32388,32388,6000.070188762999,6009.790116651
c051,0,5,11,35240,31657,32653,32653,6600.1058533039995,6610.523231941
# search time: 6600.106s
# total time: 6610.795s
c051,1,5,1,1133751,993624,1104422,1104422,600.008722462,600.416081491
c051,1,5,2,239858,219648,225662,225662,1200.009800503,1200.858541483
c051,1,5,3,126785,117237,121704,121704,1800.01201217,1801.1814506
c051,1,5,4,78289,71380,73487,73487,2400.017745469,2401.555493381
c051,1,5,5,69164,62053,63758,63758,3000.020446557,3002.019427826
c051,1,5,6,62822,56429,58278,58278,3600.021284033,3602.341733813
c051,1,5,7,59657,53584,55430,55430,4200.022636384,4202.735657173
c051,1,5,8,50916,45196,47037,47037,4800.0255516980005,4803.132965345
c051,1,5,9,42729,37590,39360,39360,5400.031670641,5403.621537139
c051,1,5,10,35133,31100,32216,32216,6000.046446858,6004.203073222
c051,1,5,11,34791,31310,32285,32285,6600.061562668,6604.548403097
# search time: 6600.062s
# total time: 13215.867s
c051,2,5,1,1146618,990674,1113232,1113232,600.000746748,600.280993886
c051,2,5,2,233900,213972,219943,219943,1200.0017097300001,1200.602766554
c051,2,5,3,123651,114081,118831,118831,1800.003303816,1800.806082998
c051,2,5,4,69783,61919,64278,64278,2400.004499115,2401.132399714
c051,2,5,5,68054,61274,62974,62974,3000.0154292859997,3001.342600542
c051,2,5,6,61561,55495,57219,57219,3600.0192802399997,3601.558673572
c051,2,5,7,60076,52630,55858,55858,4200.022728309,4201.789503668
c051,2,5,8,51299,45634,47433,47433,4800.030659898,4801.950537157
c051,2,5,9,44585,39609,41056,41056,5400.031265883,5402.169958507
c051,2,5,10,34790,30904,31957,31957,6000.040383285,6002.465310766
c051,2,5,11,34947,31452,32419,32419,6600.049923795,6602.658368726
# search time: 6600.050s
# total time: 19818.775s
c051,3,5,1,1072162,908579,1036101,1036101,600.007312356,600.24921815
c051,3,5,2,239043,218753,224841,224841,1200.007908925,1200.50451052
c051,3,5,3,126320,116987,121346,121346,1800.0095293180002,1800.671565803
c051,3,5,4,78989,72163,74438,74438,2400.012494557,2400.873729924
c051,3,5,5,68761,61843,63541,63541,3000.015733784,3001.055838552
c051,3,5,6,62610,56471,58237,58237,3600.022135815,3601.233006547
c051,3,5,7,60422,54158,56038,56038,4200.036617594,4201.410639104
c051,3,5,8,51382,45651,47521,47521,4800.055013305,4801.654812496
c051,3,5,9,43555,38762,40107,40107,5400.061058575,5401.854593243
c051,3,5,10,35081,31126,32121,32121,6000.080918087,6002.207057483
c051,3,5,11,34997,31353,32445,32445,6600.082310184,6602.339039108
# search time: 6600.082s
# total time: 26421.567s
c051,4,5,1,1110884,963700,1079081,1079081,600.004405824,600.285940763
c051,4,5,2,239465,219464,225307,225307,1200.005687892,1200.485277968
c051,4,5,3,123557,113757,118663,118663,1800.0086084559998,1800.609382963
c051,4,5,4,77605,70661,72777,72777,2400.011959957,2400.782533183
c051,4,5,5,67676,60601,62083,62083,3000.016260675,3000.94407062
c051,4,5,6,61272,55208,56743,56743,3600.0180410909998,3601.14541583
c051,4,5,7,34251,30679,31759,31759,4200.040300191999,4201.314673973
c051,4,5,8,29395,26127,27022,27022,4800.042856599,4801.490653861
c051,4,5,9,24517,21864,22597,22597,5400.098445076,5401.76492468
c051,4,5,10,19712,17540,18146,18146,6000.103204096999,6002.084982156
c051,4,5,11,20282,18276,18878,18878,6600.1212983469995,6602.244445567
# search time: 6600.121s
# total time: 33024.199s
