    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c053_5.json out/1593091766/results/c053_5_best.csv out/1593091766/results/c053_5_predictions.csv out/1593091766/results/c053_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
#   Datum { i: IntList([8, 9, 6, 4]), o: IntList([8, 8, 6, 4]) }
#   Datum { i: IntList([1, 4, 2]), o: IntList([1, 1, 2]) }
#   Datum { i: IntList([7, 4, 6, 5, 0, 8, 4, 2]), o: IntList([7, 7, 6, 5, 0, 8, 4, 2]) }
#   Datum { i: IntList([0, 5, 7, 6, 7, 1]), o: IntList([0, 0, 7, 6, 7, 1]) }
#   Datum { i: IntList([6, 5, 8, 9, 1, 3, 4, 1, 0]), o: IntList([6, 6, 8, 9, 1, 3, 4, 1, 0]) }
#   Datum { i: IntList([9, 3, 7, 0, 1, 5, 5, 0]), o: IntList([9, 9, 7, 0, 1, 5, 5, 0]) }
#   Datum { i: IntList([2, 0, 2, 0, 2]), o: IntList([2, 2, 2, 0, 2]) }
#   Datum { i: IntList([8, 6, 3, 6, 6, 3, 3]), o: IntList([8, 8, 3, 6, 6, 3, 3]) }
#   Datum { i: IntList([9, 1, 5, 8, 4, 3, 7, 6, 5, 2]), o: IntList([9, 9, 5, 8, 4, 3, 7, 6, 5, 2]) }
#   Datum { i: IntList([9, 2, 2, 8, 0, 0, 2, 1, 1]), o: IntList([9, 9, 2, 8, 0, 0, 2, 1, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c053,0,5,1,672879,579409,653135,653135,600.00351481,602.947611009
c053,0,5,2,427452,400950,413813,413813,1200.003744491,1204.35750969
c053,0,5,3,256166,238398,241132,241132,1800.0179127269998,1805.590541234
c053,0,5,4,206134,193008,196735,196735,2400.021413523,2406.033494675
c053,0,5,5,187385,174916,177359,177359,3000.023486736,3006.756515231
c053,0,5,6,144908,134938,136832,136832,3600.071307238,3607.540026657
c053,0,5,7,105422,97304,98741,98741,4200.073479972,4208.253837712
c053,0,5,8,83841,77559,78662,78662,4800.074318308,4809.155338027
c053,0,5,9,74796,68947,70000,70000,5400.076318557,5409.898205783
c053,0,5,10,65780,60241,61019,61019,6000.085638965001,6010.559648535
c053,0,5,11,53391,48653,49257,49257,6600.087122979001,6611.110451365
# search time: 6600.087s
# total time: 6611.362s
c053,1,5,1,1060400,914472,1029847,1029847,600.005573093,600.344528098
c053,1,5,2,650900,613285,632006,632006,1200.00570395,1200.756011261
c053,1,5,3,413766,385496,389822,389822,1800.006312147,1801.173992454
c053,1,5,4,315794,296292,302179,302179,2400.009229235,2401.447450812
c053,1,5,5,183760,171393,173880,173880,3000.010473809,3001.759688585
c053,1,5,6,142024,132276,134205,134205,3600.017838765,3602.059878497
c053,1,5,7,104722,96900,98147,98147,4200.018288273,4202.336219087
c053,1,5,8,83238,76895,78019,78019,4800.0231082029995,4802.684465123
c053,1,5,9,75461,69436,70441,70441,5400.025866673999,5402.988186814
c053,1,5,10,64808,59250,60069,60069,6000.030505428999,6003.281451368
c053,1,5,11,52688,48003,48621,48621,6600.033903238999,6603.595972691
# search time: 6600.034s
# total time: 13215.397s
c053,2,5,1,1117652,913945,1071700,1071700,600.002108045,600.202941257
c053,2,5,2,660714,621453,641027,641027,1200.010938441,1200.48150487
c053,2,5,3,409253,381182,385417,385417,1800.011829279,1800.746881482
c053,2,5,4,314193,295177,301077,301077,2400.012103218,2400.932338352
c053,2,5,5,186329,173692,176151,176151,3000.012752541,3001.117669593
c053,2,5,6,143461,133589,135596,135596,3600.016069673,3601.291942521
c053,2,5,7,105789,97578,99018,99018,4200.019210259999,4201.462538462
c053,2,5,8,83765,77794,78935,78935,4800.0247347859995,4801.656251455
c053,2,5,9,75264,69182,70197,70197,5400.026814553999,5401.8560602
c053,2,5,10,64876,59453,60229,60229,6000.035894993999,6002.040570555
c053,2,5,11,53629,48830,49504,49504,6600.041216920999,6602.254936381
# search time: 6600.041s
# total time: 19818.115s
c053,3,5,1,1076150,949040,1051341,1051341,600.00268063,600.264072334
c053,3,5,2,660913,621484,640994,640994,1200.0090365370002,1200.497826763
c053,3,5,3,408436,380318,384608,384608,1800.0093314380001,1800.71376377
c053,3,5,4,318797,299014,304814,304814,2400.019406744,2400.865368821
c053,3,5,5,184077,171342,173937,173937,3000.019812073,3001.008265721
c053,3,5,6,143827,133653,135616,135616,3600.022652017,3601.147033175
c053,3,5,7,105197,97058,98443,98443,4200.033027558,4201.288628593
c053,3,5,8,83266,76898,78032,78032,4800.0389163830005,4801.448199405
c053,3,5,9,74782,68772,69775,69775,5400.0476827190005,5401.576006282
c053,3,5,10,65101,59505,60286,60286,6000.0506224440005,6001.700237144
c053,3,5,11,32044,28954,29358,29358,6600.072976017001,6601.954176654
# search time: 6600.073s
# total time: 26420.521s
c053,4,5,1,1074669,880707,1030382,1030382,600.008173726,600.190060455
c053,4,5,2,652215,615083,633521,633521,1200.008549766,1200.404392787
c053,4,5,3,400978,372334,376580,376580,1800.008711977,1800.582866058
c053,4,5,4,314794,295530,301451,301451,2400.011326264,2400.70908404
c053,4,5,5,183379,170722,173299,173299,3000.0165742460003,3000.842066976
c053,4,5,6,143143,133207,135166,135166,3600.019739575,3600.996822191
c053,4,5,7,104153,96424,97804,97804,4200.024517741,4201.120609111
c053,4,5,8,81551,75482,76627,76627,4800.027371167,4801.218905249
c053,4,5,9,73560,67604,68559,68559,5400.029204633,5401.303737013
c053,4,5,10,63797,58490,59245,59245,6000.0334140489995,6001.434670134
c053,4,5,11,51273,46583,47143,47143,6600.035906325,6601.578103269
# search time: 6600.036s
# total time: 33022.670s
