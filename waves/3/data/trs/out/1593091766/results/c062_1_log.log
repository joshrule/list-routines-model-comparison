    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c062_1.json out/1593091766/results/c062_1_best.csv out/1593091766/results/c062_1_predictions.csv out/1593091766/results/c062_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 5, 2, 7]), o: IntList([2, 5, 2]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([7, 6, 0, 7, 3]), o: IntList([7, 6, 0, 7]) }
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2, 4]), o: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2]) }
#   Datum { i: IntList([1, 9, 8]), o: IntList([1, 9]) }
#   Datum { i: IntList([1, 2, 5, 4, 5, 4, 7]), o: IntList([1, 2, 5, 4, 5, 4]) }
#   Datum { i: IntList([6, 8, 9, 3, 7, 5, 2, 1]), o: IntList([6, 8, 9, 3, 7, 5, 2]) }
#   Datum { i: IntList([1, 9, 2, 8, 0, 6]), o: IntList([1, 9, 2, 8, 0]) }
#   Datum { i: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6, 3]), o: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6]) }
#   Datum { i: IntList([4, 2, 0, 3, 4, 0, 0, 3, 4]), o: IntList([4, 2, 0, 3, 4, 0, 0, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c062,0,1,1,1157430,1005140,1124692,1124692,600.000049255,602.084721462
c062,0,1,2,539370,509262,522620,522620,1200.000305141,1203.167261486
c062,0,1,3,610103,567762,588047,588047,1800.000320621,1803.956570525
c062,0,1,4,321552,297119,305978,305978,2400.000913591,2404.679134835
c062,0,1,5,302383,283159,290716,290716,3000.004533651,3005.172599112
c062,0,1,6,140752,129380,132046,132046,3600.00667359,3605.768605313
c062,0,1,7,135868,126207,129785,129785,4200.010814742,4206.240606317
c062,0,1,8,108933,98928,100658,100658,4800.0137927079995,4806.730097421
c062,0,1,9,83531,74482,75807,75807,5400.017889315,5407.215003041
c062,0,1,10,70525,65048,67307,67307,6000.021780339999,6007.67476927
c062,0,1,11,53919,49693,51539,51539,6600.030285059,6608.216146167
# search time: 6600.030s
# total time: 6608.582s
c062,1,1,1,1133460,982182,1100987,1100987,600.006845573,600.290834677
c062,1,1,2,528251,497715,511730,511730,1200.0110517399999,1200.905252701
c062,1,1,3,374879,348256,361196,361196,1800.0110901099997,1801.263930257
c062,1,1,4,192447,177622,183024,183024,2400.0117140069997,2401.608485644
c062,1,1,5,176124,163614,168194,168194,3000.0133810669995,3001.910679099
c062,1,1,6,86346,79083,80989,80989,3600.0174118379996,3602.232984698
c062,1,1,7,80237,74360,76564,76564,4200.033676982999,4202.45271964
c062,1,1,8,62626,56790,58245,58245,4800.037567820999,4802.690651967
c062,1,1,9,49597,45309,46644,46644,5400.0483948169995,5402.89727648
c062,1,1,10,40696,37458,39194,39194,6000.058482234999,6003.217749884
c062,1,1,11,30904,28502,29837,29837,6600.0607122579995,6603.407300531
# search time: 6600.061s
# total time: 13212.673s
c062,2,1,1,1158606,1010963,1127686,1127686,600.003605663,600.264993975
c062,2,1,2,552472,520123,534347,534347,1200.0046399070002,1200.534088422
c062,2,1,3,603419,561018,580465,580465,1800.0060839910002,1800.823462951
c062,2,1,4,327057,302830,312259,312259,2400.0065630120002,2401.043191419
c062,2,1,5,303254,284343,291729,291729,3000.008783775,3001.235651583
c062,2,1,6,144422,132972,135942,135942,3600.0110764480005,3601.447653848
c062,2,1,7,139396,129992,133864,133864,4200.013822870001,4201.59731324
c062,2,1,8,106937,97258,99264,99264,4800.017479155001,4801.759593006
c062,2,1,9,86887,78600,80431,80431,5400.019583098001,5401.916416472
c062,2,1,10,70226,65048,67482,67482,6000.024798054001,6002.142359043
c062,2,1,11,52639,48453,50280,50280,6600.028974730001,6602.346476002
# search time: 6600.029s
# total time: 19815.579s
c062,3,1,1,1066577,901984,1030528,1030528,600.000044677,600.20611682
c062,3,1,2,374529,352276,362108,362108,1200.001295056,1200.447112321
c062,3,1,3,655478,610001,632774,632774,1800.0031868869999,1800.717450855
c062,3,1,4,372828,345250,356008,356008,2400.003464936,2400.914642192
c062,3,1,5,339030,317399,325981,325981,3000.00409698,3001.087622425
c062,3,1,6,166606,153242,156982,156982,3600.0050551430004,3601.282076882
c062,3,1,7,159091,148156,152836,152836,4200.005611234001,4201.399450074
c062,3,1,8,124622,113468,115529,115529,4800.010815059,4801.546195317
c062,3,1,9,100615,90933,93238,93238,5400.0120998580005,5401.645920395
c062,3,1,10,81619,75360,77974,77974,6000.015174248,6001.777668299
c062,3,1,11,62578,57793,59770,59770,6600.016760889001,6601.949147029
# search time: 6600.017s
# total time: 26418.231s
c062,4,1,1,1311911,1144995,1276349,1276349,600.000140994,600.318032671
c062,4,1,2,626857,590635,606836,606836,1200.0042180149999,1200.541453253
c062,4,1,3,709412,660417,684852,684852,1800.004743305,1800.781931334
c062,4,1,4,359991,332745,342646,342646,2400.005374156,2400.970419174
c062,4,1,5,343456,320531,329380,329380,3000.006510662,3001.12695651
c062,4,1,6,159365,146001,148979,148979,3600.007576922,3601.299032428
c062,4,1,7,154888,144181,148195,148195,4200.007666294,4201.425269664
c062,4,1,8,121846,110887,112745,112745,4800.009942526,4801.556594253
c062,4,1,9,95648,85688,87114,87114,5400.0169546649995,5401.689604046
c062,4,1,10,81140,74947,77452,77452,6000.026421596,6001.842874511
c062,4,1,11,61605,56448,58405,58405,6600.032024427999,6601.93712784
# search time: 6600.032s
# total time: 33020.852s
