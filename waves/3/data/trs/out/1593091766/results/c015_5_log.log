    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c015_5.json out/1593091766/results/c015_5_best.csv out/1593091766/results/c015_5_predictions.csv out/1593091766/results/c015_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 8, 8, 6, 8, 6, 6, 2, 8]), o: IntList([6, 8, 6, 6, 2, 8]) }
#   Datum { i: IntList([7, 7, 7, 7, 7, 7, 7]), o: IntList([]) }
#   Datum { i: IntList([3, 3, 0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 8, 1, 9, 1, 2, 2, 8, 2, 1]), o: IntList([1, 9, 1, 2, 2, 8, 2, 1]) }
#   Datum { i: IntList([6, 8, 1, 3, 2, 7, 5, 7, 1, 5]), o: IntList([7, 1, 5]) }
#   Datum { i: IntList([1, 3, 9, 3, 3, 1, 3, 3, 3, 9]), o: IntList([9, 3, 3]) }
#   Datum { i: IntList([4, 5, 0, 0, 6, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([0, 9, 2, 6, 2, 0, 8, 5, 6]), o: IntList([6]) }
#   Datum { i: IntList([2, 8, 6, 1, 0, 9, 8, 7, 4, 1]), o: IntList([1, 0, 9, 8, 7, 4, 1]) }
#   Datum { i: IntList([1, 4, 2, 7, 7, 3, 8]), o: IntList([2, 7, 7, 3]) }
#   Datum { i: IntList([1, 5, 0, 8, 0, 3, 3, 0, 2]), o: IntList([0, 8, 0, 3, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c015,0,5,1,1077737,885324,1033689,1033689,600.000192411,601.917575877
c015,0,5,2,329318,308764,317734,317734,1200.001710002,1203.252345967
c015,0,5,3,327742,304188,313601,313601,1800.002362179,1804.505675121
c015,0,5,4,245291,228240,236336,236336,2400.0036536300004,2405.492762047
c015,0,5,5,134330,124706,127662,127662,3000.0091168280005,3006.381097096
c015,0,5,6,105634,98107,99470,99470,3600.0110150690007,3607.37772218
c015,0,5,7,90293,81661,82965,82965,4200.017190162001,4208.455986736
c015,0,5,8,81590,72940,74298,74298,4800.019300866001,4809.452007351
c015,0,5,9,70556,63884,65656,65656,5400.024505456001,5410.643689864
c015,0,5,10,54044,49863,51058,51058,6000.024597632001,6011.96167451
c015,0,5,11,50765,46839,48087,48087,6600.026153935001,6613.019585445
# search time: 6600.026s
# total time: 6613.427s
c015,1,5,1,1073880,875941,1028402,1028402,600.00091547,600.270341193
c015,1,5,2,330959,310470,319508,319508,1200.012621192,1200.725436247
c015,1,5,3,326032,302084,311551,311551,1800.0138359090001,1801.213696135
c015,1,5,4,236960,220206,227514,227514,2400.0161049790004,2401.684175553
c015,1,5,5,136799,127204,130714,130714,3000.0175346940005,3002.146457403
c015,1,5,6,105744,98115,99608,99608,3600.0199320720003,3602.565775091
c015,1,5,7,90474,81693,83041,83041,4200.022965017,4203.143900096
c015,1,5,8,82973,74402,76055,76055,4800.025191867,4803.578790449
c015,1,5,9,68647,62328,63948,63948,5400.033817665,5404.27477661
c015,1,5,10,54106,49792,51017,51017,6000.036858904,6004.896687214
c015,1,5,11,50283,46292,47582,47582,6600.052486288,6605.405535339
# search time: 6600.052s
# total time: 13219.481s
c015,2,5,1,1073773,933365,1043830,1043830,600.002658641,600.288928871
c015,2,5,2,342159,320492,329763,329763,1200.002848156,1200.563465589
c015,2,5,3,327895,304103,314257,314257,1800.0071269280002,1800.867475368
c015,2,5,4,243313,226239,234215,234215,2400.007789829,2401.16199119
c015,2,5,5,137286,127646,131201,131201,3000.008076694,3001.4815595
c015,2,5,6,112315,104196,106140,106140,3600.008397887,3601.779860898
c015,2,5,7,90961,82014,83412,83412,4200.00981924,4202.089969146
c015,2,5,8,81389,73240,74592,74592,4800.015249831,4802.424411216
c015,2,5,9,68424,61955,63606,63606,5400.023467965,5402.808734435
c015,2,5,10,55881,51527,52867,52867,6000.036521542001,6003.250131541
c015,2,5,11,49589,45655,46892,46892,6600.060101917001,6603.681536478
# search time: 6600.060s
# total time: 19823.818s
c015,3,5,1,1055926,862429,1011762,1011762,600.003478472,600.180173729
c015,3,5,2,340188,318084,327725,327725,1200.0054839939999,1200.424012199
c015,3,5,3,325676,301419,311490,311490,1800.0058970619998,1800.655412346
c015,3,5,4,242090,225079,233093,233093,2400.010295043,2400.864129872
c015,3,5,5,136605,126985,130591,130591,3000.0124409990003,3001.056609376
c015,3,5,6,111929,103773,105708,105708,3600.022179421,3601.276805451
c015,3,5,7,91247,82402,83815,83815,4200.028411111,4201.503685405
c015,3,5,8,82504,73973,75579,75579,4800.028533613,4801.73462511
c015,3,5,9,70576,64024,65804,65804,5400.039204665,5402.028131988
c015,3,5,10,54669,50520,51737,51737,6000.0458195520005,6002.271740623
c015,3,5,11,50252,46465,47725,47725,6600.060663014001,6602.567183275
# search time: 6600.061s
# total time: 26427.060s
c015,4,5,1,1005646,852609,971904,971904,600.00005508,600.193055678
c015,4,5,2,338935,318216,327016,327016,1200.00047913,1200.398592398
c015,4,5,3,325383,301274,311239,311239,1800.002218576,1800.595495471
c015,4,5,4,236346,219575,226905,226905,2400.002432746,2400.783875188
c015,4,5,5,132654,123138,125957,125957,3000.007147615,3000.977554229
c015,4,5,6,110843,102820,104653,104653,3600.010972716,3601.163065035
c015,4,5,7,89967,80426,82017,82017,4200.014511289,4201.372525375
c015,4,5,8,82186,73561,75000,75000,4800.021749133,4801.62304103
c015,4,5,9,68135,62119,63713,63713,5400.022625408001,5401.891610812
c015,4,5,10,55990,51515,52913,52913,6000.027199963,6002.091890924
c015,4,5,11,47493,43877,45025,45025,6600.032790416,6602.303221515
# search time: 6600.033s
# total time: 33030.073s
