    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c026_3.json out/1593091766/results/c026_3_best.csv out/1593091766/results/c026_3_predictions.csv out/1593091766/results/c026_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 7, 7, 4, 6]), o: IntList([0, 7, 4, 6]) }
#   Datum { i: IntList([2, 2, 4, 3, 9, 0, 6, 7]), o: IntList([2, 2, 3, 9, 0, 6, 7]) }
#   Datum { i: IntList([5, 0, 4, 7, 8, 9]), o: IntList([5, 0, 7, 8, 9]) }
#   Datum { i: IntList([9, 8, 4, 1, 4, 7, 9, 3, 5, 1]), o: IntList([9, 8, 1, 4, 7, 9, 3, 5, 1]) }
#   Datum { i: IntList([1, 1, 3, 2, 2, 3, 3]), o: IntList([1, 1, 2, 2, 3, 3]) }
#   Datum { i: IntList([8, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8]) }
#   Datum { i: IntList([1, 0, 0, 1, 4, 6, 4]), o: IntList([1, 0, 1, 4, 6, 4]) }
#   Datum { i: IntList([8, 3, 9]), o: IntList([8, 3]) }
#   Datum { i: IntList([4, 2, 2, 5]), o: IntList([4, 2, 5]) }
#   Datum { i: IntList([5, 3, 9, 8, 6, 4, 7, 2, 1]), o: IntList([5, 3, 8, 6, 4, 7, 2, 1]) }
#   Datum { i: IntList([3, 9, 8, 1, 6, 2, 0, 4, 5, 7]), o: IntList([3, 9, 1, 6, 2, 0, 4, 5, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c026,0,3,1,1029399,912867,1005917,1005917,600.000454745,601.884725487
c026,0,3,2,544828,509153,524486,524486,1200.000668723,1203.009788428
c026,0,3,3,282569,261226,271500,271500,1800.001803604,1803.590864817
c026,0,3,4,219303,203274,211030,211030,2400.0118419560004,2404.155546054
c026,0,3,5,154425,141668,147835,147835,3000.0141065770003,3004.694996025
c026,0,3,6,128887,118943,122664,122664,3600.0144016450004,3605.250987265
c026,0,3,7,90596,83600,86315,86315,4200.017621446001,4206.214862303
c026,0,3,8,85536,76578,78412,78412,4800.018924214,4806.916175238
c026,0,3,9,88360,80338,83061,83061,5400.025452426001,5407.623155559
c026,0,3,10,80172,72321,74919,74919,6000.027839605001,6008.288929592
c026,0,3,11,66357,59706,61750,61750,6600.027865604001,6608.888168631
# search time: 6600.028s
# total time: 6609.174s
c026,1,3,1,1310640,1141479,1274703,1274703,600.00257645,600.396898761
c026,1,3,2,542653,508096,522652,522652,1200.0029810370002,1200.800720075
c026,1,3,3,284438,263316,273512,273512,1800.0032408250001,1801.066430292
c026,1,3,4,219777,203017,211318,211318,2400.0039194970004,2401.310040535
c026,1,3,5,153757,141446,147185,147185,3000.0070091850002,3001.570099009
c026,1,3,6,125318,113480,119038,119038,3600.008063399,3601.821730926
c026,1,3,7,91060,84092,86656,86656,4200.014412314,4202.257843072
c026,1,3,8,86409,77576,79594,79594,4800.015110296,4802.649018032
c026,1,3,9,86485,77741,81345,81345,5400.024814958,5402.992973125
c026,1,3,10,80298,72488,75002,75002,6000.030395736,6003.384979538
c026,1,3,11,66022,59442,61402,61402,6600.030774674,6603.756189518
# search time: 6600.031s
# total time: 13213.488s
c026,2,3,1,1275682,1046869,1223408,1223408,600.001177278,600.220000732
c026,2,3,2,542786,509490,523509,523509,1200.001833171,1200.504282433
c026,2,3,3,284413,262817,272940,272940,1800.002074101,1800.672015187
c026,2,3,4,219171,202895,210804,210804,2400.002815537,2400.834517715
c026,2,3,5,146011,133543,139955,139955,3000.005603316,3000.993879803
c026,2,3,6,123150,112001,117103,117103,3600.006160377,3601.163456005
c026,2,3,7,89709,82592,85415,85415,4200.0086846760005,4201.479799671
c026,2,3,8,84150,75408,77146,77146,4800.013946976001,4801.754006689
c026,2,3,9,87449,79375,82166,82166,5400.017126044,5401.955128991
c026,2,3,10,79822,72187,74718,74718,6000.026631948,6002.199535488
c026,2,3,11,66523,59647,61786,61786,6600.026689618,6602.438904377
# search time: 6600.027s
# total time: 19816.470s
c026,3,3,1,1298764,1129328,1262824,1262824,600.002508397,600.276564337
c026,3,3,2,552037,516868,531454,531454,1200.002524511,1200.513797422
c026,3,3,3,282477,261215,271353,271353,1800.0035040500002,1800.654226408
c026,3,3,4,217164,200554,208738,208738,2400.004429847,2400.790562088
c026,3,3,5,151991,139630,145238,145238,3000.005723918,3000.925693463
c026,3,3,6,125858,115506,119726,119726,3600.006088351,3601.083244455
c026,3,3,7,91299,84143,86751,86751,4200.00889433,4201.328902452
c026,3,3,8,85636,76890,78874,78874,4800.0090694049995,4801.51663191
c026,3,3,9,87452,78999,82215,82215,5400.013436558,5401.721565735
c026,3,3,10,79138,71297,73899,73899,6000.019443208999,6001.881630031
c026,3,3,11,65818,58904,61147,61147,6600.0202139289995,6602.061382967
# search time: 6600.020s
# total time: 26419.000s
c026,4,3,1,1270421,1089850,1231278,1231278,600.002177397,600.256705323
c026,4,3,2,548461,513490,528171,528171,1200.00273187,1200.4696753
c026,4,3,3,283045,262099,272131,272131,1800.0091402889998,1800.598695236
c026,4,3,4,219986,203505,211529,211529,2400.010412224,2400.719042072
c026,4,3,5,151967,139721,145482,145482,3000.01817015,3000.847426947
c026,4,3,6,125834,115280,119639,119639,3600.022356362,3600.948195697
c026,4,3,7,89001,81815,84742,84742,4200.029900876,4201.169531956
c026,4,3,8,85419,76397,78266,78266,4800.033744849,4801.352447495
c026,4,3,9,85535,77524,80513,80513,5400.033911333,5401.499300892
c026,4,3,10,80144,72416,74912,74912,6000.0414777490005,6001.661925158
c026,4,3,11,65088,58475,60456,60456,6600.045062942,6601.864671044
# search time: 6600.045s
# total time: 33021.165s
