    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c040_4.json out/1593091766/results/c040_4_best.csv out/1593091766/results/c040_4_predictions.csv out/1593091766/results/c040_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 1, 0, 0]), o: IntList([6, 1, 0, 0]) }
#   Datum { i: IntList([9, 4, 1, 3, 2, 0, 6, 8]), o: IntList([9, 4, 1, 3, 2, 0, 6, 8]) }
#   Datum { i: IntList([4, 6, 8, 4, 7]), o: IntList([4, 6, 8, 4, 7, 3]) }
#   Datum { i: IntList([1, 1, 2]), o: IntList([1, 1, 2]) }
#   Datum { i: IntList([0, 9, 0, 9]), o: IntList([0, 9, 0, 9, 9]) }
#   Datum { i: IntList([6, 6, 9, 3, 9, 6, 9, 6]), o: IntList([6, 6, 9, 3, 9, 6, 9, 6, 3]) }
#   Datum { i: IntList([0, 0, 0]), o: IntList([0, 0, 0]) }
#   Datum { i: IntList([0, 1, 2, 6, 3, 9, 5, 7, 2, 0]), o: IntList([0, 1, 2, 6, 3, 9, 5, 7, 2, 0]) }
#   Datum { i: IntList([1, 9, 2, 2, 3, 1, 4, 6, 6, 9]), o: IntList([1, 9, 2, 2, 3, 1, 4, 6, 6, 9, 9]) }
#   Datum { i: IntList([2, 9, 0, 5, 7]), o: IntList([2, 9, 0, 5, 7, 9]) }
#   Datum { i: IntList([4, 4, 7, 3, 5, 4]), o: IntList([4, 4, 7, 3, 5, 4, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c040,0,4,1,686179,561926,657715,657715,600.000130946,602.804487652
c040,0,4,2,303150,279177,291292,291292,1200.0009813830002,1204.540728717
c040,0,4,3,144184,133882,139255,139255,1800.0029615410003,1805.472369739
c040,0,4,4,94220,88525,89076,89076,2400.0047574570003,2406.920142733
c040,0,4,5,97564,90498,91652,91652,3000.0079612010004,3007.492543233
c040,0,4,6,120565,111829,112415,112415,3600.0119108360004,3608.61451702
c040,0,4,7,86536,79207,79839,79839,4200.016557264001,4209.85493834
c040,0,4,8,88145,80207,80796,80796,4800.019808548001,4810.693985193
c040,0,4,9,62640,56630,57061,57061,5400.024521789001,5411.826775884
c040,0,4,10,49479,44974,45352,45352,6000.033046995,6012.86240096
c040,0,4,11,43952,39679,39904,39904,6600.039330439,6613.766386471
# search time: 6600.039s
# total time: 6614.117s
c040,1,4,1,1080181,914113,1043573,1043573,600.002794563,600.377959774
c040,1,4,2,494653,458961,476861,476861,1200.003803074,1200.85286795
c040,1,4,3,244004,227116,236553,236553,1800.0040066249999,1801.160611783
c040,1,4,4,161894,152194,153339,153339,2400.0062953359998,2401.603329097
c040,1,4,5,156798,145489,147666,147666,3000.0080243429998,3001.967709673
c040,1,4,6,121345,112498,113149,113149,3600.010653374,3602.302961913
c040,1,4,7,87153,79871,80548,80548,4200.012456798,4202.708138288
c040,1,4,8,87542,79941,80560,80560,4800.017646766,4803.076914721
c040,1,4,9,62246,56876,57413,57413,5400.020748985,5403.493715981
c040,1,4,10,48247,44122,44544,44544,6000.025309943,6003.863287324
c040,1,4,11,43532,39398,39608,39608,6600.0558437360005,6604.301978049
# search time: 6600.056s
# total time: 13219.254s
c040,2,4,1,1105825,937733,1068589,1068589,600.002489083,600.293017707
c040,2,4,2,483526,448020,466121,466121,1200.004353911,1200.608101143
c040,2,4,3,237423,221303,230009,230009,1800.010614888,1800.799014071
c040,2,4,4,162881,152606,153861,153861,2400.0122796690002,2401.065776878
c040,2,4,5,160417,149046,150977,150977,3000.0132210260003,3001.246789071
c040,2,4,6,121656,112900,113634,113634,3600.0139780390004,3601.491792528
c040,2,4,7,86795,79757,80452,80452,4200.0150374,4201.746187965
c040,2,4,8,87459,79941,80552,80552,4800.019467883,4801.975956406
c040,2,4,9,62359,56631,57130,57130,5400.029156873,5402.261183175
c040,2,4,10,48648,44525,44975,44975,6000.032637508,6002.533033851
c040,2,4,11,43513,39485,39712,39712,6600.038264818,6602.913870173
# search time: 6600.038s
# total time: 19822.791s
c040,3,4,1,1124793,919514,1077968,1077968,600.008712676,600.196312364
c040,3,4,2,492503,456817,474351,474351,1200.010105827,1200.433895685
c040,3,4,3,243682,226119,235921,235921,1800.0131432419998,1800.600333947
c040,3,4,4,162745,153121,154290,154290,2400.014335969,2400.791396316
c040,3,4,5,160395,149777,151890,151890,3000.016814676,3000.943622724
c040,3,4,6,124341,115528,116367,116367,3600.0191931920003,3601.12393954
c040,3,4,7,88151,81117,81796,81796,4200.022918636,4201.323856672
c040,3,4,8,85518,77888,78458,78458,4800.022919505001,4801.5197973369995
c040,3,4,9,63284,57920,58419,58419,5400.043289307001,5401.708817066
c040,3,4,10,49091,44526,44958,44958,6000.044774234001,6001.902852737
c040,3,4,11,45175,41267,41547,41547,6600.048352093001,6602.091392029
# search time: 6600.048s
# total time: 26425.602s
c040,4,4,1,1097718,898361,1051996,1051996,600.000772716,600.175250654
c040,4,4,2,498206,461968,479720,479720,1200.005813985,1200.395176402
c040,4,4,3,242343,225354,234559,234559,1800.012457888,1800.536258692
c040,4,4,4,158968,149187,150329,150329,2400.017619566,2400.699558728
c040,4,4,5,155059,144099,146282,146282,3000.021943269,3000.829093572
c040,4,4,6,118796,110243,110887,110887,3600.025461057,3600.997155644
c040,4,4,7,87179,80110,80772,80772,4200.028993696,4201.161530731
c040,4,4,8,86073,78514,79084,79084,4800.034094697,4801.304640533
c040,4,4,9,62125,56139,56598,56598,5400.038273888,5401.485607347
c040,4,4,10,31442,28543,28845,28845,6000.066168497,6001.686175929
c040,4,4,11,26634,24671,24901,24901,6600.071183251,6601.775954943
# search time: 6600.071s
# total time: 33027.892s
