    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c051_4.json out/1593091766/results/c051_4_best.csv out/1593091766/results/c051_4_predictions.csv out/1593091766/results/c051_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 1]), o: IntList([4, 4, 4, 4, 4, 4, 1]) }
#   Datum { i: IntList([8]), o: IntList([8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([2, 6, 4, 0, 8, 7, 0, 0, 9]), o: IntList([2, 2, 2, 2, 2, 2, 6, 4, 0, 8, 7, 0, 0, 9]) }
#   Datum { i: IntList([1, 9, 3, 8, 8, 1, 3, 3, 3]), o: IntList([1, 1, 1, 1, 1, 1, 9, 3, 8, 8, 1, 3, 3, 3]) }
#   Datum { i: IntList([5, 4, 4, 4, 2, 2, 5]), o: IntList([5, 5, 5, 5, 5, 5, 4, 4, 4, 2, 2, 5]) }
#   Datum { i: IntList([3, 3, 2, 6, 4]), o: IntList([3, 3, 3, 3, 3, 3, 3, 2, 6, 4]) }
#   Datum { i: IntList([5, 7, 0, 7, 3, 5, 8]), o: IntList([5, 5, 5, 5, 5, 5, 7, 0, 7, 3, 5, 8]) }
#   Datum { i: IntList([2, 4, 5, 1, 3, 6, 8, 0]), o: IntList([2, 2, 2, 2, 2, 2, 4, 5, 1, 3, 6, 8, 0]) }
#   Datum { i: IntList([6, 7, 6, 6, 7, 7]), o: IntList([6, 6, 6, 6, 6, 6, 7, 6, 6, 7, 7]) }
#   Datum { i: IntList([0, 1, 1]), o: IntList([0, 0, 0, 0, 0, 0, 1, 1]) }
#   Datum { i: IntList([9, 9, 9, 9]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c051,0,4,1,739763,640459,718299,718299,600.007468129,603.037000062
c051,0,4,2,221633,202151,208251,208251,1200.0075595970002,1204.678607512
c051,0,4,3,149960,139527,144226,144226,1800.0080706760002,1805.531699894
c051,0,4,4,76644,69778,72169,72169,2400.0138454280004,2406.250607545
c051,0,4,5,49432,44640,46403,46403,3000.0183568960006,3007.172983734
c051,0,4,6,38063,34061,35356,35356,3600.027706940001,3607.970324284
c051,0,4,7,31011,27866,28745,28745,4200.044230714001,4208.957500675
c051,0,4,8,28572,25343,26152,26152,4800.046479092001,4809.83862006
c051,0,4,9,23762,21080,21718,21718,5400.060729885001,5410.698682673
c051,0,4,10,20850,18594,19152,19152,6000.133462212001,6011.793222664
c051,0,4,11,19707,17583,18118,18118,6600.1399190440015,6612.585700615
# search time: 6600.140s
# total time: 6612.778s
c051,1,4,1,720929,589949,690769,690769,600.000317501,600.356268236
c051,1,4,2,226719,207166,213320,213320,1200.0007475490002,1201.034262243
c051,1,4,3,150521,140191,144822,144822,1800.002526705,1801.438458296
c051,1,4,4,75911,67734,71504,71504,2400.010002304,2401.800327719
c051,1,4,5,50193,45622,47103,47103,3000.015324782,3002.329850101
c051,1,4,6,38161,34212,35515,35515,3600.0202830549997,3602.943191892
c051,1,4,7,31134,27907,28847,28847,4200.02514375,4203.578074858
c051,1,4,8,28358,25350,26110,26110,4800.045979042,4804.215968263
c051,1,4,9,23159,20755,21444,21444,5400.062966589,5404.698256989
c051,1,4,10,20762,18569,19100,19100,6000.082884261,6005.137707165
c051,1,4,11,19293,17435,17926,17926,6600.1000007699995,6605.682276326
# search time: 6600.100s
# total time: 13218.849s
c051,2,4,1,701449,595651,678121,678121,600.002266793,600.327864574
c051,2,4,2,223813,204512,210531,210531,1200.003880361,1200.777608983
c051,2,4,3,147677,137228,142041,142041,1800.008174309,1801.057130462
c051,2,4,4,77404,70657,72988,72988,2400.010652932,2401.341101146
c051,2,4,5,50503,45752,47343,47343,3000.0278689280003,3001.646645427
c051,2,4,6,37873,33403,35211,35211,3600.0429901960006,3601.964747725
c051,2,4,7,31412,28192,29100,29100,4200.048368508001,4202.363218698
c051,2,4,8,27976,24923,25697,25697,4800.059419643001,4802.654672886
c051,2,4,9,23538,20964,21609,21609,5400.065840539001,5402.942547422
c051,2,4,10,20616,18495,19020,19020,6000.0862525950015,6003.452157283
c051,2,4,11,19526,17437,17984,17984,6600.122603464001,6603.837450216
# search time: 6600.123s
# total time: 19822.991s
c051,3,4,1,732270,635368,711304,711304,600.002412543,600.300753541
c051,3,4,2,226238,206851,212736,212736,1200.004514604,1200.647256092
c051,3,4,3,148455,137818,142612,142612,1800.0063925559998,1800.847806879
c051,3,4,4,77825,71212,73335,73335,2400.009207621,2401.037480563
c051,3,4,5,49446,44932,46364,46364,3000.0226489429997,3001.220970183
c051,3,4,6,37722,33888,35123,35123,3600.0260353999997,3601.525142781
c051,3,4,7,30543,27329,28320,28320,4200.037811718,4201.792393522
c051,3,4,8,27799,24760,25573,25573,4800.039415372999,4802.025109886
c051,3,4,9,23333,20767,21370,21370,5400.047148309,5402.342258764
c051,3,4,10,20811,18556,19109,19109,6000.057999799,6002.601394456
c051,3,4,11,19113,17183,17633,17633,6600.069212356,6602.883550417
# search time: 6600.069s
# total time: 26426.060s
c051,4,4,1,699377,570724,670156,670156,600.001114309,600.191903569
c051,4,4,2,224317,204784,210865,210865,1200.001428086,1200.471366093
c051,4,4,3,143202,132704,137855,137855,1800.001866496,1800.640671121
c051,4,4,4,77177,71113,73451,73451,2400.004309512,2400.779318576
c051,4,4,5,49885,45179,46716,46716,3000.005104993,3000.977328476
c051,4,4,6,38073,34164,35420,35420,3600.0173665169996,3601.123081716
c051,4,4,7,52953,47558,49138,49138,4200.023155770999,4201.377098358
c051,4,4,8,29486,26328,27124,27124,4800.0377221789995,4801.624487256
c051,4,4,9,23553,20990,21669,21669,5400.042373787999,5401.777484151
c051,4,4,10,20787,18603,19128,19128,6000.047277700999,6001.851236495
c051,4,4,11,33739,30145,30977,30977,6600.054853524999,6602.052191926
# search time: 6600.055s
# total time: 33028.556s
