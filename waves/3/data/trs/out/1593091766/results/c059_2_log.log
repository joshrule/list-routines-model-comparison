    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c059_2.json out/1593091766/results/c059_2_best.csv out/1593091766/results/c059_2_predictions.csv out/1593091766/results/c059_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 2, 8, 8, 8, 8, 2, 5]), o: IntList([5, 2, 8, 5, 8, 8, 2, 8]) }
#   Datum { i: IntList([3, 1, 1, 5, 1, 0, 7, 0, 7]), o: IntList([3, 1, 1, 0, 1, 0, 7, 5, 7]) }
#   Datum { i: IntList([0, 5, 3, 8, 1, 9, 4, 6, 2]), o: IntList([0, 5, 3, 6, 1, 9, 4, 8, 2]) }
#   Datum { i: IntList([6, 7, 2, 6, 5, 4, 4, 0]), o: IntList([6, 7, 2, 0, 5, 4, 4, 6]) }
#   Datum { i: IntList([9, 5, 5, 9, 3, 7, 6, 3, 9, 3]), o: IntList([9, 5, 5, 3, 3, 7, 6, 9, 9, 3]) }
#   Datum { i: IntList([8, 3, 9, 2, 7, 4, 6, 3]), o: IntList([8, 3, 9, 3, 7, 4, 6, 2]) }
#   Datum { i: IntList([7, 3, 4, 0, 1, 6, 8, 1, 5]), o: IntList([7, 3, 4, 1, 1, 6, 8, 0, 5]) }
#   Datum { i: IntList([5, 2, 4, 3, 7, 0, 8, 6]), o: IntList([5, 2, 4, 6, 7, 0, 8, 3]) }
#   Datum { i: IntList([8, 9, 9, 6, 5, 2, 4, 0, 0]), o: IntList([8, 9, 9, 0, 5, 2, 4, 6, 0]) }
#   Datum { i: IntList([6, 1, 8, 5, 2, 3, 7, 9, 0, 4]), o: IntList([6, 1, 8, 9, 2, 3, 7, 5, 0, 4]) }
#   Datum { i: IntList([1, 0, 7, 8, 6, 4, 2, 6, 1, 9]), o: IntList([1, 0, 7, 6, 6, 4, 2, 8, 1, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c059,0,2,1,1084793,943728,1054708,1054708,600.0003741,602.052124222
c059,0,2,2,285230,267463,275020,275020,1200.0015651990002,1203.3268376
c059,0,2,3,158793,146295,149447,149447,1800.0021174880003,1804.304462411
c059,0,2,4,119581,109518,113581,113581,2400.0026732580004,2405.052688849
c059,0,2,5,95951,87863,91041,91041,3000.0086999640002,3005.771143349
c059,0,2,6,54687,50805,51999,51999,3600.022106623,3607.299322318
c059,0,2,7,45388,42073,43137,43137,4200.031509320001,4208.899614638
c059,0,2,8,36343,33771,34475,34475,4800.034173189,4810.365041249
c059,0,2,9,38952,35415,36226,36226,5400.0394353950005,5411.784373861
c059,0,2,10,33279,30068,30875,30875,6000.053930784001,6012.936102786
c059,0,2,11,28135,25473,26089,26089,6600.058999615001,6614.226924998
# search time: 6600.059s
# total time: 6614.474s
c059,1,2,1,1040482,849001,997143,997143,600.006528794,600.26110571
c059,1,2,2,272652,255445,262895,262895,1200.0075633669999,1200.734531842
c059,1,2,3,158954,146335,149451,149451,1800.0101318859997,1801.16474344
c059,1,2,4,120383,110413,114566,114566,2400.010910262,2401.552832817
c059,1,2,5,97547,89777,92589,92589,3000.0162136669996,3001.950249688
c059,1,2,6,53642,49791,50908,50908,3600.0208135979997,3602.772610614
c059,1,2,7,44532,41289,42329,42329,4200.046858569,4203.565191755
c059,1,2,8,35636,32900,33739,33739,4800.048896091999,4804.286100335
c059,1,2,9,38171,34579,35445,35445,5400.054573303999,5404.965490284
c059,1,2,10,33039,29933,30716,30716,6000.0997229979985,6005.64888558
c059,1,2,11,28496,25920,26600,26600,6600.106353070998,6606.536090732
# search time: 6600.106s
# total time: 13221.341s
c059,2,2,1,1104238,950753,1070977,1070977,600.00017945,600.274800822
c059,2,2,2,287753,269287,277189,277189,1200.000502768,1200.571563522
c059,2,2,3,153354,141156,143838,143838,1800.003099391,1800.884468081
c059,2,2,4,122107,112543,115962,115962,2400.003986013,2401.130122865
c059,2,2,5,94165,85960,89421,89421,3000.015663403,3001.415255104
c059,2,2,6,53833,49835,51038,51038,3600.031221743,3601.940539313
c059,2,2,7,45402,42198,43150,43150,4200.045076582001,4202.440561512
c059,2,2,8,35998,33296,34046,34046,4800.046959835001,4803.135374801
c059,2,2,9,37929,34342,35208,35208,5400.065399626001,5403.618912228
c059,2,2,10,32762,29738,30530,30530,6000.076065653001,6003.941202668
c059,2,2,11,27861,25213,25813,25813,6600.082380820001,6604.425790447
# search time: 6600.082s
# total time: 19826.218s
c059,3,2,1,1086619,946290,1056432,1056432,600.006425615,600.248618089
c059,3,2,2,284154,266293,273911,273911,1200.0083022879999,1200.516703133
c059,3,2,3,158018,145372,148572,148572,1800.011988492,1800.73849655
c059,3,2,4,118675,108562,112506,112506,2400.022942905,2401.062461272
c059,3,2,5,94240,86447,89258,89258,3000.023203067,3001.241139883
c059,3,2,6,53289,49361,50575,50575,3600.027026011,3601.612231123
c059,3,2,7,45058,41837,42843,42843,4200.0427043790005,4201.995925553
c059,3,2,8,35447,32810,33482,33482,4800.0513869510005,4802.298636171
c059,3,2,9,38363,34786,35640,35640,5400.058945162001,5402.608681916
c059,3,2,10,32923,29846,30604,30604,6000.060377645001,6002.908117783
c059,3,2,11,28394,25669,26373,26373,6600.082448792001,6603.207106271
# search time: 6600.082s
# total time: 26429.768s
c059,4,2,1,1074409,878428,1029477,1029477,600.000124794,600.180743955
c059,4,2,2,285139,267153,274686,274686,1200.001639629,1200.390062531
c059,4,2,3,153027,141333,143918,143918,1800.004774852,1800.59852625
c059,4,2,4,121449,111538,115381,115381,2400.0065390090003,2400.753407777
c059,4,2,5,94220,86332,89538,89538,3000.0071367250002,3000.897536928
c059,4,2,6,54328,50360,51527,51527,3600.0163504340003,3601.209476122
c059,4,2,7,44852,41666,42652,42652,4200.029685750001,4201.505132182
c059,4,2,8,35691,33058,33890,33890,4800.03740247,4801.937541146
c059,4,2,9,37370,33939,34684,34684,5400.038853931001,5402.205391953
c059,4,2,10,33212,30100,30867,30867,6000.046939836001,6002.4111161
c059,4,2,11,27370,24792,25477,25477,6600.063943583001,6602.71903695
# search time: 6600.064s
# total time: 33032.797s
