    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c015_3.json out/1593091766/results/c015_3_best.csv out/1593091766/results/c015_3_predictions.csv out/1593091766/results/c015_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4, 2, 7, 7, 3, 8]), o: IntList([2, 7, 7, 3]) }
#   Datum { i: IntList([1, 3, 9, 3, 3, 1, 3, 3, 3, 9]), o: IntList([9, 3, 3]) }
#   Datum { i: IntList([2, 8, 8, 6, 8, 6, 6, 2, 8]), o: IntList([6, 8, 6, 6, 2, 8]) }
#   Datum { i: IntList([0, 9, 2, 6, 2, 0, 8, 5, 6]), o: IntList([6]) }
#   Datum { i: IntList([2, 8, 6, 1, 0, 9, 8, 7, 4, 1]), o: IntList([1, 0, 9, 8, 7, 4, 1]) }
#   Datum { i: IntList([7, 7, 7, 7, 7, 7, 7]), o: IntList([]) }
#   Datum { i: IntList([6, 8, 1, 3, 2, 7, 5, 7, 1, 5]), o: IntList([7, 1, 5]) }
#   Datum { i: IntList([4, 5, 0, 0, 6, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([3, 3, 0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 5, 0, 8, 0, 3, 3, 0, 2]), o: IntList([0, 8, 0, 3, 3]) }
#   Datum { i: IntList([1, 8, 1, 9, 1, 2, 2, 8, 2, 1]), o: IntList([1, 9, 1, 2, 2, 8, 2, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c015,0,3,1,1249740,1023022,1198062,1198062,600.000839971,601.752466931
c015,0,3,2,510515,478954,494168,494168,1200.0014538740002,1202.936062604
c015,0,3,3,323942,305995,308618,308618,1800.0030930470002,1804.027299404
c015,0,3,4,206987,194504,195390,195390,2400.0036208280003,2404.904651753
c015,0,3,5,168421,153419,154187,154187,3000.006101453,3005.853712777
c015,0,3,6,111496,100369,101007,101007,3600.009064791,3606.865384587
c015,0,3,7,95288,87213,89845,89845,4200.0146869830005,4207.973603675
c015,0,3,8,78701,72829,74449,74449,4800.022477016,4809.02134272
c015,0,3,9,74146,68444,69864,69864,5400.026320769,5410.124347003
c015,0,3,10,65680,60750,62195,62195,6000.041394447,6011.273142475
c015,0,3,11,52604,48539,49713,49713,6600.041964068,6612.437975251
# search time: 6600.042s
# total time: 6612.813s
c015,1,3,1,1239914,1019024,1189448,1189448,600.000041076,600.258660487
c015,1,3,2,502948,471582,487037,487037,1200.0001876699998,1200.705868775
c015,1,3,3,324251,305905,308642,308642,1800.0011237499998,1801.156951827
c015,1,3,4,208427,195810,196582,196582,2400.0035093099996,2401.599068514
c015,1,3,5,167236,152289,153209,153209,3000.0063077029995,3002.034922582
c015,1,3,6,111360,100257,100897,100897,3600.0075574389994,3602.592076527
c015,1,3,7,90768,83394,85722,85722,4200.014874306999,4203.184466148
c015,1,3,8,74724,69090,70453,70453,4800.023803464,4803.784631899
c015,1,3,9,76033,70552,72257,72257,5400.027099112,5404.175941678
c015,1,3,10,61076,56353,57627,57627,6000.038725904999,6004.790519684
c015,1,3,11,54679,50326,51562,51562,6600.045546353,6605.407877765
# search time: 6600.046s
# total time: 13218.873s
c015,2,3,1,1261518,1035116,1209739,1209739,600.008106169,600.227578837
c015,2,3,2,518628,486072,501341,501341,1200.009127549,1200.540500468
c015,2,3,3,322744,304737,307348,307348,1800.010609836,1800.830262756
c015,2,3,4,208161,195559,196261,196261,2400.0116057289997,2401.082588931
c015,2,3,5,167613,152735,153502,153502,3000.0143392699997,3001.392090087
c015,2,3,6,111633,100512,101140,101140,3600.0150740199997,3601.729751748
c015,2,3,7,94056,86262,88898,88898,4200.029018773,4202.100293362
c015,2,3,8,78288,72307,73881,73881,4800.0363961699995,4802.552180554
c015,2,3,9,74954,69502,71119,71119,5400.040590391,5402.905511614
c015,2,3,10,66097,60921,62426,62426,6000.0512061459995,6003.354514346
c015,2,3,11,55168,50975,52270,52270,6600.0562054249995,6603.827193678
# search time: 6600.056s
# total time: 19823.579s
c015,3,3,1,1215383,999413,1165475,1165475,600.002643744,600.198403721
c015,3,3,2,511081,479733,494825,494825,1200.0030423970002,1200.448457727
c015,3,3,3,322841,304523,307290,307290,1800.0032770110001,1800.706740536
c015,3,3,4,204708,192440,193304,193304,2400.00366417,2400.894684548
c015,3,3,5,165691,151082,151832,151832,3000.005931875,3001.091759631
c015,3,3,6,107440,96855,97440,97440,3600.010434919,3601.35882723
c015,3,3,7,94316,86525,89110,89110,4200.016766777,4201.637224403
c015,3,3,8,77837,71921,73547,73547,4800.0360188,4802.00432696
c015,3,3,9,75790,70266,71971,71971,5400.036246585,5402.268236109
c015,3,3,10,65585,60347,61860,61860,6000.041914182,6002.557392979
c015,3,3,11,52108,48178,49285,49285,6600.047483177001,6602.887738721
# search time: 6600.047s
# total time: 26427.100s
c015,4,3,1,1241490,1123514,1219419,1219419,600.000083988,600.274527707
c015,4,3,2,505112,473088,488769,488769,1200.0004180770002,1200.477319353
c015,4,3,3,322647,304694,307454,307454,1800.0026732310002,1800.687570103
c015,4,3,4,205767,193140,193859,193859,2400.002939287,2400.853686741
c015,4,3,5,165292,150549,151421,151421,3000.005841487,3001.035060788
c015,4,3,6,111830,100727,101409,101409,3600.006341893,3601.259494316
c015,4,3,7,91549,83973,86365,86365,4200.006863754,4201.493910304
c015,4,3,8,78110,72255,73832,73832,4800.012120803,4801.716429885
c015,4,3,9,74928,69454,70941,70941,5400.021627503,5401.93774385
c015,4,3,10,61430,56490,57768,57768,6000.023192127,6002.208314067
c015,4,3,11,52221,48176,49359,49359,6600.027064022999,6602.51057195
# search time: 6600.027s
# total time: 33029.985s
