    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c022_1.json out/1593091766/results/c022_1_best.csv out/1593091766/results/c022_1_predictions.csv out/1593091766/results/c022_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 5, 3, 3]), o: IntList([6, 5, 5, 3, 3]) }
#   Datum { i: IntList([8, 4, 4, 4, 8, 4]), o: IntList([8, 5, 4, 4, 4, 8, 4]) }
#   Datum { i: IntList([1, 1]), o: IntList([1, 5, 1]) }
#   Datum { i: IntList([0, 2, 6]), o: IntList([0, 5, 2, 6]) }
#   Datum { i: IntList([1, 9, 0, 9, 1]), o: IntList([1, 5, 9, 0, 9, 1]) }
#   Datum { i: IntList([1, 7, 3, 0, 1, 2, 1, 3, 0, 3]), o: IntList([1, 5, 7, 3, 0, 1, 2, 1, 3, 0, 3]) }
#   Datum { i: IntList([7, 6, 1, 9, 6, 8, 3, 6]), o: IntList([7, 5, 6, 1, 9, 6, 8, 3, 6]) }
#   Datum { i: IntList([7, 4, 3, 1, 2, 1, 8]), o: IntList([7, 5, 4, 3, 1, 2, 1, 8]) }
#   Datum { i: IntList([6, 4, 9, 5, 2, 7, 8, 2, 4]), o: IntList([6, 5, 4, 9, 5, 2, 7, 8, 2, 4]) }
#   Datum { i: IntList([6, 0, 2, 0, 4, 8, 1, 7, 5, 3]), o: IntList([6, 5, 0, 2, 0, 4, 8, 1, 7, 5, 3]) }
#   Datum { i: IntList([9, 8, 6, 1, 5, 1, 4, 4, 3, 2]), o: IntList([9, 5, 8, 6, 1, 5, 1, 4, 4, 3, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c022,0,1,1,1299335,1065241,1245731,1245731,600.002480092,601.76654298
c022,0,1,2,486419,455933,468511,468511,1200.0028316789999,1202.735572624
c022,0,1,3,281289,258961,265403,265403,1800.004008235,1803.577876702
c022,0,1,4,248068,230822,239507,239507,2400.004802075,2403.990420588
c022,0,1,5,219467,204400,211941,211941,3000.006267171,3004.368866678
c022,0,1,6,158323,145926,150962,150962,3600.010132638,3604.813788755
c022,0,1,7,107404,97589,100492,100492,4200.010982879,4205.318780404
c022,0,1,8,86999,78909,81233,81233,4800.020843265,4805.863572834
c022,0,1,9,74608,67171,69280,69280,5400.022787157,5406.391833158
c022,0,1,10,60644,54480,56190,56190,6000.029583842,6006.953481492
c022,0,1,11,50208,44963,46352,46352,6600.037771609,6607.529280535
# search time: 6600.038s
# total time: 6607.814s
c022,1,1,1,1230886,1042961,1189489,1189489,600.000348131,600.300965635
c022,1,1,2,500251,468565,481350,481350,1200.001192893,1200.66722209
c022,1,1,3,286817,264588,271357,271357,1800.001565079,1800.980757261
c022,1,1,4,236777,219360,229339,229339,2400.009245357,2401.174397251
c022,1,1,5,211695,197700,204622,204622,3000.011042535,3001.350642187
c022,1,1,6,159837,147581,152275,152275,3600.012738857,3601.596866399
c022,1,1,7,109971,100126,102934,102934,4200.014311903,4201.881550357
c022,1,1,8,88738,80118,82751,82751,4800.017760264,4802.165681966
c022,1,1,9,75885,68590,70571,70571,5400.020496865,5402.45266848
c022,1,1,10,61359,54863,56696,56696,6000.0262968649995,6002.730521372
c022,1,1,11,50158,45060,46459,46459,6600.031559470999,6603.034633821
# search time: 6600.032s
# total time: 13211.348s
c022,2,1,1,1311868,1144355,1276354,1276354,600.004793149,600.348442994
c022,2,1,2,496869,464574,478052,478052,1200.00527161,1200.608093422
c022,2,1,3,289124,266851,273525,273525,1800.0067329459998,1800.841703529
c022,2,1,4,255065,238397,246346,246346,2400.00726343,2400.997914791
c022,2,1,5,212159,197315,205049,205049,3000.0094082,3001.154475692
c022,2,1,6,159766,147236,152324,152324,3600.011933242,3601.330132981
c022,2,1,7,109878,99837,102720,102720,4200.023210878,4201.518510674
c022,2,1,8,88133,79337,82168,82168,4800.024056793,4801.698028552
c022,2,1,9,74786,67388,69511,69511,5400.024754585001,5401.920597994
c022,2,1,10,61578,55460,57163,57163,6000.026146148,6002.124301456
c022,2,1,11,49592,44717,45951,45951,6600.027157154001,6602.331095034
# search time: 6600.027s
# total time: 19814.075s
c022,3,1,1,1287340,1058188,1235015,1235015,600.000756297,600.203010345
c022,3,1,2,495074,464916,477131,477131,1200.006521395,1200.416316149
c022,3,1,3,288956,266516,273312,273312,1800.007698207,1800.586608571
c022,3,1,4,237105,219414,230195,230195,2400.009270599,2400.703633786
c022,3,1,5,219745,205944,212375,212375,3000.010979712,3000.826841182
c022,3,1,6,161501,149290,154040,154040,3600.012841986,3600.96109153
c022,3,1,7,108689,98679,101729,101729,4200.017131001,4201.11947592
c022,3,1,8,88353,79782,82363,82363,4800.02318193,4801.243899945
c022,3,1,9,74891,67466,69446,69446,5400.029082786999,5401.393815499
c022,3,1,10,61055,54883,56504,56504,6000.034272278999,6001.504371471
c022,3,1,11,50619,45474,46829,46829,6600.038965577999,6601.630109181
# search time: 6600.039s
# total time: 26416.267s
c022,4,1,1,1242670,1016404,1191432,1191432,600.000376027,600.174367422
c022,4,1,2,488388,459151,471187,471187,1200.0007584710002,1200.359825751
c022,4,1,3,284525,262298,268774,268774,1800.0103058610002,1800.527001723
c022,4,1,4,253388,236117,244689,244689,2400.011868134,2400.626627055
c022,4,1,5,214913,200072,207544,207544,3000.0202465849998,3000.73611027
c022,4,1,6,159230,146619,151658,151658,3600.023949565,3600.851261672
c022,4,1,7,109406,99343,102284,102284,4200.024199695999,4200.958735754
c022,4,1,8,88715,80309,82801,82801,4800.028528268,4801.063059522
c022,4,1,9,74942,67486,69658,69658,5400.035584137,5401.184501043
c022,4,1,10,61122,55041,56750,56750,6000.044764078,6001.307482278
c022,4,1,11,50429,45373,46651,46651,6600.049425232,6601.434032063
# search time: 6600.049s
# total time: 33018.174s
