    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c021_4.json out/1593091766/results/c021_4_best.csv out/1593091766/results/c021_4_predictions.csv out/1593091766/results/c021_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 4]), o: IntList([7, 8, 4]) }
#   Datum { i: IntList([9, 2, 1, 9, 3, 3, 1, 8, 9, 2]), o: IntList([9, 8, 2, 1, 9, 3, 3, 1, 8, 9, 2]) }
#   Datum { i: IntList([2, 9, 1, 7, 4, 6, 0]), o: IntList([2, 8, 9, 1, 7, 4, 6, 0]) }
#   Datum { i: IntList([5, 5, 5, 5, 5, 5, 5, 5]), o: IntList([5, 8, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([0, 2, 3]), o: IntList([0, 8, 2, 3]) }
#   Datum { i: IntList([4, 9, 5, 1, 7, 3]), o: IntList([4, 8, 9, 5, 1, 7, 3]) }
#   Datum { i: IntList([1, 6, 9, 3]), o: IntList([1, 8, 6, 9, 3]) }
#   Datum { i: IntList([7, 9, 1, 2, 6, 3, 0, 4, 7, 5]), o: IntList([7, 8, 9, 1, 2, 6, 3, 0, 4, 7, 5]) }
#   Datum { i: IntList([0, 8, 6, 4, 0]), o: IntList([0, 8, 8, 6, 4, 0]) }
#   Datum { i: IntList([6, 6, 0, 5, 2, 6, 0, 3, 2]), o: IntList([6, 8, 6, 0, 5, 2, 6, 0, 3, 2]) }
#   Datum { i: IntList([1, 8, 1, 1, 6, 2, 1, 4, 4, 3]), o: IntList([1, 8, 8, 1, 1, 6, 2, 1, 4, 4, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c021,0,4,1,737671,631081,714391,714391,600.001114237,603.065464069
c021,0,4,2,348546,326227,336023,336023,1200.003888617,1204.485875213
c021,0,4,3,121324,111678,116402,116402,1800.0107007410002,1805.128878272
c021,0,4,4,76699,71482,73432,73432,2400.011433723,2406.403242923
c021,0,4,5,56941,52371,53941,53941,3000.0119512190004,3007.58781863
c021,0,4,6,51717,47586,49028,49028,3600.0260355080004,3608.881099596
c021,0,4,7,42215,38934,40073,40073,4200.03995862,4210.098437626
c021,0,4,8,37379,34443,35492,35492,4800.048373796,4811.171800663
c021,0,4,9,33778,30575,31629,31629,5400.0560865610005,5412.238829266
c021,0,4,10,30925,27977,28931,28931,6000.073479335,6013.243244372
c021,0,4,11,25633,23278,24029,24029,6600.086220241,6614.32357888
# search time: 6600.086s
# total time: 6614.598s
c021,1,4,1,726702,623998,704338,704338,600.004261514,600.431282357
c021,1,4,2,406495,381780,392476,392476,1200.004875833,1200.821863672
c021,1,4,3,205331,189714,197448,197448,1800.0066079849998,1801.096029191
c021,1,4,4,128508,120277,123415,123415,2400.0124191679997,2401.604295553
c021,1,4,5,93310,86491,89019,89019,3000.017443931,3002.212576331
c021,1,4,6,87831,80653,83342,83342,3600.023511332,3602.715198179
c021,1,4,7,72869,66686,68959,68959,4200.023697069,4203.29245896
c021,1,4,8,66915,61769,63448,63448,4800.024028824,4803.786818362
c021,1,4,9,58481,53275,54989,54989,5400.029504853001,5404.279875644
c021,1,4,10,53180,48238,49928,49928,6000.0405608030005,6004.74900157
c021,1,4,11,44272,40387,41637,41637,6600.060968693,6605.280752028
# search time: 6600.061s
# total time: 13220.086s
c021,2,4,1,1209475,1052195,1175631,1175631,600.001817274,600.336510302
c021,2,4,2,548890,516792,531324,531324,1200.002334643,1200.855424961
c021,2,4,3,123546,114231,118350,118350,1800.002958668,1801.032930008
c021,2,4,4,76527,70877,72970,72970,2400.007529467,2401.294427387
c021,2,4,5,55605,51273,52854,52854,3000.0112968430003,3001.712329873
c021,2,4,6,52440,47874,49530,49530,3600.0192509330004,3601.982574391
c021,2,4,7,42704,39374,40471,40471,4200.028777659,4202.323826099
c021,2,4,8,39722,36722,37739,37739,4800.052015565,4802.663401547
c021,2,4,9,33949,30661,31777,31777,5400.060779908,5403.012981741
c021,2,4,10,31069,28062,29015,29015,6000.082637158,6003.316453034
c021,2,4,11,25555,23325,24049,24049,6600.0955094129995,6603.751061588
# search time: 6600.096s
# total time: 19824.247s
c021,3,4,1,729893,629658,708083,708083,600.001315375,600.257137226
c021,3,4,2,361537,338489,348451,348451,1200.008329614,1200.434874149
c021,3,4,3,204441,189442,197051,197051,1800.0142292750002,1800.579778879
c021,3,4,4,126900,118405,121765,121765,2400.0153434970002,2400.796218792
c021,3,4,5,96028,89007,91457,91457,3000.0191602860004,3001.037971793
c021,3,4,6,88283,81386,83805,83805,3600.0201418220004,3601.28646169
c021,3,4,7,71393,65696,67874,67874,4200.027266612,4201.611371613
c021,3,4,8,65981,60766,62531,62531,4800.03043798,4801.857039428
c021,3,4,9,58119,52808,54553,54553,5400.037214676,5402.035559419
c021,3,4,10,53055,48085,49762,49762,6000.03821467,6002.230492421
c021,3,4,11,44895,40804,42234,42234,6600.047036133001,6602.453168132
# search time: 6600.047s
# total time: 26427.151s
c021,4,4,1,1185256,1033014,1153014,1153014,600.000251665,600.261283435
c021,4,4,2,569864,536583,551011,551011,1200.000304662,1200.504615556
c021,4,4,3,208077,192910,199854,199854,1800.0023249229998,1800.635030362
c021,4,4,4,125732,117336,120674,120674,2400.0037651079997,2400.829828361
c021,4,4,5,93384,86489,89185,89185,3000.006468054,3001.021855391
c021,4,4,6,86160,79650,82044,82044,3600.015769101,3601.181225785
c021,4,4,7,71740,66267,68249,68249,4200.028602513,4201.391536574
c021,4,4,8,65887,60877,62617,62617,4800.029322766,4801.605756068
c021,4,4,9,57953,52358,54333,54333,5400.036019338,5401.741727023
c021,4,4,10,52825,47826,49497,49497,6000.036133464,6001.887213027
c021,4,4,11,44248,39836,41522,41522,6600.038485358,6602.05694138
# search time: 6600.038s
# total time: 33029.463s
