    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.70s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c005_4.json out/1593091766/results/c005_4_best.csv out/1593091766/results/c005_4_predictions.csv out/1593091766/results/c005_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 0, 0, 9, 6]), o: IntList([9]) }
#   Datum { i: IntList([3, 2, 8, 6]), o: IntList([6]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2]) }
#   Datum { i: IntList([1, 7]), o: IntList([7]) }
#   Datum { i: IntList([3, 5, 8, 1, 2]), o: IntList([1]) }
#   Datum { i: IntList([1, 5, 5, 3]), o: IntList([5]) }
#   Datum { i: IntList([1, 1]), o: IntList([1]) }
#   Datum { i: IntList([2, 0, 8, 7, 6, 2]), o: IntList([8]) }
#   Datum { i: IntList([3, 3, 6, 3]), o: IntList([3]) }
#   Datum { i: IntList([2, 9, 0]), o: IntList([0]) }
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c005,0,4,1,1242098,1053646,1200508,1200508,600.010483369,601.81055071
c005,0,4,2,841904,788959,815486,815486,1200.0164402750001,1202.997498981
c005,0,4,3,654940,604780,631202,631202,1800.0166829540003,1803.788248874
c005,0,4,4,523067,481480,500288,500288,2400.0171522480005,2404.440244192
c005,0,4,5,453631,419026,435148,435148,3000.0177637840006,3004.860643878
c005,0,4,6,395395,365200,379337,379337,3600.0178826130004,3605.256506447
c005,0,4,7,355586,328230,341160,341160,4200.018146594,4205.640211854
c005,0,4,8,315466,291310,303035,303035,4800.019190196001,4806.019913618
c005,0,4,9,200722,182948,189234,189234,5400.024129812001,5406.564366706
c005,0,4,10,177520,161454,167331,167331,6000.040342657001,6007.199209863
c005,0,4,11,150530,136642,141546,141546,6600.052436089001,6607.787131946
# search time: 6600.052s
# total time: 6608.205s
c005,1,4,1,1266050,1088220,1227320,1227320,600.001668679,600.292348118
c005,1,4,2,811962,764333,788659,788659,1200.008412656,1200.678077493
c005,1,4,3,660519,608881,636366,636366,1800.009021044,1801.013843868
c005,1,4,4,520196,479177,497652,497652,2400.009665083,2401.308743181
c005,1,4,5,456059,422294,437956,437956,3000.016482528,3001.543233059
c005,1,4,6,394908,364484,378615,378615,3600.016828013,3601.76280523
c005,1,4,7,354930,328164,340811,340811,4200.018115844,4201.982899966
c005,1,4,8,312748,288819,300473,300473,4800.019902473,4802.196477898
c005,1,4,9,199795,181870,188144,188144,5400.020532026,5402.513791161
c005,1,4,10,173167,157307,162731,162731,6000.022017523001,6002.875240373
c005,1,4,11,150754,136743,141747,141747,6600.023497196001,6603.182753217
# search time: 6600.023s
# total time: 13212.028s
c005,2,4,1,1269775,1041093,1217540,1217540,600.000096784,600.199376239
c005,2,4,2,833781,781873,807827,807827,1200.0014635339999,1200.500306356
c005,2,4,3,664790,612674,640184,640184,1800.0020802939998,1800.728208647
c005,2,4,4,511524,470614,489195,489195,2400.002637431,2400.940756628
c005,2,4,5,454147,419464,435539,435539,3000.003214892,3001.105620701
c005,2,4,6,395588,365324,379320,379320,3600.004551783,3601.268438643
c005,2,4,7,354948,327727,340580,340580,4200.005325069,4201.439085993
c005,2,4,8,316690,292649,304127,304127,4800.005952157,4801.602195502
c005,2,4,9,201561,183839,190105,190105,5400.006624139,5401.826576003
c005,2,4,10,173404,157518,163091,163091,6000.007874970001,6002.104255503
c005,2,4,11,151009,136956,141973,141973,6600.0089030320005,6602.36321511
# search time: 6600.009s
# total time: 19815.254s
c005,3,4,1,1276947,1048039,1224675,1224675,600.000263432,600.180023054
c005,3,4,2,815220,766995,791711,791711,1200.0011409459999,1200.414919869
c005,3,4,3,664056,611993,639742,639742,1800.001550004,1800.618013108
c005,3,4,4,522095,480866,499308,499308,2400.0023113469997,2400.783278086
c005,3,4,5,455647,420886,437059,437059,3000.0026316289996,3000.942912261
c005,3,4,6,402380,371402,385620,385620,3600.0039738569994,3601.091524013
c005,3,4,7,354762,327087,340263,340263,4200.004203701999,4201.233380356
c005,3,4,8,315183,290812,302655,302655,4800.005849474,4801.379131649
c005,3,4,9,202880,184610,191196,191196,5400.007416322,5401.546673395
c005,3,4,10,178771,162751,168905,168905,6000.0107238499995,6001.742845716
c005,3,4,11,155424,141638,147265,147265,6600.01267787,6601.934900678
# search time: 6600.013s
# total time: 26417.890s
c005,4,4,1,1198674,1014434,1158263,1158263,600.000153006,600.242302938
c005,4,4,2,841372,790034,815557,815557,1200.00977567,1200.497482296
c005,4,4,3,661085,609097,636890,636890,1800.010178845,1800.689244273
c005,4,4,4,509132,468367,486730,486730,2400.010435731,2400.853423552
c005,4,4,5,451385,417398,433249,433249,3000.010902368,3000.999805451
c005,4,4,6,387170,357840,371299,371299,3600.0116124,3601.13175227
c005,4,4,7,352530,325896,338449,338449,4200.011836325,4201.263340482
c005,4,4,8,317823,293741,305281,305281,4800.014526192001,4801.403200348
c005,4,4,9,197233,179449,185580,185580,5400.015153594,5401.539392611
c005,4,4,10,176072,160233,166014,166014,6000.016228570001,6001.710969507
c005,4,4,11,150504,136670,141591,141591,6600.017435309001,6601.87791372
# search time: 6600.017s
# total time: 33020.385s
