    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c027_3.json out/1593091766/results/c027_3_best.csv out/1593091766/results/c027_3_predictions.csv out/1593091766/results/c027_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 1, 1, 1]), o: IntList([1, 1, 1, 1]) }
#   Datum { i: IntList([0, 8, 0, 8]), o: IntList([0, 8, 8]) }
#   Datum { i: IntList([8, 4, 2, 2, 3, 3, 4, 8]), o: IntList([8, 2, 2, 3, 3, 4, 8]) }
#   Datum { i: IntList([9, 3, 9, 4, 5, 6]), o: IntList([9, 3, 4, 5, 6]) }
#   Datum { i: IntList([5, 2, 7, 9, 7, 0, 6, 9, 2]), o: IntList([5, 7, 9, 7, 0, 6, 9, 2]) }
#   Datum { i: IntList([9, 1, 6, 4]), o: IntList([9, 6, 4]) }
#   Datum { i: IntList([3, 3, 3, 5, 5, 5, 3]), o: IntList([3, 3, 5, 5, 5, 3]) }
#   Datum { i: IntList([8, 5, 3, 6, 1, 1, 7, 0, 4]), o: IntList([8, 3, 6, 1, 1, 7, 0, 4]) }
#   Datum { i: IntList([7, 7, 7]), o: IntList([7, 7]) }
#   Datum { i: IntList([8, 2, 3, 6, 0, 0, 6, 0, 9, 4]), o: IntList([8, 3, 6, 0, 0, 6, 0, 9, 4]) }
#   Datum { i: IntList([8, 5, 9, 4, 1, 2, 6, 0]), o: IntList([8, 9, 4, 1, 2, 6, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c027,0,3,1,1309613,1074600,1256235,1256235,600.005268568,601.748334176
c027,0,3,2,578824,542765,560046,560046,1200.005397857,1202.713488373
c027,0,3,3,413411,382750,391355,391355,1800.0057469439998,1803.483542269
c027,0,3,4,249260,229838,238124,238124,2400.005914265,2403.963683755
c027,0,3,5,173521,160931,162403,162403,3000.008292955,3004.655382048
c027,0,3,6,117549,106611,107147,107147,3600.00948257,3605.323202319
c027,0,3,7,123625,112084,113587,113587,4200.011155079,4205.849804813
c027,0,3,8,100831,90906,92199,92199,4800.013863655,4806.316264379
c027,0,3,9,76163,68338,68894,68894,5400.016350696,5406.873020266
c027,0,3,10,73158,65430,66217,66217,6000.019802250999,6007.484661293
c027,0,3,11,56452,50422,50942,50942,6600.025088998999,6608.094680899
# search time: 6600.025s
# total time: 6608.506s
c027,1,3,1,1284995,1055336,1232547,1232547,600.00689547,600.281717997
c027,1,3,2,531486,504189,517135,517135,1200.007488482,1200.698469154
c027,1,3,3,389603,362534,368949,368949,1800.007788979,1801.090458547
c027,1,3,4,249766,229550,237981,237981,2400.008364202,2401.324907211
c027,1,3,5,167571,154817,156175,156175,3000.0149297489997,3001.723670381
c027,1,3,6,113189,102221,102631,102631,3600.0150798429995,3602.073171052
c027,1,3,7,123419,111667,113230,113230,4200.020720885,4202.386105683
c027,1,3,8,101333,91414,92758,92758,4800.0225689829995,4802.680900391
c027,1,3,9,74671,66901,67415,67415,5400.040594267999,5402.984452225
c027,1,3,10,71838,64667,65397,65397,6000.049506258999,6003.336682902
c027,1,3,11,56909,51033,51538,51538,6600.060354323999,6603.682317894
# search time: 6600.060s
# total time: 13212.936s
c027,2,3,1,1301790,1065015,1247638,1247638,600.001318015,600.201675796
c027,2,3,2,527716,500249,513462,513462,1200.0017333740002,1200.481301819
c027,2,3,3,386333,358801,365552,365552,1800.0017429850002,1800.75768693
c027,2,3,4,248638,228654,236779,236779,2400.006168628,2400.925782067
c027,2,3,5,172809,160522,161982,161982,3000.008324162,3001.12462713
c027,2,3,6,111965,101284,101660,101660,3600.01371513,3601.379037821
c027,2,3,7,122611,111075,112613,112613,4200.017725898,4201.582497294
c027,2,3,8,100117,90610,91860,91860,4800.017974248,4801.769223845
c027,2,3,9,71968,64018,64448,64448,5400.023503654001,5402.013397437
c027,2,3,10,68847,61072,61635,61635,6000.033643433001,6002.226118924
c027,2,3,11,57938,52202,52830,52830,6600.041050247001,6602.457560294
# search time: 6600.041s
# total time: 19816.177s
c027,3,3,1,1275953,1116504,1242815,1242815,600.002815197,600.266215603
c027,3,3,2,572781,537266,554005,554005,1200.0029554110001,1200.486272218
c027,3,3,3,420254,388774,398024,398024,1800.0044812750002,1800.671671236
c027,3,3,4,252335,232441,240646,240646,2400.0062176600004,2400.80856975
c027,3,3,5,171650,159133,160645,160645,3000.0065630070003,3000.979962745
c027,3,3,6,115586,105008,105552,105552,3600.008779441,3601.148093041
c027,3,3,7,122160,110799,112265,112265,4200.0098758,4201.302877866
c027,3,3,8,100197,90557,91832,91832,4800.011278391001,4801.452207444
c027,3,3,9,74108,66245,66736,66736,5400.0132694330005,5401.613750001
c027,3,3,10,72010,64862,65616,65616,6000.0167206510005,6001.789257217
c027,3,3,11,56408,50170,50683,50683,6600.025592306,6601.975929975
# search time: 6600.026s
# total time: 26418.803s
c027,4,3,1,1297835,1063742,1244245,1244245,600.000145883,600.210143368
c027,4,3,2,526359,498636,511809,511809,1200.001228995,1200.416524551
c027,4,3,3,398413,369600,377166,377166,1800.001969165,1800.606764473
c027,4,3,4,250600,230781,238759,238759,2400.002252373,2400.727946398
c027,4,3,5,165384,152856,154207,154207,3000.005139634,3000.871984744
c027,4,3,6,115500,104808,105318,105318,3600.0058437059997,3601.038928767
c027,4,3,7,122331,110990,112500,112500,4200.015518978999,4201.17622495
c027,4,3,8,99739,89963,91256,91256,4800.017426431999,4801.307313112
c027,4,3,9,73922,66212,66696,66696,5400.017928359,5401.459132324
c027,4,3,10,72319,64387,65167,65167,6000.023901979,6001.56977311
c027,4,3,11,58180,52369,52938,52938,6600.031909171,6601.751667711
# search time: 6600.032s
# total time: 33021.262s
