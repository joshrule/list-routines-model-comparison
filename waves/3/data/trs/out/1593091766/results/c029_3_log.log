    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c029_3.json out/1593091766/results/c029_3_best.csv out/1593091766/results/c029_3_predictions.csv out/1593091766/results/c029_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 0, 4, 1, 7]), o: IntList([4, 1, 7]) }
#   Datum { i: IntList([2, 7, 6, 2, 0, 6, 7, 6, 5]), o: IntList([6, 2, 0, 6, 7, 6, 5]) }
#   Datum { i: IntList([2, 3, 1, 6, 0, 9, 5, 7, 4, 8]), o: IntList([1, 6, 0, 9, 5, 7, 4, 8]) }
#   Datum { i: IntList([5, 9, 1, 3, 0, 0, 3]), o: IntList([1, 3, 0, 0, 3]) }
#   Datum { i: IntList([2, 2]), o: IntList([]) }
#   Datum { i: IntList([8, 1, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([5, 1, 0, 0, 5, 8, 1, 8, 3, 0]), o: IntList([0, 0, 5, 8, 1, 8, 3, 0]) }
#   Datum { i: IntList([5, 2, 2, 2, 5, 2]), o: IntList([2, 2, 5, 2]) }
#   Datum { i: IntList([7, 5, 1, 9, 4, 4, 4, 8]), o: IntList([1, 9, 4, 4, 4, 8]) }
#   Datum { i: IntList([6, 6, 6]), o: IntList([6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c029,0,3,1,1123026,918392,1076304,1076304,600.000122144,601.876595513
c029,0,3,2,530011,499333,512583,512583,1200.0009160710001,1203.041285941
c029,0,3,3,259374,240516,249536,249536,1800.0034507200003,1803.652508372
c029,0,3,4,140660,130455,134472,134472,2400.008873834,2404.636755096
c029,0,3,5,131127,118215,121766,121766,3000.010037999,3005.439293304
c029,0,3,6,119505,110265,114198,114198,3600.010705558,3606.201753229
c029,0,3,7,112332,103331,107117,107117,4200.015647167,4206.993182181
c029,0,3,8,109838,100648,104630,104630,4800.015864651999,4807.88485852
c029,0,3,9,81769,74684,77692,77692,5400.018073189999,5408.714988186
c029,0,3,10,73360,66831,69672,69672,6000.0268374259995,6009.404731332
c029,0,3,11,65346,59090,61622,61622,6600.057209201,6610.218337046
# search time: 6600.057s
# total time: 6610.507s
c029,1,3,1,1081049,925802,1047416,1047416,600.000239552,600.345651
c029,1,3,2,529632,498030,511878,511878,1200.0007063090002,1200.773222688
c029,1,3,3,257966,239036,248339,248339,1800.0053510770003,1801.039354853
c029,1,3,4,140545,130361,134454,134454,2400.0100277550005,2401.472297825
c029,1,3,5,132770,120282,123874,123874,3000.0117018420005,3001.742811669
c029,1,3,6,119481,110353,114278,114278,3600.0168719610006,3602.104096322
c029,1,3,7,111076,101878,105916,105916,4200.025901359,4202.493139154
c029,1,3,8,107277,98390,102239,102239,4800.028138801001,4802.90032993
c029,1,3,9,80990,73869,76893,76893,5400.031261212001,5403.306725643
c029,1,3,10,72703,66246,69047,69047,6000.041987614,6003.761633257
c029,1,3,11,64506,58105,60575,60575,6600.044355053,6604.168517897
# search time: 6600.044s
# total time: 13215.134s
c029,2,3,1,1094698,891109,1048577,1048577,600.050221075,600.219726327
c029,2,3,2,504017,474477,487870,487870,1200.0516360699999,1200.534896878
c029,2,3,3,258261,238989,248361,248361,1800.052926631,1800.717037256
c029,2,3,4,141515,131139,135159,135159,2400.056663698,2400.998239862
c029,2,3,5,129873,117427,120756,120756,3000.060966004,3001.284309473
c029,2,3,6,118556,109925,113493,113493,3600.0627048369997,3601.514160756
c029,2,3,7,110402,101595,105363,105363,4200.06423819,4201.787792257
c029,2,3,8,105118,96305,100063,100063,4800.07361409,4802.047087687
c029,2,3,9,80899,73782,76911,76911,5400.081415262,5402.354719113
c029,2,3,10,72242,65928,68602,68602,6000.082797931,6002.625154919
c029,2,3,11,64565,58063,60608,60608,6600.085604227999,6602.946875536
# search time: 6600.086s
# total time: 19818.527s
c029,3,3,1,1110361,965313,1079042,1079042,600.000176186,600.265241215
c029,3,3,2,540254,507728,521823,521823,1200.014110607,1200.528420758
c029,3,3,3,257054,238361,247296,247296,1800.014632784,1800.687881203
c029,3,3,4,138151,127976,132027,132027,2400.017804062,2400.888204846
c029,3,3,5,132095,119618,123291,123291,3000.030020233,3001.089410156
c029,3,3,6,114701,105685,109535,109535,3600.03374101,3601.30321092
c029,3,3,7,110454,101307,105182,105182,4200.038594966,4201.515566049
c029,3,3,8,105574,96494,100456,100456,4800.039761076,4801.710108816
c029,3,3,9,80350,73185,76209,76209,5400.047916107,5401.934344999
c029,3,3,10,72893,66294,69153,69153,6000.055974836,6002.17863523
c029,3,3,11,65005,58623,61153,61153,6600.0665305150005,6602.35580325
# search time: 6600.067s
# total time: 26421.329s
c029,4,3,1,1092289,896665,1047691,1047691,600.000520492,600.184420895
c029,4,3,2,529429,498610,511833,511833,1200.000718861,1200.426203114
c029,4,3,3,254251,235733,244913,244913,1800.00200995,1800.558707513
c029,4,3,4,137852,126933,131703,131703,2400.003355382,2400.725377591
c029,4,3,5,132542,119940,123646,123646,3000.007001115,3000.867181896
c029,4,3,6,119416,109896,113954,113954,3600.0078803760002,3601.045954358
c029,4,3,7,111496,102360,106271,106271,4200.013508189,4201.211932259
c029,4,3,8,107545,98226,102410,102410,4800.015940863001,4801.377202483
c029,4,3,9,81418,74275,77381,77381,5400.0160975750005,5401.526751592
c029,4,3,10,73373,66707,69563,69563,6000.01897203,6001.652275189
c029,4,3,11,64159,57879,60352,60352,6600.039474352,6602.01599618
# search time: 6600.039s
# total time: 33023.848s
