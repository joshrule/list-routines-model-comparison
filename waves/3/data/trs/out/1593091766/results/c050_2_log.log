    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c050_2.json out/1593091766/results/c050_2_best.csv out/1593091766/results/c050_2_predictions.csv out/1593091766/results/c050_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 6, 7]), o: IntList([4, 4, 6, 7]) }
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
#   Datum { i: IntList([4, 2, 6, 1, 5, 3, 1, 8, 9]), o: IntList([4, 4, 2, 6, 1, 5, 3, 1, 8, 9]) }
#   Datum { i: IntList([6, 6, 9, 7, 5, 9]), o: IntList([6, 6, 6, 9, 7, 5, 9]) }
#   Datum { i: IntList([3, 2, 3, 0, 2, 0, 4, 3]), o: IntList([3, 3, 2, 3, 0, 2, 0, 4, 3]) }
#   Datum { i: IntList([2, 4, 9, 3]), o: IntList([2, 2, 4, 9, 3]) }
#   Datum { i: IntList([3, 7]), o: IntList([3, 3, 7]) }
#   Datum { i: IntList([0, 4, 8, 4, 0]), o: IntList([0, 0, 4, 8, 4, 0]) }
#   Datum { i: IntList([5, 8, 5, 5, 5, 8, 8]), o: IntList([5, 5, 8, 5, 5, 5, 8, 8]) }
#   Datum { i: IntList([6, 0, 3, 0, 5, 2, 9, 7, 8, 1]), o: IntList([6, 6, 0, 3, 0, 5, 2, 9, 7, 8, 1]) }
#   Datum { i: IntList([7, 9, 6, 6, 9, 2, 9, 9, 2, 9]), o: IntList([7, 7, 9, 6, 6, 9, 2, 9, 9, 2, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c050,0,2,1,719742,614583,696632,696632,600.005798775,602.902440116
c050,0,2,2,341734,317025,325845,325845,1200.007545941,1204.564582679
c050,0,2,3,229398,214731,222270,222270,1800.025837935,1805.240223689
c050,0,2,4,125386,114723,118682,118682,2400.026198628,2405.640171047
c050,0,2,5,168081,154659,159479,159479,3000.027516297,3006.325918642
c050,0,2,6,127755,116040,120398,120398,3600.0291850000003,3606.993043344
c050,0,2,7,112683,102535,106069,106069,4200.034521295001,4207.610845887
c050,0,2,8,106189,96752,100040,100040,4800.041718216001,4808.181865088
c050,0,2,9,92657,84160,86876,86876,5400.043131188001,5408.718566243
c050,0,2,10,78504,70628,73225,73225,6000.100303016001,6009.338090199
c050,0,2,11,64505,57463,59313,59313,6600.102168598001,6609.805944357
# search time: 6600.102s
# total time: 6610.084s
c050,1,2,1,1353455,1199114,1322707,1322707,600.000125206,600.47795793
c050,1,2,2,609538,568015,583735,583735,1200.000518132,1200.942725717
c050,1,2,3,433141,407229,421271,421271,1800.0042096930001,1801.203182183
c050,1,2,4,228428,211339,217990,217990,2400.005008682,2401.431392536
c050,1,2,5,166381,152345,157520,157520,3000.0100116410003,3001.667027733
c050,1,2,6,126743,115949,119402,119402,3600.0139855790003,3601.878745307
c050,1,2,7,113231,102741,106253,106253,4200.015536342,4202.07877832
c050,1,2,8,107310,97829,100906,100906,4800.018461924999,4802.299686737
c050,1,2,9,93941,85263,88092,88092,5400.022338903999,5402.481739269
c050,1,2,10,79446,71336,73778,73778,6000.029025237999,6002.665904023
c050,1,2,11,63949,56756,58672,58672,6600.032342340999,6602.868926532
# search time: 6600.032s
# total time: 13213.642s
c050,2,2,1,1253176,1063774,1211545,1211545,600.000056276,600.28910074
c050,2,2,2,606547,565373,580976,580976,1200.000619269,1200.602198835
c050,2,2,3,432302,406779,420756,420756,1800.0006634390002,1800.786869167
c050,2,2,4,223142,206111,213151,213151,2400.001259306,2400.932186993
c050,2,2,5,170170,156215,161465,161465,3000.0036798290002,3001.09930923
c050,2,2,6,122172,110722,115266,115266,3600.0050422500003,3601.268729665
c050,2,2,7,112261,102263,105533,105533,4200.007710778,4201.427672824
c050,2,2,8,107038,97424,100531,100531,4800.009695893999,4801.584264474
c050,2,2,9,93565,84610,87497,87497,5400.015129781999,5401.746832071
c050,2,2,10,78954,70970,73456,73456,6000.020903596,6001.891801398
c050,2,2,11,63989,56999,58831,58831,6600.023819444999,6602.028110851
# search time: 6600.024s
# total time: 19816.214s
c050,3,2,1,1286603,1052470,1233103,1233103,600.005671805,600.225670544
c050,3,2,2,590349,551247,565960,565960,1200.016248334,1200.479413488
c050,3,2,3,421986,395973,410299,410299,1800.017101613,1800.638790555
c050,3,2,4,219475,199090,209417,209417,2400.025520642,2400.761636521
c050,3,2,5,166675,154183,158400,158400,3000.027417618,3000.885169624
c050,3,2,6,125860,115164,118733,118733,3600.028155657,3601.005734204
c050,3,2,7,112466,102561,105889,105889,4200.029984418,4201.126485067
c050,3,2,8,106121,96428,99748,99748,4800.031523101,4801.237402498
c050,3,2,9,93320,84672,87273,87273,5400.036033781,5401.359476511
c050,3,2,10,78757,70697,73170,73170,6000.040090384,6001.458897776
c050,3,2,11,64016,56870,58717,58717,6600.0627956690005,6601.646858068
# search time: 6600.063s
# total time: 26418.380s
c050,4,2,1,1300027,1067278,1246793,1246793,600.001427594,600.202835251
c050,4,2,2,586990,548387,563097,563097,1200.002339866,1200.420656555
c050,4,2,3,428746,402964,417019,417019,1800.005102656,1800.580648536
c050,4,2,4,224688,208098,214925,214925,2400.005653005,2400.693083905
c050,4,2,5,164288,151077,155846,155846,3000.006866321,3000.807966662
c050,4,2,6,123787,112234,116788,116788,3600.013181767,3600.911380454
c050,4,2,7,112287,102456,105729,105729,4200.015125485,4201.016231749
c050,4,2,8,107673,98451,101363,101363,4800.021032996,4801.117171036
c050,4,2,9,92706,83874,86734,86734,5400.028835576,5401.205648009
c050,4,2,10,77994,70232,72682,72682,6000.031063410001,6001.317104165
c050,4,2,11,63801,56585,58500,58500,6600.0326531050005,6601.41144454
# search time: 6600.033s
# total time: 33020.306s
