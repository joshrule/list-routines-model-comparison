    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c021_3.json out/1593091766/results/c021_3_best.csv out/1593091766/results/c021_3_predictions.csv out/1593091766/results/c021_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 2, 3]), o: IntList([0, 8, 2, 3]) }
#   Datum { i: IntList([4, 9, 5, 1, 7, 3]), o: IntList([4, 8, 9, 5, 1, 7, 3]) }
#   Datum { i: IntList([6, 6, 0, 5, 2, 6, 0, 3, 2]), o: IntList([6, 8, 6, 0, 5, 2, 6, 0, 3, 2]) }
#   Datum { i: IntList([2, 9, 1, 7, 4, 6, 0]), o: IntList([2, 8, 9, 1, 7, 4, 6, 0]) }
#   Datum { i: IntList([1, 8, 1, 1, 6, 2, 1, 4, 4, 3]), o: IntList([1, 8, 8, 1, 1, 6, 2, 1, 4, 4, 3]) }
#   Datum { i: IntList([7, 9, 1, 2, 6, 3, 0, 4, 7, 5]), o: IntList([7, 8, 9, 1, 2, 6, 3, 0, 4, 7, 5]) }
#   Datum { i: IntList([1, 6, 9, 3]), o: IntList([1, 8, 6, 9, 3]) }
#   Datum { i: IntList([0, 8, 6, 4, 0]), o: IntList([0, 8, 8, 6, 4, 0]) }
#   Datum { i: IntList([5, 5, 5, 5, 5, 5, 5, 5]), o: IntList([5, 8, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([7, 4]), o: IntList([7, 8, 4]) }
#   Datum { i: IntList([9, 2, 1, 9, 3, 3, 1, 8, 9, 2]), o: IntList([9, 8, 2, 1, 9, 3, 3, 1, 8, 9, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c021,0,3,1,1141786,937416,1095169,1095169,600.003416282,601.902722283
c021,0,3,2,496217,464855,478390,478390,1200.004609952,1202.875743059
c021,0,3,3,250063,232416,241791,241791,1800.0056659480001,1803.380185799
c021,0,3,4,157201,144885,150587,150587,2400.00640958,2403.884688785
c021,0,3,5,101170,94358,97380,97380,3000.0093249799997,3004.645310772
c021,0,3,6,73990,68578,70782,70782,3600.032164854,3605.523798013
c021,0,3,7,56572,52507,54235,54235,4200.0379955729995,4206.406207091
c021,0,3,8,58675,53386,54988,54988,4800.046205807,4807.104928405
c021,0,3,9,54313,49564,51306,51306,5400.048218104999,5407.759056348
c021,0,3,10,45231,40834,42236,42236,6000.057426680999,6008.362581881
c021,0,3,11,44723,40479,41920,41920,6600.072778884999,6609.105385253
# search time: 6600.073s
# total time: 6609.411s
c021,1,3,1,1130943,926050,1084142,1084142,600.000422789,600.2617726
c021,1,3,2,497246,467825,480377,480377,1200.001993948,1200.69378397
c021,1,3,3,247706,230600,239929,239929,1800.002615642,1800.946184381
c021,1,3,4,153585,140990,147350,147350,2400.005358403,2401.189597546
c021,1,3,5,101234,94407,97432,97432,3000.011613623,3001.559129375
c021,1,3,6,72400,66322,69574,69574,3600.014655854,3601.98599123
c021,1,3,7,56557,52560,54098,54098,4200.017969159,4202.353357716
c021,1,3,8,57101,51666,53323,53323,4800.027502463,4802.953192123
c021,1,3,9,45408,41812,43091,43091,5400.029162361,5403.197236734
c021,1,3,10,45544,41619,42916,42916,6000.043586440001,6003.434194481
c021,1,3,11,44831,40523,41922,41922,6600.0603810150005,6603.799478983
# search time: 6600.060s
# total time: 13213.559s
c021,2,3,1,1184223,1030537,1151706,1151706,600.001604983,600.284710305
c021,2,3,2,513135,481660,494823,494823,1200.0016633760001,1200.586446427
c021,2,3,3,249480,232546,241731,241731,1800.0022100620001,1800.7628326
c021,2,3,4,161141,149953,154660,154660,2400.0046532180004,2400.920639254
c021,2,3,5,98235,90433,94495,94495,3000.0105267630006,3001.163609363
c021,2,3,6,72096,67135,69230,69230,3600.018612813001,3601.380751953
c021,2,3,7,55552,51720,53165,53165,4200.027112981001,4201.643944241
c021,2,3,8,57198,51311,53459,53459,4800.039953944,4801.882745122
c021,2,3,9,52648,48286,49871,49871,5400.050534709,5402.105599734
c021,2,3,10,44789,40905,42186,42186,6000.063088983,6002.323118679
c021,2,3,11,44228,40133,41441,41441,6600.079647173,6602.495110388
# search time: 6600.080s
# total time: 19816.425s
c021,3,3,1,1210157,1055075,1180303,1180303,600.000125487,600.280968687
c021,3,3,2,491876,462213,474891,474891,1200.0092111650001,1200.536642402
c021,3,3,3,253056,235580,244740,244740,1800.0114128230002,1800.687406464
c021,3,3,4,156167,143957,149887,149887,2400.011416694,2400.819454624
c021,3,3,5,58707,54483,56332,56332,3000.014972284,3001.036927582
c021,3,3,6,42645,39651,40833,40833,3600.018047488,3601.291225216
c021,3,3,7,32566,30515,31272,31272,4200.023805408,4201.585363991
c021,3,3,8,32973,29516,30606,30606,4800.035659611,4801.867405668
c021,3,3,9,30961,28134,29146,29146,5400.049024016999,5402.004190505
c021,3,3,10,25706,23528,24254,24254,6000.0728224409995,6002.18892364
c021,3,3,11,25771,23335,24153,24153,6600.082328945,6602.429705158
# search time: 6600.082s
# total time: 26419.330s
c021,4,3,1,712970,610524,690503,690503,600.020811506,600.25050953
c021,4,3,2,312469,292863,300965,300965,1200.021084197,1200.471155277
c021,4,3,3,153292,142278,147773,147773,1800.021431776,1800.594254064
c021,4,3,4,93518,85739,89148,89148,2400.02311492,2400.702677163
c021,4,3,5,59000,54695,56592,56592,3000.032034244,3000.928515773
c021,4,3,6,43168,39972,41227,41227,3600.037829994,3601.149457161
c021,4,3,7,33069,30737,31566,31566,4200.04776684,4201.303468867
c021,4,3,8,33466,30247,31139,31139,4800.057125527,4801.511709729
c021,4,3,9,30372,27912,28864,28864,5400.066981283,5401.708082334
c021,4,3,10,26315,23945,24827,24827,6000.067925253,6001.845425408
c021,4,3,11,25342,23029,23746,23746,6600.091646435,6601.99314317
# search time: 6600.092s
# total time: 33021.629s
