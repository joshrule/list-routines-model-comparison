    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c052_3.json out/1593091766/results/c052_3_best.csv out/1593091766/results/c052_3_predictions.csv out/1593091766/results/c052_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 5, 5]), o: IntList([2, 2, 2, 2, 2, 2, 2, 2, 2, 2]) }
#   Datum { i: IntList([3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([6, 7, 1]), o: IntList([6, 6, 6, 6, 6, 6, 6, 6, 6, 6]) }
#   Datum { i: IntList([1, 2, 4, 0, 3, 7]), o: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([9, 4, 4, 0, 4, 0, 2, 2, 4]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([7, 7]), o: IntList([7, 7, 7, 7, 7, 7, 7, 7, 7, 7]) }
#   Datum { i: IntList([5, 5, 1, 1, 5, 1]), o: IntList([5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([9, 8, 7, 1]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([8, 6, 8, 8, 6]), o: IntList([8, 8, 8, 8, 8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([4, 0, 6, 7, 3, 5, 1, 6, 3]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([0]), o: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c052,0,3,1,1112929,914361,1068433,1068433,600.000339755,601.741228594
c052,0,3,2,261506,244333,251280,251280,1200.001376097,1202.868566753
c052,0,3,3,154560,142211,146103,146103,1800.0027462070002,1803.925203525
c052,0,3,4,119088,110100,114089,114089,2400.0028192570003,2404.588582385
c052,0,3,5,93783,86735,89717,89717,3000.0074245580004,3005.253619823
c052,0,3,6,63077,57207,58599,58599,3600.0205401430003,3606.316681561
c052,0,3,7,59600,54495,56531,56531,4200.021386656001,4206.936637448
c052,0,3,8,48460,44263,45750,45750,4800.022849709001,4807.982237115
c052,0,3,9,48360,44597,46602,46602,5400.028634800001,5408.477875863
c052,0,3,10,42237,39486,40731,40731,6000.055222626001,6009.070258685
c052,0,3,11,30674,28823,29598,29598,6600.069585284001,6610.111947172
# search time: 6600.070s
# total time: 6610.367s
c052,1,3,1,1140145,932782,1093008,1093008,600.00079588,600.303774156
c052,1,3,2,263968,246328,253326,253326,1200.000891949,1200.730472607
c052,1,3,3,158270,146091,150019,150019,1800.0012226390002,1801.139568207
c052,1,3,4,121613,113607,116897,116897,2400.001563825,2401.447891055
c052,1,3,5,90830,83134,86688,86688,3000.002074295,3001.703396325
c052,1,3,6,64934,59308,60723,60723,3600.007128255,3602.142851805
c052,1,3,7,59245,54234,56010,56010,4200.02895849,4202.605623588
c052,1,3,8,48363,44224,45708,45708,4800.038380145,4803.067156923
c052,1,3,9,48504,45085,46763,46763,5400.039194266,5403.3394334
c052,1,3,10,42317,39470,40823,40823,6000.043807353,6003.647424262
c052,1,3,11,31612,29774,30567,30567,6600.045540873,6603.987897592
# search time: 6600.046s
# total time: 13214.722s
c052,2,3,1,1144858,994280,1112605,1112605,600.000123786,600.355697226
c052,2,3,2,257343,240095,247138,247138,1200.005640525,1200.659263638
c052,2,3,3,155473,143320,146975,146975,1800.0085502030001,1800.9498092
c052,2,3,4,121119,112667,116084,116084,2400.009546781,2401.120189347
c052,2,3,5,93601,86641,89365,89365,3000.009708305,3001.361979169
c052,2,3,6,63560,57657,58888,58888,3600.024660254,3601.687315033
c052,2,3,7,59136,54099,55937,55937,4200.025786639,4201.957135883
c052,2,3,8,48688,44335,45855,45855,4800.032934253,4802.160898873
c052,2,3,9,48520,45194,46812,46812,5400.053607603,5402.386126431
c052,2,3,10,42440,39559,40891,40891,6000.0633395840005,6002.618565847
c052,2,3,11,31719,29857,30661,30661,6600.067389928001,6602.853768219
# search time: 6600.067s
# total time: 19817.965s
c052,3,3,1,1144936,938087,1097770,1097770,600.000430885,600.192377598
c052,3,3,2,257417,239986,247154,247154,1200.000575086,1200.424748703
c052,3,3,3,154252,141930,145763,145763,1800.002675722,1800.654093218
c052,3,3,4,115280,105974,110650,110650,2400.003433141,2400.7856844
c052,3,3,5,92150,84902,87806,87806,3000.005421142,3000.922662788
c052,3,3,6,64975,59173,60576,60576,3600.008652869,3601.213213718
c052,3,3,7,58621,53281,55449,55449,4200.012179608,4201.41318438
c052,3,3,8,48201,44013,45434,45434,4800.0149120020005,4801.575784776
c052,3,3,9,48701,45324,46939,46939,5400.020739106,5401.707012678
c052,3,3,10,42097,39211,40513,40513,6000.05172973,6001.887457695
c052,3,3,11,31653,29851,30636,30636,6600.099591534,6602.218651633
# search time: 6600.100s
# total time: 26420.565s
c052,4,3,1,1090320,891039,1045197,1045197,600.000068345,600.191737184
c052,4,3,2,260494,243029,250091,250091,1200.012602215,1200.395674827
c052,4,3,3,155662,143659,147540,147540,1800.015261532,1800.554687038
c052,4,3,4,120535,112044,115893,115893,2400.018725303,2400.674137818
c052,4,3,5,93876,86971,89779,89779,3000.0201949859998,3000.829077253
c052,4,3,6,37494,34260,35213,35213,3600.035145089,3601.107681171
c052,4,3,7,33751,30766,31876,31876,4200.044151882999,4201.327331653
c052,4,3,8,27370,25051,25823,25823,4800.047687955,4801.456269127
c052,4,3,9,28036,26224,27125,27125,5400.057625912999,5401.577654697
c052,4,3,10,24310,22653,23477,23477,6000.129654300999,6001.768871772
c052,4,3,11,17068,16165,16602,16602,6600.146226712999,6601.983078316
# search time: 6600.146s
# total time: 33022.975s
