    Finished release [optimized] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c067_5.json out/1593091766/results/c067_5_best.csv out/1593091766/results/c067_5_predictions.csv out/1593091766/results/c067_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 8, 2, 4, 7, 4]), o: IntList([4, 8, 2, 4, 7, 5]) }
#   Datum { i: IntList([4, 8, 9, 9]), o: IntList([9, 8, 9, 4]) }
#   Datum { i: IntList([1, 3, 2, 8, 8, 5, 5]), o: IntList([5, 3, 2, 8, 8, 5, 1]) }
#   Datum { i: IntList([7, 6, 8, 0, 5, 1, 6, 9]), o: IntList([9, 6, 8, 0, 5, 1, 6, 7]) }
#   Datum { i: IntList([9, 1, 2, 8, 2, 4, 8, 2, 4, 1]), o: IntList([1, 1, 2, 8, 2, 4, 8, 2, 4, 9]) }
#   Datum { i: IntList([2, 1, 6, 3, 4, 0, 9, 8, 7, 4]), o: IntList([4, 1, 6, 3, 4, 0, 9, 8, 7, 2]) }
#   Datum { i: IntList([0, 0, 2]), o: IntList([2, 0, 0]) }
#   Datum { i: IntList([1, 6, 7, 3, 4]), o: IntList([4, 6, 7, 3, 1]) }
#   Datum { i: IntList([5, 0, 7, 6, 6, 0, 6, 0]), o: IntList([0, 0, 7, 6, 6, 0, 6, 5]) }
#   Datum { i: IntList([4, 7]), o: IntList([7, 4]) }
#   Datum { i: IntList([7, 5, 0, 2, 0, 9, 1, 6, 3]), o: IntList([3, 5, 0, 2, 0, 9, 1, 6, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c067,0,5,1,1309594,1133309,1271791,1271791,600.001156465,601.888484338
c067,0,5,2,424112,395021,406708,406708,1200.007877903,1202.906001338
c067,0,5,3,295526,276983,279177,279177,1800.008222286,1803.831444055
c067,0,5,4,192916,182243,182974,182974,2400.010549539,2404.672604544
c067,0,5,5,154223,146741,147584,147584,3000.0131853929997,3005.207155801
c067,0,5,6,103482,94320,95087,95087,3600.0223960289995,3605.791356337
c067,0,5,7,78455,72663,73011,73011,4200.024342207,4206.352316881
c067,0,5,8,76222,69889,70288,70288,4800.030594557,4806.914067876
c067,0,5,9,63267,58074,58372,58372,5400.031705731,5407.552914663
c067,0,5,10,55045,50841,51131,51131,6000.0374655880005,6008.156605892
c067,0,5,11,51761,47540,47775,47775,6600.040864834001,6608.622349012
# search time: 6600.041s
# total time: 6609.051s
c067,1,5,1,1268444,1040696,1216447,1216447,600.000149787,600.262512261
c067,1,5,2,413487,385036,396616,396616,1200.00417799,1200.685669918
c067,1,5,3,292386,273955,276132,276132,1800.0060955650001,1801.080569083
c067,1,5,4,198203,187566,188526,188526,2400.0088148170003,2401.402395072
c067,1,5,5,153766,146297,147143,147143,3000.010970272,3001.65097509
c067,1,5,6,101875,92795,93609,93609,3600.0116711190003,3601.940633215
c067,1,5,7,78922,72871,73296,73296,4200.017149636,4202.230715647
c067,1,5,8,77122,71432,71962,71962,4800.018107357,4802.466679208
c067,1,5,9,62939,58054,58384,58384,5400.021550415,5402.756202989
c067,1,5,10,54627,50446,50781,50781,6000.024480724,6003.060286184
c067,1,5,11,53170,48571,48861,48861,6600.032059882999,6603.381599931
# search time: 6600.032s
# total time: 13213.181s
c067,2,5,1,1309207,1149631,1275660,1275660,600.000210067,600.294412789
c067,2,5,2,438465,407650,419540,419540,1200.0010906759999,1200.570766099
c067,2,5,3,301714,283628,286055,286055,1800.0012200789997,1800.843166839
c067,2,5,4,197327,186494,187463,187463,2400.0025872839997,2401.057791806
c067,2,5,5,154528,147169,147998,147998,3000.0036858159997,3001.219695538
c067,2,5,6,99315,89935,90625,90625,3600.0041702289996,3601.390488169
c067,2,5,7,79771,74489,74996,74996,4200.0042209289995,4201.582171817
c067,2,5,8,76433,70675,71189,71189,4800.005767889999,4801.798076939
c067,2,5,9,63548,58869,59231,59231,5400.022956336999,5402.071959383
c067,2,5,10,54300,50141,50448,50448,6000.0272562479995,6002.293414638
c067,2,5,11,53431,48934,49220,49220,6600.045756715999,6602.552655544
# search time: 6600.046s
# total time: 19816.466s
c067,3,5,1,1279373,1048614,1226484,1226484,600.00220637,600.196599813
c067,3,5,2,441745,410906,422795,422795,1200.002658471,1200.420747507
c067,3,5,3,299255,281238,283629,283629,1800.004077895,1800.617462787
c067,3,5,4,196412,185723,186701,186701,2400.005690379,2400.796531366
c067,3,5,5,153389,146263,146729,146729,3000.007538916,3000.944312842
c067,3,5,6,97943,88603,89297,89297,3600.012065455,3601.138033898
c067,3,5,7,80300,74718,75236,75236,4200.033125032,4201.311051379
c067,3,5,8,76509,70829,71261,71261,4800.037222741,4801.44438696
c067,3,5,9,63051,58325,58678,58678,5400.038296193,5401.57728354
c067,3,5,10,53543,49359,49662,49662,6000.054901574,6001.781434341
c067,3,5,11,52756,48218,48504,48504,6600.079534917,6601.949729097
# search time: 6600.080s
# total time: 26419.477s
c067,4,5,1,1234693,1015545,1185004,1185004,600.000082888,600.171123505
c067,4,5,2,429041,399148,411184,411184,1200.003323901,1200.361099464
c067,4,5,3,299544,281944,284339,284339,1800.00452476,1800.527136261
c067,4,5,4,191702,180926,181631,181631,2400.0119522120003,2400.691584251
c067,4,5,5,153376,146008,146852,146852,3000.0129811990005,3000.810515689
c067,4,5,6,102438,93361,94128,94128,3600.0163558660006,3600.975584257
c067,4,5,7,78593,72809,73197,73197,4200.016832742001,4201.093029811
c067,4,5,8,74909,68502,68860,68860,4800.024981160001,4801.213765317
c067,4,5,9,63260,58542,58894,58894,5400.025521055,5401.307542456
c067,4,5,10,54566,50261,50578,50578,6000.047348289,6001.464898336
c067,4,5,11,53425,48954,49260,49260,6600.055698602,6601.638545866
# search time: 6600.056s
# total time: 33021.822s
