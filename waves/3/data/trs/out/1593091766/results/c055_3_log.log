    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c055_3.json out/1593091766/results/c055_3_best.csv out/1593091766/results/c055_3_predictions.csv out/1593091766/results/c055_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 1, 7, 0, 5]), o: IntList([7, 0, 8, 1, 5]) }
#   Datum { i: IntList([4, 8, 7, 9]), o: IntList([7, 9, 4, 8]) }
#   Datum { i: IntList([2, 5, 3, 5, 3, 5, 3, 2, 5]), o: IntList([3, 5, 2, 5, 3, 5, 3, 2, 5]) }
#   Datum { i: IntList([6, 2, 3, 0, 3, 2, 8, 1]), o: IntList([3, 0, 6, 2, 3, 2, 8, 1]) }
#   Datum { i: IntList([2, 1, 6, 6, 8, 9, 8]), o: IntList([6, 6, 2, 1, 8, 9, 8]) }
#   Datum { i: IntList([8, 9, 4, 4]), o: IntList([4, 4, 8, 9]) }
#   Datum { i: IntList([3, 9, 7, 2, 0, 8, 5]), o: IntList([7, 2, 3, 9, 0, 8, 5]) }
#   Datum { i: IntList([9, 7, 7, 5, 5, 7]), o: IntList([7, 5, 9, 7, 5, 7]) }
#   Datum { i: IntList([9, 4, 4, 3, 9, 9, 3, 4]), o: IntList([4, 3, 9, 4, 9, 9, 3, 4]) }
#   Datum { i: IntList([0, 2, 6, 1, 9, 5, 6, 5, 3]), o: IntList([6, 1, 0, 2, 9, 5, 6, 5, 3]) }
#   Datum { i: IntList([0, 7, 8, 1, 1, 4, 8, 9, 7, 2]), o: IntList([8, 1, 0, 7, 1, 4, 8, 9, 7, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c055,0,3,1,1296648,1059926,1242680,1242680,600.000063694,601.703773341
c055,0,3,2,486428,455632,468477,468477,1200.0007133230001,1202.728560973
c055,0,3,3,344676,316069,324821,324821,1800.0051181060003,1803.557462172
c055,0,3,4,178941,166652,171683,171683,2400.0090352400002,2404.300103855
c055,0,3,5,129011,120003,123847,123847,3000.013730475,3005.092449089
c055,0,3,6,109147,99816,102465,102465,3600.015318608,3605.853994252
c055,0,3,7,103366,93889,96790,96790,4200.017038326,4206.465767447
c055,0,3,8,87329,79303,81537,81537,4800.028407461,4807.139136122
c055,0,3,9,77513,70263,72290,72290,5400.035859467,5407.752010112
c055,0,3,10,64804,58876,60482,60482,6000.04086301,6008.421005081
c055,0,3,11,55115,49951,51280,51280,6600.051271294,6609.032591487
# search time: 6600.051s
# total time: 6609.329s
c055,1,3,1,1335230,1166611,1300349,1300349,600.000203788,600.391478614
c055,1,3,2,467605,438130,451101,451101,1200.000329666,1200.777863881
c055,1,3,3,343279,315009,323569,323569,1800.000409324,1801.118623107
c055,1,3,4,181444,168731,173731,173731,2400.004801808,2401.451082967
c055,1,3,5,130562,120872,125007,125007,3000.005526004,3001.771464917
c055,1,3,6,109996,100361,103168,103168,3600.00581211,3602.133095026
c055,1,3,7,105307,95954,98566,98566,4200.00952507,4202.460027213
c055,1,3,8,87260,79015,81589,81589,4800.009926688999,4802.72462983
c055,1,3,9,76908,69972,71926,71926,5400.012871022999,5402.992431726
c055,1,3,10,65095,58960,60583,60583,6000.014961084999,6003.252140866
c055,1,3,11,56127,50796,52155,52155,6600.019701189999,6603.61062124
# search time: 6600.020s
# total time: 13213.428s
c055,2,3,1,1294523,1060994,1241136,1241136,600.001784062,600.211329473
c055,2,3,2,490879,460063,472861,472861,1200.002185796,1200.481676574
c055,2,3,3,343729,315340,323844,323844,1800.014658901,1800.745590664
c055,2,3,4,174940,162960,167829,167829,2400.019044504,2400.952804094
c055,2,3,5,130025,120705,124558,124558,3000.0193393,3001.186826758
c055,2,3,6,109584,99887,102770,102770,3600.024639939,3601.424190739
c055,2,3,7,105202,95605,98467,98467,4200.026248933,4201.645332602
c055,2,3,8,87424,79688,81893,81893,4800.031451342,4801.86989141
c055,2,3,9,77610,70368,72325,72325,5400.041911311,5402.083323799
c055,2,3,10,66532,60046,61721,61721,6000.046866847,6002.289091709
c055,2,3,11,55288,49968,51361,51361,6600.054223036001,6602.504011453
# search time: 6600.054s
# total time: 19816.467s
c055,3,3,1,1251336,1074832,1212694,1212694,600.001868808,600.254044743
c055,3,3,2,462015,432959,445775,445775,1200.002476401,1200.479192424
c055,3,3,3,343949,315729,324141,324141,1800.004060282,1800.686763978
c055,3,3,4,175513,163070,168271,168271,2400.005764816,2400.858085722
c055,3,3,5,129128,119679,123723,123723,3000.005971304,3001.01655726
c055,3,3,6,109085,99537,102190,102190,3600.007954695,3601.192735499
c055,3,3,7,103658,94387,97219,97219,4200.020578041,4201.377998517
c055,3,3,8,53915,48922,50309,50309,4800.035978567,4801.63867071
c055,3,3,9,38314,34442,35664,35664,5400.052175281,5401.768066652
c055,3,3,10,32990,29823,30601,30601,6000.072915217,6001.97638933
c055,3,3,11,27918,25286,26034,26034,6600.09536465,6602.176230987
# search time: 6600.095s
# total time: 26419.035s
c055,4,3,1,675477,580747,654858,654858,600.000178398,600.226814465
c055,4,3,2,260257,243404,250077,250077,1200.013096147,1200.425999965
c055,4,3,3,181322,166557,171164,171164,1800.016910664,1800.598612464
c055,4,3,4,92617,85374,88245,88245,2400.017296575,2400.733949345
c055,4,3,5,104687,97087,100297,100297,3000.0184532969997,3000.893898939
c055,4,3,6,94320,85743,88110,88110,3600.0199536269997,3601.058872377
c055,4,3,7,88739,80472,83130,83130,4200.025055839999,4201.217662492
c055,4,3,8,75443,68332,70431,70431,4800.026372746999,4801.389789144
c055,4,3,9,66301,60198,61825,61825,5400.027143681999,5401.503299016
c055,4,3,10,57159,51603,53056,53056,6000.027636919,6001.659631445
c055,4,3,11,48417,43792,44906,44906,6600.030700818999,6601.787353464
# search time: 6600.031s
# total time: 33021.172s
