    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c033_3.json out/1593091766/results/c033_3_best.csv out/1593091766/results/c033_3_predictions.csv out/1593091766/results/c033_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 0, 2, 2, 7]), o: IntList([2, 0, 2, 7, 7]) }
#   Datum { i: IntList([8, 1, 8, 5, 5, 2]), o: IntList([5, 1, 8, 8, 5, 2]) }
#   Datum { i: IntList([6, 4, 6, 4, 8, 8, 5]), o: IntList([4, 4, 6, 6, 8, 8, 5]) }
#   Datum { i: IntList([1, 9, 6, 2]), o: IntList([2, 9, 6, 1]) }
#   Datum { i: IntList([2, 3, 1, 0, 1, 3, 4, 1, 0, 4]), o: IntList([0, 3, 1, 2, 1, 3, 4, 1, 0, 4]) }
#   Datum { i: IntList([0, 3, 2, 1, 0, 0, 1, 7, 4]), o: IntList([1, 3, 2, 0, 0, 0, 1, 7, 4]) }
#   Datum { i: IntList([7, 8, 6, 5, 6, 7, 7, 5, 6, 5]), o: IntList([5, 8, 6, 7, 6, 7, 7, 5, 6, 5]) }
#   Datum { i: IntList([7, 8, 4, 6, 1, 2, 9, 5]), o: IntList([6, 8, 4, 7, 1, 2, 9, 5]) }
#   Datum { i: IntList([2, 1, 9, 9, 3, 9, 3, 2]), o: IntList([9, 1, 9, 2, 3, 9, 3, 2]) }
#   Datum { i: IntList([8, 3, 8, 3]), o: IntList([3, 3, 8, 8]) }
#   Datum { i: IntList([7, 9, 1, 5, 6, 3, 0]), o: IntList([5, 9, 1, 7, 6, 3, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c033,0,3,1,1247064,1055958,1205071,1205071,600.002725777,601.751386648
c033,0,3,2,479576,450330,462664,462664,1200.011762074,1202.77567267
c033,0,3,3,291265,268913,279096,279096,1800.01381459,1803.357945907
c033,0,3,4,203484,185449,190673,190673,2400.017403704,2404.056649373
c033,0,3,5,144574,133923,138418,138418,3000.0245583290002,3004.877548527
c033,0,3,6,105530,97693,100787,100787,3600.034105838,3605.800730176
c033,0,3,7,79802,73827,76160,76160,4200.036740988,4206.570494807
c033,0,3,8,69836,63194,65257,65257,4800.037366652,4807.216775211
c033,0,3,9,59624,53730,55441,55441,5400.054272611,5407.944764931
c033,0,3,10,51090,46122,47307,47307,6000.063265394,6008.703753934
c033,0,3,11,49183,43902,45355,45355,6600.075335989,6609.377051808
# search time: 6600.075s
# total time: 6609.656s
c033,1,3,1,1244494,1015716,1192869,1192869,600.001181046,600.233155313
c033,1,3,2,485992,456751,468870,468870,1200.013606514,1200.650090878
c033,1,3,3,285617,263764,273997,273997,1800.0139992929999,1800.914926095
c033,1,3,4,195099,177373,182129,182129,2400.018290479,2401.255816393
c033,1,3,5,145569,135489,139669,139669,3000.022734082,3001.656653159
c033,1,3,6,105103,97523,100543,100543,3600.0238927630003,3602.061778928
c033,1,3,7,78096,72112,74560,74560,4200.025995512,4202.469204167
c033,1,3,8,70416,63753,65606,65606,4800.050892433,4802.788227093
c033,1,3,9,59940,54087,55749,55749,5400.052208755999,5403.135431639
c033,1,3,10,51335,46061,47406,47406,6000.056232695999,6003.46664841
c033,1,3,11,48973,43893,45159,45159,6600.065837136999,6603.838963356
# search time: 6600.066s
# total time: 13213.929s
c033,2,3,1,1218860,1031082,1177560,1177560,600.002057062,600.290673956
c033,2,3,2,466702,438542,450764,450764,1200.003924083,1200.573625473
c033,2,3,3,281923,260583,270553,270553,1800.004128809,1800.75658914
c033,2,3,4,193782,176495,181112,181112,2400.008171732,2401.008922304
c033,2,3,5,144605,134230,138369,138369,3000.010648013,3001.239703666
c033,2,3,6,103813,96591,99278,99278,3600.014040708,3601.482599244
c033,2,3,7,79790,73657,76047,76047,4200.015242257,4201.773104809
c033,2,3,8,70826,63737,65834,65834,4800.020031749,4801.958352146
c033,2,3,9,59134,53264,54989,54989,5400.027448977,5402.215830975
c033,2,3,10,49661,44960,46135,46135,6000.037623856,6002.507708253
c033,2,3,11,48455,43528,44770,44770,6600.044321658001,6602.74696415
# search time: 6600.044s
# total time: 19817.113s
c033,3,3,1,1324552,1157259,1289952,1289952,600.000142872,600.312408088
c033,3,3,2,469306,440662,452794,452794,1200.000148017,1200.541918104
c033,3,3,3,284934,262834,273129,273129,1800.0020983629997,1800.695893154
c033,3,3,4,195878,178040,182881,182881,2400.0042116739996,2400.865755181
c033,3,3,5,145145,134499,138872,138872,3000.0044725469998,3001.075719252
c033,3,3,6,103942,96644,99337,99337,3600.008206356,3601.332629956
c033,3,3,7,77444,71617,73937,73937,4200.009328878,4201.534293187
c033,3,3,8,69630,62694,64904,64904,4800.017861429,4801.733189226
c033,3,3,9,58280,52802,54319,54319,5400.024265934,5401.948598813
c033,3,3,10,50573,45567,46779,46779,6000.031426722,6002.111689019
c033,3,3,11,48689,43543,44846,44846,6600.048292484,6602.371313283
# search time: 6600.048s
# total time: 26419.910s
c033,4,3,1,1285336,1058595,1233119,1233119,600.007736391,600.195584653
c033,4,3,2,459094,431275,443496,443496,1200.009491705,1200.39501909
c033,4,3,3,284188,262445,272537,272537,1800.0106099670002,1800.542482825
c033,4,3,4,199914,182372,187360,187360,2400.01707776,2400.690329491
c033,4,3,5,144860,134925,138934,138934,3000.0177785280002,3000.855619194
c033,4,3,6,103334,95997,98889,98889,3600.021764729,3600.97076927
c033,4,3,7,76950,71237,73510,73510,4200.026871297,4201.193576251
c033,4,3,8,70742,63574,65928,65928,4800.027921224,4801.355090874
c033,4,3,9,58134,52723,54227,54227,5400.032453002001,5401.540198632
c033,4,3,10,50599,45330,46700,46700,6000.035470539001,6001.763405086
c033,4,3,11,48170,43272,44508,44508,6600.043357452001,6601.964342979
# search time: 6600.043s
# total time: 33023.239s
