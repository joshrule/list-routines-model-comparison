    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c043_5.json out/1593091766/results/c043_5_best.csv out/1593091766/results/c043_5_predictions.csv out/1593091766/results/c043_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 3, 7, 8, 2, 1, 9, 0]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([8, 7, 8, 8, 4, 7]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 0, 6, 4, 5, 5, 9, 6, 4, 1]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([4, 4, 6, 4, 6, 6, 6, 4, 6]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 5, 5, 5, 5]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([9, 9, 9, 9, 9, 9, 9, 9]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([0]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([4, 1, 6, 4, 6, 1, 6, 3, 4]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 5, 5, 6, 6, 5, 6, 5, 6, 6]), o: IntList([8, 2, 7, 0, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c043,0,5,1,654921,534311,627164,627164,600.021955148,602.702827362
c043,0,5,2,247200,231016,237474,237474,1200.0321124,1204.951168087
c043,0,5,3,230626,221048,226188,226188,1800.034060676,1806.482328336
c043,0,5,4,164891,156873,161629,161629,2400.037039942,2408.085320548
c043,0,5,5,116194,110251,113635,113635,3000.039122703,3009.875581362
c043,0,5,6,74226,69932,71958,71958,3600.051653876,3612.000338577
c043,0,5,7,88277,83567,86281,86281,4200.055919924,4213.456768345
c043,0,5,8,62521,58403,59786,59786,4800.060874338999,4815.437136882
c043,0,5,9,74103,69079,71197,71197,5400.0807929679995,5417.609871718
c043,0,5,10,38387,36159,37098,37098,6000.094536733999,6018.64028166
c043,0,5,11,33417,31550,32333,32333,6600.108878140999,6619.822685305
# search time: 6600.109s
# total time: 6620.043s
c043,1,5,1,638030,523219,611770,611770,600.014080679,600.283412508
c043,1,5,2,242253,225994,232492,232492,1200.019760009,1200.916691148
c043,1,5,3,143640,137156,140738,140738,1800.020993352,1801.526356118
c043,1,5,4,98381,94086,96482,96482,2400.027066562,2402.271091002
c043,1,5,5,66302,63154,65069,65069,3000.0376359790002,3002.967243253
c043,1,5,6,42614,40640,41465,41465,3600.0408160720003,3604.118553649
c043,1,5,7,51328,48723,50273,50273,4200.042262646,4204.958263363
c043,1,5,8,36761,34655,35432,35432,4800.042725265001,4806.165052304
c043,1,5,9,43900,41064,42290,42290,5400.046878892001,5406.747407306
c043,1,5,10,38227,35866,36986,36986,6000.051358171,6007.345419344
c043,1,5,11,33416,31642,32471,32471,6600.056382642,6607.980601614
# search time: 6600.056s
# total time: 13228.322s
c043,2,5,1,646312,529182,619525,619525,600.000428641,600.225361845
c043,2,5,2,245612,229021,235567,235567,1200.001471969,1200.656281485
c043,2,5,3,145661,139293,142713,142713,1800.001873163,1801.063245021
c043,2,5,4,97992,93471,96128,96128,2400.008347855,2401.606896382
c043,2,5,5,68082,65115,66764,66764,3000.014789004,3002.24541064
c043,2,5,6,42520,40372,41390,41390,3600.020198165,3603.005812137
c043,2,5,7,51546,48972,50495,50495,4200.037008855,4203.550906627
c043,2,5,8,36990,34997,35751,35751,4800.04165975,4804.333609398
c043,2,5,9,44299,41698,42823,42823,5400.052555441,5404.81307845
c043,2,5,10,39633,37418,38442,38442,6000.055485583,6005.186596597
c043,2,5,11,33233,31286,32197,32197,6600.06214455,6605.678620368
# search time: 6600.062s
# total time: 19834.313s
c043,3,5,1,646143,528486,618993,618993,600.016883051,600.213513521
c043,3,5,2,243249,227100,233566,233566,1200.017121604,1200.591493463
c043,3,5,3,143377,137110,140588,140588,1800.0185160190001,1800.953514562
c043,3,5,4,97433,92844,95536,95536,2400.021551667,2401.353508618
c043,3,5,5,67980,65134,66681,66681,3000.02777969,3001.844307762
c043,3,5,6,42146,39881,41015,41015,3600.0292782779998,3602.454953543
c043,3,5,7,51888,49363,50837,50837,4200.03242744,4202.948417794
c043,3,5,8,35752,33436,34235,34235,4800.033437924,4803.423828337
c043,3,5,9,42869,39987,41437,41437,5400.041861114,5403.851625768
c043,3,5,10,37713,35356,36424,36424,6000.056153354,6004.198861369
c043,3,5,11,33677,31600,32488,32488,6600.069404773,6604.562334283
# search time: 6600.069s
# total time: 26439.181s
c043,4,5,1,630239,514950,603999,603999,600.002753235,600.165196253
c043,4,5,2,248232,231873,238259,238259,1200.002882313,1200.442954576
c043,4,5,3,144637,138348,141802,141802,1800.0042266,1800.683823043
c043,4,5,4,99018,94618,97102,97102,2400.005571193,2401.001466033
c043,4,5,5,67878,65147,66619,66619,3000.013039264,3001.420859408
c043,4,5,6,43073,40689,41895,41895,3600.023648995,3601.833589943
c043,4,5,7,51671,49114,50569,50569,4200.031758992,4202.226468697
c043,4,5,8,38529,36382,37207,37207,4800.0415300859995,4802.69339208
c043,4,5,9,43961,41271,42441,42441,5400.057951819999,5402.950725411
c043,4,5,10,38252,35971,37021,37021,6000.0648057749995,6003.244022606
c043,4,5,11,32966,31033,31944,31944,6600.069973191999,6603.503355609
# search time: 6600.070s
# total time: 33043.004s
