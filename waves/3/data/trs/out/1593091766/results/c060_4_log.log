    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c060_4.json out/1593091766/results/c060_4_best.csv out/1593091766/results/c060_4_predictions.csv out/1593091766/results/c060_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 4, 0, 4, 7, 7, 8, 1]), o: IntList([6, 4, 6, 0, 4, 0, 4, 7, 8]) }
#   Datum { i: IntList([2, 0, 7, 6, 4, 1, 3, 0, 9, 6]), o: IntList([2, 0, 2, 7, 0, 7, 4, 4, 3]) }
#   Datum { i: IntList([6, 5, 5, 5, 2, 2, 6, 5]), o: IntList([6, 5, 6, 5, 5, 5, 4, 2, 6]) }
#   Datum { i: IntList([3, 7, 2, 2, 4, 9, 4, 3]), o: IntList([3, 7, 3, 2, 7, 2, 4, 4, 4]) }
#   Datum { i: IntList([8, 8, 8, 8, 1, 1, 1, 8, 8, 1]), o: IntList([8, 8, 8, 8, 8, 8, 4, 1, 1]) }
#   Datum { i: IntList([0, 3, 1, 8, 2, 8, 5, 2, 0, 3]), o: IntList([0, 3, 0, 1, 3, 1, 4, 2, 5]) }
#   Datum { i: IntList([7, 7, 9, 9, 9, 9, 9, 7, 1]), o: IntList([7, 7, 7, 9, 7, 9, 4, 9, 9]) }
#   Datum { i: IntList([8, 4, 6, 5, 3, 7, 2, 0, 0, 9]), o: IntList([8, 4, 8, 6, 4, 6, 4, 3, 2]) }
#   Datum { i: IntList([2, 1, 3, 9, 0, 6, 6]), o: IntList([2, 1, 2, 3, 1, 3, 4, 0, 6]) }
#   Datum { i: IntList([7, 0, 4, 6, 1, 8, 3]), o: IntList([7, 0, 7, 4, 0, 4, 4, 1, 3]) }
#   Datum { i: IntList([0, 8, 8, 5, 1, 4, 5]), o: IntList([0, 8, 0, 8, 8, 8, 4, 1, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c060,0,4,1,655264,536785,627854,627854,600.012095821,602.699513417
c060,0,4,2,156278,144892,149331,149331,1200.014694897,1204.667066402
c060,0,4,3,92769,85377,88403,88403,1800.022383548,1805.970998603
c060,0,4,4,57199,52570,53816,53816,2400.026600059,2408.035437868
c060,0,4,5,43653,40097,41012,41012,3000.043984075,3010.151623551
c060,0,4,6,34123,31310,31992,31992,3600.049577236,3612.561079109
c060,0,4,7,28481,25971,26645,26645,4200.082366979,4214.824244645
c060,0,4,8,23708,21624,22218,22218,4800.103903697,4817.242880736
c060,0,4,9,22183,20449,21091,21091,5400.142598916999,5418.87258503
c060,0,4,10,18234,16619,17059,17059,6000.148055499999,6020.692391451
c060,0,4,11,16227,14659,15124,15124,6600.182198403999,6622.838447184
# search time: 6600.182s
# total time: 6623.012s
c060,1,4,1,644186,526792,617217,617217,600.000048646,600.35708417
c060,1,4,2,159802,148067,152602,152602,1200.0009446949998,1201.196435395
c060,1,4,3,93677,86500,89406,89406,1800.0027239319998,1801.794482725
c060,1,4,4,56480,51781,53104,53104,2400.0086491849997,2402.773479099
c060,1,4,5,43914,40115,41179,41179,3000.013323924,3003.828744023
c060,1,4,6,34121,30891,31878,31878,3600.026556374,3604.845668305
c060,1,4,7,28223,25685,26288,26288,4200.037976187999,4205.849332249
c060,1,4,8,24110,22066,22634,22634,4800.044760241999,4806.848882077
c060,1,4,9,22375,20759,21315,21315,5400.053897307999,5407.739370208
c060,1,4,10,18548,16912,17363,17363,6000.062126874999,6008.814137553
c060,1,4,11,16630,15102,15551,15551,6600.077540012999,6609.754747902
# search time: 6600.078s
# total time: 13233.029s
c060,2,4,1,647374,528561,620027,620027,600.005920367,600.256779322
c060,2,4,2,156353,144929,149280,149280,1200.0062826520002,1200.822360989
c060,2,4,3,92256,84659,87872,87872,1800.0309643020003,1801.246640855
c060,2,4,4,56230,51608,52976,52976,2400.0346163090003,2401.818850272
c060,2,4,5,44455,40886,41764,41764,3000.0493212130004,3002.494242371
c060,2,4,6,34242,31298,32052,32052,3600.0663640800003,3603.262402823
c060,2,4,7,28250,25699,26319,26319,4200.0704046480005,4204.121099504
c060,2,4,8,23816,21628,22202,22202,4800.075936208001,4804.783022986
c060,2,4,9,22520,21018,21582,21582,5400.087286615,5405.306198436
c060,2,4,10,18074,16339,16807,16807,6000.115578357,6006.140647974
c060,2,4,11,16766,15183,15628,15628,6600.117562388,6606.838019235
# search time: 6600.118s
# total time: 19840.144s
c060,3,4,1,659381,570182,640173,640173,600.001899857,600.305212208
c060,3,4,2,157480,145510,150193,150193,1200.004664755,1200.68823197
c060,3,4,3,92482,85327,88199,88199,1800.009429966,1800.992078095
c060,3,4,4,56927,52183,53530,53530,2400.010777168,2401.527196216
c060,3,4,5,43173,39509,40567,40567,3000.024209801,3001.904970451
c060,3,4,6,34309,31348,32079,32079,3600.06133021,3602.380809153
c060,3,4,7,47774,43778,44683,44683,4200.063854424,4202.959236548
c060,3,4,8,41441,37874,38692,38692,4800.0684546,4803.45666952
c060,3,4,9,37512,34116,35315,35315,5400.068835626,5403.904773377
c060,3,4,10,31812,28989,29600,29600,6000.084666593,6004.347001811
c060,3,4,11,29026,26348,27048,27048,6600.092882226,6604.935889698
# search time: 6600.093s
# total time: 26445.351s
c060,4,4,1,1068693,930496,1039143,1039143,600.000542442,600.321248812
c060,4,4,2,263844,244617,252191,252191,1200.001171996,1200.604854493
c060,4,4,3,156157,144013,149252,149252,1800.0024268920001,1800.796455025
c060,4,4,4,95236,87844,90244,90244,2400.0057068710003,2401.285126381
c060,4,4,5,43546,39737,40830,40830,3000.0196025950004,3001.626665005
c060,4,4,6,34536,31619,32380,32380,3600.0384390520003,3602.018453832
c060,4,4,7,29309,26566,27262,27262,4200.042470202,4202.264544437
c060,4,4,8,41483,37962,38768,38768,4800.0504301050005,4802.638387887
c060,4,4,9,37368,33972,35175,35175,5400.0708048530005,5403.090463749
c060,4,4,10,32014,29030,29725,29725,6000.078664643001,6003.387872057
c060,4,4,11,29077,26316,27016,27016,6600.1016189090005,6603.797635774
# search time: 6600.102s
# total time: 33049.530s
