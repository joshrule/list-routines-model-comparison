    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.09s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c014_4.json out/1593091766/results/c014_4_best.csv out/1593091766/results/c014_4_predictions.csv out/1593091766/results/c014_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 0, 0, 1, 1]), o: IntList([0, 1, 1]) }
#   Datum { i: IntList([5, 4, 5, 8, 6, 2, 8]), o: IntList([5, 8, 6, 2, 8]) }
#   Datum { i: IntList([2, 3, 0]), o: IntList([0]) }
#   Datum { i: IntList([9]), o: IntList([]) }
#   Datum { i: IntList([4, 2, 3, 3, 6, 7, 8]), o: IntList([3, 3, 6, 7, 8]) }
#   Datum { i: IntList([6, 3, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([9, 9, 4, 4, 9, 4]), o: IntList([4, 4, 9, 4]) }
#   Datum { i: IntList([3, 0, 5, 7, 7, 5, 3, 0, 5]), o: IntList([5, 7, 7, 5, 3]) }
#   Datum { i: IntList([9, 9, 1]), o: IntList([1]) }
#   Datum { i: IntList([0, 7, 9, 6, 1, 8, 2, 3]), o: IntList([9, 6, 1, 8, 2]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c014,0,4,1,1087359,920250,1050566,1050566,600.000002675,601.9710272
c014,0,4,2,536699,506045,519319,519319,1200.006165861,1203.131595863
c014,0,4,3,319323,293330,300879,300879,1800.013414651,1804.137918952
c014,0,4,4,306701,279778,285539,285539,2400.014843434,2404.844418081
c014,0,4,5,264144,244271,252636,252636,3000.021405403,3005.530339407
c014,0,4,6,118057,109545,114123,114123,3600.024299551,3606.234150822
c014,0,4,7,106838,98941,103246,103246,4200.024978839,4206.846898978
c014,0,4,8,88245,81551,84961,84961,4800.03162691,4807.422240726
c014,0,4,9,60952,56965,58807,58807,5400.033148165,5408.062798677
c014,0,4,10,57117,52660,54933,54933,6000.040604956,6008.60963494
c014,0,4,11,43186,40112,41847,41847,6600.053173851,6609.223506905
# search time: 6600.053s
# total time: 6609.646s
c014,1,4,1,687476,562443,658779,658779,600.000025782,600.24041469
c014,1,4,2,323907,305506,313754,313754,1200.0039579519998,1200.726302361
c014,1,4,3,198718,182697,187842,187842,1800.0051473519998,1801.141528745
c014,1,4,4,182143,166050,169143,169143,2400.0057256269997,2401.518005131
c014,1,4,5,163677,150444,155969,155969,3000.006243082,3001.910192658
c014,1,4,6,119845,111248,115808,115808,3600.006888591,3602.311621543
c014,1,4,7,106444,98587,102824,102824,4200.009770701,4202.723688491
c014,1,4,8,88305,81595,84942,84942,4800.015436462,4803.089891032
c014,1,4,9,60177,56276,58047,58047,5400.018550098001,5403.532047677
c014,1,4,10,56963,52574,54857,54857,6000.018685113,6003.884789552
c014,1,4,11,43622,40541,42359,42359,6600.031344672,6604.308738265
# search time: 6600.031s
# total time: 13214.654s
c014,2,4,1,706574,614845,686819,686819,600.000035696,600.276417897
c014,2,4,2,342089,321696,330438,330438,1200.0053627030002,1200.628145346
c014,2,4,3,194166,178440,183113,183113,1800.0146097730003,1800.971861706
c014,2,4,4,186542,169742,173331,173331,2400.0162473110004,2401.246666968
c014,2,4,5,163154,150155,155586,155586,3000.0176508230006,3001.5037131
c014,2,4,6,119650,111023,115626,115626,3600.0192772750006,3601.758656456
c014,2,4,7,106630,98802,103022,103022,4200.022259266,4202.003755544
c014,2,4,8,87686,80990,84428,84428,4800.027190046,4802.29027667
c014,2,4,9,62074,58094,60118,60118,5400.030699158,5402.585113048
c014,2,4,10,56798,52421,54684,54684,6000.039705083,6002.921657527
c014,2,4,11,45647,42527,44520,44520,6600.039828166,6603.207731804
# search time: 6600.040s
# total time: 19818.408s
c014,3,4,1,693438,567521,664362,664362,600.006470002,600.188082847
c014,3,4,2,327830,308848,317101,317101,1200.0068955860002,1200.463731453
c014,3,4,3,198869,182876,187990,187990,1800.0086510280003,1800.678833671
c014,3,4,4,186460,169799,173349,173349,2400.01244863,2400.880512197
c014,3,4,5,168019,154607,160252,160252,3000.032133521,3001.142099654
c014,3,4,6,119286,110715,115314,115314,3600.0323215420003,3601.3252897
c014,3,4,7,105893,97983,102355,102355,4200.044335843,4201.549316285
c014,3,4,8,88079,81354,84744,84744,4800.048580632,4801.792645201
c014,3,4,9,61624,57688,59734,59734,5400.052467051,5402.08221871
c014,3,4,10,56272,51926,54421,54421,6000.058455962,6002.270840721
c014,3,4,11,43601,40487,42310,42310,6600.07739223,6602.459808678
# search time: 6600.077s
# total time: 26421.386s
c014,4,4,1,682400,559437,654179,654179,600.008211897,600.18725074
c014,4,4,2,324389,305586,313857,313857,1200.012610156,1200.432123534
c014,4,4,3,193685,178228,183089,183089,1800.0152699199998,1800.605714182
c014,4,4,4,179324,163369,166412,166412,2400.017031303,2400.790664549
c014,4,4,5,163121,149788,155331,155331,3000.0175102549997,3000.992893485
c014,4,4,6,196129,182777,189923,189923,3600.0194750799997,3601.15633338
c014,4,4,7,176855,164477,171106,171106,4200.022488584999,4201.33287048
c014,4,4,8,151210,140291,145675,145675,4800.026110028999,4801.480376867
c014,4,4,9,108165,101354,104743,104743,5400.033562704999,5401.66412687
c014,4,4,10,97736,90418,94259,94259,6000.034028974999,6001.813269988
c014,4,4,11,78226,73059,76135,76135,6600.035433275999,6602.079981696
# search time: 6600.035s
# total time: 33024.293s
