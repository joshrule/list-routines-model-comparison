    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c028_5.json out/1593091766/results/c028_5_best.csv out/1593091766/results/c028_5_predictions.csv out/1593091766/results/c028_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 8, 6, 1, 2]), o: IntList([7, 8, 1, 2]) }
#   Datum { i: IntList([5, 8, 1, 0]), o: IntList([5, 8, 0]) }
#   Datum { i: IntList([4, 6, 6, 6, 4, 4, 4, 4]), o: IntList([4, 6, 6, 4, 4, 4, 4]) }
#   Datum { i: IntList([6, 9, 9, 6, 5, 9]), o: IntList([6, 9, 6, 5, 9]) }
#   Datum { i: IntList([2, 2, 1, 1, 6, 8, 5, 3, 8]), o: IntList([2, 2, 1, 6, 8, 5, 3, 8]) }
#   Datum { i: IntList([4, 3, 9, 5, 1, 7, 2]), o: IntList([4, 9, 5, 1, 7, 2]) }
#   Datum { i: IntList([2, 7, 0, 7]), o: IntList([2, 7, 7]) }
#   Datum { i: IntList([5, 3, 0]), o: IntList([5, 3]) }
#   Datum { i: IntList([9, 3, 6, 3, 8, 3, 1, 7, 5, 4]), o: IntList([9, 3, 3, 8, 3, 1, 7, 5, 4]) }
#   Datum { i: IntList([1, 8, 5, 4, 3, 2, 0, 6, 7, 9]), o: IntList([1, 5, 4, 3, 2, 0, 6, 7, 9]) }
#   Datum { i: IntList([0, 1, 8, 0, 0]), o: IntList([0, 8, 0, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c028,0,5,1,700370,602989,679161,679161,600.002071499,602.979685164
c028,0,5,2,302948,283920,291884,291884,1200.002440316,1204.800499521
c028,0,5,3,214922,197695,203137,203137,1800.004001617,1806.244038784
c028,0,5,4,118525,110115,113742,113742,2400.004040282,2407.50224843
c028,0,5,5,88772,82292,84869,84869,3000.004839477,3008.822019521
c028,0,5,6,61576,56877,58656,58656,3600.00568125,3610.185935523
c028,0,5,7,51632,46383,46738,46738,4200.011456971,4211.320442761
c028,0,5,8,46524,42402,42720,42720,4800.039525629,4812.483076986
c028,0,5,9,46827,42915,43420,43420,5400.043705207,5413.611494187
c028,0,5,10,36285,33367,33733,33733,6000.04682244,6014.601107276
c028,0,5,11,28426,26134,26502,26502,6600.051076434,6615.426953956
# search time: 6600.051s
# total time: 6615.709s
c028,1,5,1,689554,564285,660675,660675,600.000303792,600.313793234
c028,1,5,2,297443,278443,286652,286652,1200.000605349,1200.953129304
c028,1,5,3,218433,201506,207140,207140,1800.0013784869998,1801.560149285
c028,1,5,4,117671,109496,112991,112991,2400.0030143629997,2402.117982275
c028,1,5,5,88546,82070,84685,84685,3000.0067730909996,3002.709848581
c028,1,5,6,62532,57644,59432,59432,3600.0145346069994,3603.293723311
c028,1,5,7,51203,45730,46078,46078,4200.016580201,4203.965226873
c028,1,5,8,46846,42682,43002,43002,4800.031426199,4804.519071201
c028,1,5,9,46557,41895,42344,42344,5400.043611471,5405.089996939
c028,1,5,10,36571,33647,34021,34021,6000.049779102,6005.77896815
c028,1,5,11,28651,26344,26696,26696,6600.061758627,6606.342244418
# search time: 6600.062s
# total time: 13222.647s
c028,2,5,1,692569,597658,671967,671967,600.000726045,600.298824694
c028,2,5,2,301588,282393,290557,290557,1200.001157378,1200.712256881
c028,2,5,3,218366,201418,207024,207024,1800.0025606049999,1801.071889076
c028,2,5,4,188493,176290,181598,181598,2400.003611873,2401.439905618
c028,2,5,5,146127,136222,140440,140440,3000.021158106,3001.858830675
c028,2,5,6,105637,97809,100765,100765,3600.0272253719995,3602.280171657
c028,2,5,7,89390,79818,80415,80415,4200.034997737,4202.640159121
c028,2,5,8,80061,71943,72331,72331,4800.036661546,4803.026870092
c028,2,5,9,80623,71934,72636,72636,5400.037258982999,5403.337178845
c028,2,5,10,62439,55775,56360,56360,6000.042847158999,6003.687831408
c028,2,5,11,46678,42292,42887,42887,6600.0467284589995,6604.042469962
# search time: 6600.047s
# total time: 19827.074s
c028,3,5,1,1077049,880532,1032609,1032609,600.002455021,600.194321975
c028,3,5,2,468295,440204,452483,452483,1200.0035124699998,1200.519432605
c028,3,5,3,356288,328165,337348,337348,1800.0043051849998,1800.786016069
c028,3,5,4,190746,178321,183756,183756,2400.004988195,2401.034107551
c028,3,5,5,145480,135046,139523,139523,3000.0172293279998,3001.325558437
c028,3,5,6,102566,94795,97939,97939,3600.026449618,3601.589253665
c028,3,5,7,89092,79464,80045,80045,4200.029517643,4201.804190341
c028,3,5,8,81230,72867,73318,73318,4800.035192587,4802.041133596
c028,3,5,9,79789,72042,72757,72757,5400.060112976,5402.315699264
c028,3,5,10,63577,57052,57669,57669,6000.071157296,6002.594767081
c028,3,5,11,47739,43381,44004,44004,6600.072026751,6602.809414788
# search time: 6600.072s
# total time: 26430.531s
c028,4,5,1,1114217,970336,1083592,1083592,600.000140835,600.260858923
c028,4,5,2,473597,444453,457050,457050,1200.000835377,1200.485357345
c028,4,5,3,348444,320644,329425,329425,1800.021542764,1800.709398874
c028,4,5,4,191022,178666,183863,183863,2400.021734518,2400.908257709
c028,4,5,5,142755,132290,137068,137068,3000.032451584,3001.103614483
c028,4,5,6,103493,94820,98670,98670,3600.0342857919995,3601.323284001
c028,4,5,7,87898,77703,78245,78245,4200.039949116999,4201.525932884
c028,4,5,8,80889,72874,73379,73379,4800.0406947189995,4801.69140291
c028,4,5,9,79831,70840,71522,71522,5400.046350805999,5401.825415331
c028,4,5,10,56831,50272,50966,50966,6000.047225918999,6002.073858646
c028,4,5,11,47977,43594,44215,44215,6600.047426142999,6602.376140726
# search time: 6600.047s
# total time: 33033.680s
