    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c024_5.json out/1593091766/results/c024_5_best.csv out/1593091766/results/c024_5_predictions.csv out/1593091766/results/c024_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 9, 4, 9, 6, 1]), o: IntList([9, 5, 9, 4, 9, 6, 1]) }
#   Datum { i: IntList([0, 9, 9, 2, 6, 0, 1, 4, 6]), o: IntList([0, 8, 9, 9, 2, 6, 0, 1, 4, 6]) }
#   Datum { i: IntList([6, 7, 1, 3, 5, 6, 9, 0, 4, 3]), o: IntList([6, 5, 7, 1, 3, 5, 6, 9, 0, 4, 3]) }
#   Datum { i: IntList([8, 7, 4, 1]), o: IntList([8, 5, 7, 4, 1]) }
#   Datum { i: IntList([4, 3, 4, 3, 8, 4, 4, 3]), o: IntList([4, 8, 3, 4, 3, 8, 4, 4, 3]) }
#   Datum { i: IntList([5, 2]), o: IntList([5, 5, 2]) }
#   Datum { i: IntList([6, 0, 6, 5, 0, 5, 7]), o: IntList([6, 5, 0, 6, 5, 0, 5, 7]) }
#   Datum { i: IntList([3, 1, 6, 8, 2, 9, 4, 5, 0, 7]), o: IntList([3, 8, 1, 6, 8, 2, 9, 4, 5, 0, 7]) }
#   Datum { i: IntList([0, 8, 3]), o: IntList([0, 8, 8, 3]) }
#   Datum { i: IntList([9, 9, 2, 0, 0, 1, 2, 8, 4, 2]), o: IntList([9, 5, 9, 2, 0, 0, 1, 2, 8, 4, 2]) }
#   Datum { i: IntList([7, 6, 0, 7, 6]), o: IntList([7, 5, 6, 0, 7, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c024,0,5,1,699920,596945,677385,677385,600.000114104,603.070463582
c024,0,5,2,211121,196081,201521,201521,1200.0015905,1204.746682806
c024,0,5,3,108013,102170,102834,102834,1800.0021641829999,1805.984476991
c024,0,5,4,59119,55539,55894,55894,2400.01015222,2407.535108475
c024,0,5,5,51274,47195,47589,47589,3000.0160379599997,3008.938434805
c024,0,5,6,36311,33179,33443,33443,3600.0264583109997,3610.918364528
c024,0,5,7,37294,33556,33956,33956,4200.061149409999,4212.260604439
c024,0,5,8,32197,29212,29614,29614,4800.080894428,4813.285774681
c024,0,5,9,25983,23730,23969,23969,5400.099771237999,5414.621984674
c024,0,5,10,22681,21043,21160,21160,6000.121762286999,6015.916014918
c024,0,5,11,20397,18663,18862,18862,6600.144668339999,6617.145979481
# search time: 6600.145s
# total time: 6617.399s
c024,1,5,1,675513,586683,656311,656311,600.002945103,600.446838121
c024,1,5,2,204113,189627,195123,195123,1200.004765925,1201.204411089
c024,1,5,3,105963,99736,100501,100501,1800.005585976,1801.780087982
c024,1,5,4,98714,92685,93235,93235,2400.006945837,2402.463778257
c024,1,5,5,89534,82177,82793,82793,3000.008624682,3003.140485775
c024,1,5,6,67046,61793,62351,62351,3600.05361215,3603.706318529
c024,1,5,7,65812,58627,59309,59309,4200.058970421,4204.403510181
c024,1,5,8,57179,50649,51346,51346,4800.05931204,4804.879930143
c024,1,5,9,43231,38692,39054,39054,5400.065917377,5405.559895023
c024,1,5,10,40303,36406,36648,36648,6000.076850483,6006.26243881
c024,1,5,11,34535,31340,31605,31605,6600.078627004001,6606.956194352
# search time: 6600.079s
# total time: 13225.091s
c024,2,5,1,1154645,1022608,1128601,1128601,600.001384854,600.385542304
c024,2,5,2,342475,319156,328005,328005,1200.001756447,1200.767310775
c024,2,5,3,181770,172226,173785,173785,1800.003300198,1801.036199358
c024,2,5,4,96832,90441,90855,90855,2400.010338995,2401.430600958
c024,2,5,5,85580,77815,78354,78354,3000.015633088,3002.203754122
c024,2,5,6,35126,32476,32856,32856,3600.039377798,3602.753791366
c024,2,5,7,36309,32237,32581,32581,4200.049527661,4203.134981675
c024,2,5,8,31939,29050,29442,29442,4800.050123078,4803.451213343
c024,2,5,9,22670,20025,20294,20294,5400.063423443,5403.971342982
c024,2,5,10,23289,21509,21691,21691,6000.076463034,6004.288057509
c024,2,5,11,18768,17094,17220,17220,6600.108584555,6604.761580519
# search time: 6600.109s
# total time: 19830.370s
c024,3,5,1,662405,541348,634526,634526,600.000547643,600.191890327
c024,3,5,2,204265,189865,195235,195235,1200.001340086,1200.476031619
c024,3,5,3,107487,101770,102410,102410,1800.006236638,1800.718941769
c024,3,5,4,56558,52824,53097,53097,2400.01396322,2400.977684433
c024,3,5,5,49496,45022,45384,45384,3000.0192851449997,3001.270883828
c024,3,5,6,38693,35777,36140,36140,3600.0210001769997,3601.443833292
c024,3,5,7,36871,33158,33558,33558,4200.0442988039995,4201.878050999
c024,3,5,8,31819,28875,29281,29281,4800.052586837,4802.195451965
c024,3,5,9,25270,23056,23317,23317,5400.065021857,5402.606001519
c024,3,5,10,23372,21570,21742,21742,6000.079932406999,6002.858486054
c024,3,5,11,19178,17346,17520,17520,6600.093210687999,6603.19682268
# search time: 6600.093s
# total time: 26434.009s
c024,4,5,1,654823,537188,627972,627972,600.000032693,600.174262638
c024,4,5,2,204106,189994,195199,195199,1200.000833613,1200.41848518
c024,4,5,3,105950,99892,100737,100737,1800.001793123,1800.615612853
c024,4,5,4,56367,52515,52812,52812,2400.007535565,2400.899772637
c024,4,5,5,49874,45400,45779,45779,3000.0207438390003,3001.172474674
c024,4,5,6,36541,33456,33720,33720,3600.022154102,3601.392153415
c024,4,5,7,36418,32981,33403,33403,4200.027087694,4201.637408313
c024,4,5,8,32006,28492,28870,28870,4800.0376875520005,4801.912984715
c024,4,5,9,25170,23104,23361,23361,5400.049853782,5402.213995248
c024,4,5,10,24147,22226,22465,22465,6000.065723412001,6002.532248544
c024,4,5,11,19576,17872,18044,18044,6600.081478627001,6602.783259467
# search time: 6600.081s
# total time: 33037.231s
