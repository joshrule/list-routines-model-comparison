    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.34s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c002_1.json out/1593091766/results/c002_1_best.csv out/1593091766/results/c002_1_predictions.csv out/1593091766/results/c002_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 7, 7, 7]), o: IntList([7]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([7, 3, 2, 1, 6, 2, 4, 5]), o: IntList([2]) }
#   Datum { i: IntList([5, 5]), o: IntList([]) }
#   Datum { i: IntList([9, 9, 9, 9, 0, 0, 9]), o: IntList([9]) }
#   Datum { i: IntList([9, 3, 6, 0]), o: IntList([6]) }
#   Datum { i: IntList([3, 3]), o: IntList([]) }
#   Datum { i: IntList([8, 8, 4, 7, 7, 9, 5, 0]), o: IntList([4]) }
#   Datum { i: IntList([4]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([3, 1]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c002,0,1,1,1254428,1031483,1203834,1203834,600.000465737,601.803370173
c002,0,1,2,785833,742369,764151,764151,1200.0007077589999,1202.855279596
c002,0,1,3,890988,836528,865772,865772,1800.001041599,1803.661693572
c002,0,1,4,563811,516906,542426,542426,2400.001392696,2404.349779198
c002,0,1,5,537117,501276,520321,520321,3000.004460016,3004.793428879
c002,0,1,6,383357,357438,371049,371049,3600.0046177209997,3605.33376212
c002,0,1,7,370998,344882,358964,358964,4200.005039492,4205.801240165
c002,0,1,8,317277,294386,306467,306467,4800.006612081,4806.278240835
c002,0,1,9,277397,255796,267373,267373,5400.008189739,5406.73008307
c002,0,1,10,270186,249144,260305,260305,6000.008571062001,6007.129552676
c002,0,1,11,252628,232124,243048,243048,6600.0099318170005,6607.531493925
# search time: 6600.010s
# total time: 6608.108s
c002,1,1,1,1248999,1025432,1198516,1198516,600.001095522,600.213844139
c002,1,1,2,776635,736758,757086,757086,1200.00220448,1200.542603361
c002,1,1,3,899382,843291,873967,873967,1800.0030484879999,1800.882017895
c002,1,1,4,574912,527434,553242,553242,2400.0037218159996,2401.190662785
c002,1,1,5,537131,501500,520692,520692,3000.0050721959997,3001.426202331
c002,1,1,6,378035,352324,365983,365983,3600.0096543689997,3601.712445551
c002,1,1,7,370377,344320,358202,358202,4200.012754449999,4201.947940101
c002,1,1,8,315846,292730,305080,305080,4800.013245093999,4802.199916051
c002,1,1,9,279278,257820,269140,269140,5400.015285481999,5402.446345604
c002,1,1,10,271131,249878,261294,261294,6000.015825084999,6002.708874322
c002,1,1,11,249002,228811,239694,239694,6600.016685249999,6602.949849856
# search time: 6600.017s
# total time: 13211.973s
c002,2,1,1,1318689,1162430,1287195,1287195,600.002755533,600.303098076
c002,2,1,2,784555,743468,764092,764092,1200.002981798,1200.55622586
c002,2,1,3,930985,870649,904263,904263,1800.003102962,1800.83726438
c002,2,1,4,574653,526791,552778,552778,2400.003270276,2401.078909506
c002,2,1,5,550694,514655,533567,533567,3000.0044575029997,3001.279138571
c002,2,1,6,378350,352495,366230,366230,3600.0048067039997,3601.497841929
c002,2,1,7,367190,341393,355238,355238,4200.008498284999,4201.692619848
c002,2,1,8,316884,294081,306318,306318,4800.010574319999,4801.883506787
c002,2,1,9,278981,257560,268931,268931,5400.011446846999,5402.082999874
c002,2,1,10,270108,248767,260243,260243,6000.011999215999,6002.288965577
c002,2,1,11,252263,231768,242695,242695,6600.012545439999,6602.46708424
# search time: 6600.013s
# total time: 19815.285s
c002,3,1,1,1280523,1051330,1227700,1227700,600.008260105,600.19451504
c002,3,1,2,809556,764925,787123,787123,1200.01075715,1200.422482918
c002,3,1,3,915118,858548,889367,889367,1800.01101852,1800.671996068
c002,3,1,4,564873,518454,543558,543558,2400.011099361,2400.870828011
c002,3,1,5,543350,507208,526322,526322,3000.01345619,3001.048248399
c002,3,1,6,379799,354057,367669,367669,3600.013780559,3601.24019094
c002,3,1,7,368346,342360,356325,356325,4200.014080602,4201.388889345
c002,3,1,8,317921,295020,307208,307208,4800.016561786,4801.561582175
c002,3,1,9,280115,258514,269972,269972,5400.018309424,5401.716601135
c002,3,1,10,271788,250627,261990,261990,6000.018892887,6001.895773256
c002,3,1,11,250510,230177,241161,241161,6600.034321638001,6602.039428215
# search time: 6600.034s
# total time: 26418.447s
c002,4,1,1,1288563,1127386,1254727,1254727,600.000119775,600.263938095
c002,4,1,2,782448,742769,762776,762776,1200.002370883,1200.472062158
c002,4,1,3,929298,869410,902771,902771,1800.002815743,1800.71734454
c002,4,1,4,564461,518067,543006,543006,2400.003053759,2400.896981235
c002,4,1,5,539580,503337,522560,522560,3000.003476963,3001.058823523
c002,4,1,6,378960,353319,366857,366857,3600.003645275,3601.225577091
c002,4,1,7,367740,342019,355897,355897,4200.013552678,4201.374612647
c002,4,1,8,316117,293694,305553,305553,4800.014904840001,4801.524112088
c002,4,1,9,276069,255088,266217,266217,5400.021118398001,5401.68504512
c002,4,1,10,271647,250230,261721,261721,6000.021156140001,6001.822761723
c002,4,1,11,251492,231085,242103,242103,6600.022908550001,6601.955633248
# search time: 6600.023s
# total time: 33021.221s
