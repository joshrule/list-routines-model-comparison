    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c063_3.json out/1593091766/results/c063_3_best.csv out/1593091766/results/c063_3_predictions.csv out/1593091766/results/c063_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 2, 0]), o: IntList([2, 0]) }
#   Datum { i: IntList([3, 8, 4, 4]), o: IntList([]) }
#   Datum { i: IntList([0, 5, 0, 5, 5, 7]), o: IntList([5, 0, 5, 5, 7]) }
#   Datum { i: IntList([2, 6, 2, 6, 6, 6]), o: IntList([6, 6, 6]) }
#   Datum { i: IntList([1, 7, 9, 9, 8, 4, 1, 7, 8]), o: IntList([9, 9, 8, 4, 1, 7, 8]) }
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([2]) }
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([4, 1, 1, 4, 1, 1, 3]), o: IntList([1, 3]) }
#   Datum { i: IntList([3, 8, 8, 7, 7, 7, 8, 8]), o: IntList([7, 7, 8, 8]) }
#   Datum { i: IntList([0, 3, 9, 4, 6, 6, 7, 8, 2]), o: IntList([3, 9, 4, 6, 6, 7, 8, 2]) }
#   Datum { i: IntList([0, 9, 7, 1, 1, 5, 4, 3, 6, 6]), o: IntList([9, 7, 1, 1, 5, 4, 3, 6, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c063,0,3,1,1192431,1028339,1157109,1157109,600.001009349,602.037625398
c063,0,3,2,710947,664801,686379,686379,1200.001278448,1202.947615625
c063,0,3,3,671591,620919,646559,646559,1800.001933509,1803.737830012
c063,0,3,4,337934,309008,322885,322885,2400.00447132,2404.292809875
c063,0,3,5,251684,232764,241184,241184,3000.008404964,3004.793104064
c063,0,3,6,159416,148482,153246,153246,3600.010679895,3605.272896668
c063,0,3,7,146216,135534,140390,140390,4200.012907188,4205.672427356
c063,0,3,8,103481,95636,98764,98764,4800.01443559,4806.194785924
c063,0,3,9,96259,89690,92487,92487,5400.020360153,5406.682536281
c063,0,3,10,77846,73546,75071,75071,6000.023665337,6007.322802855
c063,0,3,11,68957,65020,66210,66210,6600.025627645,6607.83899575
# search time: 6600.026s
# total time: 6608.395s
c063,1,3,1,1127916,920661,1080390,1080390,600.004561219,600.218703835
c063,1,3,2,698226,653702,674314,674314,1200.011043681,1200.801047403
c063,1,3,3,401298,370040,385695,385695,1800.014763799,1801.178860216
c063,1,3,4,200305,183176,191084,191084,2400.01556418,2401.464367842
c063,1,3,5,151024,139854,144999,144999,3000.0172858290002,3001.727262453
c063,1,3,6,92653,85926,89234,89234,3600.0206860440003,3601.972040975
c063,1,3,7,83931,77411,80323,80323,4200.02441418,4202.193867717
c063,1,3,8,60561,55924,57922,57922,4800.036940963,4802.465233135
c063,1,3,9,55323,51485,53311,53311,5400.038953394001,5402.797110169
c063,1,3,10,46470,43823,45051,45051,6000.051192932001,6003.149865827
c063,1,3,11,40032,37773,38551,38551,6600.054662180001,6603.544426181
# search time: 6600.055s
# total time: 13212.410s
c063,2,3,1,704420,574638,674609,674609,600.009143146,600.192523934
c063,2,3,2,452582,422956,436387,436387,1200.009410961,1200.503000481
c063,2,3,3,401312,369229,384762,384762,1800.0096592549999,1800.827373992
c063,2,3,4,200613,183340,191343,191343,2400.01319446,2401.055915769
c063,2,3,5,151353,140097,145033,145033,3000.0154393999997,3001.298594045
c063,2,3,6,92416,85634,88957,88957,3600.0162451099995,3601.473603887
c063,2,3,7,85085,78726,81801,81801,4200.020548441,4201.632766728
c063,2,3,8,60710,55992,57984,57984,4800.021981983,4801.908300533
c063,2,3,9,55958,52174,53988,53988,5400.022656604,5402.128895389
c063,2,3,10,46315,43683,44930,44930,6000.026293926,6002.362502139
c063,2,3,11,39924,37603,38371,38371,6600.044117024,6602.669520766
# search time: 6600.044s
# total time: 19815.448s
c063,3,3,1,738700,641779,718081,718081,600.000860573,600.241128752
c063,3,3,2,457458,426047,440400,440400,1200.005303905,1200.506834572
c063,3,3,3,406196,374839,391520,391520,1800.006305168,1800.762754551
c063,3,3,4,200299,182953,191250,191250,2400.011069735,2400.94552978
c063,3,3,5,149961,138848,143936,143936,3000.012361288,3001.117791941
c063,3,3,6,92515,85772,89091,89091,3600.0224368920003,3601.245794517
c063,3,3,7,84668,78330,81406,81406,4200.027955675,4201.445850467
c063,3,3,8,59171,54444,56332,56332,4800.033919235,4801.681250379
c063,3,3,9,55661,51776,53591,53591,5400.048019702001,5401.839345045
c063,3,3,10,47147,44549,45786,45786,6000.052952623,6002.011255429
c063,3,3,11,40071,37823,38593,38593,6600.059354267,6602.32560261
# search time: 6600.059s
# total time: 26418.126s
c063,4,3,1,686809,581518,663657,663657,600.015406065,600.224775563
c063,4,3,2,456383,425094,439240,439240,1200.015486703,1200.471161881
c063,4,3,3,408357,376338,392960,392960,1800.0190729360002,1800.73067706
c063,4,3,4,200935,183738,192194,192194,2400.021173034,2400.888966327
c063,4,3,5,149384,138296,143251,143251,3000.0225582810003,3001.040480803
c063,4,3,6,92365,85588,88898,88898,3600.023464874,3601.2006864
c063,4,3,7,84735,78439,81565,81565,4200.031360168,4201.359173319
c063,4,3,8,58801,54017,55922,55922,4800.032212533,4801.490592317
c063,4,3,9,55676,51876,53731,53731,5400.033110771001,5401.609634517
c063,4,3,10,46004,43362,44571,44571,6000.036069335001,6001.774395199
c063,4,3,11,40064,37787,38563,38563,6600.040436884001,6601.9416206
# search time: 6600.040s
# total time: 33020.548s
