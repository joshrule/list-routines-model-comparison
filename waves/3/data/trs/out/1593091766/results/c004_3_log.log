    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.47s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c004_3.json out/1593091766/results/c004_3_best.csv out/1593091766/results/c004_3_predictions.csv out/1593091766/results/c004_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([0, 3, 2, 9, 4, 6, 8, 4, 8]), o: IntList([8]) }
#   Datum { i: IntList([0]), o: IntList([]) }
#   Datum { i: IntList([9, 6, 1, 0, 6, 4, 7]), o: IntList([7]) }
#   Datum { i: IntList([5, 3, 4, 3, 4, 4, 5]), o: IntList([5]) }
#   Datum { i: IntList([3, 7, 3]), o: IntList([]) }
#   Datum { i: IntList([5, 6, 0, 2, 9, 7, 3, 2, 1, 8]), o: IntList([3]) }
#   Datum { i: IntList([5, 9, 8, 8, 5, 0, 0, 2]), o: IntList([0]) }
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([0, 1, 0, 6, 9, 1, 1, 0]), o: IntList([1]) }
#   Datum { i: IntList([4, 4, 4]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c004,0,3,1,1335382,1096858,1280729,1280729,600.004175155,601.788873579
c004,0,3,2,909825,851490,892516,892516,1200.005777924,1202.58819664
c004,0,3,3,739399,695183,720136,720136,1800.0064017920001,1803.572273069
c004,0,3,4,652062,610657,634010,634010,2400.010683725,2404.272222684
c004,0,3,5,394922,374503,383551,383551,3000.012655237,3005.060190439
c004,0,3,6,280420,263734,270843,270843,3600.0139567160004,3605.906635514
c004,0,3,7,257175,236228,246798,246798,4200.01737649,4206.674064681
c004,0,3,8,194620,181026,186944,186944,4800.019687742,4807.516034378
c004,0,3,9,182253,168518,176180,176180,5400.025817703,5408.081850794
c004,0,3,10,164918,152165,159306,159306,6000.0302353629995,6008.781975389
c004,0,3,11,144282,133229,139637,139637,6600.037691150999,6609.393018667
# search time: 6600.038s
# total time: 6609.946s
c004,1,3,1,1316867,1082166,1263189,1263189,600.00015353,600.281942839
c004,1,3,2,909247,847858,890750,890750,1200.0022828830001,1200.628907876
c004,1,3,3,737595,693345,719659,719659,1800.002322242,1801.055226381
c004,1,3,4,656929,615628,638897,638897,2400.002353489,2401.398316751
c004,1,3,5,397597,376194,386133,386133,3000.002588425,3001.78012241
c004,1,3,6,297361,278961,287388,287388,3600.003893176,3602.179155565
c004,1,3,7,255823,235323,245804,245804,4200.008510933,4202.549122294
c004,1,3,8,182671,170391,175471,175471,4800.010645891,4802.995600993
c004,1,3,9,167420,155624,162213,162213,5400.0143062530005,5403.359239285
c004,1,3,10,151555,140579,146304,146304,6000.01669088,6003.789780381
c004,1,3,11,129648,120329,125722,125722,6600.018223529,6604.214426183
# search time: 6600.018s
# total time: 13215.231s
c004,2,3,1,1311990,1075386,1258098,1258098,600.000635455,600.23568071
c004,2,3,2,928817,866306,910185,910185,1200.00998401,1200.528783864
c004,2,3,3,733426,689907,715204,715204,1800.010544272,1800.842812766
c004,2,3,4,660752,619056,642637,642637,2400.01564399,2401.101639598
c004,2,3,5,400476,378923,388987,388987,3000.0163296990004,3001.377966336
c004,2,3,6,280865,264046,271162,271162,3600.0166105660005,3601.662063967
c004,2,3,7,256374,235788,246267,246267,4200.017098296001,4201.956829201
c004,2,3,8,183340,170945,175976,175976,4800.020057383001,4802.25788616
c004,2,3,9,169393,157223,163589,163589,5400.022054550001,5402.504296367
c004,2,3,10,152164,141583,147492,147492,6000.0387794260005,6002.765582166
c004,2,3,11,131633,122214,127531,127531,6600.040631675,6603.060274217
# search time: 6600.041s
# total time: 19819.330s
c004,3,3,1,1324472,1152081,1287385,1287385,600.000009872,600.311746518
c004,3,3,2,932801,867703,913034,913034,1200.0060298399999,1200.56183348
c004,3,3,3,731979,688252,713737,713737,1800.0063169369998,1800.812845774
c004,3,3,4,657562,616361,639790,639790,2400.0076938419998,2401.031905678
c004,3,3,5,402737,381045,391102,391102,3000.010098245,3001.267671974
c004,3,3,6,284221,267490,274474,274474,3600.0101648689997,3601.514635563
c004,3,3,7,262843,241874,252720,252720,4200.013042847,4201.740397571
c004,3,3,8,187185,174660,180067,180067,4800.014057665,4802.005082379
c004,3,3,9,166305,154589,161032,161032,5400.0147015640005,5402.186845553
c004,3,3,10,150695,140022,145886,145886,6000.019504676,6002.425565059
c004,3,3,11,132032,122665,128083,128083,6600.02333409,6602.594880599
# search time: 6600.023s
# total time: 26422.804s
c004,4,3,1,1317757,1131994,1277186,1277186,600.000298499,600.250795407
c004,4,3,2,918389,856446,899794,899794,1200.0048876380001,1200.480509173
c004,4,3,3,728354,685160,711463,711463,1800.0053504810003,1800.706829347
c004,4,3,4,666183,624540,648454,648454,2400.0059240940004,2400.915094957
c004,4,3,5,396790,375939,385246,385246,3000.0073293230007,3001.114676766
c004,4,3,6,286609,269184,276982,276982,3600.0095184750007,3601.289733172
c004,4,3,7,265563,244653,255581,255581,4200.010405357001,4201.493202807
c004,4,3,8,197786,183958,190178,190178,4800.012884204001,4801.718895674
c004,4,3,9,183871,169575,177503,177503,5400.015001128001,5401.864934352
c004,4,3,10,161902,149211,156050,156050,6000.015216172002,6002.052278965
c004,4,3,11,142925,131871,138017,138017,6600.015562668002,6602.190888095
# search time: 6600.016s
# total time: 33025.881s
