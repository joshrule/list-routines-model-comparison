    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c032_5.json out/1593091766/results/c032_5_best.csv out/1593091766/results/c032_5_predictions.csv out/1593091766/results/c032_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 7, 6, 9, 1, 8, 2]), o: IntList([1, 8, 2]) }
#   Datum { i: IntList([1, 4, 0, 4, 0]), o: IntList([0]) }
#   Datum { i: IntList([9, 6, 6, 6, 9, 0, 9, 7]), o: IntList([9, 0, 9, 7]) }
#   Datum { i: IntList([8, 0, 5, 2, 5, 8, 5, 6, 6, 3]), o: IntList([5, 2, 5, 8, 5, 6, 6, 3]) }
#   Datum { i: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), o: IntList([0, 0, 0, 0, 0, 0]) }
#   Datum { i: IntList([4, 7, 1, 4, 7, 0, 9, 5, 5]), o: IntList([7, 0, 9, 5, 5]) }
#   Datum { i: IntList([1, 1, 3, 1, 7, 6, 9, 2]), o: IntList([7, 6, 9, 2]) }
#   Datum { i: IntList([9, 3, 9, 9, 3, 3]), o: IntList([3, 3]) }
#   Datum { i: IntList([5, 5, 5, 5]), o: IntList([]) }
#   Datum { i: IntList([6, 0, 1, 2, 8, 4, 6, 4, 3]), o: IntList([1, 2, 8, 4, 6, 4, 3]) }
#   Datum { i: IntList([2, 0, 9, 4, 0, 5]), o: IntList([0, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c032,0,5,1,1122547,993191,1095991,1095991,600.001274632,602.287924409
c032,0,5,2,504224,474849,488264,488264,1200.006196981,1203.584040279
c032,0,5,3,399818,372164,385063,385063,1800.008723934,1804.253757937
c032,0,5,4,225577,210118,216688,216688,2400.010742833,2405.227707529
c032,0,5,5,148209,132853,134135,134135,3000.0109403730003,3006.027530021
c032,0,5,6,122706,109989,111380,111380,3600.0134770100003,3606.753501045
c032,0,5,7,90647,80240,81016,81016,4200.015360105001,4207.484688501
c032,0,5,8,76448,68112,68782,68782,4800.018157587001,4808.20145603
c032,0,5,9,66393,59884,60547,60547,5400.023102378001,5408.981900743
c032,0,5,10,61982,57527,60052,60052,6000.0464322670005,6009.748971446
c032,0,5,11,47715,44057,46328,46328,6600.046799453001,6610.388928848
# search time: 6600.047s
# total time: 6610.749s
c032,1,5,1,1070052,931148,1040210,1040210,600.000794486,600.541073902
c032,1,5,2,309066,290001,298516,298516,1200.001576961,1201.027068483
c032,1,5,3,240716,222875,230891,230891,1800.0108037119999,1801.371849249
c032,1,5,4,134653,124939,128863,128863,2400.0109461949996,2401.87465521
c032,1,5,5,83878,74513,75218,75218,3000.0146204079997,3002.373731672
c032,1,5,6,74143,66467,67112,67112,3600.01579529,3602.760090232
c032,1,5,7,50399,44897,45389,45389,4200.023996948999,4203.17965804
c032,1,5,8,43060,39052,39490,39490,4800.035082465999,4803.558136253
c032,1,5,9,37978,34247,34695,34695,5400.045396406999,5404.112953732
c032,1,5,10,35935,33524,34948,34948,6000.0679341059995,6004.605753658
c032,1,5,11,26696,24567,25956,25956,6600.088456799,6605.118319842
# search time: 6600.088s
# total time: 13216.511s
c032,2,5,1,626730,531179,605696,605696,600.001377109,600.238156119
c032,2,5,2,312309,293140,301604,301604,1200.006875628,1200.62793073
c032,2,5,3,246195,228091,236117,236117,1800.020454683,1800.929739408
c032,2,5,4,135844,125793,129843,129843,2400.0245706,2401.338746027
c032,2,5,5,87555,78057,78828,78828,3000.025214593,3001.698434552
c032,2,5,6,72045,64808,65388,65388,3600.030888384,3602.026010372
c032,2,5,7,47657,42810,43381,43381,4200.037028347,4202.438453705
c032,2,5,8,43742,39839,40263,40263,4800.044326016,4802.769264178
c032,2,5,9,38541,34870,35281,35281,5400.047170437,5403.194978161
c032,2,5,10,34249,32050,33329,33329,6000.0931657910005,6003.567516506
c032,2,5,11,27895,26020,27280,27280,6600.107346155,6604.016606909
# search time: 6600.107s
# total time: 19821.107s
c032,3,5,1,649313,557467,629248,629248,600.000881635,600.224489609
c032,3,5,2,313418,294079,302657,302657,1200.0011681629999,1200.518835402
c032,3,5,3,247805,229222,237410,237410,1800.0024770149998,1800.754449355
c032,3,5,4,136324,126295,130252,130252,2400.0099846969997,2401.052955979
c032,3,5,5,85272,75575,76303,76303,3000.0143687379996,3001.383926778
c032,3,5,6,72046,64777,65414,65414,3600.020425977,3601.620721997
c032,3,5,7,49519,43785,44220,44220,4200.026436426,4201.911044677
c032,3,5,8,43556,39559,39999,39999,4800.027471298,4802.218731671
c032,3,5,9,38831,35165,35602,35602,5400.048791,5402.555388537
c032,3,5,10,36300,33860,35276,35276,6000.055929499,6002.841643544
c032,3,5,11,26336,24220,25550,25550,6600.072828779999,6603.160043541
# search time: 6600.073s
# total time: 26424.725s
c032,4,5,1,627502,532052,606498,606498,600.006375546,600.205759645
c032,4,5,2,308532,289533,298122,298122,1200.006696473,1200.475548841
c032,4,5,3,246685,228785,236743,236743,1800.007684739,1800.696873881
c032,4,5,4,134990,124974,129017,129017,2400.012970745,2400.925445566
c032,4,5,5,83115,73698,74377,74377,3000.014278437,3001.13614817
c032,4,5,6,71419,63833,64449,64449,3600.0313868900002,3601.346365383
c032,4,5,7,51099,45796,46260,46260,4200.047220196,4201.564309701
c032,4,5,8,42822,38852,39273,39273,4800.05127491,4801.81412333
c032,4,5,9,38360,34550,35000,35000,5400.092846435,5402.137714766
c032,4,5,10,35880,33551,34951,34951,6000.097870916,6002.494041521
c032,4,5,11,28123,26215,27504,27504,6600.1046511389995,6602.828929228
# search time: 6600.105s
# total time: 33027.975s
