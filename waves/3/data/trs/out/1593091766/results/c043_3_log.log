    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c043_3.json out/1593091766/results/c043_3_best.csv out/1593091766/results/c043_3_predictions.csv out/1593091766/results/c043_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 7, 8, 8, 4, 7]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([9, 3, 7, 8, 2, 1, 9, 0]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([0]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([4, 1, 6, 4, 6, 1, 6, 3, 4]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 5, 5, 6, 6, 5, 6, 5, 6, 6]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([4, 4, 6, 4, 6, 6, 6, 4, 6]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 5, 5, 5, 5]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([9, 9, 9, 9, 9, 9, 9, 9]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([8, 2, 7, 0, 3]) }
#   Datum { i: IntList([5, 0, 6, 4, 5, 5, 9, 6, 4, 1]), o: IntList([8, 2, 7, 0, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c043,0,3,1,693174,599821,673050,673050,600.003894763,602.962157752
c043,0,3,2,253085,237628,244330,244330,1200.005477384,1204.760396463
c043,0,3,3,146343,139719,143375,143375,1800.007594235,1806.309019727
c043,0,3,4,206671,196149,201529,201529,2400.0120800289997,2407.368575323
c043,0,3,5,149164,141546,145444,145444,3000.012768187,3008.570679163
c043,0,3,6,68175,64636,66357,66357,3600.01630075,3610.266975973
c043,0,3,7,46521,43956,45062,45062,4200.018744897,4211.917140217
c043,0,3,8,48412,45358,46661,46661,4800.02226267,4813.173161389
c043,0,3,9,73587,68246,70613,70613,5400.025130407999,5414.322493081
c043,0,3,10,64495,60006,61873,61873,6000.029705198999,6015.640568678
c043,0,3,11,59428,55758,57218,57218,6600.033442403999,6616.917151191
# search time: 6600.033s
# total time: 6617.148s
c043,1,3,1,1115758,914280,1069259,1069259,600.00067623,600.327272663
c043,1,3,2,397173,373856,384247,384247,1200.001183849,1201.203339748
c043,1,3,3,142712,136108,139864,139864,1800.0040547889998,1801.697861235
c043,1,3,4,123945,117556,120806,120806,2400.0052332369996,2402.119154097
c043,1,3,5,85759,81110,83703,83703,3000.0200308649996,3002.641857507
c043,1,3,6,62687,59569,61124,61124,3600.0290916709996,3603.269617135
c043,1,3,7,46462,43956,45023,45023,4200.0310468729995,4204.220510278
c043,1,3,8,47670,44682,46015,46015,4800.031703922999,4804.728294782
c043,1,3,9,43113,40293,41553,41553,5400.060454615999,5405.178065037
c043,1,3,10,36287,33797,34937,34937,6000.061961600999,6005.823512014
c043,1,3,11,33916,31761,32694,32694,6600.063262231999,6606.172463032
# search time: 6600.063s
# total time: 13223.762s
c043,2,3,1,679577,556936,651353,651353,600.000860707,600.224279456
c043,2,3,2,246648,231687,238194,238194,1200.0126394029999,1200.622495901
c043,2,3,3,144299,138009,141279,141279,1800.0131413629997,1801.030152824
c043,2,3,4,119658,112989,116740,116740,2400.0227195039997,2401.320648246
c043,2,3,5,85361,80611,83322,83322,3000.032402887,3001.708169609
c043,2,3,6,63540,60493,61935,61935,3600.032903127,3602.103007057
c043,2,3,7,46402,43805,45009,45009,4200.034957692,4202.654226362
c043,2,3,8,47778,44537,46071,46071,4800.0466611,4803.117048232
c043,2,3,9,42874,40131,41405,41405,5400.051181781,5403.58572186
c043,2,3,10,35441,33041,34144,34144,6000.074586983001,6004.004055486
c043,2,3,11,33695,31637,32562,32562,6600.097445513001,6604.286653648
# search time: 6600.097s
# total time: 19828.435s
c043,3,3,1,678361,555448,650009,650009,600.000215504,600.189517206
c043,3,3,2,255612,240221,246721,246721,1200.004040457,1200.491836896
c043,3,3,3,142962,136568,140082,140082,1800.009979145,1800.786590782
c043,3,3,4,122218,115593,119220,119220,2400.012428286,2401.029590038
c043,3,3,5,87497,83212,85331,85331,3000.0170454060003,3001.374243839
c043,3,3,6,64027,60848,62375,62375,3600.028104891,3601.753905952
c043,3,3,7,46684,43929,45326,45326,4200.044898237,4202.171151328
c043,3,3,8,48878,46042,47228,47228,4800.046998455,4802.473101455
c043,3,3,9,43252,40511,41612,41612,5400.058409168,5402.829228007
c043,3,3,10,37268,34947,35876,35876,6000.060589252,6003.138547514
c043,3,3,11,34280,32191,33091,33091,6600.064390359,6603.370808069
# search time: 6600.064s
# total time: 26432.120s
c043,4,3,1,657670,558128,635788,635788,600.000232971,600.227501651
c043,4,3,2,246802,231821,238358,238358,1200.001306524,1200.479412884
c043,4,3,3,148019,141925,144929,144929,1800.002955228,1800.741608548
c043,4,3,4,123234,116816,120085,120085,2400.005498467,2400.95367129
c043,4,3,5,87528,83054,85414,85414,3000.009179317,3001.163753371
c043,4,3,6,63277,60011,61666,61666,3600.018500003,3601.448020149
c043,4,3,7,46853,44333,45383,45383,4200.01931072,4201.816856715
c043,4,3,8,48674,45648,46891,46891,4800.0232711260005,4802.091648908
c043,4,3,9,43251,40654,41778,41778,5400.0236411450005,5402.248390096
c043,4,3,10,36459,34341,35197,35197,6000.047531769001,6002.641338209
c043,4,3,11,33860,31804,32698,32698,6600.049851631001,6602.944507596
# search time: 6600.050s
# total time: 33035.365s
