    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c011_4.json out/1593091766/results/c011_4_best.csv out/1593091766/results/c011_4_predictions.csv out/1593091766/results/c011_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 9, 3, 0, 2, 8, 5]), o: IntList([9, 3, 0]) }
#   Datum { i: IntList([6, 1, 3, 0, 4, 9]), o: IntList([1, 3, 0]) }
#   Datum { i: IntList([7, 2, 4, 2, 4, 7, 2, 2, 4]), o: IntList([2, 4, 2]) }
#   Datum { i: IntList([3, 3, 6, 0]), o: IntList([3, 6, 0]) }
#   Datum { i: IntList([5, 7, 5, 9, 7, 6, 8, 5, 6, 8]), o: IntList([7, 5, 9]) }
#   Datum { i: IntList([0, 0, 3, 3, 7]), o: IntList([0, 3, 3]) }
#   Datum { i: IntList([5, 1, 1, 8, 1, 6, 7, 2, 7]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 8, 7, 3, 7]), o: IntList([8, 5, 8]) }
#   Datum { i: IntList([1, 1, 4, 0, 3, 1, 3, 5, 0]), o: IntList([1, 4, 0]) }
#   Datum { i: IntList([6, 8, 6, 9, 9, 8, 8, 6]), o: IntList([8, 6, 9]) }
#   Datum { i: IntList([9, 2, 6, 4, 6, 2, 0]), o: IntList([2, 6, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c011,0,4,1,633419,519369,607507,607507,600.010521676,602.616574218
c011,0,4,2,322309,301919,310549,310549,1200.016881963,1204.855638839
c011,0,4,3,220329,201674,211174,211174,1800.018705522,1806.286579552
c011,0,4,4,136243,124833,129943,129943,2400.0223522839997,2407.933784601
c011,0,4,5,135532,124271,130169,130169,3000.0282218939997,3008.869213556
c011,0,4,6,112828,103408,108411,108411,3600.029717136,3609.623346404
c011,0,4,7,97152,88506,92957,92957,4200.051671882,4210.481940564
c011,0,4,8,56011,51600,53985,53985,4800.055301835,4812.19718244
c011,0,4,9,45634,42033,44162,44162,5400.058243444,5413.993430992
c011,0,4,10,38417,35328,37094,37094,6000.072124719,6015.838993519
c011,0,4,11,33502,30710,32313,32313,6600.085081798001,6618.171530002
# search time: 6600.085s
# total time: 6618.380s
c011,1,4,1,649336,555981,628926,628926,600.000036621,600.360763449
c011,1,4,2,320778,300482,309200,309200,1200.000914768,1201.084405929
c011,1,4,3,217325,198469,207583,207583,1800.0014551210002,1801.695424068
c011,1,4,4,138873,127040,132781,132781,2400.0024492700004,2402.2869257
c011,1,4,5,133710,122946,128618,128618,3000.0168641660002,3002.729054583
c011,1,4,6,112337,102744,107712,107712,3600.0181499150003,3603.14617745
c011,1,4,7,97083,88239,92883,92883,4200.021670897,4203.542579733
c011,1,4,8,55449,51121,53466,53466,4800.0348580790005,4804.287129916
c011,1,4,9,46288,42574,44675,44675,5400.044918835,5405.032476169
c011,1,4,10,38084,35039,36808,36808,6000.046979031,6005.941482601
c011,1,4,11,32207,29602,31110,31110,6600.071014115,6606.934028314
# search time: 6600.071s
# total time: 13225.631s
c011,2,4,1,658277,578705,641404,641404,600.005154283,600.297877994
c011,2,4,2,321794,301605,310273,310273,1200.006043149,1200.713708455
c011,2,4,3,218149,199529,208875,208875,1800.007266343,1801.042435523
c011,2,4,4,136288,124833,130067,130067,2400.011520735,2401.38122375
c011,2,4,5,133087,122173,127918,127918,3000.0141173829998,3001.621949932
c011,2,4,6,112256,102384,107650,107650,3600.0152208209997,3601.850871357
c011,2,4,7,96481,87986,92376,92376,4200.017462,4202.093305535
c011,2,4,8,56610,52006,54372,54372,4800.030685041,4802.518979439
c011,2,4,9,45437,41897,43963,43963,5400.037616432,5403.011771791
c011,2,4,10,38254,35224,37027,37027,6000.038270755,6003.727247671
c011,2,4,11,31452,28904,30396,30396,6600.060476758999,6604.285407632
# search time: 6600.060s
# total time: 19830.158s
c011,3,4,1,643156,526438,616386,616386,600.002970049,600.200178301
c011,3,4,2,310533,290853,299465,299465,1200.0042265880002,1200.542852228
c011,3,4,3,214995,196653,205423,205423,1800.0053580790002,1800.804515288
c011,3,4,4,138482,126932,132443,132443,2400.01121843,2401.097003207
c011,3,4,5,133611,122563,128442,128442,3000.0131222640002,3001.291576076
c011,3,4,6,109720,99552,105316,105316,3600.033222817,3601.538807911
c011,3,4,7,93877,84931,89824,89824,4200.035405144,4201.757277288
c011,3,4,8,54871,50506,52754,52754,4800.039179342,4802.261797135
c011,3,4,9,46177,42460,44608,44608,5400.046292188001,5402.629906989
c011,3,4,10,37361,34455,36158,36158,6000.0469939780005,6003.149459636
c011,3,4,11,32292,29576,31139,31139,6600.062073422,6603.605585586
# search time: 6600.062s
# total time: 26434.120s
c011,4,4,1,815238,664938,780705,780705,600.006809531,600.146590538
c011,4,4,2,487579,458007,471518,471518,1200.00708776,1200.420490798
c011,4,4,3,365044,334499,349825,349825,1800.014774767,1800.647688143
c011,4,4,4,235780,216710,225698,225698,2400.014899409,2400.861679971
c011,4,4,5,223190,205919,215119,215119,3000.016440559,3001.017532596
c011,4,4,6,187932,173075,180986,180986,3600.018574693,3601.177673595
c011,4,4,7,162997,148945,156277,156277,4200.020451664001,4201.329269421
c011,4,4,8,96434,88914,92896,92896,4800.026370734001,4801.623162275
c011,4,4,9,80149,73978,77509,77509,5400.046999856001,5401.880017543
c011,4,4,10,66428,61014,64156,64156,6000.049492944001,6002.13023757
c011,4,4,11,55605,51202,53660,53660,6600.049987995001,6602.5502354
# search time: 6600.050s
# total time: 33036.987s
