    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.70s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c005_1.json out/1593091766/results/c005_1_best.csv out/1593091766/results/c005_1_predictions.csv out/1593091766/results/c005_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 2, 8, 6]), o: IntList([6]) }
#   Datum { i: IntList([2, 9, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 1]), o: IntList([1]) }
#   Datum { i: IntList([1, 7]), o: IntList([7]) }
#   Datum { i: IntList([1, 5, 5, 3]), o: IntList([5]) }
#   Datum { i: IntList([3, 3, 6, 3]), o: IntList([3]) }
#   Datum { i: IntList([2, 0, 8, 7, 6, 2]), o: IntList([8]) }
#   Datum { i: IntList([3, 0, 0, 9, 6]), o: IntList([9]) }
#   Datum { i: IntList([3, 5, 8, 1, 2]), o: IntList([1]) }
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4]) }
#   Datum { i: IntList([2, 2, 2]), o: IntList([2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c005,0,1,1,1294975,1059868,1241231,1241231,600.000131046,601.765659724
c005,0,1,2,867576,815098,840189,840189,1200.000365987,1202.843397037
c005,0,1,3,689083,645234,669491,669491,1800.002126663,1803.6596137
c005,0,1,4,583311,542355,564820,564820,2400.018511081,2404.301260556
c005,0,1,5,484227,447284,465843,465843,3000.0190771469997,3004.847775123
c005,0,1,6,374012,353607,361537,361537,3600.020822304,3605.350659057
c005,0,1,7,314359,291251,300211,300211,4200.035725191,4205.911915519
c005,0,1,8,270653,251933,259487,259487,4800.036016068,4806.433136665
c005,0,1,9,237644,220393,227457,227457,5400.037013215,5406.901182015
c005,0,1,10,207527,192287,198506,198506,6000.037495392,6007.356213097
c005,0,1,11,158495,148647,154150,154150,6600.041764904,6607.861230847
# search time: 6600.042s
# total time: 6608.424s
c005,1,1,1,1330400,1165672,1296118,1296118,600.000246859,600.382342873
c005,1,1,2,822148,774637,797526,797526,1200.0003258689999,1200.756503617
c005,1,1,3,672406,629686,652493,652493,1800.0006434359998,1801.09027991
c005,1,1,4,576393,535933,557949,557949,2400.000824896,2401.398620417
c005,1,1,5,481204,444442,462597,462597,3000.00186071,3001.682048547
c005,1,1,6,374246,353504,361623,361623,3600.018367652,3601.982470098
c005,1,1,7,317170,293840,302968,302968,4200.019313473,4202.277932095
c005,1,1,8,272714,253385,261254,261254,4800.02211474,4802.536798905
c005,1,1,9,239362,222073,229139,229139,5400.023098819,5402.823951344
c005,1,1,10,207623,192389,198735,198735,6000.025605352,6003.123635832
c005,1,1,11,159109,149335,155113,155113,6600.027679574,6603.402924743
# search time: 6600.028s
# total time: 13212.698s
c005,2,1,1,1299940,1146634,1268904,1268904,600.000493056,600.330105364
c005,2,1,2,836565,788475,811620,811620,1200.0075235919999,1200.632169599
c005,2,1,3,688115,644018,668253,668253,1800.00773794,1800.896608697
c005,2,1,4,579816,539274,561479,561479,2400.008723506,2401.161863002
c005,2,1,5,481681,444928,463000,463000,3000.009817222,3001.391116183
c005,2,1,6,377533,356771,364893,364893,3600.0140013150003,3601.597528557
c005,2,1,7,317612,294109,303217,303217,4200.015241591001,4201.788339246
c005,2,1,8,270677,251527,259272,259272,4800.015434211001,4801.987279038
c005,2,1,9,238457,220996,228105,228105,5400.015892606001,5402.208253487
c005,2,1,10,209884,194425,200826,200826,6000.017166517001,6002.409731113
c005,2,1,11,156237,146414,151477,151477,6600.017654556001,6602.657358867
# search time: 6600.018s
# total time: 19816.494s
c005,3,1,1,1275727,1044488,1222820,1222820,600.003298083,600.191256397
c005,3,1,2,857380,806762,830998,830998,1200.0035617580002,1200.437786656
c005,3,1,3,675523,632148,655126,655126,1800.0047119390001,1800.653629143
c005,3,1,4,583672,543095,565399,565399,2400.005400125,2400.853345139
c005,3,1,5,482386,445643,463837,463837,3000.006174705,3001.016197891
c005,3,1,6,373463,352906,361024,361024,3600.0082936629997,3601.187160454
c005,3,1,7,316272,292752,301896,301896,4200.011547077,4201.34533635
c005,3,1,8,271088,251903,259717,259717,4800.0118062129995,4801.495804355
c005,3,1,9,240200,222843,230014,230014,5400.012673961,5401.642617905
c005,3,1,10,209756,194394,200785,200785,6000.015532971,6001.793088883
c005,3,1,11,160227,150299,155875,155875,6600.019715404,6601.92798945
# search time: 6600.020s
# total time: 26419.236s
c005,4,1,1,1282925,1052054,1230304,1230304,600.000032605,600.190318141
c005,4,1,2,864659,812796,837468,837468,1200.00889226,1200.453760588
c005,4,1,3,690888,646872,671096,671096,1800.009300064,1800.657254731
c005,4,1,4,582117,541159,563607,563607,2400.009306675,2400.836996558
c005,4,1,5,487107,449947,468674,468674,3000.0182092,3001.004480681
c005,4,1,6,379301,358427,366525,366525,3600.019043406,3601.161131383
c005,4,1,7,317870,294382,303452,303452,4200.02746254,4201.309368076
c005,4,1,8,271517,252356,260045,260045,4800.027936488,4801.451657091
c005,4,1,9,238414,221268,228261,228261,5400.028689267,5401.61383821
c005,4,1,10,209548,194302,200644,200644,6000.029857998,6001.739162575
c005,4,1,11,158954,148945,154394,154394,6600.031831012,6601.847824757
# search time: 6600.032s
# total time: 33021.607s
