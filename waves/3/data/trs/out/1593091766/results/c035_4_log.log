    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c035_4.json out/1593091766/results/c035_4_best.csv out/1593091766/results/c035_4_predictions.csv out/1593091766/results/c035_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 4, 6, 4, 4, 9]), o: IntList([4, 4, 6, 9, 4, 9]) }
#   Datum { i: IntList([4, 6, 7, 8]), o: IntList([4, 7, 6, 8]) }
#   Datum { i: IntList([3, 1, 3, 3, 1, 1, 1]), o: IntList([3, 3, 1, 3, 1, 1, 1]) }
#   Datum { i: IntList([0, 8, 2, 8, 6, 8, 0, 2, 0, 2]), o: IntList([8, 8, 2, 0, 6, 8, 0, 2, 0, 2]) }
#   Datum { i: IntList([9, 0, 7, 6, 4, 1, 1, 6, 4]), o: IntList([6, 0, 7, 9, 4, 1, 1, 6, 4]) }
#   Datum { i: IntList([7, 3, 3, 3, 1, 9, 2, 7]), o: IntList([3, 3, 3, 7, 1, 9, 2, 7]) }
#   Datum { i: IntList([6, 5, 4, 4]), o: IntList([6, 4, 5, 4]) }
#   Datum { i: IntList([7, 8, 6, 5, 1, 3, 2]), o: IntList([7, 6, 8, 5, 1, 3, 2]) }
#   Datum { i: IntList([9, 6, 9, 5, 3]), o: IntList([9, 9, 6, 5, 3]) }
#   Datum { i: IntList([9, 9, 6, 2, 0, 2, 6, 0, 4]), o: IntList([2, 9, 6, 9, 0, 2, 6, 0, 4]) }
#   Datum { i: IntList([7, 6, 7, 6, 6, 7]), o: IntList([6, 6, 7, 7, 6, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c035,0,4,1,1274184,1046698,1222427,1222427,600.001041815,601.725995185
c035,0,4,2,422332,396029,407593,407593,1200.002838097,1202.74883091
c035,0,4,3,304805,286596,289042,289042,1800.003956969,1803.645188273
c035,0,4,4,220344,207524,212016,212016,2400.005399308,2404.125364963
c035,0,4,5,149391,136708,141156,141156,3000.008762154,3004.548804254
c035,0,4,6,96001,87496,88429,88429,3600.011788449,3605.208649246
c035,0,4,7,75424,66506,67041,67041,4200.012754746,4205.91867754
c035,0,4,8,71648,64073,64798,64798,4800.016482655,4806.613292205
c035,0,4,9,60596,55016,55381,55381,5400.0165847319995,5407.312041098
c035,0,4,10,55846,51165,51561,51561,6000.022483385999,6007.914917737
c035,0,4,11,44365,40509,40815,40815,6600.02480409,6608.715638852
# search time: 6600.025s
# total time: 6609.142s
c035,1,4,1,1203292,1021851,1163289,1163289,600.006180972,600.356362021
c035,1,4,2,416202,390040,401697,401697,1200.007460017,1200.76726125
c035,1,4,3,295046,276680,278950,278950,1800.008274491,1801.149460084
c035,1,4,4,218357,205694,210121,210121,2400.010249542,2401.372806141
c035,1,4,5,148515,135321,140044,140044,3000.010794963,3001.574210241
c035,1,4,6,96246,87858,88729,88729,3600.010972892,3601.890711948
c035,1,4,7,75253,66338,66906,66906,4200.017209171,4202.27236884
c035,1,4,8,71693,64266,64994,64994,4800.0342258890005,4802.609450784
c035,1,4,9,59962,53444,53789,53789,5400.039264756,5402.977152752
c035,1,4,10,52479,46990,47228,47228,6000.040571405,6003.391083467
c035,1,4,11,44954,41344,41693,41693,6600.04372166,6603.768921018
# search time: 6600.044s
# total time: 13213.910s
c035,2,4,1,1255687,1093943,1221225,1221225,600.000933794,600.301043747
c035,2,4,2,404782,379582,390949,390949,1200.0014146140002,1200.570519698
c035,2,4,3,292567,274182,276412,276412,1800.002093132,1800.854368063
c035,2,4,4,218412,206001,210309,210309,2400.002601614,2401.021415287
c035,2,4,5,148271,135406,140101,140101,3000.004506792,3001.165634832
c035,2,4,6,95746,87487,88394,88394,3600.006815139,3601.389786258
c035,2,4,7,74888,66040,66597,66597,4200.012661913001,4201.633454225
c035,2,4,8,71901,64600,65357,65357,4800.017228466,4801.853828488
c035,2,4,9,53152,47711,48056,48056,5400.01857932,5402.166477477
c035,2,4,10,55175,50570,50948,50948,6000.022794638,6002.468515152
c035,2,4,11,44982,41440,41792,41792,6600.02346997,6602.68589887
# search time: 6600.023s
# total time: 19817.086s
c035,3,4,1,1290630,1123565,1254946,1254946,600.002197482,600.286700533
c035,3,4,2,401118,376137,387393,387393,1200.003669292,1200.513368588
c035,3,4,3,301086,283051,285446,285446,1800.004946193,1800.734384151
c035,3,4,4,217859,205452,209748,209748,2400.004971213,2400.863551432
c035,3,4,5,147649,134804,139468,139468,3000.007917508,3001.007624969
c035,3,4,6,95635,87231,88092,88092,3600.011527108,3601.173022958
c035,3,4,7,74821,66292,66820,66820,4200.011541948,4201.359514444
c035,3,4,8,71509,63958,64666,64666,4800.015010506,4801.529588714
c035,3,4,9,58855,52352,52640,52640,5400.018118305,5401.724241526
c035,3,4,10,53168,47693,47954,47954,6000.025523133,6001.916504865
c035,3,4,11,43474,39671,39919,39919,6600.026490761,6602.0654054
# search time: 6600.026s
# total time: 26420.156s
c035,4,4,1,1265353,1100434,1230019,1230019,600.010487757,600.268471832
c035,4,4,2,405863,381055,392136,392136,1200.010563839,1200.461572023
c035,4,4,3,299647,281707,284077,284077,1800.010995874,1800.652219465
c035,4,4,4,218518,206232,210521,210521,2400.012815244,2400.769151476
c035,4,4,5,147421,134641,139168,139168,3000.015967964,3000.879944566
c035,4,4,6,95429,87258,88177,88177,3600.031062693,3601.006174595
c035,4,4,7,76147,67953,68542,68542,4200.034841349,4201.157310176
c035,4,4,8,71734,63290,64018,64018,4800.044980816,4801.296084902
c035,4,4,9,59146,52706,53005,53005,5400.048653742,5401.474577129
c035,4,4,10,54799,50048,50467,50467,6000.049382853,6001.615682809
c035,4,4,11,43882,40390,40712,40712,6600.067153874999,6601.800870342
# search time: 6600.067s
# total time: 33022.475s
