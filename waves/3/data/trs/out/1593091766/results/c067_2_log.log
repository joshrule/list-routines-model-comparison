    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c067_2.json out/1593091766/results/c067_2_best.csv out/1593091766/results/c067_2_predictions.csv out/1593091766/results/c067_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 0, 2]), o: IntList([2, 0, 0]) }
#   Datum { i: IntList([2, 1, 6, 3, 4, 0, 9, 8, 7, 4]), o: IntList([4, 1, 6, 3, 4, 0, 9, 8, 7, 2]) }
#   Datum { i: IntList([5, 8, 2, 4, 7, 4]), o: IntList([4, 8, 2, 4, 7, 5]) }
#   Datum { i: IntList([1, 6, 7, 3, 4]), o: IntList([4, 6, 7, 3, 1]) }
#   Datum { i: IntList([7, 6, 8, 0, 5, 1, 6, 9]), o: IntList([9, 6, 8, 0, 5, 1, 6, 7]) }
#   Datum { i: IntList([1, 3, 2, 8, 8, 5, 5]), o: IntList([5, 3, 2, 8, 8, 5, 1]) }
#   Datum { i: IntList([9, 1, 2, 8, 2, 4, 8, 2, 4, 1]), o: IntList([1, 1, 2, 8, 2, 4, 8, 2, 4, 9]) }
#   Datum { i: IntList([4, 7]), o: IntList([7, 4]) }
#   Datum { i: IntList([5, 0, 7, 6, 6, 0, 6, 0]), o: IntList([0, 0, 7, 6, 6, 0, 6, 5]) }
#   Datum { i: IntList([7, 5, 0, 2, 0, 9, 1, 6, 3]), o: IntList([3, 5, 0, 2, 0, 9, 1, 6, 7]) }
#   Datum { i: IntList([4, 8, 9, 9]), o: IntList([9, 8, 9, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c067,0,2,1,1383212,1206660,1345727,1345727,600.004993026,601.906294308
c067,0,2,2,615959,580354,596179,596179,1200.014530919,1202.777650205
c067,0,2,3,231980,210966,212592,212592,1800.016990546,1803.511267716
c067,0,2,4,191378,176837,177846,177846,2400.022382549,2404.039053649
c067,0,2,5,160693,148290,148633,148633,3000.022541959,3004.489158958
c067,0,2,6,121886,112333,112917,112917,3600.023648377,3604.906455124
c067,0,2,7,89588,81171,81430,81430,4200.026255778,4205.594959358
c067,0,2,8,69362,63407,63713,63713,4800.032222792,4806.241338485
c067,0,2,9,65540,59219,59513,59513,5400.038862109,5406.867341475
c067,0,2,10,56230,51256,51536,51536,6000.042538203999,6007.361024727
c067,0,2,11,47265,43186,43473,43473,6600.0472191829995,6608.014957453
# search time: 6600.047s
# total time: 6608.407s
c067,1,2,1,1256719,1030225,1205735,1205735,600.001401775,600.23573829
c067,1,2,2,613580,576842,592995,592995,1200.002833001,1200.594889476
c067,1,2,3,229243,208548,210124,210124,1800.003171611,1800.915221402
c067,1,2,4,191343,176241,177107,177107,2400.003765336,2401.166390906
c067,1,2,5,159235,146898,147253,147253,3000.00447187,3001.437805455
c067,1,2,6,120011,111022,111333,111333,3600.0071650600003,3601.665180399
c067,1,2,7,88458,80729,81102,81102,4200.007542854,4201.937514187
c067,1,2,8,69088,63647,64061,64061,4800.0096722240005,4802.200008479
c067,1,2,9,65641,59554,59878,59878,5400.011862179001,5402.433013426
c067,1,2,10,56616,51806,52093,52093,6000.018126054,6002.719471951
c067,1,2,11,47187,43180,43486,43486,6600.018535545,6603.051627688
# search time: 6600.019s
# total time: 13212.472s
c067,2,2,1,1332575,1168441,1298170,1298170,600.000585569,600.300909703
c067,2,2,2,617546,580976,597067,597067,1200.002552956,1200.570765487
c067,2,2,3,230262,209235,210787,210787,1800.00528045,1800.790362532
c067,2,2,4,187046,171789,172322,172322,2400.00673315,2400.984623917
c067,2,2,5,159428,146919,147243,147243,3000.006832786,3001.163270688
c067,2,2,6,117399,108125,109039,109039,3600.017748528,3601.320608887
c067,2,2,7,88700,80873,81232,81232,4200.021513742,4201.504697771
c067,2,2,8,69249,63850,64213,64213,4800.03128368,4801.731486873
c067,2,2,9,65437,59760,60089,60089,5400.033596927,5401.923603505
c067,2,2,10,56180,51126,51434,51434,6000.034905138,6002.069138653
c067,2,2,11,45358,41639,41886,41886,6600.040244247,6602.314606199
# search time: 6600.040s
# total time: 19815.187s
c067,3,2,1,1375534,1221512,1344631,1344631,600.000991646,600.328771205
c067,3,2,2,611501,575001,591145,591145,1200.0015505830002,1200.543924752
c067,3,2,3,228745,207818,209368,209368,1800.0064903240002,1800.72908299
c067,3,2,4,190202,175930,176909,176909,2400.0081034520003,2400.864087922
c067,3,2,5,161518,148581,149208,149208,3000.0120611680004,3000.993934603
c067,3,2,6,121028,111427,111998,111998,3600.0164005160004,3601.155336321
c067,3,2,7,87722,80027,80374,80374,4200.020195258,4201.330206047
c067,3,2,8,68443,63121,63472,63472,4800.022053342,4801.465746091
c067,3,2,9,65398,59868,60219,60219,5400.022156126,5401.655834729
c067,3,2,10,56101,51033,51309,51309,6000.027136463999,6001.84138175
c067,3,2,11,44686,41033,41254,41254,6600.029854396,6602.004024938
# search time: 6600.030s
# total time: 26417.923s
c067,4,2,1,1327356,1149187,1288807,1288807,600.000031572,600.244749398
c067,4,2,2,611828,576676,592251,592251,1200.00005665,1200.441357597
c067,4,2,3,230044,208998,210519,210519,1800.000134727,1800.587776716
c067,4,2,4,187856,172609,173154,173154,2400.000812752,2400.719375772
c067,4,2,5,159820,147482,148155,148155,3000.003530506,3000.818779459
c067,4,2,6,120343,110788,111322,111322,3600.0036098690002,3600.925813492
c067,4,2,7,88572,80964,81334,81334,4200.011291659001,4201.068896443
c067,4,2,8,68985,63478,63847,63847,4800.015848573001,4801.199519277
c067,4,2,9,65170,59557,59899,59899,5400.017622704001,5401.342090217
c067,4,2,10,54441,49697,49893,49893,6000.018116714001,6001.456236445
c067,4,2,11,44254,40432,40662,40662,6600.0325579440005,6601.637307481
# search time: 6600.033s
# total time: 33020.617s
