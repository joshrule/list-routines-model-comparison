    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.39s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c003_1.json out/1593091766/results/c003_1_best.csv out/1593091766/results/c003_1_predictions.csv out/1593091766/results/c003_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 2, 3, 9, 0, 4, 5, 6]), o: IntList([5]) }
#   Datum { i: IntList([6, 1, 6, 4, 4, 7, 0, 4, 6, 1]), o: IntList([0]) }
#   Datum { i: IntList([0, 5, 7, 4, 9, 1, 3, 6, 7, 8]), o: IntList([3]) }
#   Datum { i: IntList([6, 8, 5, 0, 2, 9, 8, 2]), o: IntList([8]) }
#   Datum { i: IntList([1, 0, 8, 6, 7, 2, 9, 3, 5, 4]), o: IntList([9]) }
#   Datum { i: IntList([1, 3, 1, 1, 5, 5, 1, 9, 1, 3]), o: IntList([1]) }
#   Datum { i: IntList([6, 9, 0, 8, 2, 8, 2, 3, 2]), o: IntList([2]) }
#   Datum { i: IntList([5, 2, 0, 3, 1, 8, 9, 4, 9, 5]), o: IntList([9]) }
#   Datum { i: IntList([0, 6, 4, 3, 2, 7, 6, 1]), o: IntList([6]) }
#   Datum { i: IntList([0, 8, 7, 8, 0, 8, 7, 0, 0, 8]), o: IntList([7]) }
#   Datum { i: IntList([9, 3, 0, 4, 3, 6, 4, 8, 7]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c003,0,1,1,1135145,930970,1088940,1088940,600.006772846,601.706529191
c003,0,1,2,671254,630552,650275,650275,1200.01064464,1203.28818394
c003,0,1,3,421345,391973,407597,407597,1800.011525899,1804.122755297
c003,0,1,4,341141,315791,329416,329416,2400.012032545,2404.937157358
c003,0,1,5,183495,169756,177123,177123,3000.0128201559996,3006.334150612
c003,0,1,6,137483,126886,132239,132239,3600.0166752239998,3607.737583683
c003,0,1,7,106443,98007,102215,102215,4200.0220895249995,4209.175789776
c003,0,1,8,86554,79600,83243,83243,4800.0490908619995,4810.743917425
c003,0,1,9,71185,65450,68426,68426,5400.052165190999,5412.388471789
c003,0,1,10,62558,57441,60124,60124,6000.061742352999,6014.023765106
c003,0,1,11,52806,48414,50689,50689,6600.063934776999,6615.359190732
# search time: 6600.064s
# total time: 6615.597s
c003,1,1,1,1199862,1027225,1162157,1162157,600.000061298,600.295890492
c003,1,1,2,714353,670957,691420,691420,1200.0006225299999,1200.818994393
c003,1,1,3,440048,408077,424754,424754,1800.0009220819998,1801.144838682
c003,1,1,4,352554,326505,340506,340506,2400.0054634989997,2401.518969267
c003,1,1,5,184435,170664,178019,178019,3000.0162713419995,3002.166839648
c003,1,1,6,136739,125900,131339,131339,3600.0216026219996,3602.79480738
c003,1,1,7,106948,98387,102599,102599,4200.026523084,4203.473250394
c003,1,1,8,87457,80440,83978,83978,4800.033578303,4804.199595072
c003,1,1,9,72378,66418,69465,69465,5400.054638005,5404.765887248
c003,1,1,10,62340,57208,59844,59844,6000.054983944,6005.349833179
c003,1,1,11,51431,47136,49362,49362,6600.069304123,6606.377045374
# search time: 6600.069s
# total time: 13222.353s
c003,2,1,1,1223680,1071958,1191508,1191508,600.009026907,600.254425185
c003,2,1,2,721064,676690,697478,697478,1200.009360997,1200.61321523
c003,2,1,3,441436,409632,426326,426326,1800.010758575,1800.872476272
c003,2,1,4,364595,337699,352174,352174,2400.011187956,2401.123181396
c003,2,1,5,181672,168374,175415,175415,3000.011231287,3001.526624754
c003,2,1,6,136281,125652,131036,131036,3600.016844143,3601.983246676
c003,2,1,7,105414,96922,101173,101173,4200.017125684,4202.436321222
c003,2,1,8,87448,80506,84109,84109,4800.028080523,4802.9125649
c003,2,1,9,70571,64730,67751,67751,5400.029359319,5403.580663161
c003,2,1,10,62125,56892,59625,59625,6000.029794528,6004.105958929
c003,2,1,11,52474,48150,50422,50422,6600.044702008,6604.387423294
# search time: 6600.045s
# total time: 19827.045s
c003,3,1,1,1176021,1005439,1138913,1138913,600.000025915,600.267764293
c003,3,1,2,743896,696690,718401,718401,1200.00025143,1200.558295526
c003,3,1,3,433127,401657,418351,418351,1800.000559955,1800.759501149
c003,3,1,4,353225,327128,341137,341137,2400.001063545,2400.962876524
c003,3,1,5,183523,169838,177222,177222,3000.0029017409997,3001.298600334
c003,3,1,6,136737,125982,131406,131406,3600.02712006,3601.631081072
c003,3,1,7,107255,98657,102982,102982,4200.028704733,4201.99600776
c003,3,1,8,86452,79681,83146,83146,4800.037755157,4802.376060935
c003,3,1,9,71887,66062,69047,69047,5400.037783679,5402.681166629
c003,3,1,10,61661,56485,59141,59141,6000.050764019001,6003.139061903
c003,3,1,11,53032,48665,51016,51016,6600.052367134001,6603.403260505
# search time: 6600.052s
# total time: 26430.919s
c003,4,1,1,1198311,980691,1148491,1148491,600.000711981,600.1631981
c003,4,1,2,736360,689235,711326,711326,1200.0015805970002,1200.418093065
c003,4,1,3,443292,411419,428037,428037,1800.002635627,1800.601668938
c003,4,1,4,355946,329161,343305,343305,2400.005668897,2400.776438555
c003,4,1,5,183062,169631,176745,176745,3000.022653865,3001.068260622
c003,4,1,6,136619,125676,131224,131224,3600.024929037,3601.31908804
c003,4,1,7,107642,98878,103298,103298,4200.027499173,4201.60312115
c003,4,1,8,85251,78573,81989,81989,4800.039225246001,4801.841335461
c003,4,1,9,72317,66365,69421,69421,5400.046738077001,5402.072086666
c003,4,1,10,62090,56932,59614,59614,6000.0744741260005,6002.381031442
c003,4,1,11,51609,47570,49723,49723,6600.091741266,6602.649340252
# search time: 6600.092s
# total time: 33033.903s
