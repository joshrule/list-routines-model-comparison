    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c038_1.json out/1593091766/results/c038_1_best.csv out/1593091766/results/c038_1_predictions.csv out/1593091766/results/c038_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c038,0,1,1,1312742,1067706,1256862,1256862,600.001221735,601.727943412
c038,0,1,2,481989,454501,466232,466232,1200.002207353,1202.791566432
c038,0,1,3,395294,370620,374208,374208,1800.0039374029998,1803.607796621
c038,0,1,4,327412,303880,305871,305871,2400.007841071,2404.282856007
c038,0,1,5,244287,227279,229164,229164,3000.0079533279995,3004.814486668
c038,0,1,6,150211,135890,136890,136890,3600.0094532799994,3605.390144487
c038,0,1,7,125257,110925,111726,111726,4200.012742534999,4205.885662144
c038,0,1,8,127178,106402,106884,106884,4800.017049231999,4806.32142062
c038,0,1,9,106621,86818,87289,87289,5400.021861054999,5406.805761171
c038,0,1,10,78969,64529,64946,64946,6000.0266292179995,6007.187327709
c038,0,1,11,59999,49236,49610,49610,6600.032006273999,6607.694027627
# search time: 6600.032s
# total time: 6608.136s
c038,1,1,1,1308576,1146746,1274699,1274699,600.00003038,600.39374718
c038,1,1,2,488694,459632,472293,472293,1200.000238347,1200.752226483
c038,1,1,3,392500,367853,371476,371476,1800.0007782070002,1801.148478809
c038,1,1,4,317876,294109,295881,295881,2400.002136809,2401.466283872
c038,1,1,5,236067,218320,220028,220028,3000.002602305,3001.752429267
c038,1,1,6,144991,131055,131931,131931,3600.006711988,3602.075211356
c038,1,1,7,122416,106966,107708,107708,4200.008469922,4202.344445145
c038,1,1,8,125925,105699,106181,106181,4800.014729383,4802.593988195
c038,1,1,9,106813,86641,87126,87126,5400.014995195,5402.785644938
c038,1,1,10,78593,64524,64883,64883,6000.019708532,6003.04454461
c038,1,1,11,59155,48474,48771,48771,6600.021057469,6603.286319976
# search time: 6600.021s
# total time: 13212.191s
c038,2,1,1,1241770,1013484,1190273,1190273,600.000139542,600.187951709
c038,2,1,2,480534,452430,464729,464729,1200.000735624,1200.432772901
c038,2,1,3,391668,367016,370545,370545,1800.0014683480001,1800.676593016
c038,2,1,4,316746,292686,294535,294535,2400.002976657,2400.897302519
c038,2,1,5,241373,224201,226129,226129,3000.0131471570003,3001.105177608
c038,2,1,6,149568,135409,136396,136396,3600.0144814120004,3601.306405209
c038,2,1,7,123144,107709,108472,108472,4200.014829606001,4201.500343561
c038,2,1,8,122525,102800,103189,103189,4800.016032917,4801.639708877
c038,2,1,9,107450,87135,87600,87600,5400.017771691,5401.797264427
c038,2,1,10,78126,62567,62875,62875,6000.021411118,6001.995671826
c038,2,1,11,59587,49297,49634,49634,6600.035840265,6602.22130287
# search time: 6600.036s
# total time: 19815.541s
c038,3,1,1,1272955,1040950,1220131,1220131,600.000017519,600.184046001
c038,3,1,2,479158,450770,463233,463233,1200.0001082630001,1200.396569215
c038,3,1,3,390221,365726,369282,369282,1800.000151276,1800.601535624
c038,3,1,4,316260,292597,294336,294336,2400.024121717,2400.81043534
c038,3,1,5,234910,217265,218971,218971,3000.035155124,3000.971378266
c038,3,1,6,145163,131151,132087,132087,3600.0355936200003,3601.107962925
c038,3,1,7,121777,106699,107462,107462,4200.038359985,4201.253299327
c038,3,1,8,125218,104714,105265,105265,4800.039602484,4801.364949149
c038,3,1,9,106392,86262,86809,86809,5400.0423390040005,5401.475094575
c038,3,1,10,77554,62392,62703,62703,6000.0443778690005,6001.594165068
c038,3,1,11,59520,49047,49370,49370,6600.045957778,6601.725533793
# search time: 6600.046s
# total time: 26417.692s
c038,4,1,1,1299592,1066810,1246367,1246367,600.004279277,600.189459439
c038,4,1,2,490150,461117,473609,473609,1200.004476848,1200.392293854
c038,4,1,3,382051,357522,361112,361112,1800.0048269,1800.580728989
c038,4,1,4,317658,293918,295694,295694,2400.005209912,2400.720015318
c038,4,1,5,240531,223620,225496,225496,3000.00585924,3000.854082551
c038,4,1,6,143774,129880,130769,130769,3600.008550957,3601.003352206
c038,4,1,7,122269,106829,107595,107595,4200.010502433,4201.143420187
c038,4,1,8,124426,104211,104666,104666,4800.016871455,4801.230749488
c038,4,1,9,105191,85373,85813,85813,5400.0219982300005,5401.33528323
c038,4,1,10,77435,63856,64242,64242,6000.027263306,6001.439966736
c038,4,1,11,59478,49037,49393,49393,6600.034984797,6601.576120239
# search time: 6600.035s
# total time: 33020.390s
