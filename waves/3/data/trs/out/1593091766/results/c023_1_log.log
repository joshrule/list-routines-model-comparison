    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c023_1.json out/1593091766/results/c023_1_best.csv out/1593091766/results/c023_1_predictions.csv out/1593091766/results/c023_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 0, 5, 4]), o: IntList([2, 8, 0, 5, 4]) }
#   Datum { i: IntList([0, 2, 7, 9, 5, 8, 6, 3, 0, 9]), o: IntList([0, 5, 2, 7, 9, 5, 8, 6, 3, 0, 9]) }
#   Datum { i: IntList([9, 7, 6, 1, 2]), o: IntList([9, 5, 7, 6, 1, 2]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([7, 0, 2]), o: IntList([7, 8, 0, 2]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([1, 5, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([3, 7, 3, 7, 3, 3, 2, 2, 7, 3]), o: IntList([3, 5, 7, 3, 7, 3, 3, 2, 2, 7, 3]) }
#   Datum { i: IntList([9, 7, 2, 3, 0, 1, 6, 8, 4]), o: IntList([9, 5, 7, 2, 3, 0, 1, 6, 8, 4]) }
#   Datum { i: IntList([7, 4, 5, 9, 9, 5, 8]), o: IntList([7, 5, 4, 5, 9, 9, 5, 8]) }
#   Datum { i: IntList([0, 2, 9, 8, 0, 0, 5, 9, 2, 9]), o: IntList([0, 5, 2, 9, 8, 0, 0, 5, 9, 2, 9]) }
#   Datum { i: IntList([5, 2, 2, 6, 1, 9, 4, 2]), o: IntList([5, 5, 2, 2, 6, 1, 9, 4, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c023,0,1,1,1252021,1024150,1200549,1200549,600.000083985,601.617978613
c023,0,1,2,492447,461532,474100,474100,1200.010096794,1202.635990463
c023,0,1,3,195642,179639,180965,180965,1800.013094676,1803.497756315
c023,0,1,4,182809,171219,172623,172623,2400.015620007,2404.01899351
c023,0,1,5,143139,130112,131151,131151,3000.01665489,3004.73363973
c023,0,1,6,117368,107776,109446,109446,3600.0172442720004,3605.406980556
c023,0,1,7,119049,107653,109471,109471,4200.019659547001,4205.855475569
c023,0,1,8,65666,60129,60967,60967,4800.025204454,4806.759098182
c023,0,1,9,63602,56536,57174,57174,5400.029897542,5407.257499157
c023,0,1,10,53465,48175,48713,48713,6000.032672311,6007.982018145
c023,0,1,11,44321,39702,40153,40153,6600.043997744,6608.63121529
# search time: 6600.044s
# total time: 6608.997s
c023,1,1,1,1283405,1055312,1231367,1231367,600.001098416,600.281154607
c023,1,1,2,486418,455114,468600,468600,1200.0018149500002,1200.673057114
c023,1,1,3,197513,181949,183354,183354,1800.0033695400002,1801.059525905
c023,1,1,4,181567,169959,171280,171280,2400.0053733480004,2401.289595748
c023,1,1,5,141386,128549,129524,129524,3000.0094678110004,3001.630181786
c023,1,1,6,115370,105957,107660,107660,3600.0130357800003,3601.959812671
c023,1,1,7,117685,106665,108369,108369,4200.014981417,4202.167431176
c023,1,1,8,65802,60387,61185,61185,4800.017218871,4802.58902963
c023,1,1,9,62566,56652,57203,57203,5400.020268399,5402.841381692
c023,1,1,10,53457,48540,49068,49068,6000.0281815220005,6003.098164151
c023,1,1,11,44224,39721,40193,40193,6600.034916073,6603.393722338
# search time: 6600.035s
# total time: 13213.025s
c023,2,1,1,1294424,1064310,1241833,1241833,600.000042944,600.231211992
c023,2,1,2,481096,451243,463484,463484,1200.00012517,1200.5081919
c023,2,1,3,199415,183971,185252,185252,1800.0001425740002,1800.737597706
c023,2,1,4,181518,169939,171331,171331,2400.0007898820004,2400.914873163
c023,2,1,5,144467,131221,132402,132402,3000.0043337880006,3001.147265257
c023,2,1,6,115852,106612,108213,108213,3600.0051943830003,3601.38472711
c023,2,1,7,119362,107826,109563,109563,4200.006853217001,4201.535769866
c023,2,1,8,64607,59539,60278,60278,4800.008655555001,4801.765869337
c023,2,1,9,62940,56034,56678,56678,5400.013087857001,5401.988992061
c023,2,1,10,53356,47877,48416,48416,6000.018777618001,6002.267118452
c023,2,1,11,43077,38420,38860,38860,6600.049684720001,6602.511941019
# search time: 6600.050s
# total time: 19816.204s
c023,3,1,1,1219734,1036264,1179570,1179570,600.000079549,600.227384147
c023,3,1,2,502932,469999,483570,483570,1200.0056717470002,1200.45455943
c023,3,1,3,197126,181683,183312,183312,1800.0061050930003,1800.644112929
c023,3,1,4,177491,165737,166843,166843,2400.0061852730005,2400.787014761
c023,3,1,5,144919,131454,132644,132644,3000.0077859950006,3000.923745742
c023,3,1,6,117296,107280,108926,108926,3600.0090843490007,3601.124621333
c023,3,1,7,93014,85412,86883,86883,4200.010655522001,4201.337646504
c023,3,1,8,65727,60301,61095,61095,4800.018582985001,4801.618328722
c023,3,1,9,62070,56177,56801,56801,5400.019287812001,5401.766536534
c023,3,1,10,51587,46684,47064,47064,6000.025930740001,6001.939903884
c023,3,1,11,42914,38483,38945,38945,6600.062282071001,6602.1204751
# search time: 6600.062s
# total time: 26419.227s
c023,4,1,1,1233167,1045944,1192078,1192078,600.00085232,600.231702242
c023,4,1,2,494041,462461,475384,475384,1200.0015585340002,1200.430744243
c023,4,1,3,194103,178327,179585,179585,1800.003484665,1800.599190581
c023,4,1,4,180544,168935,170295,170295,2400.013256173,2400.710718874
c023,4,1,5,144431,131308,132491,132491,3000.0178695070003,3000.857200763
c023,4,1,6,115696,106157,107937,107937,3600.0187875090005,3600.992453551
c023,4,1,7,93400,86142,87496,87496,4200.021680234,4201.133428697
c023,4,1,8,65384,60050,60832,60832,4800.024174331,4801.311600339
c023,4,1,9,62314,56370,56966,56966,5400.026500434,5401.458481056
c023,4,1,10,52953,47649,48191,48191,6000.044269972,6001.608325344
c023,4,1,11,43737,39186,39637,39637,6600.052904553,6601.707889225
# search time: 6600.053s
# total time: 33021.353s
