    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c011_5.json out/1593091766/results/c011_5_best.csv out/1593091766/results/c011_5_predictions.csv out/1593091766/results/c011_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 2, 6, 4, 6, 2, 0]), o: IntList([2, 6, 4]) }
#   Datum { i: IntList([1, 1, 4, 0, 3, 1, 3, 5, 0]), o: IntList([1, 4, 0]) }
#   Datum { i: IntList([3, 3, 6, 0]), o: IntList([3, 6, 0]) }
#   Datum { i: IntList([6, 8, 6, 9, 9, 8, 8, 6]), o: IntList([8, 6, 9]) }
#   Datum { i: IntList([5, 7, 5, 9, 7, 6, 8, 5, 6, 8]), o: IntList([7, 5, 9]) }
#   Datum { i: IntList([7, 2, 4, 2, 4, 7, 2, 2, 4]), o: IntList([2, 4, 2]) }
#   Datum { i: IntList([5, 1, 1, 8, 1, 6, 7, 2, 7]), o: IntList([1, 1, 8]) }
#   Datum { i: IntList([1, 9, 3, 0, 2, 8, 5]), o: IntList([9, 3, 0]) }
#   Datum { i: IntList([6, 1, 3, 0, 4, 9]), o: IntList([1, 3, 0]) }
#   Datum { i: IntList([0, 0, 3, 3, 7]), o: IntList([0, 3, 3]) }
#   Datum { i: IntList([5, 8, 5, 8, 3, 8, 7, 3, 7]), o: IntList([8, 5, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c011,0,5,1,671014,577989,650921,650921,600.006715697,603.025773803
c011,0,5,2,312617,293784,301925,301925,1200.007341652,1205.143755312
c011,0,5,3,193427,178872,183586,183586,1800.0104462499999,1806.871869259
c011,0,5,4,143359,133196,137745,137745,2400.0158831649997,2408.297728367
c011,0,5,5,106080,98828,102080,102080,3000.0175035419998,3009.883267467
c011,0,5,6,82987,76953,79640,79640,3600.04452728,3610.982858489
c011,0,5,7,91188,83306,87267,87267,4200.046422834,4211.757702661
c011,0,5,8,49949,46182,47794,47794,4800.048909862,4813.45897106
c011,0,5,9,43552,40164,41658,41658,5400.0701099220005,5415.573244957
c011,0,5,10,36665,33652,35263,35263,6000.0940482430005,6017.654379976
c011,0,5,11,34608,31578,33206,33206,6600.103295402,6619.584555885
# search time: 6600.103s
# total time: 6619.799s
c011,1,5,1,642960,526805,616714,616714,600.000422776,600.266628066
c011,1,5,2,312609,293594,301987,301987,1200.0043775240001,1200.964722436
c011,1,5,3,198692,183599,188963,188963,1800.0113753790001,1801.660606678
c011,1,5,4,141436,131562,136121,136121,2400.012006709,2402.307243807
c011,1,5,5,105444,98059,101460,101460,3000.016083727,3003.033362292
c011,1,5,6,82242,76080,78908,78908,3600.018782983,3603.730249297
c011,1,5,7,93162,85357,89132,89132,4200.019969884001,4204.135639784
c011,1,5,8,49494,45856,47456,47456,4800.038155720001,4805.224143246
c011,1,5,9,43092,39715,41199,41199,5400.041854380001,5406.374958844
c011,1,5,10,37090,34023,35637,35637,6000.046502561001,6007.4254631
c011,1,5,11,33296,30614,31999,31999,6600.056452859001,6608.401993654
# search time: 6600.056s
# total time: 13228.602s
c011,2,5,1,670861,578027,650634,650634,600.000200439,600.306509702
c011,2,5,2,311971,292662,301182,301182,1200.000597873,1200.75265667
c011,2,5,3,193023,178371,183188,183188,1800.002343315,1801.212806558
c011,2,5,4,142029,131993,136574,136574,2400.003888016,2401.624530683
c011,2,5,5,107891,100283,103633,103633,3000.010437782,3002.089614229
c011,2,5,6,82272,76116,78928,78928,3600.016609468,3602.539583706
c011,2,5,7,90923,82884,86831,86831,4200.032990615,4202.827049506
c011,2,5,8,49907,46096,47693,47693,4800.0428694130005,4803.458334904
c011,2,5,9,43707,40179,41733,41733,5400.049587990001,5403.977227126
c011,2,5,10,37143,34123,35760,35760,6000.067074664001,6004.568723418
c011,2,5,11,34940,31999,33574,33574,6600.072335656001,6605.010007091
# search time: 6600.072s
# total time: 19833.816s
c011,3,5,1,674044,584188,654769,654769,600.000717997,600.268056638
c011,3,5,2,308020,289272,297692,297692,1200.0018275450002,1200.618589274
c011,3,5,3,198555,183518,188658,188658,1800.002321504,1800.923629138
c011,3,5,4,143550,133564,137998,137998,2400.002893419,2401.224099332
c011,3,5,5,106038,98540,102070,102070,3000.00655307,3001.571205044
c011,3,5,6,83782,77781,80426,80426,3600.009951479,3601.93377772
c011,3,5,7,92840,85805,89087,89087,4200.01833848,4202.152513478
c011,3,5,8,49292,45602,47205,47205,4800.019687958,4802.527610825
c011,3,5,9,44255,40793,42252,42252,5400.023158839,5402.915094008
c011,3,5,10,37113,34046,35719,35719,6000.041507797,6003.552334882
c011,3,5,11,43346,39478,41528,41528,6600.046697283,6604.024917368
# search time: 6600.047s
# total time: 26438.308s
c011,4,5,1,682877,596213,664610,664610,600.001438983,600.244130061
c011,4,5,2,309027,290379,298579,298579,1200.00195196,1200.537367769
c011,4,5,3,192714,178125,183023,183023,1800.0030700030002,1800.831641726
c011,4,5,4,143354,133124,137638,137638,2400.004209355,2401.091420947
c011,4,5,5,105968,98447,101941,101941,3000.004709875,3001.407529022
c011,4,5,6,83744,77887,80433,80433,3600.01203587,3601.746560182
c011,4,5,7,96531,89049,92273,92273,4200.034303781,4202.009785636
c011,4,5,8,49897,46113,47739,47739,4800.063695579,4802.469536149
c011,4,5,9,43415,39967,41412,41412,5400.067281353,5402.783268241
c011,4,5,10,36821,33775,35420,35420,6000.074561596,6003.300373223
c011,4,5,11,34241,31297,32871,32871,6600.093321289,6603.588407912
# search time: 6600.093s
# total time: 33042.199s
