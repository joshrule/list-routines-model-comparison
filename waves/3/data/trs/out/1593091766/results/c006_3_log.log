    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.51s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c006_3.json out/1593091766/results/c006_3_best.csv out/1593091766/results/c006_3_predictions.csv out/1593091766/results/c006_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 8, 5]), o: IntList([6, 8]) }
#   Datum { i: IntList([0, 4, 0, 0, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([9, 7, 7]), o: IntList([9, 7]) }
#   Datum { i: IntList([4, 3, 3, 5, 5]), o: IntList([4, 3]) }
#   Datum { i: IntList([2, 2, 2, 2, 2]), o: IntList([2, 2]) }
#   Datum { i: IntList([2, 0, 4, 6, 5]), o: IntList([2, 0]) }
#   Datum { i: IntList([8, 0, 8, 7, 4, 0, 4]), o: IntList([8, 0]) }
#   Datum { i: IntList([3, 1, 1, 1, 3, 1, 1]), o: IntList([3, 1]) }
#   Datum { i: IntList([9, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([5, 5, 1, 5, 7, 7]), o: IntList([5, 5]) }
#   Datum { i: IntList([7, 8, 5, 7]), o: IntList([7, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c006,0,3,1,1275695,1084702,1233659,1233659,600.00007984,601.863933413
c006,0,3,2,698137,660136,678681,678681,1200.0002885210001,1202.777646193
c006,0,3,3,478528,448197,463961,463961,1800.0007257790003,1803.351399833
c006,0,3,4,404586,378525,391643,391643,2400.000874351,2403.839065485
c006,0,3,5,335404,312792,323947,323947,3000.0017453540004,3004.278707954
c006,0,3,6,300022,279732,290392,290392,3600.0021763400005,3604.664727547
c006,0,3,7,218597,204162,211268,211268,4200.0050573670005,4205.26913135
c006,0,3,8,180185,166658,174358,174358,4800.006595558,4805.842858124
c006,0,3,9,153026,141361,148068,148068,5400.00726413,5406.495432247
c006,0,3,10,141554,130765,137056,137056,6000.011438475,6007.131569561
c006,0,3,11,121659,111632,117267,117267,6600.017055598,6607.742154998
# search time: 6600.017s
# total time: 6608.093s
c006,1,3,1,1293623,1110475,1253525,1253525,600.000064122,600.303951205
c006,1,3,2,714651,674536,693487,693487,1200.000304058,1200.625074534
c006,1,3,3,484700,453439,469391,469391,1800.006185254,1800.874736992
c006,1,3,4,407263,381385,394179,394179,2400.006562384,2401.097145075
c006,1,3,5,333835,311838,322599,322599,3000.007028255,3001.313183966
c006,1,3,6,294276,274514,284439,284439,3600.007873303,3601.553424596
c006,1,3,7,216893,202476,209468,209468,4200.008159308,4201.8779169
c006,1,3,8,181583,168177,175816,175816,4800.009520867,4802.235078584
c006,1,3,9,151566,139929,146549,146549,5400.014491174,5402.572600407
c006,1,3,10,141638,130607,137051,137051,6000.017516479,6002.882047447
c006,1,3,11,120990,111676,116843,116843,6600.019885463,6603.267203499
# search time: 6600.020s
# total time: 13211.901s
c006,2,3,1,1295119,1064701,1242678,1242678,600.001947434,600.209760871
c006,2,3,2,721545,680659,699836,699836,1200.002473518,1200.466208241
c006,2,3,3,490609,459636,475303,475303,1800.003048882,1800.659044352
c006,2,3,4,410656,384453,397313,397313,2400.011784845,2400.841129669
c006,2,3,5,339471,316752,327815,327815,3000.0174013799997,3001.009011471
c006,2,3,6,298285,278561,288343,288343,3600.017672862,3601.168269344
c006,2,3,7,219004,204448,211468,211468,4200.019423185,4201.38531102
c006,2,3,8,179285,165815,173554,173554,4800.020945998,4801.589915327
c006,2,3,9,150578,139492,145731,145731,5400.023870016,5401.793903921
c006,2,3,10,141393,130573,137016,137016,6000.024306014,6002.030469443
c006,2,3,11,122528,112580,118179,118179,6600.0262047510005,6602.314456765
# search time: 6600.026s
# total time: 19814.741s
c006,3,3,1,1334989,1154449,1296060,1296060,600.00015996,600.274129357
c006,3,3,2,691715,654416,672435,672435,1200.00016443,1200.487313724
c006,3,3,3,481346,451278,466905,466905,1800.001547023,1800.650322459
c006,3,3,4,407673,381209,394235,394235,2400.007002053,2400.810544973
c006,3,3,5,339423,316229,327734,327734,3000.0243193630004,3000.968093342
c006,3,3,6,293751,274776,284411,284411,3600.031767589,3601.10407
c006,3,3,7,219284,204844,211926,211926,4200.039274171,4201.28498854
c006,3,3,8,180933,167169,174999,174999,4800.041205333,4801.485832988
c006,3,3,9,152890,141085,147766,147766,5400.044724708,5401.673358473
c006,3,3,10,141827,130944,137210,137210,6000.049863442,6001.879945759
c006,3,3,11,121682,111883,117492,117492,6600.050110465,6602.043457474
# search time: 6600.050s
# total time: 26417.309s
c006,4,3,1,1338584,1161539,1300335,1300335,600.000185589,600.286569237
c006,4,3,2,716387,676124,694996,694996,1200.001153762,1200.485134063
c006,4,3,3,474328,445255,460680,460680,1800.001326836,1800.635235859
c006,4,3,4,409803,382956,395869,395869,2400.001688396,2400.763316715
c006,4,3,5,330869,308328,319265,319265,3000.002070255,3000.891838766
c006,4,3,6,297222,276976,286943,286943,3600.005492965,3601.014399009
c006,4,3,7,216125,201697,208772,208772,4200.009318072,4201.152546709
c006,4,3,8,179079,165480,173288,173288,4800.017079007,4801.295619736
c006,4,3,9,154342,142571,149103,149103,5400.0173474739995,5401.443207794
c006,4,3,10,141137,130310,136675,136675,6000.019510812999,6001.638314903
c006,4,3,11,123699,113649,119360,119360,6600.0196999009995,6601.788004134
# search time: 6600.020s
# total time: 33019.620s
