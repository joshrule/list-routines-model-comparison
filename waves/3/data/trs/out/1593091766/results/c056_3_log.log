    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c056_3.json out/1593091766/results/c056_3_best.csv out/1593091766/results/c056_3_predictions.csv out/1593091766/results/c056_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 1, 2, 6, 7, 2]), o: IntList([2, 1, 2, 6, 2]) }
#   Datum { i: IntList([5, 6, 9, 6, 6, 5, 9]), o: IntList([5, 6, 9, 6, 5, 9]) }
#   Datum { i: IntList([7, 6, 7, 8, 6, 0, 7, 6, 0, 5]), o: IntList([7, 6, 7, 8, 0, 7, 6, 0, 5]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1]), o: IntList([1, 1, 1, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([1, 8, 3, 8, 3, 0, 6]), o: IntList([1, 8, 3, 8, 0, 6]) }
#   Datum { i: IntList([3, 4, 4, 3, 3, 4]), o: IntList([3, 4, 4, 3, 4]) }
#   Datum { i: IntList([0, 4, 2, 4, 0]), o: IntList([0, 4, 2, 4]) }
#   Datum { i: IntList([9, 0, 0, 9, 0, 0, 0, 9]), o: IntList([9, 0, 0, 9, 0, 0, 9]) }
#   Datum { i: IntList([0, 8, 3, 6, 5, 9, 7, 2, 3, 1]), o: IntList([0, 8, 3, 6, 9, 7, 2, 3, 1]) }
#   Datum { i: IntList([2, 0, 6, 2, 0, 0, 6, 2, 6]), o: IntList([2, 0, 6, 2, 0, 6, 2, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c056,0,3,1,1327221,1180014,1299562,1299562,600.002114723,602.097428166
c056,0,3,2,473627,444655,457195,457195,1200.010196399,1203.060641358
c056,0,3,3,279255,259605,265312,265312,1800.011182226,1803.82749395
c056,0,3,4,144242,133905,138172,138172,2400.014137288,2404.769240103
c056,0,3,5,111319,103084,106472,106472,3000.016378067,3005.557437653
c056,0,3,6,85033,78820,81420,81420,3600.018305655,3606.395831178
c056,0,3,7,81152,74066,76182,76182,4200.020685937,4207.239624172
c056,0,3,8,79627,71295,73609,73609,4800.028011446,4807.873652995
c056,0,3,9,67857,61345,63370,63370,5400.0314816850005,5408.741724816
c056,0,3,10,58073,52660,54315,54315,6000.033873691001,6009.671242046
c056,0,3,11,49553,44746,46161,46161,6600.044711994001,6610.584984523
# search time: 6600.045s
# total time: 6610.866s
c056,1,3,1,1297752,1146779,1266745,1266745,600.000234599,600.392205396
c056,1,3,2,474476,445859,457995,457995,1200.000929501,1200.804459831
c056,1,3,3,267870,249583,254427,254427,1800.00179472,1801.216893361
c056,1,3,4,145485,134970,139382,139382,2400.003391583,2401.663840905
c056,1,3,5,112018,103671,107098,107098,3000.0035194399998,3002.079553656
c056,1,3,6,86592,80300,82859,82859,3600.0043932189997,3602.55206192
c056,1,3,7,80263,73157,75463,75463,4200.011962490999,4202.986045183
c056,1,3,8,78521,70733,73052,73052,4800.013693047999,4803.293501778
c056,1,3,9,66835,60281,62284,62284,5400.017922100999,5403.739125825
c056,1,3,10,57219,51804,53423,53423,6000.019124019,6004.173253264
c056,1,3,11,48189,43633,44950,44950,6600.023661538,6604.612476258
# search time: 6600.024s
# total time: 13215.908s
c056,2,3,1,1264868,1040097,1213729,1213729,600.000074982,600.212120207
c056,2,3,2,472520,443727,456023,456023,1200.0004424429999,1200.488903166
c056,2,3,3,267931,249120,254251,254251,1800.0024181049998,1800.759170635
c056,2,3,4,142652,132731,136955,136955,2400.005307227,2401.066913919
c056,2,3,5,111166,103117,106465,106465,3000.016986056,3001.351571613
c056,2,3,6,85827,79529,82167,82167,3600.019043622,3601.719767822
c056,2,3,7,79969,73117,75181,75181,4200.020879082,4202.016188643
c056,2,3,8,77925,70374,72635,72635,4800.031156166,4802.337929586
c056,2,3,9,68189,61635,63619,63619,5400.0473485210005,5402.62108032
c056,2,3,10,58240,52663,54352,54352,6000.0491015140005,6003.015954606
c056,2,3,11,48448,43787,45202,45202,6600.066228192,6603.43110974
# search time: 6600.066s
# total time: 19819.893s
c056,3,3,1,1297479,1136383,1264016,1264016,600.00246345,600.279165679
c056,3,3,2,472320,444107,456133,456133,1200.002860692,1200.505456585
c056,3,3,3,268732,250349,255137,255137,1800.002991204,1800.703297356
c056,3,3,4,141606,131168,135753,135753,2400.00340576,2400.893767171
c056,3,3,5,110389,102262,105691,105691,3000.008881001,3001.094488988
c056,3,3,6,86196,79997,82442,82442,3600.0129115510003,3601.414336226
c056,3,3,7,80768,73650,75803,75803,4200.017868995001,4201.62434364
c056,3,3,8,77746,69884,71923,71923,4800.022004489001,4801.840769039
c056,3,3,9,68057,61426,63397,63397,5400.025276261001,5402.028988397
c056,3,3,10,57597,51949,53660,53660,6000.033851962001,6002.236007805
c056,3,3,11,49204,44627,45905,45905,6600.047127836001,6602.424497459
# search time: 6600.047s
# total time: 26422.595s
c056,4,3,1,1279960,1116933,1245253,1245253,600.001083185,600.269010358
c056,4,3,2,459338,431211,443524,443524,1200.00177987,1200.473822077
c056,4,3,3,276452,257324,263085,263085,1800.001982593,1800.645622493
c056,4,3,4,141425,131729,135907,135907,2400.004992749,2400.827278065
c056,4,3,5,111996,104155,107255,107255,3000.006240447,3000.994395895
c056,4,3,6,86058,79768,82248,82248,3600.006911442,3601.208169146
c056,4,3,7,80883,73651,75784,75784,4200.019908155,4201.415722269
c056,4,3,8,77825,70357,72545,72545,4800.020494501,4801.604350508
c056,4,3,9,66750,60351,62269,62269,5400.023232016,5401.783988404
c056,4,3,10,57610,52207,53830,53830,6000.029332985,6001.945413575
c056,4,3,11,49199,44390,45821,45821,6600.031128442,6602.154104368
# search time: 6600.031s
# total time: 33025.189s
