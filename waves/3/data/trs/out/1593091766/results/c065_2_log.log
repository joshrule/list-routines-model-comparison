    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c065_2.json out/1593091766/results/c065_2_best.csv out/1593091766/results/c065_2_predictions.csv out/1593091766/results/c065_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2, 8]), o: IntList([9, 2, 2, 8, 7]) }
#   Datum { i: IntList([6, 6, 3, 0, 0, 3]), o: IntList([9, 6, 6, 3, 0, 0, 3, 7]) }
#   Datum { i: IntList([]), o: IntList([9, 7]) }
#   Datum { i: IntList([4, 8]), o: IntList([9, 4, 8, 7]) }
#   Datum { i: IntList([7, 8, 2, 1, 9]), o: IntList([9, 7, 8, 2, 1, 9, 7]) }
#   Datum { i: IntList([1, 1, 1, 2, 1, 1, 1, 2]), o: IntList([9, 1, 1, 1, 2, 1, 1, 1, 2, 7]) }
#   Datum { i: IntList([0, 8, 2, 4, 1, 9, 6]), o: IntList([9, 0, 8, 2, 4, 1, 9, 6, 7]) }
#   Datum { i: IntList([7]), o: IntList([9, 7, 7]) }
#   Datum { i: IntList([1, 0, 0, 8]), o: IntList([9, 1, 0, 0, 8, 7]) }
#   Datum { i: IntList([1, 3, 1, 5, 6, 4, 4, 3, 8]), o: IntList([9, 1, 3, 1, 5, 6, 4, 4, 3, 8, 7]) }
#   Datum { i: IntList([3, 6, 4, 3, 6, 3, 5, 5, 4, 5]), o: IntList([9, 3, 6, 4, 3, 6, 3, 5, 5, 4, 5, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c065,0,2,1,1081955,918442,1045860,1045860,600.003862639,601.941065848
c065,0,2,2,427683,400346,411235,411235,1200.0041742170001,1202.99229432
c065,0,2,3,218873,199118,201490,201490,1800.0042607300002,1803.993587041
c065,0,2,4,217882,193367,194517,194517,2400.0062675990002,2404.64824317
c065,0,2,5,169069,148437,149208,149208,3000.00996083,3005.280994375
c065,0,2,6,126621,109113,109717,109717,3600.023087414,3605.925626717
c065,0,2,7,94551,78110,78631,78631,4200.024749829,4206.535917855
c065,0,2,8,68447,56146,56960,56960,4800.032760802,4807.266119025
c065,0,2,9,77935,61081,61561,61561,5400.036644326,5407.717068528
c065,0,2,10,66444,52915,53302,53302,6000.04254085,6008.216725739
c065,0,2,11,50457,40716,41061,41061,6600.043522681,6608.79469067
# search time: 6600.044s
# total time: 6609.141s
c065,1,2,1,1122482,916612,1075484,1075484,600.00575897,600.27690303
c065,1,2,2,429422,401081,412398,412398,1200.00637732,1200.677182386
c065,1,2,3,219930,200409,202651,202651,1800.0064370989999,1801.082900112
c065,1,2,4,212951,189562,190678,190678,2400.007778673,2401.421338873
c065,1,2,5,164575,143859,144523,144523,3000.0097378319997,3001.774743426
c065,1,2,6,129104,111087,111819,111819,3600.0220420389996,3602.072494424
c065,1,2,7,81443,68189,68708,68708,4200.022800770999,4202.417643623
c065,1,2,8,68029,56097,56904,56904,4800.027452154999,4802.739091896
c065,1,2,9,75835,59708,60144,60144,5400.035454432999,5402.944711679
c065,1,2,10,65595,51326,51616,51616,6000.041941430999,6003.196429881
c065,1,2,11,50273,40463,40770,40770,6600.043328061999,6603.453768832
# search time: 6600.043s
# total time: 13213.204s
c065,2,2,1,1123391,924016,1078135,1078135,600.000090441,600.218724044
c065,2,2,2,425972,399000,409742,409742,1200.003148494,1200.500124001
c065,2,2,3,218242,198798,201022,201022,1800.005741255,1800.77738011
c065,2,2,4,213775,189845,191082,191082,2400.006705454,2401.013096562
c065,2,2,5,163541,143374,144022,144022,3000.009410708,3001.254711274
c065,2,2,6,128143,110351,111062,111062,3600.010948285,3601.45190654
c065,2,2,7,93223,77034,77509,77509,4200.018097376,4201.64832088
c065,2,2,8,64607,53508,54292,54292,4800.023095945,4801.900108878
c065,2,2,9,76519,60009,60538,60538,5400.023992997,5402.05894893
c065,2,2,10,66753,52789,53178,53178,6000.025971983,6002.259703249
c065,2,2,11,50034,40196,40530,40530,6600.027067029,6602.43918514
# search time: 6600.027s
# total time: 19816.293s
c065,3,2,1,1198071,1039647,1164196,1164196,600.001106896,600.281824457
c065,3,2,2,425158,398672,409275,409275,1200.0018841390001,1200.505612668
c065,3,2,3,212360,192295,194637,194637,1800.00965361,1800.751427954
c065,3,2,4,211375,187916,189032,189032,2400.012466834,2400.930883239
c065,3,2,5,163033,142657,143274,143274,3000.013512617,3001.126616306
c065,3,2,6,128578,110785,111471,111471,3600.0152753499997,3601.292286129
c065,3,2,7,91078,75226,75591,75591,4200.019031551999,4201.460566034
c065,3,2,8,68133,56087,56924,56924,4800.023480119,4801.637115852
c065,3,2,9,75871,59321,59726,59726,5400.025536625,5401.747700998
c065,3,2,10,64545,50276,50533,50533,6000.044517671,6001.905044041
c065,3,2,11,49850,39931,40255,40255,6600.054314254,6602.046273159
# search time: 6600.054s
# total time: 26418.900s
c065,4,2,1,1171193,1022271,1139547,1139547,600.000518566,600.231093654
c065,4,2,2,432784,404647,415798,415798,1200.000921322,1200.41191049
c065,4,2,3,218364,199352,201559,201559,1800.002024373,1800.595098798
c065,4,2,4,212066,188204,189286,189286,2400.0035841979998,2400.731691677
c065,4,2,5,167268,146718,147468,147468,3000.005579154,3000.8534996
c065,4,2,6,127766,109958,110696,110696,3600.005754875,3600.972225926
c065,4,2,7,90722,75107,75510,75510,4200.009078306,4201.096922115
c065,4,2,8,65206,53553,54380,54380,4800.011158316001,4801.261395288
c065,4,2,9,76292,59738,60232,60232,5400.012095823001,5401.358049121
c065,4,2,10,65449,51197,51512,51512,6000.017717505001,6001.479896745
c065,4,2,11,50019,40197,40535,40535,6600.020736783001,6601.639344725
# search time: 6600.021s
# total time: 33021.140s
