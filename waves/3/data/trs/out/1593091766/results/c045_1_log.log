    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c045_1.json out/1593091766/results/c045_1_best.csv out/1593091766/results/c045_1_predictions.csv out/1593091766/results/c045_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 2, 0]), o: IntList([1, 1, 2, 0]) }
#   Datum { i: IntList([0]), o: IntList([0]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([5, 7, 9, 1, 3, 6, 4, 8, 2]), o: IntList([5, 7, 9, 1, 3, 6, 4, 8, 2]) }
#   Datum { i: IntList([4, 0, 1, 0, 6]), o: IntList([4, 0, 1, 0, 6]) }
#   Datum { i: IntList([2, 0, 9, 3, 8, 5]), o: IntList([2, 0, 9, 3, 8, 5]) }
#   Datum { i: IntList([5, 3, 3, 5, 5, 5, 2]), o: IntList([5, 3, 3, 5, 5, 5, 2]) }
#   Datum { i: IntList([7, 2, 3, 4, 4, 9, 9, 9, 3, 6]), o: IntList([7, 2, 3, 4, 4, 9, 9, 9, 3, 6]) }
#   Datum { i: IntList([7, 1, 1, 7, 7, 7, 0, 7]), o: IntList([7, 1, 1, 7, 7, 7, 0, 7]) }
#   Datum { i: IntList([8, 8, 4]), o: IntList([8, 8, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c045,0,1,1,1356184,1202448,1324463,1324463,600.001325189,602.089572489
c045,0,1,2,592874,540209,560991,560991,1200.002037167,1203.248254248
c045,0,1,3,501714,467356,483638,483638,1800.002076408,1803.707592187
c045,0,1,4,449269,395015,412952,412952,2400.002606591,2404.310523271
c045,0,1,5,415205,380884,396568,396568,3000.004155126,3004.663432269
c045,0,1,6,242989,227029,235562,235562,3600.005188953,3604.912711922
c045,0,1,7,196245,181175,188764,188764,4200.005454392,4205.124396419
c045,0,1,8,151434,137501,144190,144190,4800.013815265999,4805.397256035
c045,0,1,9,112203,99072,103960,103960,5400.020006051,5405.710680585
c045,0,1,10,88548,78373,82099,82099,6000.02777421,6005.98847431
c045,0,1,11,73801,64624,67804,67804,6600.030873805999,6606.314580994
# search time: 6600.031s
# total time: 6606.701s
c045,1,1,1,1279399,1114479,1244478,1244478,600.004978965,600.339090706
c045,1,1,2,594638,541839,562594,562594,1200.005073305,1200.725715699
c045,1,1,3,498415,464132,480292,480292,1800.006164788,1800.957943812
c045,1,1,4,441781,388967,405980,405980,2400.006696546,2401.254447191
c045,1,1,5,376202,343348,359679,359679,3000.006843372,3001.439924111
c045,1,1,6,231463,214300,224084,224084,3600.014431298,3601.590636245
c045,1,1,7,192062,177051,184874,184874,4200.015673957,4201.714675742
c045,1,1,8,150504,136063,142572,142572,4800.017065629,4801.87233805
c045,1,1,9,114610,101422,106181,106181,5400.018004652,5402.050228645
c045,1,1,10,87473,76994,80956,80956,6000.02286395,6002.225669345
c045,1,1,11,74840,65123,68555,68555,6600.02548946,6602.395375577
# search time: 6600.025s
# total time: 13209.644s
c045,2,1,1,1244994,1067486,1206671,1206671,600.001397584,600.27467814
c045,2,1,2,588931,536868,557329,557329,1200.002082206,1200.564668112
c045,2,1,3,502045,467305,483699,483699,1800.002430813,1800.746951711
c045,2,1,4,444296,391481,408725,408725,2400.00304356,2400.991249346
c045,2,1,5,393990,360367,375797,375797,3000.003549421,3001.149692618
c045,2,1,6,234529,219427,227443,227443,3600.004968741,3601.262279643
c045,2,1,7,192750,178080,185225,185225,4200.00786073,4201.363253969
c045,2,1,8,148641,134914,141330,141330,4800.009948758,4801.456276048
c045,2,1,9,113953,100830,105841,105841,5400.01196237,5401.572174495
c045,2,1,10,86647,76252,80147,80147,6000.014052268,6001.689274737
c045,2,1,11,74591,65176,68519,68519,6600.019215443001,6601.802722267
# search time: 6600.019s
# total time: 19811.743s
c045,3,1,1,1208916,1025864,1168677,1168677,600.000983128,600.250378306
c045,3,1,2,583811,532223,552266,552266,1200.001345421,1200.482742456
c045,3,1,3,496447,461450,478140,478140,1800.00195341,1800.638828282
c045,3,1,4,447507,394388,411891,411891,2400.004342252,2400.839258374
c045,3,1,5,397258,364947,380416,380416,3000.0113439369998,3000.975798283
c045,3,1,6,235585,219435,228586,228586,3600.012349587,3601.064709017
c045,3,1,7,196053,181163,188501,188501,4200.015362288,4201.151572741
c045,3,1,8,150581,136173,142854,142854,4800.017833815,4801.237054776
c045,3,1,9,116389,100188,108040,108040,5400.023303567,5401.340870385
c045,3,1,10,87998,77563,81545,81545,6000.028910487999,6001.429087698
c045,3,1,11,74673,65076,68536,68536,6600.029587888,6601.537824165
# search time: 6600.030s
# total time: 26413.921s
c045,4,1,1,1351862,1185936,1317094,1317094,600.000005755,600.280825015
c045,4,1,2,598323,545434,566152,566152,1200.00081321,1200.497275521
c045,4,1,3,506359,470618,487361,487361,1800.010675065,1800.661421139
c045,4,1,4,449422,395975,414071,414071,2400.011687314,2400.833714664
c045,4,1,5,398205,366289,381492,381492,3000.0126194570003,3000.959114433
c045,4,1,6,240271,220136,233213,233213,3600.0128918580003,3601.055694837
c045,4,1,7,202797,188869,195618,195618,4200.013442245,4201.136683573
c045,4,1,8,150913,136887,143391,143391,4800.017024206,4801.215151357
c045,4,1,9,115647,102077,107470,107470,5400.022451475001,5401.297882953
c045,4,1,10,87409,76868,80768,80768,6000.0267574300005,6001.375693379
c045,4,1,11,74984,65300,68753,68753,6600.032327923001,6601.465945127
# search time: 6600.032s
# total time: 33015.858s
