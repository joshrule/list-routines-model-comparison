    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c032_2.json out/1593091766/results/c032_2_best.csv out/1593091766/results/c032_2_predictions.csv out/1593091766/results/c032_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4, 0, 4, 0]), o: IntList([0]) }
#   Datum { i: IntList([9, 6, 6, 6, 9, 0, 9, 7]), o: IntList([9, 0, 9, 7]) }
#   Datum { i: IntList([9, 3, 9, 9, 3, 3]), o: IntList([3, 3]) }
#   Datum { i: IntList([5, 5, 5, 5]), o: IntList([]) }
#   Datum { i: IntList([6, 0, 1, 2, 8, 4, 6, 4, 3]), o: IntList([1, 2, 8, 4, 6, 4, 3]) }
#   Datum { i: IntList([1, 1, 3, 1, 7, 6, 9, 2]), o: IntList([7, 6, 9, 2]) }
#   Datum { i: IntList([2, 0, 9, 4, 0, 5]), o: IntList([0, 5]) }
#   Datum { i: IntList([8, 0, 5, 2, 5, 8, 5, 6, 6, 3]), o: IntList([5, 2, 5, 8, 5, 6, 6, 3]) }
#   Datum { i: IntList([3, 7, 6, 9, 1, 8, 2]), o: IntList([1, 8, 2]) }
#   Datum { i: IntList([4, 7, 1, 4, 7, 0, 9, 5, 5]), o: IntList([7, 0, 9, 5, 5]) }
#   Datum { i: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), o: IntList([0, 0, 0, 0, 0, 0]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c032,0,2,1,705501,604206,683498,683498,600.004016373,602.978209619
c032,0,2,2,438795,413715,425518,425518,1200.0052207600002,1204.969240506
c032,0,2,3,242862,221244,226266,226266,1800.006789341,1806.340395117
c032,0,2,4,184505,167728,172010,172010,2400.009422329,2407.593900441
c032,0,2,5,147699,135927,141758,141758,3000.009553111,3009.014082264
c032,0,2,6,88833,83002,85925,85925,3600.01173991,3609.959059288
c032,0,2,7,73908,68985,71365,71365,4200.015192198,4210.99776358
c032,0,2,8,62977,58845,61017,61017,4800.029895457999,4812.045002372
c032,0,2,9,42672,39514,41557,41557,5400.061087073,5413.045642636
c032,0,2,10,37330,34113,35816,35816,6000.063118534999,6014.388896257
c032,0,2,11,30531,28223,29734,29734,6600.069163414999,6615.708298943
# search time: 6600.069s
# total time: 6616.005s
c032,1,2,1,704081,575924,674569,674569,600.008762847,600.355425575
c032,1,2,2,457709,430193,442925,442925,1200.0098177589998,1201.030826775
c032,1,2,3,245411,223784,228824,228824,1800.0112829139998,1801.579349395
c032,1,2,4,188368,170822,175325,175325,2400.0240962199996,2402.183070789
c032,1,2,5,147192,135606,141377,141377,3000.0293772919995,3002.862658726
c032,1,2,6,95742,89685,92531,92531,3600.0300703819994,3603.325287454
c032,1,2,7,70331,65506,67807,67807,4200.030196117999,4203.757644114
c032,1,2,8,60890,56797,58858,58858,4800.037080003,4804.240878586
c032,1,2,9,41479,38266,40225,40225,5400.041482007,5404.618401766
c032,1,2,10,38248,35305,36968,36968,6000.0606006630005,6005.224779542
c032,1,2,11,31857,29813,31232,31232,6600.064836664001,6605.883181229
# search time: 6600.065s
# total time: 13222.513s
c032,2,2,1,687256,563175,658846,658846,600.000262423,600.205593864
c032,2,2,2,469582,440582,454092,454092,1200.001818353,1200.643257098
c032,2,2,3,244265,222767,227694,227694,1800.007433797,1800.976502346
c032,2,2,4,185505,168689,172977,172977,2400.008577374,2401.341453149
c032,2,2,5,144770,133390,139055,139055,3000.017560155,3001.759286337
c032,2,2,6,91164,85175,87779,87779,3600.020903588,3602.070707453
c032,2,2,7,69442,64744,66980,66980,4200.044674528,4202.454236256
c032,2,2,8,59209,55239,57389,57389,4800.046156865,4802.76949596
c032,2,2,9,41404,38172,40092,40092,5400.0465288469995,5403.132741168
c032,2,2,10,36860,33743,35357,35357,6000.079946647,6003.550954566
c032,2,2,11,30052,27696,29206,29206,6600.0822198999995,6603.842265656
# search time: 6600.082s
# total time: 19826.893s
c032,3,2,1,668749,568519,646675,646675,600.01456799,600.245723944
c032,3,2,2,452151,425792,437978,437978,1200.015029207,1200.610510349
c032,3,2,3,235690,214567,219117,219117,1800.030309743,1800.927397843
c032,3,2,4,186056,168972,173361,173361,2400.03284578,2401.20291768
c032,3,2,5,145685,133875,139698,139698,3000.037976216,3001.579966605
c032,3,2,6,87987,82188,85008,85008,3600.069086493,3601.880341536
c032,3,2,7,70041,65330,67471,67471,4200.069204833,4202.102998927
c032,3,2,8,59196,55134,57315,57315,4800.0707736310005,4802.409263517
c032,3,2,9,40333,37158,39027,39027,5400.088251632001,5402.629523943
c032,3,2,10,36979,34000,35671,35671,6000.106098311001,6002.909104681
c032,3,2,11,31066,28935,30361,30361,6600.107042790001,6603.188468718
# search time: 6600.107s
# total time: 26430.451s
c032,4,2,1,686296,562506,657853,657853,600.001150525,600.177632505
c032,4,2,2,448762,421924,434537,434537,1200.011947751,1200.487892569
c032,4,2,3,243562,221973,226990,226990,1800.0141410249998,1800.730350691
c032,4,2,4,186331,169337,173756,173756,2400.016515256,2400.979802557
c032,4,2,5,145056,133436,139205,139205,3000.018247705,3001.237021058
c032,4,2,6,96552,90342,93077,93077,3600.020520234,3601.425363002
c032,4,2,7,68473,63989,66400,66400,4200.022026459999,4201.61343586
c032,4,2,8,62916,58768,60978,60978,4800.0295078379995,4801.815744321
c032,4,2,9,41901,38827,40822,40822,5400.045945837,5402.088964338
c032,4,2,10,36968,33809,35522,35522,6000.047353466,6002.328119802
c032,4,2,11,31581,29603,30968,30968,6600.050550317,6602.572712244
# search time: 6600.051s
# total time: 33033.558s
