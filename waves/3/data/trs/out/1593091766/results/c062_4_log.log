    Finished release [optimized] target(s) in 0.08s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c062_4.json out/1593091766/results/c062_4_best.csv out/1593091766/results/c062_4_predictions.csv out/1593091766/results/c062_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 9, 2, 8, 0, 6]), o: IntList([1, 9, 2, 8, 0]) }
#   Datum { i: IntList([6, 8, 9, 3, 7, 5, 2, 1]), o: IntList([6, 8, 9, 3, 7, 5, 2]) }
#   Datum { i: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6, 3]), o: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6]) }
#   Datum { i: IntList([4, 2, 0, 3, 4, 0, 0, 3, 4]), o: IntList([4, 2, 0, 3, 4, 0, 0, 3]) }
#   Datum { i: IntList([2, 5, 2, 7]), o: IntList([2, 5, 2]) }
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([1, 9, 8]), o: IntList([1, 9]) }
#   Datum { i: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2, 4]), o: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2]) }
#   Datum { i: IntList([1, 2, 5, 4, 5, 4, 7]), o: IntList([1, 2, 5, 4, 5, 4]) }
#   Datum { i: IntList([7, 6, 0, 7, 3]), o: IntList([7, 6, 0, 7]) }
#   Datum { i: IntList([8]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c062,0,4,1,679348,584204,658829,658829,600.001268991,603.025602159
c062,0,4,2,256015,238724,245614,245614,1200.003601715,1204.793364275
c062,0,4,3,129184,123644,124340,124340,1800.009227273,1806.391700286
c062,0,4,4,78490,73064,73341,73341,2400.0106880020003,2407.842329011
c062,0,4,5,56194,52587,52882,52882,3000.011974585,3009.255207786
c062,0,4,6,51899,47585,47850,47850,3600.022329513,3610.723054461
c062,0,4,7,50452,44104,44343,44343,4200.026507949,4212.044655715
c062,0,4,8,45082,40388,40833,40833,4800.030722294,4813.430967837
c062,0,4,9,35065,31748,32062,32062,5400.0376190980005,5414.316043506
c062,0,4,10,53690,48476,48902,48902,6000.0392415530005,6015.846028909
c062,0,4,11,50042,44999,45464,45464,6600.039540279,6617.32858192
# search time: 6600.040s
# total time: 6617.643s
c062,1,4,1,1092537,896831,1047800,1047800,600.001674702,600.336170715
c062,1,4,2,419023,391704,402688,402688,1200.004942885,1200.937318675
c062,1,4,3,216251,206655,207985,207985,1800.009485527,1801.498509706
c062,1,4,4,133963,124877,125285,125285,2400.015182346,2401.973416928
c062,1,4,5,95596,89152,89608,89608,3000.015996228,3002.476026169
c062,1,4,6,88017,79731,80082,80082,3600.016515669,3602.989110904
c062,1,4,7,84669,73723,74100,74100,4200.0191451499995,4203.445229767
c062,1,4,8,79268,70601,71266,71266,4800.025224913999,4803.984466435
c062,1,4,9,60785,55025,55523,55523,5400.031486489,5404.4629787
c062,1,4,10,53206,48067,48520,48520,6000.035285469,6004.950746381
c062,1,4,11,47572,42462,42932,42932,6600.043934842,6605.590088207
# search time: 6600.044s
# total time: 13223.873s
c062,2,4,1,1057624,898197,1022461,1022461,600.000617943,600.317593483
c062,2,4,2,416188,388875,399825,399825,1200.003090489,1200.673880245
c062,2,4,3,212539,202952,204292,204292,1800.010653783,1801.010656322
c062,2,4,4,131094,122358,122863,122863,2400.0127350889998,2401.347392331
c062,2,4,5,95757,89308,89728,89728,3000.0135852219996,3001.680515214
c062,2,4,6,88645,80796,81204,81204,3600.0153657779997,3601.953615703
c062,2,4,7,86473,75493,75968,75968,4200.015884175,4202.233923754
c062,2,4,8,78666,70212,70858,70858,4800.021212079,4802.580019122
c062,2,4,9,60595,54876,55360,55360,5400.0299057600005,5402.92301278
c062,2,4,10,53377,48152,48652,48652,6000.033679168,6003.247131736
c062,2,4,11,50296,45144,45606,45606,6600.035259825,6603.555521857
# search time: 6600.035s
# total time: 19828.075s
c062,3,4,1,889840,727848,852717,852717,600.00059621,600.155147802
c062,3,4,2,408130,382124,392662,392662,1200.001411162,1200.428835222
c062,3,4,3,210671,200885,202159,202159,1800.004120177,1800.706141523
c062,3,4,4,130739,121904,122412,122412,2400.006557522,2400.9362917
c062,3,4,5,58098,54164,54545,54545,3000.007242784,3001.188125601
c062,3,4,6,51232,46915,47193,47193,3600.0112578509998,3601.444853825
c062,3,4,7,50506,45019,45289,45289,4200.028670342,4201.689210895
c062,3,4,8,76721,68506,69165,69165,4800.030020689,4801.983732689
c062,3,4,9,61178,55517,56028,56028,5400.043208476,5402.286674709
c062,3,4,10,53422,48219,48689,48689,6000.054207775,6002.5191131
c062,3,4,11,49418,44284,44777,44777,6600.057975314,6602.784664494
# search time: 6600.058s
# total time: 26431.783s
c062,4,4,1,1080593,879756,1034962,1034962,600.000897463,600.179694525
c062,4,4,2,400202,374077,385002,385002,1200.001068217,1200.398015808
c062,4,4,3,213817,204062,205310,205310,1800.0023881930001,1800.593103866
c062,4,4,4,130505,121873,122416,122416,2400.003749338,2400.759033566
c062,4,4,5,94854,88502,88919,88919,3000.0157028109998,3000.929984442
c062,4,4,6,88470,80781,81250,81250,3600.0161258509997,3601.08615414
c062,4,4,7,86199,75214,75631,75631,4200.023748993,4201.341810775
c062,4,4,8,77495,69007,69652,69652,4800.026806135999,4801.564881183
c062,4,4,9,60770,55092,55564,55564,5400.055716649999,5401.77671332
c062,4,4,10,50644,45769,46190,46190,6000.057289685999,6002.035781857
c062,4,4,11,49047,44028,44484,44484,6600.057831038999,6602.315114697
# search time: 6600.058s
# total time: 33034.460s
