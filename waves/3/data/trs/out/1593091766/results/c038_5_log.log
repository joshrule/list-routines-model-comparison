    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c038_5.json out/1593091766/results/c038_5_best.csv out/1593091766/results/c038_5_predictions.csv out/1593091766/results/c038_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c038,0,5,1,709116,577761,678968,678968,600.006741315,602.839869135
c038,0,5,2,356749,334869,344022,344022,1200.0071230180001,1204.34110943
c038,0,5,3,202220,189003,190945,190945,1800.0095447990002,1805.683257594
c038,0,5,4,94899,86110,86543,86543,2400.0144681790002,2406.936853921
c038,0,5,5,71458,65545,65767,65767,3000.0159546560003,3008.053064628
c038,0,5,6,53444,48587,48983,48983,3600.0214311770005,3609.082464206
c038,0,5,7,37277,34003,34336,34336,4200.025617946,4210.163329429
c038,0,5,8,31977,28792,29108,29108,4800.031815697001,4811.279947436
c038,0,5,9,32065,28480,28818,28818,5400.049014293,5412.209897227
c038,0,5,10,27773,24303,24622,24622,6000.052866233,6013.351989066
c038,0,5,11,27990,24331,24614,24614,6600.053662341,6614.341118871
# search time: 6600.054s
# total time: 6614.622s
c038,1,5,1,700628,594642,677170,677170,600.001611682,600.398008943
c038,1,5,2,362448,339443,349001,349001,1200.003501191,1200.983589395
c038,1,5,3,202390,189190,191044,191044,1800.003738807,1801.551094591
c038,1,5,4,92733,84040,84428,84428,2400.009340453,2402.119027607
c038,1,5,5,74123,67938,68268,68268,3000.010036363,3002.608217592
c038,1,5,6,53704,48847,49231,49231,3600.013375003,3603.057681981
c038,1,5,7,37673,34382,34732,34732,4200.021640051,4203.542909125
c038,1,5,8,31412,28409,28722,28722,4800.03785081,4804.082949725
c038,1,5,9,31436,27672,28018,28018,5400.044301366001,5404.655484675
c038,1,5,10,27852,24344,24674,24674,6000.045039411,6005.167004015
c038,1,5,11,27017,22496,22788,22788,6600.058299517001,6605.65228465
# search time: 6600.058s
# total time: 13220.749s
c038,2,5,1,697194,569612,667876,667876,600.001901754,600.247790355
c038,2,5,2,353399,331986,340939,340939,1200.00337451,1200.651293483
c038,2,5,3,198269,184554,186466,186466,1800.004401024,1801.075121367
c038,2,5,4,95652,87001,87467,87467,2400.010583293,2401.433540962
c038,2,5,5,73318,67272,67552,67552,3000.011405113,3001.783564569
c038,2,5,6,51963,46990,47381,47381,3600.011797521,3602.117880601
c038,2,5,7,37543,34362,34702,34702,4200.021117152,4202.528411081
c038,2,5,8,32251,29214,29524,29524,4800.03237599,4802.942339352
c038,2,5,9,31223,27583,27936,27936,5400.037192572,5403.260832039
c038,2,5,10,28643,25066,25408,25408,6000.044933209,6003.595366741
c038,2,5,11,27406,23575,23840,23840,6600.059606652,6603.985518108
# search time: 6600.060s
# total time: 19825.233s
c038,3,5,1,710881,583654,681680,681680,600.00731108,600.22128275
c038,3,5,2,362121,339285,348777,348777,1200.0206863540002,1200.539294537
c038,3,5,3,200705,187702,189504,189504,1800.0207455970003,1800.826287935
c038,3,5,4,94858,86142,86574,86574,2400.0251760940005,2401.103869365
c038,3,5,5,71540,65719,65966,65966,3000.0307500840004,3001.386393846
c038,3,5,6,51457,46238,46613,46613,3600.0420630940002,3601.660789479
c038,3,5,7,38077,34854,35175,35175,4200.048212081,4201.916978082
c038,3,5,8,31689,28519,28836,28836,4800.049568106,4802.226801501
c038,3,5,9,31333,27695,28031,28031,5400.051374362,5402.504547972
c038,3,5,10,28272,24925,25226,25226,6000.055285066001,6002.837635371
c038,3,5,11,27608,23815,24097,24097,6600.082296008,6603.136429811
# search time: 6600.082s
# total time: 26429.088s
c038,4,5,1,694286,569548,665499,665499,600.004318907,600.188809056
c038,4,5,2,359943,338064,347026,347026,1200.010569268,1200.473241364
c038,4,5,3,198950,185169,187055,187055,1800.012382276,1800.711593998
c038,4,5,4,91911,83263,83649,83649,2400.018389885,2400.938626631
c038,4,5,5,73511,67377,67680,67680,3000.023326801,3001.135920596
c038,4,5,6,51687,46359,46748,46748,3600.0291753230003,3601.370360217
c038,4,5,7,37910,34884,35236,35236,4200.037612893,4201.601129661
c038,4,5,8,32472,29339,29658,29658,4800.058999734,4801.875877594
c038,4,5,9,32069,28151,28500,28500,5400.080527875,5402.150663529
c038,4,5,10,44817,38402,38809,38809,6000.087650131,6002.375885866
c038,4,5,11,47633,40703,41071,41071,6600.088950653,6602.66658457
# search time: 6600.089s
# total time: 33032.406s
