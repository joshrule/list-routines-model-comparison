    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c024_3.json out/1593091766/results/c024_3_best.csv out/1593091766/results/c024_3_predictions.csv out/1593091766/results/c024_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 8, 3]), o: IntList([0, 8, 8, 3]) }
#   Datum { i: IntList([3, 1, 6, 8, 2, 9, 4, 5, 0, 7]), o: IntList([3, 8, 1, 6, 8, 2, 9, 4, 5, 0, 7]) }
#   Datum { i: IntList([6, 0, 6, 5, 0, 5, 7]), o: IntList([6, 5, 0, 6, 5, 0, 5, 7]) }
#   Datum { i: IntList([8, 7, 4, 1]), o: IntList([8, 5, 7, 4, 1]) }
#   Datum { i: IntList([0, 9, 9, 2, 6, 0, 1, 4, 6]), o: IntList([0, 8, 9, 9, 2, 6, 0, 1, 4, 6]) }
#   Datum { i: IntList([5, 2]), o: IntList([5, 5, 2]) }
#   Datum { i: IntList([9, 9, 4, 9, 6, 1]), o: IntList([9, 5, 9, 4, 9, 6, 1]) }
#   Datum { i: IntList([7, 6, 0, 7, 6]), o: IntList([7, 5, 6, 0, 7, 6]) }
#   Datum { i: IntList([6, 7, 1, 3, 5, 6, 9, 0, 4, 3]), o: IntList([6, 5, 7, 1, 3, 5, 6, 9, 0, 4, 3]) }
#   Datum { i: IntList([4, 3, 4, 3, 8, 4, 4, 3]), o: IntList([4, 8, 3, 4, 3, 8, 4, 4, 3]) }
#   Datum { i: IntList([9, 9, 2, 0, 0, 1, 2, 8, 4, 2]), o: IntList([9, 5, 9, 2, 0, 0, 1, 2, 8, 4, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c024,0,3,1,1345982,1173045,1309165,1309165,600.000704121,601.9261963
c024,0,3,2,576527,540246,555254,555254,1200.00148391,1202.768528175
c024,0,3,3,225659,210015,218158,218158,1800.002246045,1803.172297166
c024,0,3,4,163612,151609,152842,152842,2400.005127221,2403.681919538
c024,0,3,5,122441,112346,113145,113145,3000.0108153069996,3004.367189269
c024,0,3,6,93709,85025,85680,85680,3600.0127884689996,3605.005874643
c024,0,3,7,88932,78948,79761,79761,4200.014480174999,4205.508761916
c024,0,3,8,75781,67633,68219,68219,4800.022450633,4805.951304347
c024,0,3,9,68339,61459,61963,61963,5400.0348603289995,5406.490766533
c024,0,3,10,52954,47649,48046,48046,6000.036875055999,6007.026296918
c024,0,3,11,45406,41424,41756,41756,6600.051659471999,6607.734143509
# search time: 6600.052s
# total time: 6608.150s
c024,1,3,1,1293434,1061985,1240639,1240639,600.000824088,600.259266626
c024,1,3,2,558113,524059,538456,538456,1200.00144573,1200.643529654
c024,1,3,3,214365,192450,207055,207055,1800.0056057909999,1800.843411932
c024,1,3,4,158887,146311,147357,147357,2400.007478615,2401.168048911
c024,1,3,5,121505,111866,112655,112655,3000.010781081,3001.55010868
c024,1,3,6,93035,84527,85167,85167,3600.011689436,3601.86046811
c024,1,3,7,89378,79183,80007,80007,4200.014420992,4202.130962116
c024,1,3,8,75760,67411,68010,68010,4800.016988609,4802.444124229
c024,1,3,9,67555,60309,60704,60704,5400.018536832,5402.711931247
c024,1,3,10,50597,45316,45655,45655,6000.026826065,6003.052277817
c024,1,3,11,45063,41174,41528,41528,6600.055117534,6603.318066396
# search time: 6600.055s
# total time: 13212.170s
c024,2,3,1,1307321,1130621,1268883,1268883,600.000316384,600.298927049
c024,2,3,2,565861,531374,545501,545501,1200.005703413,1200.586683202
c024,2,3,3,225583,209942,218077,218077,1800.0067796990002,1800.728909879
c024,2,3,4,164344,152459,153703,153703,2400.007214454,2400.911637997
c024,2,3,5,125274,115543,116523,116523,3000.0124028729997,3001.101768247
c024,2,3,6,93486,84846,85564,85564,3600.015266654,3601.311927683
c024,2,3,7,88627,79075,79879,79879,4200.015687233,4201.499691484
c024,2,3,8,75494,67380,67966,67966,4800.016088427,4801.65724419
c024,2,3,9,67755,60988,61519,61519,5400.02806136,5401.865329777
c024,2,3,10,52538,47405,47812,47812,6000.029345168,6002.073500135
c024,2,3,11,44866,40719,41060,41060,6600.03389841,6602.260100132
# search time: 6600.034s
# total time: 19815.147s
c024,3,3,1,1354652,1180149,1317367,1317367,600.000145506,600.315322199
c024,3,3,2,560552,524792,539588,539588,1200.003592012,1200.54450275
c024,3,3,3,229196,212837,221610,221610,1800.005709556,1800.669603435
c024,3,3,4,157661,145014,146102,146102,2400.008646266,2400.826297965
c024,3,3,5,120410,110912,111718,111718,3000.013010601,3000.980679396
c024,3,3,6,92058,83256,83938,83938,3600.0205219970003,3601.140100411
c024,3,3,7,88611,78983,79832,79832,4200.025583037001,4201.287597477
c024,3,3,8,74544,65937,66505,66505,4800.033073931,4801.455240666
c024,3,3,9,66938,59091,59531,59531,5400.035710233,5401.630272655
c024,3,3,10,50279,44963,45296,45296,6000.040758033,6001.821619173
c024,3,3,11,44063,40324,40659,40659,6600.042930012,6602.035383685
# search time: 6600.043s
# total time: 26418.190s
c024,4,3,1,1349830,1169379,1311200,1311200,600.000150387,600.266635802
c024,4,3,2,569349,533706,548341,548341,1200.000471327,1200.463241759
c024,4,3,3,222104,207381,215194,215194,1800.002584324,1800.573831563
c024,4,3,4,161372,149510,150737,150737,2400.005520726,2400.712351884
c024,4,3,5,124275,114766,115790,115790,3000.008940815,3000.865445533
c024,4,3,6,91674,83132,83749,83749,3600.0098722010002,3600.994569267
c024,4,3,7,87931,78169,78966,78966,4200.012631153,4201.136383907
c024,4,3,8,75549,67165,67737,67737,4800.013748172,4801.270935697
c024,4,3,9,66590,59924,60312,60312,5400.020834285,5401.437691692
c024,4,3,10,51944,46650,47034,47034,6000.0231725740005,6001.590554037
c024,4,3,11,43621,39453,39763,39763,6600.02438333,6601.732753298
# search time: 6600.024s
# total time: 33020.694s
