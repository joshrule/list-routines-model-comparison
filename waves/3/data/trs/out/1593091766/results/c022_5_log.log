    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c022_5.json out/1593091766/results/c022_5_best.csv out/1593091766/results/c022_5_predictions.csv out/1593091766/results/c022_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1]), o: IntList([1, 5, 1]) }
#   Datum { i: IntList([7, 6, 1, 9, 6, 8, 3, 6]), o: IntList([7, 5, 6, 1, 9, 6, 8, 3, 6]) }
#   Datum { i: IntList([9, 8, 6, 1, 5, 1, 4, 4, 3, 2]), o: IntList([9, 5, 8, 6, 1, 5, 1, 4, 4, 3, 2]) }
#   Datum { i: IntList([6, 4, 9, 5, 2, 7, 8, 2, 4]), o: IntList([6, 5, 4, 9, 5, 2, 7, 8, 2, 4]) }
#   Datum { i: IntList([6, 5, 3, 3]), o: IntList([6, 5, 5, 3, 3]) }
#   Datum { i: IntList([1, 9, 0, 9, 1]), o: IntList([1, 5, 9, 0, 9, 1]) }
#   Datum { i: IntList([6, 0, 2, 0, 4, 8, 1, 7, 5, 3]), o: IntList([6, 5, 0, 2, 0, 4, 8, 1, 7, 5, 3]) }
#   Datum { i: IntList([0, 2, 6]), o: IntList([0, 5, 2, 6]) }
#   Datum { i: IntList([7, 4, 3, 1, 2, 1, 8]), o: IntList([7, 5, 4, 3, 1, 2, 1, 8]) }
#   Datum { i: IntList([1, 7, 3, 0, 1, 2, 1, 3, 0, 3]), o: IntList([1, 5, 7, 3, 0, 1, 2, 1, 3, 0, 3]) }
#   Datum { i: IntList([8, 4, 4, 4, 8, 4]), o: IntList([8, 5, 4, 4, 4, 8, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c022,0,5,1,1286515,1092715,1244092,1244092,600.006718334,601.822328218
c022,0,5,2,631289,596379,612937,612937,1200.0083886749999,1202.646658531
c022,0,5,3,271007,251516,261776,261776,1800.009928773,1803.061352997
c022,0,5,4,167432,155622,161247,161247,2400.009967704,2403.39396736
c022,0,5,5,124722,113344,119539,119539,3000.01069509,3003.738774191
c022,0,5,6,97787,87733,91279,91279,3600.0197432209998,3604.31531378
c022,0,5,7,88789,80616,83878,83878,4200.024804778,4204.875847807
c022,0,5,8,64799,58206,59947,59947,4800.027202691999,4805.589504745
c022,0,5,9,61571,55296,57018,57018,5400.031293722999,5406.208486699
c022,0,5,10,53614,48225,49567,49567,6000.035795763999,6006.922214646
c022,0,5,11,45069,40304,41417,41417,6600.045249178999,6607.767828459
# search time: 6600.045s
# total time: 6608.051s
c022,1,5,1,1385570,1237491,1356210,1356210,600.002801964,600.427778928
c022,1,5,2,635969,601159,617256,617256,1200.003470895,1200.783708029
c022,1,5,3,265227,244593,255611,255611,1800.005656743,1800.970912569
c022,1,5,4,175481,163633,168836,168836,2400.0083291729998,2401.153248867
c022,1,5,5,124957,115325,119914,119914,3000.009773686,3001.317809527
c022,1,5,6,97742,88462,91229,91229,3600.018889401,3601.63173007
c022,1,5,7,88987,81278,84122,84122,4200.023514095,4201.901904827
c022,1,5,8,64363,57919,59756,59756,4800.026284093,4802.284541012
c022,1,5,9,60030,54176,55759,55759,5400.037466759,5402.588114542
c022,1,5,10,53254,47551,49243,49243,6000.037984062001,6002.817394281
c022,1,5,11,44827,40135,41422,41422,6600.049483668001,6603.297893343
# search time: 6600.049s
# total time: 13211.795s
c022,2,5,1,1341386,1099177,1286076,1286076,600.004777819,600.22522265
c022,2,5,2,629343,593635,610217,610217,1200.0057398949998,1200.488935876
c022,2,5,3,278129,258522,268574,268574,1800.0058176949997,1800.639902452
c022,2,5,4,167301,155423,161048,161048,2400.0062223849995,2400.780074521
c022,2,5,5,123556,114042,118270,118270,3000.0073572499996,3000.918283625
c022,2,5,6,96682,87575,90232,90232,3600.0081378709997,3601.126880726
c022,2,5,7,87202,78886,82495,82495,4200.008704162,4201.288377467
c022,2,5,8,64123,57650,59370,59370,4800.011155215,4801.489697638
c022,2,5,9,60424,54394,56061,56061,5400.022274403,5401.726859347
c022,2,5,10,53400,47889,49369,49369,6000.0280689969995,6001.960330443
c022,2,5,11,44262,39635,40803,40803,6600.042297726,6602.189283684
# search time: 6600.042s
# total time: 19814.555s
c022,3,5,1,1309921,1078043,1257269,1257269,600.000095363,600.209362291
c022,3,5,2,630505,594512,611154,611154,1200.00100118,1200.438413075
c022,3,5,3,257329,237555,249304,249304,1800.0015445180002,1800.559015343
c022,3,5,4,167958,156572,161559,161559,2400.0043372950004,2400.677918691
c022,3,5,5,124984,109244,119750,119750,3000.005863065,3000.7648556
c022,3,5,6,96276,87296,89825,89825,3600.006442468,3600.919942737
c022,3,5,7,87979,80311,83174,83174,4200.012234078,4201.081078755
c022,3,5,8,64403,57969,59787,59787,4800.0194007089995,4801.278518081
c022,3,5,9,61329,55107,56776,56776,5400.023187473999,5401.428727266
c022,3,5,10,53386,47768,49332,49332,6000.029762771,6001.609295609
c022,3,5,11,44866,40231,41380,41380,6600.03853222,6601.745618805
# search time: 6600.039s
# total time: 26416.572s
c022,4,5,1,1318440,1081652,1264352,1264352,600.000288833,600.192049678
c022,4,5,2,621532,586724,603195,603195,1200.00029223,1200.394348818
c022,4,5,3,270064,251186,260977,260977,1800.0008479379999,1800.505082518
c022,4,5,4,162018,148934,155554,155554,2400.002208243,2400.599891135
c022,4,5,5,121414,111611,116368,116368,3000.004989934,3000.679480798
c022,4,5,6,96458,87352,90070,90070,3600.00854366,3600.795490726
c022,4,5,7,88059,80436,83208,83208,4200.012004127,4200.913502635
c022,4,5,8,63429,57032,58945,58945,4800.026076918,4801.116285194
c022,4,5,9,60756,54442,56091,56091,5400.032631037,5401.245131701
c022,4,5,10,53195,47737,49182,49182,6000.036679795,6001.399361355
c022,4,5,11,44227,39729,40848,40848,6600.04440448,6601.514927118
# search time: 6600.044s
# total time: 33018.574s
