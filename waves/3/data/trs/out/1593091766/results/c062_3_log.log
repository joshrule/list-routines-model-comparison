    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c062_3.json out/1593091766/results/c062_3_best.csv out/1593091766/results/c062_3_predictions.csv out/1593091766/results/c062_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 6, 0, 7, 3]), o: IntList([7, 6, 0, 7]) }
#   Datum { i: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2, 4]), o: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2]) }
#   Datum { i: IntList([1, 2, 5, 4, 5, 4, 7]), o: IntList([1, 2, 5, 4, 5, 4]) }
#   Datum { i: IntList([1, 9, 2, 8, 0, 6]), o: IntList([1, 9, 2, 8, 0]) }
#   Datum { i: IntList([6, 8, 9, 3, 7, 5, 2, 1]), o: IntList([6, 8, 9, 3, 7, 5, 2]) }
#   Datum { i: IntList([2, 5, 2, 7]), o: IntList([2, 5, 2]) }
#   Datum { i: IntList([4, 2, 0, 3, 4, 0, 0, 3, 4]), o: IntList([4, 2, 0, 3, 4, 0, 0, 3]) }
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([1, 9, 8]), o: IntList([1, 9]) }
#   Datum { i: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6, 3]), o: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6]) }
#   Datum { i: IntList([8]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c062,0,3,1,1269189,1101836,1233098,1233098,600.001238092,601.889918717
c062,0,3,2,533213,499547,514665,514665,1200.002467691,1202.886760623
c062,0,3,3,228076,212287,213698,213698,1800.002572592,1803.807734713
c062,0,3,4,171383,159766,160431,160431,2400.00522799,2404.553532087
c062,0,3,5,131688,122098,122637,122637,3000.005353464,3005.372524578
c062,0,3,6,100112,91571,92297,92297,3600.005389804,3606.250526293
c062,0,3,7,92419,83423,84188,84188,4200.012555737,4207.027105236
c062,0,3,8,73077,66613,66955,66955,4800.0134927340005,4807.704015121
c062,0,3,9,73396,65016,65481,65481,5400.017092131,5408.350386411
c062,0,3,10,69617,62067,62730,62730,6000.017520435,6008.999290882
c062,0,3,11,56047,50166,50649,50649,6600.01936262,6609.690716985
# search time: 6600.019s
# total time: 6610.104s
c062,1,3,1,1237353,1047027,1195384,1195384,600.000047391,600.292349749
c062,1,3,2,519403,487974,502045,502045,1200.000328213,1200.694403619
c062,1,3,3,223398,207819,209063,209063,1800.0005205710002,1801.055638196
c062,1,3,4,172137,160491,161156,161156,2400.001191588,2401.347682787
c062,1,3,5,129863,120433,120939,120939,3000.005587007,3001.703400152
c062,1,3,6,100597,92149,92869,92869,3600.009408677,3602.101927601
c062,1,3,7,92967,84708,85502,85502,4200.013063237,4202.473472064
c062,1,3,8,73916,67234,67605,67605,4800.0181639,4802.806226364
c062,1,3,9,70511,61812,62159,62159,5400.026673319,5403.219367113
c062,1,3,10,69174,61584,62272,62272,6000.027481443,6003.569929219
c062,1,3,11,56387,50795,51354,51354,6600.031884934,6604.081479299
# search time: 6600.032s
# total time: 13214.883s
c062,2,3,1,1303017,1119868,1263027,1263027,600.000040449,600.323830915
c062,2,3,2,532028,499813,513681,513681,1200.000461623,1200.611528419
c062,2,3,3,223940,208650,209845,209845,1800.002377156,1800.88852427
c062,2,3,4,171366,159802,160502,160502,2400.003472506,2401.133510816
c062,2,3,5,130802,121023,121594,121594,3000.005249114,3001.368605038
c062,2,3,6,100168,91747,92459,92459,3600.0061990570002,3601.669849497
c062,2,3,7,93558,84986,85737,85737,4200.012551956001,4201.93640862
c062,2,3,8,74285,68352,68865,68865,4800.012629703,4802.173248347
c062,2,3,9,72927,64666,65057,65057,5400.021332751,5402.395170579
c062,2,3,10,69511,62108,62775,62775,6000.022828579,6002.675450107
c062,2,3,11,56963,50969,51497,51497,6600.0240322009995,6602.890317382
# search time: 6600.024s
# total time: 19818.481s
c062,3,3,1,1286364,1060104,1234747,1234747,600.00263753,600.215294938
c062,3,3,2,533021,500999,514902,514902,1200.0030638560002,1200.462225843
c062,3,3,3,224968,209517,210805,210805,1800.003682731,1800.68046775
c062,3,3,4,171703,160267,160966,160966,2400.0058888040003,2400.871635118
c062,3,3,5,130960,121254,121768,121768,3000.007381961,3001.075658262
c062,3,3,6,98641,90124,90859,90859,3600.0167335510005,3601.285003192
c062,3,3,7,92221,83831,84630,84630,4200.018742859001,4201.486565632
c062,3,3,8,74172,68247,68717,68717,4800.026492159001,4801.687231626
c062,3,3,9,73111,64873,65348,65348,5400.049238723001,5401.861703054
c062,3,3,10,67144,59844,60491,60491,6000.050474915,6002.061422826
c062,3,3,11,56543,50733,51236,51236,6600.053010061,6602.25107817
# search time: 6600.053s
# total time: 26421.763s
c062,4,3,1,1236174,1049490,1195066,1195066,600.001312516,600.227416519
c062,4,3,2,514273,483053,497074,497074,1200.0018360220001,1200.432775312
c062,4,3,3,230460,215651,216981,216981,1800.0032514470001,1800.603336215
c062,4,3,4,170846,159360,160006,160006,2400.009854191,2400.75995027
c062,4,3,5,131546,122143,122675,122675,3000.0123143690003,3000.891120687
c062,4,3,6,99720,91086,91782,91782,3600.0165201480004,3601.082109769
c062,4,3,7,92873,84451,85207,85207,4200.020322310001,4201.222477563
c062,4,3,8,73826,67805,68300,68300,4800.0212411170005,4801.351990239
c062,4,3,9,72685,64657,65081,65081,5400.032328084,5401.504476986
c062,4,3,10,67541,60400,61086,61086,6000.035356737,6001.65105295
c062,4,3,11,57246,51319,51858,51858,6600.051631832001,6601.785572396
# search time: 6600.052s
# total time: 33024.245s
