    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c063_5.json out/1593091766/results/c063_5_best.csv out/1593091766/results/c063_5_predictions.csv out/1593091766/results/c063_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5, 0, 5, 5, 7]), o: IntList([5, 0, 5, 5, 7]) }
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([0, 2, 0]), o: IntList([2, 0]) }
#   Datum { i: IntList([0, 3, 9, 4, 6, 6, 7, 8, 2]), o: IntList([3, 9, 4, 6, 6, 7, 8, 2]) }
#   Datum { i: IntList([0, 9, 7, 1, 1, 5, 4, 3, 6, 6]), o: IntList([9, 7, 1, 1, 5, 4, 3, 6, 6]) }
#   Datum { i: IntList([2, 6, 2, 6, 6, 6]), o: IntList([6, 6, 6]) }
#   Datum { i: IntList([4, 1, 1, 4, 1, 1, 3]), o: IntList([1, 3]) }
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([2]) }
#   Datum { i: IntList([3, 8, 8, 7, 7, 7, 8, 8]), o: IntList([7, 7, 8, 8]) }
#   Datum { i: IntList([1, 7, 9, 9, 8, 4, 1, 7, 8]), o: IntList([9, 9, 8, 4, 1, 7, 8]) }
#   Datum { i: IntList([3, 8, 4, 4]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c063,0,5,1,1077981,927489,1045541,1045541,600.003360163,602.105137179
c063,0,5,2,444260,412306,425430,425430,1200.003421143,1203.813268695
c063,0,5,3,139505,131933,133412,133412,1800.004131367,1804.938645083
c063,0,5,4,132139,122991,124250,124250,2400.004410376,2405.794403141
c063,0,5,5,93451,87341,88743,88743,3000.011131128,3006.322770633
c063,0,5,6,52828,47743,48255,48255,3600.02011072,3607.272665729
c063,0,5,7,48888,44526,44741,44741,4200.034216177,4208.208878934
c063,0,5,8,42398,37861,38058,38058,4800.040760955,4809.098558435
c063,0,5,9,39956,36241,36481,36481,5400.088633425,5410.131550356
c063,0,5,10,36914,32905,33229,33229,6000.09589544,6010.717363494
c063,0,5,11,52489,47119,47434,47434,6600.113487159,6611.707714076
# search time: 6600.113s
# total time: 6612.082s
c063,1,5,1,1125315,966757,1090942,1090942,600.000368165,600.33423154
c063,1,5,2,449889,417345,430774,430774,1200.000957826,1200.74215589
c063,1,5,3,239624,227001,229555,229555,1800.002109514,1801.203868931
c063,1,5,4,227628,212392,214626,214626,2400.004041722,2401.577128061
c063,1,5,5,159127,149376,151908,151908,3000.004980241,3001.821364574
c063,1,5,6,89721,80575,81285,81285,3600.014664618,3602.304394859
c063,1,5,7,85735,77192,77533,77533,4200.018119023,4202.652431486
c063,1,5,8,74918,66328,66650,66650,4800.021204256,4803.11885555
c063,1,5,9,71165,63085,63427,63427,5400.026350186,5403.500010732
c063,1,5,10,38482,34435,34769,34769,6000.030890413,6004.003648683
c063,1,5,11,29858,26839,27030,27030,6600.036724502,6604.52118696
# search time: 6600.037s
# total time: 13217.305s
c063,2,5,1,673607,549710,645197,645197,600.005153961,600.197174795
c063,2,5,2,277995,257971,266087,266087,1200.005671342,1200.49139539
c063,2,5,3,142239,134591,136072,136072,1800.009858977,1800.835456238
c063,2,5,4,137084,128057,129321,129321,2400.013177145,2401.106878925
c063,2,5,5,95675,89475,90807,90807,3000.025147614,3001.302202925
c063,2,5,6,53761,48897,49401,49401,3600.0388628170003,3601.661852636
c063,2,5,7,49541,44391,44580,44580,4200.051538289001,4201.95408244
c063,2,5,8,43333,38738,38927,38927,4800.058216267001,4802.375591288
c063,2,5,9,41522,37739,37960,37960,5400.061469653001,5402.694992901
c063,2,5,10,34452,30826,31153,31153,6000.068432246001,6003.00849003
c063,2,5,11,29471,26465,26661,26661,6600.0735136150015,6603.540819043
# search time: 6600.074s
# total time: 19821.493s
c063,3,5,1,691957,598880,671988,671988,600.00131237,600.235137666
c063,3,5,2,276474,256416,264421,264421,1200.003234454,1200.480875061
c063,3,5,3,142187,134357,135863,135863,1800.008408178,1800.765398748
c063,3,5,4,134550,125306,126552,126552,2400.009074761,2400.994162382
c063,3,5,5,95927,89733,91037,91037,3000.013126537,3001.150414016
c063,3,5,6,53491,48409,48899,48899,3600.01760965,3601.469842477
c063,3,5,7,49422,44034,44204,44204,4200.023273592,4201.669654688
c063,3,5,8,43861,40033,40242,40242,4800.037551232,4801.93240313
c063,3,5,9,41454,37683,37920,37920,5400.04813839,5402.217635698
c063,3,5,10,36004,32106,32438,32438,6000.053937328,6002.499627556
c063,3,5,11,28306,25355,25529,25529,6600.058317882,6602.874941904
# search time: 6600.058s
# total time: 26424.865s
c063,4,5,1,675868,552301,647527,647527,600.001250841,600.173347007
c063,4,5,2,253376,236785,243418,243418,1200.001526136,1200.42507035
c063,4,5,3,140906,133026,134589,134589,1800.004123353,1800.676999593
c063,4,5,4,136936,127873,129134,129134,2400.006649543,2400.858125889
c063,4,5,5,95724,89694,91148,91148,3000.008865358,3000.980762726
c063,4,5,6,53931,48873,49421,49421,3600.0435064800004,3601.200346164
c063,4,5,7,49510,44956,45234,45234,4200.050021145001,4201.386647835
c063,4,5,8,43258,39553,39784,39784,4800.053612603001,4801.591107779
c063,4,5,9,40778,37115,37359,37359,5400.066246145001,5401.898213457
c063,4,5,10,35496,31773,32118,32118,6000.080319338001,6002.203229973
c063,4,5,11,29758,26759,26981,26981,6600.0946436,6602.435810253
# search time: 6600.095s
# total time: 33027.803s
