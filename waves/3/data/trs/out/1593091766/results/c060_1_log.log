    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.07s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c060_1.json out/1593091766/results/c060_1_best.csv out/1593091766/results/c060_1_predictions.csv out/1593091766/results/c060_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 0, 4, 6, 1, 8, 3]), o: IntList([7, 0, 7, 4, 0, 4, 4, 1, 3]) }
#   Datum { i: IntList([2, 1, 3, 9, 0, 6, 6]), o: IntList([2, 1, 2, 3, 1, 3, 4, 0, 6]) }
#   Datum { i: IntList([8, 4, 6, 5, 3, 7, 2, 0, 0, 9]), o: IntList([8, 4, 8, 6, 4, 6, 4, 3, 2]) }
#   Datum { i: IntList([3, 7, 2, 2, 4, 9, 4, 3]), o: IntList([3, 7, 3, 2, 7, 2, 4, 4, 4]) }
#   Datum { i: IntList([0, 8, 8, 5, 1, 4, 5]), o: IntList([0, 8, 0, 8, 8, 8, 4, 1, 5]) }
#   Datum { i: IntList([6, 4, 0, 4, 7, 7, 8, 1]), o: IntList([6, 4, 6, 0, 4, 0, 4, 7, 8]) }
#   Datum { i: IntList([7, 7, 9, 9, 9, 9, 9, 7, 1]), o: IntList([7, 7, 7, 9, 7, 9, 4, 9, 9]) }
#   Datum { i: IntList([0, 3, 1, 8, 2, 8, 5, 2, 0, 3]), o: IntList([0, 3, 0, 1, 3, 1, 4, 2, 5]) }
#   Datum { i: IntList([2, 0, 7, 6, 4, 1, 3, 0, 9, 6]), o: IntList([2, 0, 2, 7, 0, 7, 4, 4, 3]) }
#   Datum { i: IntList([8, 8, 8, 8, 1, 1, 1, 8, 8, 1]), o: IntList([8, 8, 8, 8, 8, 8, 4, 1, 1]) }
#   Datum { i: IntList([6, 5, 5, 5, 2, 2, 6, 5]), o: IntList([6, 5, 6, 5, 5, 5, 4, 2, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c060,0,1,1,1064939,871853,1021015,1021015,600.000189124,601.874834526
c060,0,1,2,264428,245293,252781,252781,1200.0041754160002,1203.082026306
c060,0,1,3,159115,145108,148257,148257,1800.0078019370003,1804.170381344
c060,0,1,4,119745,110625,114027,114027,2400.0090348090002,2404.956995656
c060,0,1,5,90416,82336,85555,85555,3000.0187562160004,3005.798553356
c060,0,1,6,74019,67846,69877,69877,3600.0208508760006,3606.617535659
c060,0,1,7,26022,24165,24748,24748,4200.029148985001,4208.316031678
c060,0,1,8,25990,23880,24388,24388,4800.056761045001,4809.514234901
c060,0,1,9,22372,20365,20890,20890,5400.089251012001,5410.689268366
c060,0,1,10,18779,17238,17668,17668,6000.107451452001,6012.280185017
c060,0,1,11,16517,14944,15413,15413,6600.121037354002,6613.962111675
# search time: 6600.121s
# total time: 6614.191s
c060,1,1,1,659248,541327,632014,632014,600.000399134,600.293686674
c060,1,1,2,165362,153899,158350,158350,1200.008906383,1200.868652361
c060,1,1,3,94615,86499,88302,88302,1800.010618801,1801.401656134
c060,1,1,4,68583,62936,65132,65132,2400.0148068999997,2401.878314368
c060,1,1,5,53043,48674,50194,50194,3000.0244092489997,3002.375283784
c060,1,1,6,42531,39074,40141,40141,3600.0269136089996,3603.061007124
c060,1,1,7,24810,23064,23529,23529,4200.0579210999995,4203.993303716
c060,1,1,8,25784,23629,24234,24234,4800.068986722999,4804.676658163
c060,1,1,9,22429,20506,21030,21030,5400.081309081,5405.366443147
c060,1,1,10,19545,17806,18348,18348,6000.094292152,6006.235318277
c060,1,1,11,16769,15290,15729,15729,6600.094805797,6606.838246071
# search time: 6600.095s
# total time: 13221.369s
c060,2,1,1,649022,557151,628877,628877,600.010918096,600.300549166
c060,2,1,2,164136,152462,157023,157023,1200.013969977,1200.709631708
c060,2,1,3,91998,83884,85587,85587,1800.0216150699998,1801.143445549
c060,2,1,4,69472,63903,65923,65923,2400.027655307,2401.473132735
c060,2,1,5,52719,48417,49781,49781,3000.0277350059996,3001.78559479
c060,2,1,6,41064,37301,38736,38736,3600.0365162969997,3602.233373555
c060,2,1,7,25850,23957,24506,24506,4200.037085027,4202.837803464
c060,2,1,8,25797,23673,24251,24251,4800.0379992240005,4803.445907804
c060,2,1,9,22360,20364,20907,20907,5400.069303625,5403.969648529
c060,2,1,10,18691,16989,17463,17463,6000.079660749,6004.688662236
c060,2,1,11,16766,15315,15742,15742,6600.089862227,6605.058823861
# search time: 6600.090s
# total time: 19826.685s
c060,3,1,1,656704,537340,629324,629324,600.009225796,600.231118778
c060,3,1,2,166019,154343,158716,158716,1200.009355138,1200.516037486
c060,3,1,3,94014,86077,87749,87749,1800.013710237,1800.81825539
c060,3,1,4,66855,61135,63513,63513,2400.0163775359997,2401.128255151
c060,3,1,5,52543,48101,49683,49683,3000.0220622649995,3001.429340094
c060,3,1,6,42178,38692,39807,39807,3600.0342534939996,3601.887097302
c060,3,1,7,42235,39202,40036,40036,4200.036164544999,4202.38018381
c060,3,1,8,44761,41094,42063,42063,4800.070854583999,4802.844647876
c060,3,1,9,38265,34776,35678,35678,5400.085684407999,5403.336516727
c060,3,1,10,33074,30287,31088,31088,6000.111360419999,6003.707698974
c060,3,1,11,28496,25982,26581,26581,6600.127654097999,6604.284481308
# search time: 6600.128s
# total time: 26431.261s
c060,4,1,1,1082698,888566,1038371,1038371,600.000182773,600.20852305
c060,4,1,2,270018,250594,258030,258030,1200.011395862,1200.471364588
c060,4,1,3,159986,145788,148852,148852,1800.012559007,1800.728003763
c060,4,1,4,119211,110028,113496,113496,2400.017167101,2400.941724718
c060,4,1,5,90906,83080,85945,85945,3000.018309621,3001.122005525
c060,4,1,6,73127,66866,68940,68940,3600.0330578099997,3601.304796877
c060,4,1,7,45194,41870,42861,42861,4200.044515422,4201.654526303
c060,4,1,8,45372,41542,42703,42703,4800.059301126,4801.92090653
c060,4,1,9,39383,35842,36747,36747,5400.080942191,5402.272040704
c060,4,1,10,33414,30357,31121,31121,6000.087164859,6002.595273476
c060,4,1,11,28803,26134,26785,26785,6600.095730805,6602.967511627
# search time: 6600.096s
# total time: 33034.445s
