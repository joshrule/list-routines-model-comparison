    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c056_1.json out/1593091766/results/c056_1_best.csv out/1593091766/results/c056_1_predictions.csv out/1593091766/results/c056_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 4, 2, 4, 0]), o: IntList([0, 4, 2, 4]) }
#   Datum { i: IntList([7, 6, 7, 8, 6, 0, 7, 6, 0, 5]), o: IntList([7, 6, 7, 8, 0, 7, 6, 0, 5]) }
#   Datum { i: IntList([1, 8, 3, 8, 3, 0, 6]), o: IntList([1, 8, 3, 8, 0, 6]) }
#   Datum { i: IntList([2, 1, 2, 6, 7, 2]), o: IntList([2, 1, 2, 6, 2]) }
#   Datum { i: IntList([9, 0, 0, 9, 0, 0, 0, 9]), o: IntList([9, 0, 0, 9, 0, 0, 9]) }
#   Datum { i: IntList([5, 6, 9, 6, 6, 5, 9]), o: IntList([5, 6, 9, 6, 5, 9]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([0, 8, 3, 6, 5, 9, 7, 2, 3, 1]), o: IntList([0, 8, 3, 6, 9, 7, 2, 3, 1]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1]), o: IntList([1, 1, 1, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([2, 0, 6, 2, 0, 0, 6, 2, 6]), o: IntList([2, 0, 6, 2, 0, 6, 2, 6]) }
#   Datum { i: IntList([3, 4, 4, 3, 3, 4]), o: IntList([3, 4, 4, 3, 4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c056,0,1,1,1321260,1148785,1284293,1284293,600.000123653,601.911468737
c056,0,1,2,513023,482865,496576,496576,1200.000207979,1202.888866858
c056,0,1,3,256270,235299,243831,243831,1800.001438885,1803.395178567
c056,0,1,4,195695,179114,185917,185917,2400.007229329,2403.946416805
c056,0,1,5,131772,122571,126531,126531,3000.0100801930002,3004.704109039
c056,0,1,6,106241,98113,101274,101274,3600.016351301,3605.582792818
c056,0,1,7,86106,79411,81844,81844,4200.017763414,4206.46283773
c056,0,1,8,72449,66814,68781,68781,4800.027478497,4807.403457298
c056,0,1,9,63589,57311,59220,59220,5400.035340749,5408.24817178
c056,0,1,10,53702,48564,50076,50076,6000.0504401240005,6009.22547177
c056,0,1,11,46564,41989,43311,43311,6600.05446181,6610.266354214
# search time: 6600.054s
# total time: 6610.540s
c056,1,1,1,1209196,1024678,1168776,1168776,600.000009406,600.300010255
c056,1,1,2,522234,492029,505580,505580,1200.0015078410001,1200.716378518
c056,1,1,3,253170,232416,240964,240964,1800.002277317,1800.977781576
c056,1,1,4,194421,178735,185148,185148,2400.00395992,2401.208439215
c056,1,1,5,129793,120364,124540,124540,3000.004827421,3001.61381176
c056,1,1,6,105712,97485,100820,100820,3600.008207176,3602.020538337
c056,1,1,7,85525,78664,81133,81133,4200.0087454879995,4202.513636878
c056,1,1,8,71548,66041,67971,67971,4800.014945415,4802.997842834
c056,1,1,9,63312,57275,59056,59056,5400.017309807,5403.378538565
c056,1,1,10,52976,47989,49490,49490,6000.02078122,6003.804418561
c056,1,1,11,46140,41606,42929,42929,6600.035472529999,6604.32506635
# search time: 6600.035s
# total time: 13215.374s
c056,2,1,1,1314709,1138011,1276693,1276693,600.000247008,600.317756777
c056,2,1,2,524278,493602,507241,507241,1200.000501496,1200.61035167
c056,2,1,3,250910,230449,239169,239169,1800.00138339,1800.774821724
c056,2,1,4,191705,176795,183127,183127,2400.001891519,2400.936801288
c056,2,1,5,132891,123341,127378,127378,3000.0047345619996,3001.170568007
c056,2,1,6,103964,96288,99297,99297,3600.0090002559996,3601.48800402
c056,2,1,7,83672,77094,79529,79529,4200.009879714999,4201.774391432
c056,2,1,8,70362,64698,66847,66847,4800.013471335999,4802.097801093
c056,2,1,9,62717,56383,58366,58366,5400.016717498,5402.3136033
c056,2,1,10,52089,47243,48556,48556,6000.025828428,6002.65378901
c056,2,1,11,45595,41185,42425,42425,6600.043868993,6602.908430386
# search time: 6600.044s
# total time: 19818.736s
c056,3,1,1,1295042,1134233,1261689,1261689,600.003769681,600.281451648
c056,3,1,2,526770,495552,509322,509322,1200.004239195,1200.520984307
c056,3,1,3,250358,229643,238370,238370,1800.005054849,1800.657058898
c056,3,1,4,191296,175460,182224,182224,2400.007384756,2400.792471054
c056,3,1,5,135412,126033,129629,129629,3000.008486356,3000.977899466
c056,3,1,6,104218,95995,99363,99363,3600.013556421,3601.180197943
c056,3,1,7,84230,77620,80028,80028,4200.023864316,4201.433080402
c056,3,1,8,70636,65082,67055,67055,4800.025148851,4801.73285441
c056,3,1,9,62262,56123,57957,57957,5400.037253029001,5401.954460342
c056,3,1,10,53361,48284,49708,49708,6000.037839836001,6002.171518428
c056,3,1,11,45567,41224,42466,42466,6600.050287999001,6602.36024067
# search time: 6600.050s
# total time: 26421.384s
c056,4,1,1,1316861,1143438,1280020,1280020,600.000025905,600.261473539
c056,4,1,2,512030,482240,495733,495733,1200.002929183,1200.467212943
c056,4,1,3,254480,232895,242348,242348,1800.0042365160002,1800.597100461
c056,4,1,4,192550,176685,183182,183182,2400.006161155,2400.720196826
c056,4,1,5,131850,122436,126386,126386,3000.008113931,3000.868156247
c056,4,1,6,105381,97274,100429,100429,3600.009639969,3601.039623751
c056,4,1,7,84553,77846,80206,80206,4200.017942928,4201.178888798
c056,4,1,8,69930,64541,66532,66532,4800.025389771,4801.399465399
c056,4,1,9,63414,57279,59110,59110,5400.03011512,5401.572771183
c056,4,1,10,52608,47437,49056,49056,6000.035993353,6001.764136288
c056,4,1,11,45569,41075,42267,42267,6600.048266383,6601.883396384
# search time: 6600.048s
# total time: 33023.684s
