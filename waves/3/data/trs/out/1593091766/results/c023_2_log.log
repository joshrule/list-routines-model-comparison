    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c023_2.json out/1593091766/results/c023_2_best.csv out/1593091766/results/c023_2_predictions.csv out/1593091766/results/c023_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 0, 2]), o: IntList([7, 8, 0, 2]) }
#   Datum { i: IntList([9, 7, 2, 3, 0, 1, 6, 8, 4]), o: IntList([9, 5, 7, 2, 3, 0, 1, 6, 8, 4]) }
#   Datum { i: IntList([7, 4, 5, 9, 9, 5, 8]), o: IntList([7, 5, 4, 5, 9, 9, 5, 8]) }
#   Datum { i: IntList([0, 2, 7, 9, 5, 8, 6, 3, 0, 9]), o: IntList([0, 5, 2, 7, 9, 5, 8, 6, 3, 0, 9]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([1, 5, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([3, 7, 3, 7, 3, 3, 2, 2, 7, 3]), o: IntList([3, 5, 7, 3, 7, 3, 3, 2, 2, 7, 3]) }
#   Datum { i: IntList([9, 7, 6, 1, 2]), o: IntList([9, 5, 7, 6, 1, 2]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([2, 0, 5, 4]), o: IntList([2, 8, 0, 5, 4]) }
#   Datum { i: IntList([5, 2, 2, 6, 1, 9, 4, 2]), o: IntList([5, 5, 2, 2, 6, 1, 9, 4, 2]) }
#   Datum { i: IntList([0, 2, 9, 8, 0, 0, 5, 9, 2, 9]), o: IntList([0, 5, 2, 9, 8, 0, 0, 5, 9, 2, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c023,0,2,1,1097859,929720,1060789,1060789,600.001267215,601.910490961
c023,0,2,2,505248,473634,486943,486943,1200.002691495,1202.996485042
c023,0,2,3,202507,186352,188028,188028,1800.003394229,1803.800966938
c023,0,2,4,135449,126775,128356,128356,2400.0059230469997,2404.543835316
c023,0,2,5,94695,87044,88027,88027,3000.0078471819998,3005.128496235
c023,0,2,6,81844,75957,77026,77026,3600.010787627,3605.769700048
c023,0,2,7,58833,53747,54323,54323,4200.012610894,4206.500328179
c023,0,2,8,55049,51145,51613,51613,4800.01648209,4807.123732013
c023,0,2,9,50048,44436,44748,44748,5400.023109805,5407.757767255
c023,0,2,10,46687,42176,42633,42633,6000.027641363,6008.418898314
c023,0,2,11,40074,36200,36626,36626,6600.040522722,6609.195423609
# search time: 6600.041s
# total time: 6609.556s
c023,1,2,1,1110004,940627,1072736,1072736,600.005303925,600.354036418
c023,1,2,2,502868,471468,484760,484760,1200.010892542,1200.772873527
c023,1,2,3,200887,184369,185867,185867,1800.0172195129999,1801.137074022
c023,1,2,4,82834,77165,78080,78080,2400.018842253,2401.527908715
c023,1,2,5,54668,50706,51306,51306,3000.030293559,3001.805784025
c023,1,2,6,46582,43122,43661,43661,3600.036918162,3602.125853618
c023,1,2,7,34329,31750,32124,32124,4200.048861974,4202.587879261
c023,1,2,8,31521,29348,29642,29642,4800.055184207,4802.981912759
c023,1,2,9,28057,25693,25945,25945,5400.062339925,5403.411989645
c023,1,2,10,26951,24550,24864,24864,6000.114113846,6003.804064579
c023,1,2,11,21940,19952,20166,20166,6600.117680947,6604.140285867
# search time: 6600.118s
# total time: 13214.312s
c023,2,2,1,697687,606567,677997,677997,600.000990583,600.264022754
c023,2,2,2,313809,293966,301953,301953,1200.002068006,1200.595529701
c023,2,2,3,117549,107430,108227,108227,1800.01070294,1800.873094762
c023,2,2,4,79591,74162,74980,74980,2400.0191268,2401.143154024
c023,2,2,5,54071,49858,50386,50386,3000.02289524,3001.375508876
c023,2,2,6,46976,43744,44268,44268,3600.040756933,3601.670508996
c023,2,2,7,34166,31482,31832,31832,4200.052370626,4201.989188094
c023,2,2,8,31446,29275,29547,29547,4800.071147271,4802.145427399
c023,2,2,9,28504,26149,26402,26402,5400.092560027,5402.45895877
c023,2,2,10,25625,23458,23666,23666,6000.096589566,6002.722077621
c023,2,2,11,23226,21212,21486,21486,6600.114146736,6603.017779113
# search time: 6600.114s
# total time: 19817.996s
c023,3,2,1,718823,624092,698710,698710,600.000173848,600.2618423
c023,3,2,2,306970,287536,295581,295581,1200.001332925,1200.532665812
c023,3,2,3,119339,109724,110478,110478,1800.0036051040001,1800.768559627
c023,3,2,4,79303,74006,74811,74811,2400.010459202,2400.984057948
c023,3,2,5,54026,49755,50307,50307,3000.0134404170003,3001.157941307
c023,3,2,6,52043,48277,48877,48877,3600.0211045160004,3601.420355452
c023,3,2,7,58600,53403,54022,54022,4200.0244195000005,4201.680711022
c023,3,2,8,54342,49805,50183,50183,4800.0281404590005,4801.93798831
c023,3,2,9,49262,44663,45037,45037,5400.04981554,5402.160151119
c023,3,2,10,46062,41551,42059,42059,6000.050105359,6002.339759405
c023,3,2,11,39485,35753,36174,36174,6600.0604502099995,6602.545414688
# search time: 6600.060s
# total time: 26421.112s
c023,4,2,1,1174980,1025920,1143839,1143839,600.000260617,600.277818499
c023,4,2,2,485373,455857,468341,468341,1200.001012926,1200.508016361
c023,4,2,3,203917,188662,190358,190358,1800.003635545,1800.689757065
c023,4,2,4,133299,124934,126497,126497,2400.009310071,2400.880360218
c023,4,2,5,95246,88027,89005,89005,3000.0139447770002,3001.033137463
c023,4,2,6,81873,75894,76844,76844,3600.0169587950004,3601.211192256
c023,4,2,7,58488,53345,53888,53888,4200.020366273,4201.430366187
c023,4,2,8,54622,50015,50377,50377,4800.026763713,4801.663601251
c023,4,2,9,49523,44855,45214,45214,5400.027209308,5401.858431597
c023,4,2,10,45921,41355,41842,41842,6000.03188449,6002.039076923
c023,4,2,11,39410,35644,36041,36041,6600.048119955,6602.214425292
# search time: 6600.048s
# total time: 33023.684s
