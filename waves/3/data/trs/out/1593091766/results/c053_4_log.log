    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c053_4.json out/1593091766/results/c053_4_best.csv out/1593091766/results/c053_4_predictions.csv out/1593091766/results/c053_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 5, 7, 6, 7, 1]), o: IntList([0, 0, 7, 6, 7, 1]) }
#   Datum { i: IntList([9, 3, 7, 0, 1, 5, 5, 0]), o: IntList([9, 9, 7, 0, 1, 5, 5, 0]) }
#   Datum { i: IntList([8, 9, 6, 4]), o: IntList([8, 8, 6, 4]) }
#   Datum { i: IntList([8, 6, 3, 6, 6, 3, 3]), o: IntList([8, 8, 3, 6, 6, 3, 3]) }
#   Datum { i: IntList([9, 2, 2, 8, 0, 0, 2, 1, 1]), o: IntList([9, 9, 2, 8, 0, 0, 2, 1, 1]) }
#   Datum { i: IntList([9, 1, 5, 8, 4, 3, 7, 6, 5, 2]), o: IntList([9, 9, 5, 8, 4, 3, 7, 6, 5, 2]) }
#   Datum { i: IntList([2, 0, 2, 0, 2]), o: IntList([2, 2, 2, 0, 2]) }
#   Datum { i: IntList([7, 4, 6, 5, 0, 8, 4, 2]), o: IntList([7, 7, 6, 5, 0, 8, 4, 2]) }
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
#   Datum { i: IntList([6, 5, 8, 9, 1, 3, 4, 1, 0]), o: IntList([6, 6, 8, 9, 1, 3, 4, 1, 0]) }
#   Datum { i: IntList([1, 4, 2]), o: IntList([1, 1, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c053,0,4,1,1054099,892640,1018465,1018465,600.000032599,601.926597
c053,0,4,2,356777,333737,344024,344024,1200.000623849,1203.16870556
c053,0,4,3,198029,182707,187442,187442,1800.002306106,1804.236524236
c053,0,4,4,151567,141398,145796,145796,2400.003067146,2405.238280683
c053,0,4,5,125680,116635,120472,120472,3000.003700798,3006.062980524
c053,0,4,6,92200,84278,87276,87276,3600.012825714,3607.617711646
c053,0,4,7,38013,34439,35451,35451,4200.0155501,4208.546821398
c053,0,4,8,35429,32206,33043,33043,4800.025320564,4809.751381432
c053,0,4,9,30464,27863,28609,28609,5400.037085798,5410.647089956
c053,0,4,10,31813,28927,29276,29276,6000.048459893,6011.266882979
c053,0,4,11,42144,38130,38537,38537,6600.054938964,6612.340284458
# search time: 6600.055s
# total time: 6612.666s
c053,1,4,1,1114931,964363,1082491,1082491,600.000683688,600.331389626
c053,1,4,2,362293,339180,349253,349253,1200.001354517,1200.773036847
c053,1,4,3,199161,183376,188194,188194,1800.0030149959998,1801.242242366
c053,1,4,4,149045,139332,143481,143481,2400.0039883299996,2401.732542975
c053,1,4,5,125057,115688,119890,119890,3000.0091569779997,3002.153066492
c053,1,4,6,92637,84700,87849,87849,3600.0130941549996,3602.477130682
c053,1,4,7,65722,59939,61670,61670,4200.013170468999,4202.927424338
c053,1,4,8,60926,55197,56826,56826,4800.015219292999,4803.411970254
c053,1,4,9,52813,48212,49725,49725,5400.023265222999,5403.77541075
c053,1,4,10,52857,48024,48561,48561,6000.025861585998,6004.172544451
c053,1,4,11,42139,38196,38572,38572,6600.028216643998,6604.584886562
# search time: 6600.028s
# total time: 13217.839s
c053,2,4,1,1061192,897965,1025118,1025118,600.002809063,600.296860961
c053,2,4,2,372744,349136,358998,358998,1200.003863034,1200.614742206
c053,2,4,3,198203,182997,187675,187675,1800.0101278289999,1800.884854088
c053,2,4,4,150076,140472,144561,144561,2400.0142683159997,2401.187685161
c053,2,4,5,124437,115136,119196,119196,3000.0179609929996,3001.416180149
c053,2,4,6,92788,84943,88092,88092,3600.0198509539996,3601.621522183
c053,2,4,7,66033,59985,61830,61830,4200.025008687,4201.919968255
c053,2,4,8,60399,54880,56392,56392,4800.025445003,4802.250604526
c053,2,4,9,51605,46762,48128,48128,5400.027544466,5402.572439018
c053,2,4,10,52512,47665,48226,48226,6000.038151177,6002.842485381
c053,2,4,11,43244,39444,39822,39822,6600.048432712,6603.13776169
# search time: 6600.048s
# total time: 19821.540s
c053,3,4,1,1046789,887229,1011814,1011814,600.002937473,600.253465563
c053,3,4,2,376970,352057,362417,362417,1200.0105144479999,1200.499046966
c053,3,4,3,202447,187302,192332,192332,1800.0124715339998,1800.706482053
c053,3,4,4,150673,140935,145095,145095,2400.016761517,2400.964718909
c053,3,4,5,120602,111512,115575,115575,3000.026721757,3001.174200815
c053,3,4,6,91152,83354,86426,86426,3600.034744855,3601.395291042
c053,3,4,7,65729,59980,61706,61706,4200.03508545,4201.651046487
c053,3,4,8,60148,54616,56156,56156,4800.0398383,4801.910868226
c053,3,4,9,51553,46921,48301,48301,5400.049418661,5402.15353606
c053,3,4,10,52455,47660,48223,48223,6000.058584546,6002.381174121
c053,3,4,11,39667,35390,35869,35869,6600.072190645,6602.573834389
# search time: 6600.072s
# total time: 26424.733s
c053,4,4,1,1149364,1000386,1117321,1117321,600.000034238,600.228531889
c053,4,4,2,365819,342552,352413,352413,1200.0016480630002,1200.426478776
c053,4,4,3,203600,188197,193261,193261,1800.003947392,1800.604911188
c053,4,4,4,148474,138626,142890,142890,2400.008431867,2400.799398375
c053,4,4,5,121907,112514,116869,116869,3000.0089007320003,3000.944648811
c053,4,4,6,92107,84358,87333,87333,3600.0110849310004,3601.115541511
c053,4,4,7,66022,60104,61894,61894,4200.012453865001,4201.348999251
c053,4,4,8,61153,55359,57072,57072,4800.029108165001,4801.594788366
c053,4,4,9,51949,46900,48258,48258,5400.034651222001,5401.77919301
c053,4,4,10,52349,47573,48154,48154,6000.048966522001,6002.005722609
c053,4,4,11,41819,38025,38406,38406,6600.064671596001,6602.204788906
# search time: 6600.065s
# total time: 33027.374s
