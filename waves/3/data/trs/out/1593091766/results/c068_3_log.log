    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c068_3.json out/1593091766/results/c068_3_best.csv out/1593091766/results/c068_3_predictions.csv out/1593091766/results/c068_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2, 2]), o: IntList([2, 2, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 0, 8, 0]), o: IntList([8, 0, 8, 0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 1]), o: IntList([4, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9]), o: IntList([9, 1, 9, 1, 9, 6, 6, 9, 1, 9, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 4, 7, 4, 7, 5, 4]), o: IntList([5, 5, 4, 7, 4, 7, 5, 4, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5]), o: IntList([5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([8, 8, 1, 9, 2]), o: IntList([8, 8, 1, 9, 2, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([0]), o: IntList([0, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([6, 2, 1, 6, 2, 1]), o: IntList([6, 2, 1, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1]), o: IntList([4, 6, 8, 4, 0, 2, 6, 2, 1, 7, 3, 8, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([7, 3, 8, 4, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c068,0,3,1,1374598,1182856,1332782,1332782,600.000391654,601.894109202
c068,0,3,2,343126,321839,331326,331326,1200.000995686,1202.766594607
c068,0,3,3,200643,186044,187944,187944,1800.002495927,1803.635694626
c068,0,3,4,150725,139822,140549,140549,2400.002982797,2404.397292323
c068,0,3,5,105154,97238,97628,97628,3000.005534189,3004.844013092
c068,0,3,6,75867,69222,69633,69633,3600.0059459970003,3605.388954336
c068,0,3,7,54732,49357,49632,49632,4200.013644080001,4205.966006073
c068,0,3,8,46718,41975,42227,42227,4800.021465894,4806.529266318
c068,0,3,9,45608,40923,41186,41186,5400.089179590001,5407.116441083
c068,0,3,10,39381,35480,35767,35767,6000.092029791001,6007.706565209
c068,0,3,11,34246,30046,30334,30334,6600.113714769001,6608.36210512
# search time: 6600.114s
# total time: 6608.718s
c068,1,3,1,1310086,1151854,1277686,1277686,600.000326797,600.382298439
c068,1,3,2,344227,322238,331939,331939,1200.001290485,1200.736722609
c068,1,3,3,203581,188823,190756,190756,1800.002840135,1801.130752405
c068,1,3,4,145095,134292,134990,134990,2400.005368559,2401.547846359
c068,1,3,5,102347,94241,94501,94501,3000.009960482,3001.785236119
c068,1,3,6,75418,68800,69190,69190,3600.0126045810002,3602.076502253
c068,1,3,7,54290,49033,49294,49294,4200.017358805,4202.369190214
c068,1,3,8,47320,43057,43354,43354,4800.017845561,4802.631553165
c068,1,3,9,44989,40214,40481,40481,5400.0184714160005,5402.921677046
c068,1,3,10,39481,35769,36053,36053,6000.023531181,6003.194285196
c068,1,3,11,34211,30092,30372,30372,6600.031806356,6603.478979676
# search time: 6600.032s
# total time: 13212.883s
c068,2,3,1,1309000,1136013,1271810,1271810,600.006052875,600.313251504
c068,2,3,2,352541,330762,340087,340087,1200.012186401,1200.575827013
c068,2,3,3,203304,188653,190571,190571,1800.013813974,1800.859560614
c068,2,3,4,144523,133499,134218,134218,2400.01562312,2401.136678312
c068,2,3,5,103659,95576,95904,95904,3000.0174273149996,3001.307514578
c068,2,3,6,74705,67242,67582,67582,3600.0318385499995,3601.496293468
c068,2,3,7,53686,47985,48209,48209,4200.038053500999,4201.715656058
c068,2,3,8,47243,42897,43185,43185,4800.045308024999,4801.944668884
c068,2,3,9,45110,40400,40678,40678,5400.0483260169985,5402.155697849
c068,2,3,10,39142,35420,35699,35699,6000.0552359409985,6002.383595148
c068,2,3,11,33924,29773,30066,30066,6600.061361979999,6602.553391549
# search time: 6600.061s
# total time: 19815.789s
c068,3,3,1,1314088,1074467,1259506,1259506,600.000336267,600.20799108
c068,3,3,2,342292,320028,330239,330239,1200.005752558,1200.415885505
c068,3,3,3,198462,183665,185580,185580,1800.007767689,1800.672114959
c068,3,3,4,150107,139628,140407,140407,2400.011955782,2400.873842699
c068,3,3,5,104024,96341,96711,96711,3000.0143994289997,3000.995608164
c068,3,3,6,75378,68695,69134,69134,3600.020133404,3601.162194775
c068,3,3,7,53786,48224,48481,48481,4200.024497439999,4201.333964723
c068,3,3,8,47094,42862,43156,43156,4800.031836020999,4801.51346102
c068,3,3,9,44910,40375,40655,40655,5400.038281632,5401.693085062
c068,3,3,10,38647,34596,34855,34855,6000.045682772,6001.928891142
c068,3,3,11,32501,27179,27502,27502,6600.047964778,6602.1758599
# search time: 6600.048s
# total time: 26418.552s
c068,4,3,1,1337240,1158957,1298957,1298957,600.000818047,600.269912105
c068,4,3,2,339629,318175,327621,327621,1200.001653218,1200.436067196
c068,4,3,3,196781,181911,183834,183834,1800.003642868,1800.628098237
c068,4,3,4,148359,137797,138568,138568,2400.007281309,2400.803094196
c068,4,3,5,101787,93663,93949,93949,3000.007738192,3000.920232471
c068,4,3,6,75221,68651,69033,69033,3600.014505148,3601.009845816
c068,4,3,7,53117,47500,47724,47724,4200.020972902,4201.131225974
c068,4,3,8,46474,41696,41968,41968,4800.029962039,4801.250134952
c068,4,3,9,44985,40450,40718,40718,5400.036786437,5401.359817695
c068,4,3,10,38753,34983,35271,35271,6000.049583354,6001.501607858
c068,4,3,11,33274,28807,29086,29086,6600.0889711009995,6601.784120323
# search time: 6600.089s
# total time: 33020.982s
