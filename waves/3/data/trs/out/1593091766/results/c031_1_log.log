    Finished release [optimized] target(s) in 0.06s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c031_1.json out/1593091766/results/c031_1_best.csv out/1593091766/results/c031_1_predictions.csv out/1593091766/results/c031_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 8, 8, 8]), o: IntList([]) }
#   Datum { i: IntList([0, 0, 0, 0, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 3, 7, 3, 1]), o: IntList([1]) }
#   Datum { i: IntList([9, 9, 9, 0, 5, 6, 4]), o: IntList([9, 0, 5, 6, 4]) }
#   Datum { i: IntList([7, 7, 6, 4, 9, 5]), o: IntList([6, 4, 9, 5]) }
#   Datum { i: IntList([0, 5, 5, 0, 9]), o: IntList([9]) }
#   Datum { i: IntList([1, 5, 9, 0, 6, 7, 4]), o: IntList([6, 7, 4]) }
#   Datum { i: IntList([4, 5, 9, 9, 4, 5, 4, 4, 9, 5]), o: IntList([4, 5, 4, 4, 9, 5]) }
#   Datum { i: IntList([2, 3, 8, 6, 6]), o: IntList([6]) }
#   Datum { i: IntList([7, 8, 8, 7, 8]), o: IntList([8]) }
#   Datum { i: IntList([7, 1, 7, 8]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c031,0,1,1,737428,661097,722125,722125,600.00028932,602.301234718
c031,0,1,2,898543,834879,876779,876779,1200.0005001519999,1203.612557332
c031,0,1,3,766048,712818,738373,738373,1800.0012179649998,1804.624049677
c031,0,1,4,549311,501396,525223,525223,2400.0129591669997,2405.501530538
c031,0,1,5,308527,286367,296319,296319,3000.0138549689996,3006.077340284
c031,0,1,6,236799,217248,225003,225003,3600.0141626079994,3606.584897703
c031,0,1,7,172918,157883,164258,164258,4200.015618078999,4207.289774931
c031,0,1,8,138218,127462,133086,133086,4800.017718452999,4807.894999356
c031,0,1,9,109603,102592,107000,107000,5400.018190294999,5408.506663016
c031,0,1,10,100752,94218,98473,98473,6000.028591871999,6009.178478796
c031,0,1,11,90268,84169,87857,87857,6600.034940219999,6609.794796708
# search time: 6600.035s
# total time: 6610.187s
c031,1,1,1,1353165,1178838,1316960,1316960,600.000086148,600.372308769
c031,1,1,2,898296,832386,875738,875738,1200.002844717,1200.76043343
c031,1,1,3,787905,730598,758373,758373,1800.003099985,1801.158216455
c031,1,1,4,546865,499479,523014,523014,2400.003917769,2401.5434571710002
c031,1,1,5,293952,271981,281717,281717,3000.00459858,3001.803636523
c031,1,1,6,234501,214954,222473,222473,3600.0056131130004,3602.053281514
c031,1,1,7,167046,151814,157582,157582,4200.007269993001,4202.418404638
c031,1,1,8,137596,127139,132683,132683,4800.029261294,4802.764178086
c031,1,1,9,107877,100972,105281,105281,5400.029816111,5403.062346679
c031,1,1,10,99511,92902,96786,96786,6000.0358245180005,6003.406900969
c031,1,1,11,89962,84205,87971,87971,6600.036562096,6603.74016565
# search time: 6600.037s
# total time: 13214.773s
c031,2,1,1,1294521,1059366,1240882,1240882,600.004717509,600.219516954
c031,2,1,2,883352,818705,861486,861486,1200.004934155,1200.508865571
c031,2,1,3,764000,710534,736513,736513,1800.005184957,1800.813399869
c031,2,1,4,556334,508426,533076,533076,2400.005575112,2401.091284572
c031,2,1,5,292468,270458,280304,280304,3000.0064816579998,3001.292380799
c031,2,1,6,234634,214852,222581,222581,3600.0065105139997,3601.461838202
c031,2,1,7,166756,151539,157280,157280,4200.0105352069995,4201.663980316
c031,2,1,8,136419,125769,131222,131222,4800.010925635999,4801.906537313
c031,2,1,9,107501,100611,104887,104887,5400.015044466999,5402.072181903
c031,2,1,10,98530,92118,96185,96185,6000.015601866999,6002.279711365
c031,2,1,11,90543,84713,88566,88566,6600.0157320869985,6602.473201112
# search time: 6600.016s
# total time: 19818.208s
c031,3,1,1,1264332,1106340,1231388,1231388,600.00218911,600.260095572
c031,3,1,2,908255,838745,884393,884393,1200.0032606290001,1200.52568975
c031,3,1,3,811389,747917,779361,779361,1800.0056035960001,1800.79057341
c031,3,1,4,560226,511182,536374,536374,2400.008419779,2401.011215166
c031,3,1,5,304523,282612,292358,292358,3000.010781979,3001.169934467
c031,3,1,6,232261,212959,220444,220444,3600.012425375,3601.325631487
c031,3,1,7,168605,153823,159946,159946,4200.015353946,4201.498626465
c031,3,1,8,136127,125302,130863,130863,4800.027259994999,4801.694321899
c031,3,1,9,109865,102557,106802,106802,5400.031002193,5401.834877918
c031,3,1,10,98448,92263,96224,96224,6000.031575924,6002.003329278
c031,3,1,11,89895,83833,87495,87495,6600.034321886,6602.2147125
# search time: 6600.034s
# total time: 26421.161s
c031,4,1,1,1293477,1061383,1240408,1240408,600.002813893,600.18781508
c031,4,1,2,901668,832715,878027,878027,1200.002886841,1200.436905123
c031,4,1,3,789461,732056,760168,760168,1800.003059702,1800.67971521
c031,4,1,4,548039,500845,525242,525242,2400.00323589,2400.880179328
c031,4,1,5,293288,271507,281341,281341,3000.003552449,3001.025514828
c031,4,1,6,233299,213543,221294,221294,3600.0038436659997,3601.168526072
c031,4,1,7,166198,151069,156834,156834,4200.0077861419995,4201.315867454
c031,4,1,8,137132,126901,132447,132447,4800.008414278,4801.469395619
c031,4,1,9,108714,101663,105663,105663,5400.013106863,5401.579910984
c031,4,1,10,97774,91513,95556,95556,6000.015479531,6001.711714972
c031,4,1,11,90706,84860,88688,88688,6600.027933511,6601.835625556
# search time: 6600.028s
# total time: 33023.737s
