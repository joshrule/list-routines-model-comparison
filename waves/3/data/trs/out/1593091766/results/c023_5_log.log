    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c023_5.json out/1593091766/results/c023_5_best.csv out/1593091766/results/c023_5_predictions.csv out/1593091766/results/c023_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([1, 5, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([7, 4, 5, 9, 9, 5, 8]), o: IntList([7, 5, 4, 5, 9, 9, 5, 8]) }
#   Datum { i: IntList([2, 0, 5, 4]), o: IntList([2, 8, 0, 5, 4]) }
#   Datum { i: IntList([3, 7, 3, 7, 3, 3, 2, 2, 7, 3]), o: IntList([3, 5, 7, 3, 7, 3, 3, 2, 2, 7, 3]) }
#   Datum { i: IntList([9, 7, 6, 1, 2]), o: IntList([9, 5, 7, 6, 1, 2]) }
#   Datum { i: IntList([0, 2, 7, 9, 5, 8, 6, 3, 0, 9]), o: IntList([0, 5, 2, 7, 9, 5, 8, 6, 3, 0, 9]) }
#   Datum { i: IntList([9, 7, 2, 3, 0, 1, 6, 8, 4]), o: IntList([9, 5, 7, 2, 3, 0, 1, 6, 8, 4]) }
#   Datum { i: IntList([7, 0, 2]), o: IntList([7, 8, 0, 2]) }
#   Datum { i: IntList([0, 2, 9, 8, 0, 0, 5, 9, 2, 9]), o: IntList([0, 5, 2, 9, 8, 0, 0, 5, 9, 2, 9]) }
#   Datum { i: IntList([5, 2, 2, 6, 1, 9, 4, 2]), o: IntList([5, 5, 2, 2, 6, 1, 9, 4, 2]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c023,0,5,1,1293653,1064607,1241255,1241255,600.000090614,601.726625259
c023,0,5,2,382258,357594,367462,367462,1200.00014001,1202.765902354
c023,0,5,3,231802,212492,218659,218659,1800.0012656,1803.622640374
c023,0,5,4,199014,186343,188327,188327,2400.0015826259996,2404.210063179
c023,0,5,5,131686,121962,122874,122874,3000.0051036649998,3004.737804785
c023,0,5,6,97760,92279,93636,93636,3600.0124827689997,3605.541830894
c023,0,5,7,74003,69701,70761,70761,4200.013914751999,4206.303469734
c023,0,5,8,62585,57903,58406,58406,4800.021970178999,4806.945320617
c023,0,5,9,60424,54560,56252,56252,5400.030612164999,5407.645011791
c023,0,5,10,50255,45350,46850,46850,6000.033156938999,6008.396764574
c023,0,5,11,42593,38572,39584,39584,6600.047416560999,6609.049960769
# search time: 6600.047s
# total time: 6609.394s
c023,1,5,1,1305977,1147712,1272834,1272834,600.000061436,600.397964781
c023,1,5,2,374956,350326,360347,360347,1200.0012125140001,1200.836746345
c023,1,5,3,229552,210402,216473,216473,1800.004464783,1801.192707737
c023,1,5,4,197917,185416,187407,187407,2400.004910707,2401.476907449
c023,1,5,5,133727,124199,125283,125283,3000.005770834,3001.68706329
c023,1,5,6,97620,92007,93306,93306,3600.009919667,3602.036065487
c023,1,5,7,73820,69574,70592,70592,4200.0103641059995,4202.442523813
c023,1,5,8,62886,58346,58818,58818,4800.011372405,4802.745521707
c023,1,5,9,59951,54152,55750,55750,5400.016451721,5403.05484206
c023,1,5,10,49563,44838,46201,46201,6000.022135990999,6003.383026191
c023,1,5,11,42445,38494,39517,39517,6600.026229161999,6603.698618194
# search time: 6600.026s
# total time: 13213.714s
c023,2,5,1,1315664,1155204,1282107,1282107,600.004804369,600.308375966
c023,2,5,2,373189,348795,358939,358939,1200.005173384,1200.588504938
c023,2,5,3,224169,204914,210829,210829,1800.005923678,1800.849586162
c023,2,5,4,192151,179747,181685,181685,2400.007763551,2401.044967016
c023,2,5,5,133848,124163,125266,125266,3000.011362232,3001.209664618
c023,2,5,6,97727,92116,93401,93401,3600.013255103,3601.466766694
c023,2,5,7,72942,68709,69739,69739,4200.016837948,4201.724747707
c023,2,5,8,62325,57880,58391,58391,4800.019187746,4801.886366399
c023,2,5,9,60300,54487,56195,56195,5400.021154512,5402.117712194
c023,2,5,10,49824,44869,46339,46339,6000.03454592,6002.359065475
c023,2,5,11,41601,37429,38400,38400,6600.0406487929995,6602.651501708
# search time: 6600.041s
# total time: 19816.983s
c023,3,5,1,1263398,1033743,1210745,1210745,600.000939242,600.188016165
c023,3,5,2,378387,353624,363560,363560,1200.002494093,1200.412243958
c023,3,5,3,230655,211379,217416,217416,1800.0030910320002,1800.601967593
c023,3,5,4,196775,184339,186360,186360,2400.0038792060004,2400.756155216
c023,3,5,5,132403,123009,124017,124017,3000.006388781,3000.892054364
c023,3,5,6,95452,89935,91283,91283,3600.015603186,3601.075904449
c023,3,5,7,74017,69653,70635,70635,4200.029670771,4201.270202079
c023,3,5,8,62345,57832,58362,58362,4800.037260708001,4801.439884419
c023,3,5,9,60594,54662,56451,56451,5400.040832297001,5401.56583761
c023,3,5,10,50099,45186,46697,46697,6000.103343400001,6001.758948288
c023,3,5,11,41564,37340,38336,38336,6600.113994442001,6601.975302188
# search time: 6600.114s
# total time: 26419.798s
c023,4,5,1,1282386,1106146,1244187,1244187,600.000927242,600.292037106
c023,4,5,2,386257,360522,370481,370481,1200.002153965,1200.493536946
c023,4,5,3,235515,216684,223323,223323,1800.00547366,1800.653855086
c023,4,5,4,191460,179095,181050,181050,2400.006151251,2400.810229018
c023,4,5,5,133258,123780,124869,124869,3000.008351947,3000.918022637
c023,4,5,6,96042,90611,91937,91937,3600.013542758,3601.090849962
c023,4,5,7,73736,69364,70340,70340,4200.01527277,4201.261637522
c023,4,5,8,62282,57794,58280,58280,4800.019484975,4801.369409505
c023,4,5,9,59894,53905,55588,55588,5400.02685294,5401.55555128
c023,4,5,10,49661,44862,46397,46397,6000.0314136140005,6001.774531889
c023,4,5,11,40703,36725,37661,37661,6600.047753152001,6601.958271601
# search time: 6600.048s
# total time: 33022.349s
