    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c074_5.json out/1593091766/results/c074_5_best.csv out/1593091766/results/c074_5_predictions.csv out/1593091766/results/c074_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 8, 8, 2, 7, 7, 2]), o: IntList([8, 8, 8]) }
#   Datum { i: IntList([9, 2, 0, 5, 7, 5, 2, 3, 4, 7]), o: IntList([9]) }
#   Datum { i: IntList([0, 0, 0]), o: IntList([]) }
#   Datum { i: IntList([2, 8, 8, 8, 2, 8, 2, 2]), o: IntList([8, 8, 8, 8]) }
#   Datum { i: IntList([9, 9, 7, 6, 7]), o: IntList([9, 9]) }
#   Datum { i: IntList([0]), o: IntList([]) }
#   Datum { i: IntList([3, 8, 8, 3, 9, 9, 1, 9, 0, 9]), o: IntList([8, 8, 9, 9, 9, 9]) }
#   Datum { i: IntList([8, 2, 7, 6, 8, 6]), o: IntList([8, 8]) }
#   Datum { i: IntList([7, 7, 8, 8, 7, 7, 8, 8, 8, 7]), o: IntList([8, 8, 8, 8, 8]) }
#   Datum { i: IntList([6, 7, 8, 4, 3, 4]), o: IntList([8]) }
#   Datum { i: IntList([8, 9, 9, 1, 1, 9, 8, 8, 9, 1]), o: IntList([8, 9, 9, 9, 8, 8, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c074,0,5,1,686676,598831,667820,667820,600.000149042,602.99344669
c074,0,5,2,306673,288586,296562,296562,1200.000710433,1204.999344412
c074,0,5,3,236602,223672,225753,225753,1800.002137337,1806.833394129
c074,0,5,4,161759,149907,155802,155802,2400.006965944,2408.860606867
c074,0,5,5,131607,124349,129365,129365,3000.008185567,3010.143691267
c074,0,5,6,110510,105022,108600,108600,3600.020105606,3611.399623601
c074,0,5,7,108896,103657,106569,106569,4200.020845109,4212.126100542
c074,0,5,8,117787,111596,114364,114364,4800.022083405001,4813.506443297
c074,0,5,9,103529,98648,101647,101647,5400.023132717,5414.776764708
c074,0,5,10,80094,76187,78758,78758,6000.030881745,6016.178241393
c074,0,5,11,70628,67062,69956,69956,6600.034007294001,6617.327555385
# search time: 6600.034s
# total time: 6617.693s
c074,1,5,1,1117826,974681,1087334,1087334,600.006710346,600.382895226
c074,1,5,2,494949,466529,479504,479504,1200.0074776719998,1200.93346007
c074,1,5,3,382642,360179,363595,363595,1800.009415347,1801.542880571
c074,1,5,4,263978,244062,253807,253807,2400.013216905,2402.164751711
c074,1,5,5,216192,204994,211910,211910,3000.015171487,3002.681796989
c074,1,5,6,187341,178338,184636,184636,3600.018508846,3603.147597567
c074,1,5,7,178338,169433,173788,173788,4200.018901158,4203.640768969
c074,1,5,8,122484,116466,119890,119890,4800.02116925,4804.091321425
c074,1,5,9,103295,98380,101235,101235,5400.029709294,5404.540472078
c074,1,5,10,80115,76224,78914,78914,6000.030028062,6005.002845214
c074,1,5,11,77470,73464,76894,76894,6600.031131481001,6605.431968314
# search time: 6600.031s
# total time: 13224.249s
c074,2,5,1,1167244,1035509,1142047,1142047,600.000022423,600.325348583
c074,2,5,2,513571,484048,497210,497210,1200.003343588,1200.652281864
c074,2,5,3,393478,370237,373736,373736,1800.004324774,1801.012203665
c074,2,5,4,259749,239281,248723,248723,2400.007304635,2401.450068633
c074,2,5,5,224081,212415,219695,219695,3000.007578207,3001.743432295
c074,2,5,6,192934,183685,189679,189679,3600.008314192,3602.046948303
c074,2,5,7,185588,176425,181648,181648,4200.0142591759995,4202.294669977
c074,2,5,8,123303,116891,119905,119905,4800.017533566,4802.59965907
c074,2,5,9,109273,104043,107378,107378,5400.019071674999,5402.809487583
c074,2,5,10,81330,77176,79798,79798,6000.019561740999,6003.035977464
c074,2,5,11,76621,72719,75986,75986,6600.027091122,6603.348625876
# search time: 6600.027s
# total time: 19828.076s
c074,3,5,1,1153200,996277,1119063,1119063,600.000743276,600.28269205
c074,3,5,2,505190,475850,489272,489272,1200.006825495,1200.535824823
c074,3,5,3,401580,379319,382981,382981,1800.007338499,1800.790434518
c074,3,5,4,274339,253644,263786,263786,2400.01043554,2401.090943712
c074,3,5,5,228838,216877,224816,224816,3000.011869999,3001.291472791
c074,3,5,6,190641,181523,187616,187616,3600.013615733,3601.528075386
c074,3,5,7,184878,175562,180145,180145,4200.01922906,4201.742216145
c074,3,5,8,122889,116486,119326,119326,4800.022134258999,4801.990899711
c074,3,5,9,108041,103022,106139,106139,5400.031047336,5402.209214398
c074,3,5,10,89412,84913,87629,87629,6000.037908511,6002.457227623
c074,3,5,11,84803,80566,84066,84066,6600.040462241,6602.638540491
# search time: 6600.040s
# total time: 26431.869s
c074,4,5,1,1261180,1097961,1226138,1226138,600.000634331,600.249393409
c074,4,5,2,546500,514919,529977,529977,1200.001274412,1200.475598796
c074,4,5,3,439064,414568,418609,418609,1800.003136018,1800.685265645
c074,4,5,4,300679,277927,288998,288998,2400.003809592,2400.953909462
c074,4,5,5,247689,234907,242930,242930,3000.00947007,3001.14833934
c074,4,5,6,208572,198620,205144,205144,3600.009982936,3601.335882623
c074,4,5,7,206053,195974,200934,200934,4200.013603807,4201.518618299
c074,4,5,8,136139,129126,132302,132302,4800.014737449001,4801.686914041
c074,4,5,9,116468,110761,113939,113939,5400.017095163001,5401.898495401
c074,4,5,10,90503,86157,88948,88948,6000.018384776001,6002.09541153
c074,4,5,11,84033,79817,83265,83265,6600.028071794,6602.320305469
# search time: 6600.028s
# total time: 33035.008s
