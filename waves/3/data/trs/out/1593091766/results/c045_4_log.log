    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c045_4.json out/1593091766/results/c045_4_best.csv out/1593091766/results/c045_4_predictions.csv out/1593091766/results/c045_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 0, 9, 3, 8, 5]), o: IntList([2, 0, 9, 3, 8, 5]) }
#   Datum { i: IntList([1, 1, 2, 0]), o: IntList([1, 1, 2, 0]) }
#   Datum { i: IntList([8, 8, 4]), o: IntList([8, 8, 4]) }
#   Datum { i: IntList([7, 2, 3, 4, 4, 9, 9, 9, 3, 6]), o: IntList([7, 2, 3, 4, 4, 9, 9, 9, 3, 6]) }
#   Datum { i: IntList([0]), o: IntList([0]) }
#   Datum { i: IntList([7, 1, 1, 7, 7, 7, 0, 7]), o: IntList([7, 1, 1, 7, 7, 7, 0, 7]) }
#   Datum { i: IntList([5, 7, 9, 1, 3, 6, 4, 8, 2]), o: IntList([5, 7, 9, 1, 3, 6, 4, 8, 2]) }
#   Datum { i: IntList([4, 0, 1, 0, 6]), o: IntList([4, 0, 1, 0, 6]) }
#   Datum { i: IntList([5, 3, 3, 5, 5, 5, 2]), o: IntList([5, 3, 3, 5, 5, 5, 2]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([8, 8]), o: IntList([8, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c045,0,4,1,1266316,1099283,1230670,1230670,600.001258738,601.887203241
c045,0,4,2,455605,419553,436008,436008,1200.0085782340002,1202.917936032
c045,0,4,3,365269,335819,349460,349460,1800.0091286390002,1803.571475667
c045,0,4,4,267834,250441,259364,259364,2400.0105234780003,2404.063555965
c045,0,4,5,169113,153225,158071,158071,3000.0107427320004,3004.577493655
c045,0,4,6,140014,128266,131983,131983,3600.0141746730005,3605.212061046
c045,0,4,7,121594,110566,114441,114441,4200.019585178001,4205.693971273
c045,0,4,8,95951,86443,89456,89456,4800.019625536001,4806.144234939
c045,0,4,9,85981,77143,80030,80030,5400.020668251001,5406.634846809
c045,0,4,10,73743,64322,66329,66329,6000.022306675,6007.176674398
c045,0,4,11,74309,64990,68319,68319,6600.02902452,6607.605785752
# search time: 6600.029s
# total time: 6608.084s
c045,1,4,1,1277267,1108718,1241159,1241159,600.00628452,600.33347476
c045,1,4,2,449697,413949,430377,430377,1200.007591881,1200.71306517
c045,1,4,3,359881,330577,343922,343922,1800.007853322,1801.029072902
c045,1,4,4,266435,249288,258144,258144,2400.011190383,2401.286157604
c045,1,4,5,166040,149975,155594,155594,3000.011352842,3001.554080614
c045,1,4,6,137698,126220,129680,129680,3600.012045028,3601.845478024
c045,1,4,7,121557,110557,114346,114346,4200.014890737,4202.115414075
c045,1,4,8,95551,86174,88987,88987,4800.021069906001,4802.34933076
c045,1,4,9,84952,76311,79016,79016,5400.022063925001,5402.623549452
c045,1,4,10,71192,61539,63528,63528,6000.026687569001,6002.892431347
c045,1,4,11,72518,63330,66666,66666,6600.030858177001,6603.147828833
# search time: 6600.031s
# total time: 13211.685s
c045,2,4,1,1274281,1046874,1222721,1222721,600.00808407,600.235655363
c045,2,4,2,449045,413702,429813,429813,1200.018815532,1200.507282936
c045,2,4,3,361852,333619,346554,346554,1800.0201597629998,1800.713371592
c045,2,4,4,270070,252553,261723,261723,2400.0202310219997,2400.888281702
c045,2,4,5,159722,144064,148288,148288,3000.0227123019995,3001.081726449
c045,2,4,6,139123,127647,131201,131201,3600.0276783549994,3601.311327965
c045,2,4,7,121016,110525,114148,114148,4200.030328723999,4201.48988635
c045,2,4,8,94422,84968,88130,88130,4800.032230549999,4801.661260681
c045,2,4,9,84712,76004,78859,78859,5400.0356169589995,5401.857544124
c045,2,4,10,71204,61968,63850,63850,6000.054495576999,6002.033062793
c045,2,4,11,72149,63043,66287,66287,6600.055662512999,6602.204102184
# search time: 6600.056s
# total time: 19814.247s
c045,3,4,1,1293348,1142709,1263894,1263894,600.001857212,600.315075181
c045,3,4,2,447066,411260,427924,427924,1200.001863621,1200.546256641
c045,3,4,3,355954,327207,340037,340037,1800.0023433679999,1800.730779599
c045,3,4,4,265857,248484,257289,257289,2400.00260252,2400.881640462
c045,3,4,5,163163,147385,152558,152558,3000.0030714,3001.034759146
c045,3,4,6,138239,126469,130066,130066,3600.004152153,3601.203976113
c045,3,4,7,118322,107927,111715,111715,4200.006678339,4201.34762149
c045,3,4,8,94057,84783,87853,87853,4800.015440901,4801.490405653
c045,3,4,9,84657,76091,78697,78697,5400.02005831,5401.635251562
c045,3,4,10,73062,64217,66494,66494,6000.026817706001,6001.762039251
c045,3,4,11,73193,63515,67237,67237,6600.037592944001,6601.878240025
# search time: 6600.038s
# total time: 26416.582s
c045,4,4,1,1186175,1005751,1146684,1146684,600.000403789,600.264806216
c045,4,4,2,444181,408828,425214,425214,1200.001479763,1200.444220713
c045,4,4,3,350101,322292,334558,334558,1800.001640978,1800.586896677
c045,4,4,4,264190,246540,255571,255571,2400.00282162,2400.711540325
c045,4,4,5,155500,140095,144326,144326,3000.0034884039997,3000.849375614
c045,4,4,6,138068,126657,130175,130175,3600.005363673,3601.003597052
c045,4,4,7,119753,108779,112740,112740,4200.0072282599995,4201.115391759
c045,4,4,8,94924,85902,88836,88836,4800.008716959999,4801.198633904
c045,4,4,9,83736,75810,78481,78481,5400.010319530999,5401.349151636
c045,4,4,10,70775,61473,63483,63483,6000.010408888999,6001.440607012
c045,4,4,11,72518,63440,66712,66712,6600.014865134999,6601.546443951
# search time: 6600.015s
# total time: 33018.700s
