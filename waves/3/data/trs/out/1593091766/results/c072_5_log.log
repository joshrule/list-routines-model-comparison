    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c072_5.json out/1593091766/results/c072_5_best.csv out/1593091766/results/c072_5_predictions.csv out/1593091766/results/c072_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 6, 1, 8, 8, 2]), o: IntList([1, 1, 6, 6, 1, 1, 8, 8, 8, 8, 2, 2]) }
#   Datum { i: IntList([4, 6, 8, 8, 4]), o: IntList([4, 4, 6, 6, 8, 8, 8, 8, 4, 4]) }
#   Datum { i: IntList([0, 0, 0, 0, 0, 0]), o: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) }
#   Datum { i: IntList([3, 3]), o: IntList([3, 3, 3, 3]) }
#   Datum { i: IntList([5, 6, 4, 8, 9, 7, 3]), o: IntList([5, 5, 6, 6, 4, 4, 8, 8, 9, 9, 7, 7, 3, 3]) }
#   Datum { i: IntList([9]), o: IntList([9, 9]) }
#   Datum { i: IntList([5, 5, 5, 2, 5, 2]), o: IntList([5, 5, 5, 5, 5, 5, 2, 2, 5, 5, 2, 2]) }
#   Datum { i: IntList([6, 9, 2, 8, 0, 5]), o: IntList([6, 6, 9, 9, 2, 2, 8, 8, 0, 0, 5, 5]) }
#   Datum { i: IntList([4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([2, 2, 7, 7, 7, 9]), o: IntList([2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 9, 9]) }
#   Datum { i: IntList([1, 3, 3, 7]), o: IntList([1, 1, 3, 3, 3, 3, 7, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c072,0,5,1,700575,601313,678979,678979,600.000209431,603.101063845
c072,0,5,2,127316,118316,121786,121786,1200.008259269,1204.75787708
c072,0,5,3,75965,72108,72710,72710,1800.016191308,1806.514701116
c072,0,5,4,54542,50964,51407,51407,2400.034840571,2407.936609186
c072,0,5,5,51531,46830,47094,47094,3000.0349208810003,3009.343665336
c072,0,5,6,33102,29841,30130,30130,3600.051219323,3610.939234685
c072,0,5,7,32874,29671,29948,29948,4200.075820357,4212.512114216
c072,0,5,8,28697,25732,25993,25993,4800.083057236,4813.536754592
c072,0,5,9,24239,21915,22133,22133,5400.088175587,5414.853588235
c072,0,5,10,24569,21920,22055,22055,6000.093199141999,6015.87901356
c072,0,5,11,19628,17491,17676,17676,6600.093211551999,6617.051664521
# search time: 6600.093s
# total time: 6617.291s
c072,1,5,1,645167,526204,618257,618257,600.009432774,600.343772871
c072,1,5,2,128973,120266,123590,123590,1200.012278682,1201.031316741
c072,1,5,3,75777,72041,72615,72615,1800.017568452,1801.815203462
c072,1,5,4,54762,51086,51529,51529,2400.021043057,2402.427327155
c072,1,5,5,50064,45538,45748,45748,3000.048672251,3003.194836024
c072,1,5,6,33590,30568,30866,30866,3600.0597211169998,3603.936837958
c072,1,5,7,32757,29550,29821,29821,4200.087836156,4204.675955118
c072,1,5,8,28629,25745,26010,26010,4800.090496025,4805.337066254
c072,1,5,9,23582,21163,21401,21401,5400.10086735,5406.049261034
c072,1,5,10,24595,22104,22250,22250,6000.103697015,6006.665653466
c072,1,5,11,19989,17765,17973,17973,6600.115631795999,6607.346543114
# search time: 6600.116s
# total time: 13225.192s
c072,2,5,1,677665,555038,649406,649406,600.026317121,600.300449737
c072,2,5,2,127824,118722,122287,122287,1200.02780086,1200.769016259
c072,2,5,3,75852,71949,72549,72549,1800.033643196,1801.319197121
c072,2,5,4,51526,47621,48178,48178,2400.038400253,2401.869183682
c072,2,5,5,51141,46437,46728,46728,3000.044787027,3002.316493542
c072,2,5,6,33485,30639,30925,30925,3600.060686555,3602.885401309
c072,2,5,7,32571,29371,29639,29639,4200.063653077,4203.384756059
c072,2,5,8,28747,25838,26099,26099,4800.068613418,4803.90497714
c072,2,5,9,24020,21717,21940,21940,5400.0891688189995,5404.324127245
c072,2,5,10,24374,21779,21913,21913,6000.102400321,6004.625085185
c072,2,5,11,19934,17833,18027,18027,6600.1145750489995,6605.020465634
# search time: 6600.115s
# total time: 19830.596s
c072,3,5,1,677375,581745,656708,656708,600.000314176,600.294657701
c072,3,5,2,135295,126063,129692,129692,1200.000404756,1200.504430371
c072,3,5,3,126690,119710,120844,120844,1800.003353085,1800.912018205
c072,3,5,4,90647,83901,84473,84473,2400.007485777,2401.268950805
c072,3,5,5,86771,79170,79583,79583,3000.011774447,3001.537982977
c072,3,5,6,57639,51968,52372,52372,3600.017566088,3601.873201567
c072,3,5,7,56754,49276,49624,49624,4200.021230195,4202.289209736
c072,3,5,8,47921,41873,42198,42198,4800.024128174,4802.564879645
c072,3,5,9,40932,36257,36533,36533,5400.026986778,5402.910945754
c072,3,5,10,41745,37252,37427,37427,6000.039461361,6003.183439149
c072,3,5,11,34646,30940,31171,31171,6600.051870579,6603.46657027
# search time: 6600.052s
# total time: 26434.335s
c072,4,5,1,1066927,872067,1023076,1023076,600.004972453,600.203128994
c072,4,5,2,206560,192499,198312,198312,1200.0056831010002,1200.454786399
c072,4,5,3,125480,117931,119028,119028,1800.0099109040002,1800.758724508
c072,4,5,4,93713,87175,87867,87867,2400.0173354730005,2401.012160527
c072,4,5,5,86811,79446,79853,79853,3000.0198893660004,3001.270816133
c072,4,5,6,58402,52646,53067,53067,3600.0251804800005,3601.591723047
c072,4,5,7,56437,49156,49519,49519,4200.027999985001,4201.895067625
c072,4,5,8,50152,44389,44761,44761,4800.042686893001,4802.200455388
c072,4,5,9,41171,36639,36922,36922,5400.048354660001,5402.469772763
c072,4,5,10,42382,37622,37824,37824,6000.056500455001,6002.68417509
c072,4,5,11,34554,30705,30973,30973,6600.072248215,6602.92152164
# search time: 6600.072s
# total time: 33037.989s
