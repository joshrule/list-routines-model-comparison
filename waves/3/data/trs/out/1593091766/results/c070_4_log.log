    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c070_4.json out/1593091766/results/c070_4_best.csv out/1593091766/results/c070_4_predictions.csv out/1593091766/results/c070_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 2, 7, 8, 3, 2]), o: IntList([5, 2, 7, 8, 3, 2, 5, 2, 7, 8, 3, 2]) }
#   Datum { i: IntList([4, 4, 4, 4, 4]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([9, 0, 3, 3, 3, 1, 9]), o: IntList([9, 0, 3, 3, 3, 1, 9, 9, 0, 3, 3, 3, 1, 9]) }
#   Datum { i: IntList([7, 6, 9, 0, 5, 1, 2]), o: IntList([7, 6, 9, 0, 5, 1, 2, 7, 6, 9, 0, 5, 1, 2]) }
#   Datum { i: IntList([7]), o: IntList([7, 7]) }
#   Datum { i: IntList([5, 5]), o: IntList([5, 5, 5, 5]) }
#   Datum { i: IntList([4, 3, 5]), o: IntList([4, 3, 5, 4, 3, 5]) }
#   Datum { i: IntList([3, 2, 0, 9]), o: IntList([3, 2, 0, 9, 3, 2, 0, 9]) }
#   Datum { i: IntList([7, 1, 1, 2, 1, 2]), o: IntList([7, 1, 1, 2, 1, 2, 7, 1, 1, 2, 1, 2]) }
#   Datum { i: IntList([0, 8, 4, 3, 6, 8, 4]), o: IntList([0, 8, 4, 3, 6, 8, 4, 0, 8, 4, 3, 6, 8, 4]) }
#   Datum { i: IntList([6, 7, 0, 9, 1, 8]), o: IntList([6, 7, 0, 9, 1, 8, 6, 7, 0, 9, 1, 8]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c070,0,4,1,808323,662020,774675,774675,600.000087089,601.676733837
c070,0,4,2,222018,201851,207544,207544,1200.001858003,1203.233140937
c070,0,4,3,131515,123491,124671,124671,1800.003207459,1804.547009744
c070,0,4,4,80258,75780,76161,76161,2400.003618552,2405.822133323
c070,0,4,5,58231,54398,54699,54699,3000.0100281369996,3007.058698811
c070,0,4,6,67262,58662,58934,58934,3600.0225045609996,3607.851974756
c070,0,4,7,62917,53918,54113,54113,4200.029182118,4208.780431027
c070,0,4,8,57519,49763,49994,49994,4800.035605717,4809.434897765
c070,0,4,9,49405,42624,42908,42908,5400.046144176,5410.271423594
c070,0,4,10,41793,36898,37097,37097,6000.068661304,6010.996716555
c070,0,4,11,34231,30185,30323,30323,6600.095464280999,6612.017885768
# search time: 6600.095s
# total time: 6612.299s
c070,1,4,1,1100047,903274,1055023,1055023,600.009330104,600.345552528
c070,1,4,2,223898,203234,209099,209099,1200.011817155,1200.861585404
c070,1,4,3,129269,120711,121927,121927,1800.01307301,1801.386507215
c070,1,4,4,77712,72986,73289,73289,2400.015812469,2401.998618277
c070,1,4,5,56085,52203,52446,52446,3000.019914122,3002.529202643
c070,1,4,6,65967,57577,57812,57812,3600.022655313,3602.894786709
c070,1,4,7,62925,53776,53985,53985,4200.023148469,4203.233221504
c070,1,4,8,57742,49616,49854,49854,4800.029203011,4803.606885026
c070,1,4,9,49988,42981,43181,43181,5400.034555764,5403.937981076
c070,1,4,10,41527,35632,35767,35767,6000.051004797,6004.348782133
c070,1,4,11,34107,29865,29987,29987,6600.056760531,6604.770841836
# search time: 6600.057s
# total time: 13217.647s
c070,2,4,1,1081818,885555,1037007,1037007,600.006931999,600.252147081
c070,2,4,2,216390,196045,201787,201787,1200.0081831510001,1200.61071726
c070,2,4,3,128092,119416,120616,120616,1800.013436529,1800.961123934
c070,2,4,4,79092,74700,75086,75086,2400.016760716,2401.250174155
c070,2,4,5,56998,53152,53461,53461,3000.0309575190004,3001.902885733
c070,2,4,6,38009,32935,33088,33088,3600.0373368540004,3602.107907459
c070,2,4,7,35345,30478,30626,30626,4200.037671076,4202.384699234
c070,2,4,8,32051,28391,28552,28552,4800.073219332,4802.651602549
c070,2,4,9,27952,24769,24903,24903,5400.113060363,5402.92686631
c070,2,4,10,23354,20671,20792,20792,6000.120108176,6003.167546121
c070,2,4,11,19616,17538,17653,17653,6600.147538264,6603.423622645
# search time: 6600.148s
# total time: 19821.721s
c070,3,4,1,688651,604417,671104,671104,600.006414411,600.266037048
c070,3,4,2,132503,119699,123393,123393,1200.0240066790002,1200.442548932
c070,3,4,3,128731,120163,121293,121293,1800.0247516010002,1800.724288917
c070,3,4,4,79037,74687,75064,75064,2400.0292717720004,2401.009137743
c070,3,4,5,57961,54121,54431,54431,3000.0307499340006,3001.228738611
c070,3,4,6,66566,57969,58251,58251,3600.0370495260004,3601.407905392
c070,3,4,7,62220,53704,53946,53946,4200.057478728,4201.61106906
c070,3,4,8,56840,47985,48129,48129,4800.057867142,4801.818891929
c070,3,4,9,50046,42722,42896,42896,5400.059588152,5402.00166977
c070,3,4,10,41538,36052,36208,36208,6000.078843642001,6002.259326714
c070,3,4,11,34752,30630,30814,30814,6600.088732374001,6602.428981079
# search time: 6600.089s
# total time: 26424.703s
c070,4,4,1,1129251,974387,1095669,1095669,600.000179392,600.248255823
c070,4,4,2,222177,202061,207942,207942,1200.002237969,1200.483340675
c070,4,4,3,129868,121899,123088,123088,1800.0059867629998,1800.672495321
c070,4,4,4,77102,72593,72889,72889,2400.0092769139997,2400.911539866
c070,4,4,5,55825,51873,52100,52100,3000.0316697939998,3001.114166226
c070,4,4,6,65657,57147,57386,57386,3600.0388732509996,3601.254021522
c070,4,4,7,62691,53685,53906,53906,4200.0473550219995,4201.40120693
c070,4,4,8,57254,49372,49601,49601,4800.053024553999,4801.552153028
c070,4,4,9,49688,42728,42904,42904,5400.0625724169995,5401.679672679
c070,4,4,10,41414,35929,36073,36073,6000.098390267,6001.909795539
c070,4,4,11,34758,30505,30666,30666,6600.099925125,6602.017266799
# search time: 6600.100s
# total time: 33027.039s
