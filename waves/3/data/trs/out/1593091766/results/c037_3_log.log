    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c037_3.json out/1593091766/results/c037_3_best.csv out/1593091766/results/c037_3_predictions.csv out/1593091766/results/c037_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 9, 9, 9, 9]), o: IntList([0, 9, 9, 9, 9, 3]) }
#   Datum { i: IntList([2, 6, 9, 6, 7, 1]), o: IntList([2, 6, 9, 6, 7, 1, 3]) }
#   Datum { i: IntList([4, 4, 5, 5, 4, 4, 5, 4]), o: IntList([4, 4, 5, 5, 4, 4, 5, 4, 3]) }
#   Datum { i: IntList([5, 0, 2, 5, 0, 9, 0, 5, 7]), o: IntList([5, 0, 2, 5, 0, 9, 0, 5, 7, 3]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8]), o: IntList([8, 8, 8, 8, 8, 8, 8, 3]) }
#   Datum { i: IntList([2, 0, 6, 0]), o: IntList([2, 0, 6, 0, 3]) }
#   Datum { i: IntList([9, 9]), o: IntList([9, 9, 3]) }
#   Datum { i: IntList([3]), o: IntList([3, 3]) }
#   Datum { i: IntList([5, 1, 7, 1, 7, 6, 6, 1, 1, 4]), o: IntList([5, 1, 7, 1, 7, 6, 6, 1, 1, 4, 3]) }
#   Datum { i: IntList([]), o: IntList([3]) }
#   Datum { i: IntList([3, 1, 7]), o: IntList([3, 1, 7, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c037,0,3,1,1125306,967733,1090957,1090957,600.000021245,602.026944794
c037,0,3,2,378749,355790,365463,365463,1200.000307923,1203.104858321
c037,0,3,3,213622,202861,204820,204820,1800.002143702,1804.127852686
c037,0,3,4,129941,119359,120054,120054,2400.004275002,2405.081769465
c037,0,3,5,91060,85322,85748,85748,3000.0179638940003,3005.873145847
c037,0,3,6,72193,65418,65973,65973,3600.02390322,3606.83709059
c037,0,3,7,67795,61015,61616,61616,4200.036321625,4207.663178125
c037,0,3,8,66692,59975,60356,60356,4800.046499153999,4808.30123907
c037,0,3,9,62554,54483,55042,55042,5400.0549314849995,5408.9433559
c037,0,3,10,49538,41912,42307,42307,6000.056584622,6009.755709572
c037,0,3,11,52034,41117,41475,41475,6600.06071079,6610.402587405
# search time: 6600.061s
# total time: 6610.776s
c037,1,3,1,1109558,911361,1064344,1064344,600.001380626,600.266472037
c037,1,3,2,374838,352121,361767,361767,1200.002269991,1200.697248069
c037,1,3,3,212022,201172,203083,203083,1800.003548823,1801.141074478
c037,1,3,4,128470,118207,118900,118900,2400.00535678,2401.601825082
c037,1,3,5,88296,82504,82799,82799,3000.011535648,3002.011154495
c037,1,3,6,71955,65363,65932,65932,3600.03504513,3602.490628268
c037,1,3,7,67224,60326,60903,60903,4200.038946572,4202.947268228
c037,1,3,8,65062,58169,58453,58453,4800.0416740050005,4803.365142739
c037,1,3,9,62558,54534,55073,55073,5400.047056293,5403.742596014
c037,1,3,10,48681,40591,41064,41064,6000.058968047,6004.092861159
c037,1,3,11,51123,40195,40594,40594,6600.071096855,6604.46400285
# search time: 6600.071s
# total time: 13215.868s
c037,2,3,1,1120913,919233,1074961,1074961,600.000097488,600.210688366
c037,2,3,2,370993,349045,358441,358441,1200.000970797,1200.510460538
c037,2,3,3,207293,196218,197977,197977,1800.001232901,1800.821330308
c037,2,3,4,128947,118584,119285,119285,2400.005491039,2401.073371267
c037,2,3,5,90416,84763,85218,85218,3000.007950147,3001.365467228
c037,2,3,6,71548,64805,65431,65431,3600.009380908,3601.617603335
c037,2,3,7,67359,60849,61427,61427,4200.01696389,4201.877150254
c037,2,3,8,65328,58060,58388,58388,4800.020823999999,4802.067770088
c037,2,3,9,62125,54127,54668,54668,5400.026448389999,5402.299775123
c037,2,3,10,50290,42855,43236,43236,6000.034462876999,6002.607527441
c037,2,3,11,49311,38865,39293,39293,6600.043383683999,6602.860527488
# search time: 6600.043s
# total time: 19819.334s
c037,3,3,1,1164605,1000307,1128869,1128869,600.000931134,600.251103064
c037,3,3,2,372554,349946,359497,359497,1200.001643996,1200.494464789
c037,3,3,3,206153,194631,196479,196479,1800.003147195,1800.731564628
c037,3,3,4,129918,119536,120232,120232,2400.003732035,2400.933302026
c037,3,3,5,90564,84809,85248,85248,3000.0092561,3001.083157442
c037,3,3,6,69814,62699,63264,63264,3600.0096651080003,3601.359215437
c037,3,3,7,66990,60310,60917,60917,4200.033701895,4201.582825347
c037,3,3,8,65628,59025,59419,59419,4800.040450953,4801.84626849
c037,3,3,9,63007,54842,55375,55375,5400.042315242999,5402.034161864
c037,3,3,10,49482,41859,42235,42235,6000.045714694999,6002.284209309
c037,3,3,11,50973,40345,40730,40730,6600.053277460999,6602.474253914
# search time: 6600.053s
# total time: 26422.450s
c037,4,3,1,1069464,871519,1024794,1024794,600.00003983,600.158244917
c037,4,3,2,372694,350304,359594,359594,1200.000493729,1200.352864869
c037,4,3,3,204623,193311,195124,195124,1800.003731887,1800.534180494
c037,4,3,4,131797,121891,122633,122633,2400.00437965,2400.707114404
c037,4,3,5,88088,82290,82588,82588,3000.013657948,3000.894306103
c037,4,3,6,68635,61587,62124,62124,3600.014742477,3601.110852854
c037,4,3,7,65317,58025,58610,58610,4200.016442391,4201.312116543
c037,4,3,8,65267,58151,58463,58463,4800.020016885,4801.442964777
c037,4,3,9,61946,53375,53899,53899,5400.026450159,5401.690373339
c037,4,3,10,49283,42043,42428,42428,6000.040224884,6001.919708439
c037,4,3,11,50247,39863,40204,40204,6600.071734846,6602.168324273
# search time: 6600.072s
# total time: 33025.629s
