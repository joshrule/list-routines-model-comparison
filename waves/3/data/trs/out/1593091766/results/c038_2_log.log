    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c038_2.json out/1593091766/results/c038_2_best.csv out/1593091766/results/c038_2_predictions.csv out/1593091766/results/c038_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 1, 8, 8, 6]), o: IntList([0, 1, 8, 8, 6, 9]) }
#   Datum { i: IntList([1, 0]), o: IntList([1, 0, 9]) }
#   Datum { i: IntList([6]), o: IntList([6, 9]) }
#   Datum { i: IntList([2, 4, 0, 9, 5, 7, 3]), o: IntList([2, 4, 0, 9, 5, 7, 3, 9]) }
#   Datum { i: IntList([]), o: IntList([9]) }
#   Datum { i: IntList([7, 9, 5]), o: IntList([7, 9, 5, 9]) }
#   Datum { i: IntList([4, 2, 2, 2]), o: IntList([4, 2, 2, 2, 9]) }
#   Datum { i: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6]), o: IntList([5, 0, 8, 2, 1, 7, 3, 4, 9, 6, 9]) }
#   Datum { i: IntList([4, 1, 2, 6, 8, 7]), o: IntList([4, 1, 2, 6, 8, 7, 9]) }
#   Datum { i: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4]), o: IntList([8, 3, 6, 0, 5, 5, 1, 9, 4, 9]) }
#   Datum { i: IntList([8, 6, 4, 5, 1, 9, 8, 3]), o: IntList([8, 6, 4, 5, 1, 9, 8, 3, 9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c038,0,2,1,1230710,1042848,1189552,1189552,600.001248368,601.809916417
c038,0,2,2,434644,403655,414333,414333,1200.006066955,1203.093051118
c038,0,2,3,329155,298033,301657,301657,1800.006794116,1804.054614869
c038,0,2,4,293791,261940,263421,263421,2400.00910807,2404.801364025
c038,0,2,5,179677,155658,156759,156759,3000.033890577,3005.578086743
c038,0,2,6,185562,155330,156268,156268,3600.0345206829998,3606.09849619
c038,0,2,7,144088,116914,118781,118781,4200.037905876,4206.643499439
c038,0,2,8,126913,103896,104519,104519,4800.03941277,4807.150761037
c038,0,2,9,104134,83405,83880,83880,5400.044522062,5407.604809281
c038,0,2,10,82937,67028,67423,67423,6000.046293699001,6007.983371459
c038,0,2,11,61459,50764,51092,51092,6600.060226748001,6608.523807099
# search time: 6600.060s
# total time: 6608.974s
c038,1,2,1,1277169,1048513,1225063,1225063,600.002183979,600.266880605
c038,1,2,2,420343,389815,400404,400404,1200.003506753,1200.680286861
c038,1,2,3,329152,296777,300550,300550,1800.004270802,1801.072003308
c038,1,2,4,291989,260424,262022,262022,2400.005332121,2401.40508781
c038,1,2,5,177241,153612,154718,154718,3000.011033629,3001.762091817
c038,1,2,6,180731,151418,152232,152232,3600.0122854339998,3602.037605962
c038,1,2,7,137984,112409,114311,114311,4200.016191455999,4202.376948085
c038,1,2,8,121610,98907,99436,99436,4800.016591080999,4802.646030615
c038,1,2,9,99397,79097,79420,79420,5400.017149535999,5402.881070808
c038,1,2,10,81065,63521,63829,63829,6000.022395509999,6003.136065891
c038,1,2,11,63329,52099,52485,52485,6600.0338065939995,6603.375363677
# search time: 6600.034s
# total time: 13213.462s
c038,2,2,1,1300101,1121794,1261522,1261522,600.002086486,600.323167495
c038,2,2,2,438767,407156,418222,418222,1200.002124492,1200.592613995
c038,2,2,3,330060,297755,301473,301473,1800.0056479,1800.861979238
c038,2,2,4,292278,260890,262411,262411,2400.005907979,2401.079603931
c038,2,2,5,181193,157777,158940,158940,3000.0107602589997,3001.275407774
c038,2,2,6,183994,154423,155317,155317,3600.0121230289997,3601.470578886
c038,2,2,7,142665,116166,118025,118025,4200.013465631,4201.66613193
c038,2,2,8,124707,102046,102712,102712,4800.01580234,4801.866978219
c038,2,2,9,102732,82587,83077,83077,5400.01696872,5402.037939918
c038,2,2,10,81549,66151,66553,66553,6000.024480943999,6002.182106405
c038,2,2,11,60849,50640,50937,50937,6600.032366492999,6602.417275608
# search time: 6600.032s
# total time: 19816.335s
c038,3,2,1,1287528,1110967,1249330,1249330,600.002824539,600.296864653
c038,3,2,2,427571,396461,407436,407436,1200.002872232,1200.525151142
c038,3,2,3,325861,295614,299218,299218,1800.003164074,1800.749155809
c038,3,2,4,298760,266855,268522,268522,2400.003728134,2400.92895476
c038,3,2,5,182425,158637,159771,159771,3000.003995482,3001.126106073
c038,3,2,6,182540,153155,154091,154091,3600.006329464,3601.27736941
c038,3,2,7,137599,112217,114183,114183,4200.012072433,4201.452051436
c038,3,2,8,124995,101726,102383,102383,4800.013328365,4801.570476429
c038,3,2,9,102725,82328,82826,82826,5400.016729282001,5401.685927518
c038,3,2,10,81243,63502,63799,63799,6000.019020656001,6001.828776688
c038,3,2,11,63520,52225,52602,52602,6600.019484241001,6601.987443428
# search time: 6600.019s
# total time: 26419.467s
c038,4,2,1,1285691,1110459,1247796,1247796,600.00189336,600.28268313
c038,4,2,2,426541,395361,406176,406176,1200.003380363,1200.496489027
c038,4,2,3,325493,294875,298547,298547,1800.0036603419999,1800.688647233
c038,4,2,4,287849,256888,258415,258415,2400.004835965,2400.856632343
c038,4,2,5,181876,158325,159450,159450,3000.00708483,3001.001309448
c038,4,2,6,182053,152671,153569,153569,3600.007501676,3601.120275506
c038,4,2,7,141713,115356,117134,117134,4200.00904748,4201.248977507
c038,4,2,8,121668,98692,99276,99276,4800.0267936929995,4801.398091635
c038,4,2,9,98915,78830,79164,79164,5400.034388433,5401.504079076
c038,4,2,10,81386,65603,65986,65986,6000.037091103999,6001.621489022
c038,4,2,11,61772,51223,51574,51574,6600.048862450999,6601.741779579
# search time: 6600.049s
# total time: 33022.028s
