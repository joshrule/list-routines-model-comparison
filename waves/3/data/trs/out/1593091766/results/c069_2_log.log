    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c069_2.json out/1593091766/results/c069_2_best.csv out/1593091766/results/c069_2_predictions.csv out/1593091766/results/c069_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 8, 8]), o: IntList([9, 3, 4, 0, 5, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 0, 4, 1, 1, 0]), o: IntList([9, 3, 4, 0, 8, 0, 4, 1, 1, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 1, 6, 3, 2, 7, 3]), o: IntList([9, 3, 4, 0, 8, 1, 6, 3, 2, 7, 3, 7, 2, 9, 1]) }
#   Datum { i: IntList([8, 4, 7]), o: IntList([9, 3, 4, 0, 8, 4, 7, 7, 2, 9, 1]) }
#   Datum { i: IntList([0, 5, 5, 5]), o: IntList([9, 3, 4, 0, 0, 5, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([2, 5, 2, 5, 5]), o: IntList([9, 3, 4, 0, 2, 5, 2, 5, 5, 7, 2, 9, 1]) }
#   Datum { i: IntList([4, 0, 9, 3, 0, 8, 8]), o: IntList([9, 3, 4, 0, 4, 0, 9, 3, 0, 8, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([]), o: IntList([9, 3, 4, 0, 7, 2, 9, 1]) }
#   Datum { i: IntList([7, 1]), o: IntList([9, 3, 4, 0, 7, 1, 7, 2, 9, 1]) }
#   Datum { i: IntList([8]), o: IntList([9, 3, 4, 0, 8, 7, 2, 9, 1]) }
#   Datum { i: IntList([6, 6, 6, 6, 6, 6]), o: IntList([9, 3, 4, 0, 6, 6, 6, 6, 6, 6, 7, 2, 9, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c069,0,2,1,1062911,917502,1031516,1031516,600.018920328,603.525324241
c069,0,2,2,221115,205921,212279,212279,1200.0207393340002,1204.551809242
c069,0,2,3,112383,105831,106681,106681,1800.0231305510001,1805.602499087
c069,0,2,4,71724,67619,67766,67766,2400.0278215400003,2406.682697222
c069,0,2,5,60189,54897,55131,55131,3000.0287124450006,3007.745373101
c069,0,2,6,50968,45792,46025,46025,3600.0348795010004,3608.589800144
c069,0,2,7,41927,38407,38604,38604,4200.039615047001,4209.327016497
c069,0,2,8,36300,31146,31340,31340,4800.081970411001,4810.141842937
c069,0,2,9,35096,28984,29166,29166,5400.123669426001,5410.997634357
c069,0,2,10,31880,25549,25819,25819,6000.129556367001,6011.852591257
c069,0,2,11,28236,22293,22464,22464,6600.134877929001,6612.566871503
# search time: 6600.135s
# total time: 6612.821s
c069,1,2,1,1131168,925816,1084353,1084353,600.008278917,600.306601114
c069,1,2,2,226517,211206,217414,217414,1200.009884984,1200.764595145
c069,1,2,3,108737,101909,102844,102844,1800.0167592030002,1801.356799983
c069,1,2,4,71380,67332,67490,67490,2400.027032974,2401.816166786
c069,1,2,5,59946,54672,54916,54916,3000.0277844370003,3002.352963003
c069,1,2,6,50976,45432,45670,45670,3600.0294284540005,3602.768930399
c069,1,2,7,41861,38383,38602,38602,4200.031783045,4203.144555994
c069,1,2,8,36094,31181,31393,31393,4800.043881576001,4803.55068439
c069,1,2,9,34978,28859,29067,29067,5400.049918451001,5403.875506376
c069,1,2,10,32215,26146,26416,26416,6000.076733032001,6004.287492518
c069,1,2,11,30904,24716,24909,24909,6600.120287544001,6604.687234136
# search time: 6600.120s
# total time: 13218.022s
c069,2,2,1,1130278,923430,1083035,1083035,600.001149841,600.23194014
c069,2,2,2,227002,211714,217887,217887,1200.0036817720002,1200.526088816
c069,2,2,3,109900,103461,104338,104338,1800.00531649,1800.839520313
c069,2,2,4,73436,69366,69660,69660,2400.007846694,2401.196986257
c069,2,2,5,59909,54624,54807,54807,3000.008120172,3001.497654931
c069,2,2,6,50430,44873,45094,45094,3600.017798701,3601.749159837
c069,2,2,7,41610,37854,38034,38034,4200.028525282,4202.077205425
c069,2,2,8,35869,30924,31112,31112,4800.041905432,4802.392861587
c069,2,2,9,34998,29036,29263,29263,5400.049031352,5402.571979687
c069,2,2,10,31498,25460,25738,25738,6000.053159387,6002.915657786
c069,2,2,11,30519,24869,25078,25078,6600.059165648,6603.125665886
# search time: 6600.059s
# total time: 19821.559s
c069,3,2,1,1171010,1022372,1139521,1139521,600.000551747,600.300635134
c069,3,2,2,228382,212609,219088,219088,1200.001659703,1200.514818137
c069,3,2,3,106806,99951,100886,100886,1800.005187401,1800.767724486
c069,3,2,4,73118,69069,69310,69310,2400.0093638400003,2400.941747278
c069,3,2,5,59954,54748,54979,54979,3000.0111558240005,3001.158814248
c069,3,2,6,50214,44622,44835,44835,3600.0165107110006,3601.350055424
c069,3,2,7,41947,38564,38768,38768,4200.032785830001,4201.612699773
c069,3,2,8,35643,30701,30909,30909,4800.033325793001,4801.841166573
c069,3,2,9,35135,29475,29724,29724,5400.044832341001,5402.072174961
c069,3,2,10,31797,25328,25596,25596,6000.055754559001,6002.318558782
c069,3,2,11,29256,23529,23675,23675,6600.060300922001,6602.52227163
# search time: 6600.060s
# total time: 26424.654s
c069,4,2,1,1171173,1024066,1140025,1140025,600.000120114,600.243393074
c069,4,2,2,218051,203193,209474,209474,1200.001069678,1200.42409719
c069,4,2,3,105417,98702,99643,99643,1800.004553726,1800.657406512
c069,4,2,4,72190,68175,68446,68446,2400.00962972,2400.84164642
c069,4,2,5,59639,54135,54336,54336,3000.0163353939997,3001.000664025
c069,4,2,6,49789,44391,44613,44613,3600.0260384369994,3601.180477994
c069,4,2,7,40900,37166,37315,37315,4200.03778775,4201.383414939
c069,4,2,8,35398,30347,30531,30531,4800.047892991999,4801.591370818
c069,4,2,9,34542,28598,28791,28791,5400.053894759999,5401.744499628
c069,4,2,10,31970,25753,26020,26020,6000.057981261999,6001.884075036
c069,4,2,11,30124,24368,24550,24550,6600.061943558999,6601.990270737
# search time: 6600.062s
# total time: 33026.939s
