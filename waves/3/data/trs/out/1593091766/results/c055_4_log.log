    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c055_4.json out/1593091766/results/c055_4_best.csv out/1593091766/results/c055_4_predictions.csv out/1593091766/results/c055_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 7, 7, 5, 5, 7]), o: IntList([7, 5, 9, 7, 5, 7]) }
#   Datum { i: IntList([0, 2, 6, 1, 9, 5, 6, 5, 3]), o: IntList([6, 1, 0, 2, 9, 5, 6, 5, 3]) }
#   Datum { i: IntList([2, 1, 6, 6, 8, 9, 8]), o: IntList([6, 6, 2, 1, 8, 9, 8]) }
#   Datum { i: IntList([8, 9, 4, 4]), o: IntList([4, 4, 8, 9]) }
#   Datum { i: IntList([9, 4, 4, 3, 9, 9, 3, 4]), o: IntList([4, 3, 9, 4, 9, 9, 3, 4]) }
#   Datum { i: IntList([6, 2, 3, 0, 3, 2, 8, 1]), o: IntList([3, 0, 6, 2, 3, 2, 8, 1]) }
#   Datum { i: IntList([4, 8, 7, 9]), o: IntList([7, 9, 4, 8]) }
#   Datum { i: IntList([0, 7, 8, 1, 1, 4, 8, 9, 7, 2]), o: IntList([8, 1, 0, 7, 1, 4, 8, 9, 7, 2]) }
#   Datum { i: IntList([3, 9, 7, 2, 0, 8, 5]), o: IntList([7, 2, 3, 9, 0, 8, 5]) }
#   Datum { i: IntList([8, 1, 7, 0, 5]), o: IntList([7, 0, 8, 1, 5]) }
#   Datum { i: IntList([2, 5, 3, 5, 3, 5, 3, 2, 5]), o: IntList([3, 5, 2, 5, 3, 5, 3, 2, 5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c055,0,4,1,1324428,1150846,1287223,1287223,600.000627407,601.905135244
c055,0,4,2,407443,380347,392599,392599,1200.000674399,1202.856409562
c055,0,4,3,222799,205536,213780,213780,1800.001590005,1803.388613544
c055,0,4,4,163491,150410,154277,154277,2400.002802384,2404.11700489
c055,0,4,5,124516,115245,118782,118782,3000.005142276,3004.97286009
c055,0,4,6,107026,97702,100630,100630,3600.008472617,3605.794077289
c055,0,4,7,86763,78962,81296,81296,4200.011949072,4206.480791013
c055,0,4,8,80500,72893,75203,75203,4800.015417539,4807.247689963
c055,0,4,9,64338,57822,59653,59653,5400.021779557,5408.055701422
c055,0,4,10,56791,51187,52720,52720,6000.026010686,6008.796688699
c055,0,4,11,54171,48884,50051,50051,6600.030949186,6609.469796182
# search time: 6600.031s
# total time: 6609.772s
c055,1,4,1,1306148,1138903,1270381,1270381,600.00290378,600.365543271
c055,1,4,2,404340,378732,389796,389796,1200.00362036,1200.765350511
c055,1,4,3,220166,203166,211371,211371,1800.0040414320001,1801.032737757
c055,1,4,4,158090,145024,148689,148689,2400.0055021450003,2401.418814269
c055,1,4,5,125012,115746,119094,119094,3000.0087309590003,3001.826383076
c055,1,4,6,106028,96680,99583,99583,3600.009377957,3602.240026438
c055,1,4,7,86880,79208,81429,81429,4200.015465005,4202.585002878
c055,1,4,8,79944,72529,74714,74714,4800.018333182999,4802.919767842
c055,1,4,9,64370,58025,59769,59769,5400.020561863999,5403.335708193
c055,1,4,10,56288,50591,52140,52140,6000.024520509,6003.694409736
c055,1,4,11,52925,47618,48911,48911,6600.030912761999,6604.009633974
# search time: 6600.031s
# total time: 13214.245s
c055,2,4,1,1295690,1138552,1263393,1263393,600.005865994,600.311327039
c055,2,4,2,405444,379471,390651,390651,1200.0060201659999,1200.591972419
c055,2,4,3,221362,203971,212043,212043,1800.0073987259998,1800.764406458
c055,2,4,4,162035,149110,152956,152956,2400.01239293,2400.987798687
c055,2,4,5,123335,114300,117590,117590,3000.018196852,3001.277649321
c055,2,4,6,104572,94992,98208,98208,3600.021471986,3601.519383638
c055,2,4,7,86489,78647,81022,81022,4200.0237018,4201.728833645
c055,2,4,8,79401,71710,74215,74215,4800.030529240999,4802.003573822
c055,2,4,9,64813,58252,60023,60023,5400.036262455,5402.274002638
c055,2,4,10,56822,51346,52787,52787,6000.0421840809995,6002.562335353
c055,2,4,11,54374,48933,50181,50181,6600.048360569,6602.757166752
# search time: 6600.048s
# total time: 19817.467s
c055,3,4,1,1190354,1008425,1150450,1150450,600.001040293,600.226357049
c055,3,4,2,407303,381040,392509,392509,1200.0015854849999,1200.457029237
c055,3,4,3,221925,204590,213265,213265,1800.0031997729998,1800.605012421
c055,3,4,4,160869,147985,151767,151767,2400.006694916,2400.750369177
c055,3,4,5,122431,113051,116757,116757,3000.007170874,3000.936025965
c055,3,4,6,105411,96212,99076,99076,3600.009033538,3601.124101892
c055,3,4,7,86966,79190,81441,81441,4200.016902653,4201.325343669
c055,3,4,8,80190,72496,74910,74910,4800.018458259,4801.501835957
c055,3,4,9,64488,58067,59717,59717,5400.018993001,5401.702350007
c055,3,4,10,56687,51014,52539,52539,6000.031901323,6001.906525549
c055,3,4,11,53924,48485,49700,49700,6600.035169082,6602.121991793
# search time: 6600.035s
# total time: 26420.225s
c055,4,4,1,1283950,1056595,1232149,1232149,600.000053461,600.194978733
c055,4,4,2,403352,378148,389126,389126,1200.000738278,1200.390882762
c055,4,4,3,220235,203169,211379,211379,1800.003618314,1800.522760817
c055,4,4,4,161170,148025,151899,151899,2400.006007236,2400.68889601
c055,4,4,5,120904,111812,115410,115410,3000.0114090380002,3000.854522263
c055,4,4,6,105571,96278,99203,99203,3600.011600801,3600.99365383
c055,4,4,7,86420,78618,81000,81000,4200.014316433,4201.135602513
c055,4,4,8,79954,72527,74653,74653,4800.0270157800005,4801.367877184
c055,4,4,9,63928,57699,59499,59499,5400.032132959001,5401.521719597
c055,4,4,10,56423,50831,52394,52394,6000.034411304001,6001.673739707
c055,4,4,11,53698,48406,49602,49602,6600.052446270001,6602.062409307
# search time: 6600.052s
# total time: 33023.341s
