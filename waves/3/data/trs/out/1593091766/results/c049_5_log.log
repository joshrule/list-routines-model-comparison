    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c049_5.json out/1593091766/results/c049_5_best.csv out/1593091766/results/c049_5_predictions.csv out/1593091766/results/c049_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 4]), o: IntList([4]) }
#   Datum { i: IntList([9, 2, 1, 7, 0, 4, 7]), o: IntList([2, 1, 7, 0, 4, 7]) }
#   Datum { i: IntList([8, 2, 1, 7, 5, 9, 6, 0, 3, 2]), o: IntList([2, 1, 7, 5, 9, 6, 0, 3, 2]) }
#   Datum { i: IntList([1, 0, 9, 0, 2]), o: IntList([0, 9, 0, 2]) }
#   Datum { i: IntList([7, 1, 4, 1, 0, 8]), o: IntList([1, 4, 1, 0, 8]) }
#   Datum { i: IntList([2]), o: IntList([]) }
#   Datum { i: IntList([5, 1, 3, 5, 0, 9, 5, 2, 5]), o: IntList([1, 3, 5, 0, 9, 5, 2, 5]) }
#   Datum { i: IntList([4, 9, 7, 6, 6, 4, 5]), o: IntList([9, 7, 6, 6, 4, 5]) }
#   Datum { i: IntList([1, 8, 0, 2, 4, 6, 7, 9]), o: IntList([8, 0, 2, 4, 6, 7, 9]) }
#   Datum { i: IntList([7, 6, 8]), o: IntList([6, 8]) }
#   Datum { i: IntList([3, 3, 3, 3]), o: IntList([3, 3, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c049,0,5,1,714063,615997,692747,692747,600.000212219,602.976014734
c049,0,5,2,525210,490450,507677,507677,1200.009681686,1204.293050674
c049,0,5,3,213551,197114,203913,203913,1800.0107747719999,1804.999905599
c049,0,5,4,102887,94556,97629,97629,2400.013364295,2405.943977196
c049,0,5,5,155329,143763,147954,147954,3000.013366819,3006.882643988
c049,0,5,6,171146,155631,160721,160721,3600.02224594,3607.395659856
c049,0,5,7,140166,129216,134170,134170,4200.02284177,4208.141385821
c049,0,5,8,107341,98278,102140,102140,4800.024481224,4808.940431717
c049,0,5,9,108319,99060,104034,104034,5400.025969169999,5409.36913989
c049,0,5,10,92010,83682,88001,88001,6000.027262729999,6009.859522897
c049,0,5,11,79404,72076,75763,75763,6600.029347045,6610.49704074
# search time: 6600.029s
# total time: 6610.767s
c049,1,5,1,1315596,1076718,1261030,1261030,600.000000142,600.310851809
c049,1,5,2,810965,772149,793117,793117,1200.002548323,1200.755682951
c049,1,5,3,395739,368391,380705,380705,1800.002934563,1801.012268989
c049,1,5,4,196279,182227,187423,187423,2400.005539534,2401.357963064
c049,1,5,5,161050,149599,154045,154045,3000.027891792,3001.696707805
c049,1,5,6,152946,134838,138445,138445,3600.029636425,3601.968646852
c049,1,5,7,137018,126794,131188,131188,4200.031507885,4202.313463099
c049,1,5,8,105383,97201,100802,100802,4800.034193881,4802.631093463
c049,1,5,9,109748,101055,105599,105599,5400.034487692,5402.833987192
c049,1,5,10,93229,85533,89453,89453,6000.038587739,6003.036882135
c049,1,5,11,78249,71021,74598,74598,6600.043869961,6603.375119289
# search time: 6600.044s
# total time: 13214.651s
c049,2,5,1,1253480,1023539,1201637,1201637,600.000046889,600.196867804
c049,2,5,2,806063,765920,787490,787490,1200.001585011,1200.501813362
c049,2,5,3,391711,364982,378166,378166,1800.0016137530001,1800.677219614
c049,2,5,4,188643,175783,180702,180702,2400.001695877,2400.892528955
c049,2,5,5,161348,149952,154301,154301,3000.017879946,3001.103072167
c049,2,5,6,153364,134884,138441,138441,3600.019729199,3601.30100723
c049,2,5,7,134919,125032,129246,129246,4200.020446652,4201.534501582
c049,2,5,8,105219,97011,100499,100499,4800.024158501999,4801.716487721
c049,2,5,9,107404,98764,103326,103326,5400.033615860999,5401.846829343
c049,2,5,10,91427,83409,87571,87571,6000.034001684999,6001.958603608
c049,2,5,11,78045,70881,74559,74559,6600.042211973999,6602.139888707
# search time: 6600.042s
# total time: 19817.427s
c049,3,5,1,1295515,1114802,1256120,1256120,600.00017422,600.325033099
c049,3,5,2,911393,855895,884827,884827,1200.000452923,1200.595171795
c049,3,5,3,392545,365139,377670,377670,1800.004168105,1800.75078656
c049,3,5,4,191158,177241,182583,182583,2400.015885962,2400.920156563
c049,3,5,5,164715,152370,156948,156948,3000.019110513,3001.096608748
c049,3,5,6,167400,151592,156912,156912,3600.019920572,3601.205970633
c049,3,5,7,137741,127307,131963,131963,4200.021439516,4201.372524474
c049,3,5,8,106905,98530,102456,102456,4800.022999507,4801.539572832
c049,3,5,9,105539,96452,101268,101268,5400.030264694,5401.657209526
c049,3,5,10,90120,82172,86338,86338,6000.031966597,6001.774590065
c049,3,5,11,78224,70866,74524,74524,6600.040713447,6601.929354265
# search time: 6600.041s
# total time: 26419.712s
c049,4,5,1,1357977,1168255,1316815,1316815,600.00223568,600.314591796
c049,4,5,2,913587,857877,886725,886725,1200.002316627,1200.571653642
c049,4,5,3,393612,365530,378208,378208,1800.003705685,1800.722072409
c049,4,5,4,189141,175762,180921,180921,2400.004913117,2400.862965436
c049,4,5,5,164969,152714,157332,157332,3000.006654905,3001.000561235
c049,4,5,6,168212,152705,158054,158054,3600.007668332,3601.082380303
c049,4,5,7,138201,126734,131530,131530,4200.012073688,4201.207203464
c049,4,5,8,107247,98748,102621,102621,4800.017719206,4801.33613087
c049,4,5,9,104907,95647,100680,100680,5400.028161637,5401.423085602
c049,4,5,10,90701,82895,86837,86837,6000.032479011001,6001.510174758
c049,4,5,11,78149,70908,74525,74525,6600.034577417001,6601.630923074
# search time: 6600.035s
# total time: 33021.868s
