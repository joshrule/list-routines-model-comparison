    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.77s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c004_1.json out/1593091766/results/c004_1_best.csv out/1593091766/results/c004_1_predictions.csv out/1593091766/results/c004_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 4, 4]), o: IntList([]) }
#   Datum { i: IntList([9, 6, 1, 0, 6, 4, 7]), o: IntList([7]) }
#   Datum { i: IntList([5, 6, 0, 2, 9, 7, 3, 2, 1, 8]), o: IntList([3]) }
#   Datum { i: IntList([0]), o: IntList([]) }
#   Datum { i: IntList([5, 9, 8, 8, 5, 0, 0, 2]), o: IntList([0]) }
#   Datum { i: IntList([5, 3, 4, 3, 4, 4, 5]), o: IntList([5]) }
#   Datum { i: IntList([7, 4]), o: IntList([]) }
#   Datum { i: IntList([0, 3, 2, 9, 4, 6, 8, 4, 8]), o: IntList([8]) }
#   Datum { i: IntList([3, 7, 3]), o: IntList([]) }
#   Datum { i: IntList([0, 1, 0, 6, 9, 1, 1, 0]), o: IntList([1]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c004,0,1,1,1265119,1071848,1222555,1222555,600.000333785,601.847428642
c004,0,1,2,936906,871901,915509,915509,1200.001310774,1202.74535703
c004,0,1,3,734608,692743,717526,717526,1800.004767776,1803.556904261
c004,0,1,4,456177,421212,441185,441185,2400.004803678,2404.391329425
c004,0,1,5,454019,418582,438195,438195,3000.004916156,3005.004227808
c004,0,1,6,321511,297101,310006,310006,3600.006223499,3605.753998302
c004,0,1,7,200166,182446,190752,190752,4200.012727872,4206.558378361
c004,0,1,8,200695,183546,192012,192012,4800.015582084,4807.309540784
c004,0,1,9,186550,172242,180417,180417,5400.017977635,5407.972983997
c004,0,1,10,165345,152411,159667,159667,6000.018121194999,6008.712237406
c004,0,1,11,141387,130129,136381,136381,6600.018680636999,6609.404790285
# search time: 6600.019s
# total time: 6609.936s
c004,1,1,1,1322571,1142333,1283603,1283603,600.003226523,600.416436601
c004,1,1,2,911319,847405,890567,890567,1200.0044173410001,1200.814764936
c004,1,1,3,729513,687966,712405,712405,1800.00472033,1801.181039277
c004,1,1,4,477649,441240,462001,462001,2400.004734945,2401.531933634
c004,1,1,5,451470,416232,435849,435849,3000.004931592,3001.863594821
c004,1,1,6,323073,298335,311261,311261,3600.005670414,3602.212494477
c004,1,1,7,206080,188608,197227,197227,4200.006862502,4202.626569914
c004,1,1,8,203804,186647,195351,195351,4800.007148982,4803.027041332
c004,1,1,9,185826,171291,179484,179484,5400.012122395,5403.384344239
c004,1,1,10,164159,150980,158040,158040,6000.012189709,6003.718178438
c004,1,1,11,143905,132628,139154,139154,6600.013526834,6604.065447922
# search time: 6600.014s
# total time: 13214.910s
c004,2,1,1,1344967,1191998,1314019,1314019,600.000536119,600.375767638
c004,2,1,2,878854,815775,858696,858696,1200.0064365130002,1200.673384775
c004,2,1,3,723199,683156,705433,705433,1800.0080794080002,1800.974870481
c004,2,1,4,474862,438463,459003,459003,2400.0102922510005,2401.26778612
c004,2,1,5,455844,420556,440235,440235,3000.0104432540006,3001.519362626
c004,2,1,6,323346,298697,311757,311757,3600.0110136220005,3601.758115484
c004,2,1,7,201429,184022,192302,192302,4200.011823270001,4202.063519434
c004,2,1,8,198939,181681,190174,190174,4800.016741984001,4802.361965865
c004,2,1,9,185253,171009,179149,179149,5400.028698286001,5402.613161138
c004,2,1,10,161259,148446,155421,155421,6000.030657532001,6002.873099312
c004,2,1,11,137627,127120,133257,133257,6600.032230458001,6603.081155512
# search time: 6600.032s
# total time: 19818.909s
c004,3,1,1,1277482,1049028,1225693,1225693,600.004406651,600.226123779
c004,3,1,2,893430,829775,873033,873033,1200.005299793,1200.488511201
c004,3,1,3,732523,691484,714963,714963,1800.0058690279998,1800.751968914
c004,3,1,4,479529,442446,463273,463273,2400.005956905,2400.984264764
c004,3,1,5,465477,430291,450294,450294,3000.00727104,3001.197047402
c004,3,1,6,322560,297811,310856,310856,3600.013645528,3601.429923313
c004,3,1,7,206576,188734,197540,197540,4200.021146146,4201.656796103
c004,3,1,8,204720,187392,196201,196201,4800.021289566001,4801.867088123
c004,3,1,9,185746,171243,179405,179405,5400.023904943,5402.064709765
c004,3,1,10,166916,153824,161209,161209,6000.0249161500005,6002.293441631
c004,3,1,11,138884,128260,134532,134532,6600.027463407,6602.466360529
# search time: 6600.027s
# total time: 26422.639s
c004,4,1,1,1363540,1197017,1330280,1330280,600.000039808,600.336895463
c004,4,1,2,906270,844545,886251,886251,1200.0027140060001,1200.588275346
c004,4,1,3,729908,688991,712320,712320,1800.0027949680002,1800.816253006
c004,4,1,4,451292,416703,436251,436251,2400.003369764,2400.997740775
c004,4,1,5,460943,425659,445837,445837,3000.004203416,3001.180453059
c004,4,1,6,323424,298991,311830,311830,3600.005452474,3601.344583337
c004,4,1,7,181611,166317,173624,173624,4200.0086085309995,4201.557911757
c004,4,1,8,178235,163072,170244,170244,4800.0133734089995,4801.767829414
c004,4,1,9,169999,157121,163853,163853,5400.014730897,5401.946917872
c004,4,1,10,150453,139551,145581,145581,6000.018783963,6002.148343586
c004,4,1,11,131013,121512,126996,126996,6600.020628187,6602.291991663
# search time: 6600.021s
# total time: 33025.770s
