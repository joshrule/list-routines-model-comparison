    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c052_2.json out/1593091766/results/c052_2_best.csv out/1593091766/results/c052_2_predictions.csv out/1593091766/results/c052_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([9, 4, 4, 0, 4, 0, 2, 2, 4]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([7, 7]), o: IntList([7, 7, 7, 7, 7, 7, 7, 7, 7, 7]) }
#   Datum { i: IntList([5, 5, 1, 1, 5, 1]), o: IntList([5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([8, 6, 8, 8, 6]), o: IntList([8, 8, 8, 8, 8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([6, 7, 1]), o: IntList([6, 6, 6, 6, 6, 6, 6, 6, 6, 6]) }
#   Datum { i: IntList([0]), o: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) }
#   Datum { i: IntList([4, 0, 6, 7, 3, 5, 1, 6, 3]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([2, 5, 5]), o: IntList([2, 2, 2, 2, 2, 2, 2, 2, 2, 2]) }
#   Datum { i: IntList([9, 8, 7, 1]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([1, 2, 4, 0, 3, 7]), o: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c052,0,2,1,722273,615615,698868,698868,600.010114489,602.991072237
c052,0,2,2,161423,148388,152672,152672,1200.0104453449999,1204.720014026
c052,0,2,3,89717,83580,85697,85697,1800.0203298759998,1806.335765181
c052,0,2,4,69090,63796,66006,66006,2400.034622313,2407.514111021
c052,0,2,5,52180,48154,49778,49778,3000.039558531,3008.814165179
c052,0,2,6,40846,37418,38767,38767,3600.040671685,3610.006615357
c052,0,2,7,29646,27418,28231,28231,4200.076849625,4212.080285592
c052,0,2,8,27082,24694,25545,25545,4800.082403836001,4813.251458576
c052,0,2,9,22122,20187,20836,20836,5400.095782805,5415.16316616
c052,0,2,10,18642,17116,17587,17587,6000.137509907,6016.990898265
c052,0,2,11,21204,20019,20557,20557,6600.145460426,6618.18640093
# search time: 6600.145s
# total time: 6618.375s
c052,1,2,1,686316,581981,663105,663105,600.003868468,600.428823984
c052,1,2,2,157857,144793,149201,149201,1200.008806225,1201.167274597
c052,1,2,3,86916,80186,82425,82425,1800.0188749959998,1801.889680629
c052,1,2,4,68256,63000,65159,65159,2400.0207757709995,2402.340171965
c052,1,2,5,53361,49460,50958,50958,3000.0253031839993,3002.899239306
c052,1,2,6,40327,37182,38385,38385,3600.0307128049994,3603.641161756
c052,1,2,7,30261,28205,29017,29017,4200.041698313999,4204.582043993
c052,1,2,8,27812,25387,26270,26270,4800.080027208999,4805.24739566
c052,1,2,9,21864,20079,20650,20650,5400.092188551999,5406.124654206
c052,1,2,10,19558,17915,18509,18509,6000.108390353999,6007.10984977
c052,1,2,11,21194,19964,20504,20504,6600.141599117999,6607.751089006
# search time: 6600.142s
# total time: 13226.498s
c052,2,2,1,674849,550629,646674,646674,600.011543162,600.254863689
c052,2,2,2,157906,145158,149344,149344,1200.012957581,1200.773443266
c052,2,2,3,88852,82674,84824,84824,1800.01717195,1801.239357741
c052,2,2,4,66966,61308,63906,63906,2400.017867776,2401.588748933
c052,2,2,5,51704,47444,49402,49402,3000.024836479,3001.975038369
c052,2,2,6,40488,37272,38482,38482,3600.03476805,3602.497471263
c052,2,2,7,29528,27272,28091,28091,4200.045580683,4203.070450301
c052,2,2,8,26963,24680,25459,25459,4800.0815532219995,4803.538749801
c052,2,2,9,22468,20560,21250,21250,5400.1187172009995,5404.134694422
c052,2,2,10,18628,17076,17643,17643,6000.119636807,6004.861532768
c052,2,2,11,21485,20176,20747,20747,6600.159441279,6605.252600714
# search time: 6600.159s
# total time: 19832.024s
c052,3,2,1,684040,560400,655889,655889,600.000235417,600.222770538
c052,3,2,2,159634,146921,151113,151113,1200.001649265,1200.56071478
c052,3,2,3,86624,80521,82420,82420,1800.004331506,1800.908844657
c052,3,2,4,69017,63945,65993,65993,2400.015901699,2401.132591434
c052,3,2,5,51453,47462,49090,49090,3000.034479391,3001.43899444
c052,3,2,6,40340,37293,38424,38424,3600.0369597989998,3601.639355676
c052,3,2,7,24636,22160,22941,22941,4200.048888318,4202.297803163
c052,3,2,8,26929,24622,25489,25489,4800.0720592299995,4802.775845172
c052,3,2,9,22222,20362,21013,21013,5400.081916456,5403.087200316
c052,3,2,10,33363,30501,31444,31444,6000.100075638999,6003.612647449
c052,3,2,11,37361,34944,36055,36055,6600.123969193999,6603.870563284
# search time: 6600.124s
# total time: 26436.082s
c052,4,2,1,1137173,933530,1090931,1090931,600.000118929,600.230757855
c052,4,2,2,258584,238281,245358,245358,1200.0006487199998,1200.497845692
c052,4,2,3,149216,138667,142166,142166,1800.0035492549998,1800.766017501
c052,4,2,4,116949,109069,112211,112211,2400.008391036,2400.955652476
c052,4,2,5,86531,79829,82644,82644,3000.016869301,3001.35490916
c052,4,2,6,39825,36671,37938,37938,3600.027594942,3601.605843351
c052,4,2,7,28700,26470,27272,27272,4200.029110661,4201.853081035
c052,4,2,8,26435,24177,24931,24931,4800.038217354,4802.082354933
c052,4,2,9,21848,19930,20554,20554,5400.053324797,5402.45727721
c052,4,2,10,18712,17190,17700,17700,6000.059494161,6002.642236731
c052,4,2,11,21092,19936,20493,20493,6600.080717744,6602.797712959
# search time: 6600.081s
# total time: 33039.303s
