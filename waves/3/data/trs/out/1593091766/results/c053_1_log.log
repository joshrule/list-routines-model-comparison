    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c053_1.json out/1593091766/results/c053_1_best.csv out/1593091766/results/c053_1_predictions.csv out/1593091766/results/c053_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 9, 6, 4]), o: IntList([8, 8, 6, 4]) }
#   Datum { i: IntList([6, 5, 8, 9, 1, 3, 4, 1, 0]), o: IntList([6, 6, 8, 9, 1, 3, 4, 1, 0]) }
#   Datum { i: IntList([9, 3, 7, 0, 1, 5, 5, 0]), o: IntList([9, 9, 7, 0, 1, 5, 5, 0]) }
#   Datum { i: IntList([5]), o: IntList([5, 5]) }
#   Datum { i: IntList([2, 0, 2, 0, 2]), o: IntList([2, 2, 2, 0, 2]) }
#   Datum { i: IntList([1, 4, 2]), o: IntList([1, 1, 2]) }
#   Datum { i: IntList([9, 2, 2, 8, 0, 0, 2, 1, 1]), o: IntList([9, 9, 2, 8, 0, 0, 2, 1, 1]) }
#   Datum { i: IntList([9, 1, 5, 8, 4, 3, 7, 6, 5, 2]), o: IntList([9, 9, 5, 8, 4, 3, 7, 6, 5, 2]) }
#   Datum { i: IntList([0, 5, 7, 6, 7, 1]), o: IntList([0, 0, 7, 6, 7, 1]) }
#   Datum { i: IntList([7, 4, 6, 5, 0, 8, 4, 2]), o: IntList([7, 7, 6, 5, 0, 8, 4, 2]) }
#   Datum { i: IntList([8, 6, 3, 6, 6, 3, 3]), o: IntList([8, 8, 3, 6, 6, 3, 3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c053,0,1,1,1316136,1138162,1277751,1277751,600.006625749,601.907897482
c053,0,1,2,550115,515375,530620,530620,1200.012734081,1202.836169989
c053,0,1,3,253180,234202,242831,242831,1800.0134428269998,1803.3239356
c053,0,1,4,170823,155997,159516,159516,2400.0158356069996,2404.018924293
c053,0,1,5,178438,164810,167754,167754,3000.021221348,3004.405085674
c053,0,1,6,131432,118709,119803,119803,3600.024819876,3604.947940792
c053,0,1,7,127879,118679,120433,120433,4200.04270222,4205.499737539
c053,0,1,8,97020,89002,90023,90023,4800.042882189,4806.063967589
c053,0,1,9,74310,67720,68509,68509,5400.051257554,5406.650436233
c053,0,1,10,66675,60383,61179,61179,6000.05414072,6007.164658659
c053,0,1,11,56322,51351,51944,51944,6600.070145096,6607.905043668
# search time: 6600.070s
# total time: 6608.232s
c053,1,1,1,1316937,1140477,1278828,1278828,600.009117217,600.385587693
c053,1,1,2,548369,514785,529119,529119,1200.01024213,1200.759540056
c053,1,1,3,258011,238273,246633,246633,1800.01121082,1800.992244268
c053,1,1,4,169787,154946,158374,158374,2400.026682326,2401.279682418
c053,1,1,5,178179,164614,167514,167514,3000.02879102,3001.47027563
c053,1,1,6,131174,118260,119401,119401,3600.031950223,3601.735935102
c053,1,1,7,126557,117477,119302,119302,4200.0345099179995,4201.987989575
c053,1,1,8,96544,88441,89559,89559,4800.042750625,4802.283269558
c053,1,1,9,74493,68060,68791,68791,5400.052178539,5402.584056117
c053,1,1,10,66964,60873,61600,61600,6000.052493088,6002.888916833
c053,1,1,11,55944,50978,51577,51577,6600.055316771,6603.226124136
# search time: 6600.055s
# total time: 13211.970s
c053,2,1,1,1227427,1040523,1186292,1186292,600.003404135,600.251291444
c053,2,1,2,555887,521238,536173,536173,1200.003574527,1200.521787051
c053,2,1,3,252498,233109,241999,241999,1800.004550817,1800.667327747
c053,2,1,4,164394,150048,153055,153055,2400.006332243,2400.870003911
c053,2,1,5,178642,165258,168070,168070,3000.0080352610003,3001.030174757
c053,2,1,6,125393,112929,113899,113899,3600.0090239990004,3601.251641704
c053,2,1,7,126694,117718,119478,119478,4200.010765957,4201.418963307
c053,2,1,8,96402,88256,89330,89330,4800.01086765,4801.616067985
c053,2,1,9,74395,67834,68643,68643,5400.0114328320005,5401.798602462
c053,2,1,10,66858,60646,61391,61391,6000.012880098,6001.964628038
c053,2,1,11,56367,51184,51782,51782,6600.030116768,6602.314286376
# search time: 6600.030s
# total time: 19814.774s
c053,3,1,1,1316778,1153154,1282482,1282482,600.000069513,600.298599515
c053,3,1,2,550842,515094,530602,530602,1200.000084918,1200.516552246
c053,3,1,3,252365,232902,241753,241753,1800.000795653,1800.660100511
c053,3,1,4,169507,154758,158257,158257,2400.001889522,2400.80995163
c053,3,1,5,176572,163191,166088,166088,3000.001946163,3000.931923616
c053,3,1,6,130309,117480,118569,118569,3600.004619975,3601.088227359
c053,3,1,7,125825,117034,118799,118799,4200.005056715,4201.24509476
c053,3,1,8,96126,88160,89241,89241,4800.010328961,4801.409008755
c053,3,1,9,73984,67249,68138,68138,5400.028373284,5401.578211321
c053,3,1,10,66071,60068,60821,60821,6000.031446702,6001.737913567
c053,3,1,11,56148,51105,51684,51684,6600.037630625,6601.893633101
# search time: 6600.038s
# total time: 26417.191s
c053,4,1,1,1317903,1148262,1281858,1281858,600.000054542,600.299261814
c053,4,1,2,536220,503624,517626,517626,1200.0021702630002,1200.513388936
c053,4,1,3,254048,234605,243031,243031,1800.0033510730002,1800.629775979
c053,4,1,4,162401,148191,151163,151163,2400.0039252230004,2400.777454575
c053,4,1,5,176997,163478,166307,166307,3000.0054675630004,3000.886269403
c053,4,1,6,125163,112698,113670,113670,3600.0077669380003,3601.027969584
c053,4,1,7,125620,116646,118448,118448,4200.021717481,4201.15741941
c053,4,1,8,96197,88212,89230,89230,4800.023117209001,4801.293672203
c053,4,1,9,73108,66792,67687,67687,5400.0254517640005,5401.429352447
c053,4,1,10,65253,59537,60191,60191,6000.026384159,6001.547062611
c053,4,1,11,56339,51108,51742,51742,6600.039087163001,6601.666101152
# search time: 6600.039s
# total time: 33019.577s
