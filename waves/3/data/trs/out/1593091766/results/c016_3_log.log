    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c016_3.json out/1593091766/results/c016_3_best.csv out/1593091766/results/c016_3_predictions.csv out/1593091766/results/c016_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 6, 7, 3, 1]), o: IntList([2, 8, 7, 3, 1]) }
#   Datum { i: IntList([5, 9, 4, 4, 5, 0]), o: IntList([5, 8, 4, 4, 5, 0]) }
#   Datum { i: IntList([1, 1, 2, 2, 9, 9, 2]), o: IntList([1, 8, 2, 2, 9, 9, 2]) }
#   Datum { i: IntList([5, 5, 5]), o: IntList([5, 8, 5]) }
#   Datum { i: IntList([6, 1, 2, 4, 3, 5, 3, 9, 0, 7]), o: IntList([6, 8, 2, 4, 3, 5, 3, 9, 0, 7]) }
#   Datum { i: IntList([3, 6, 1, 4, 0, 5, 2, 7]), o: IntList([3, 8, 1, 4, 0, 5, 2, 7]) }
#   Datum { i: IntList([9, 2]), o: IntList([9, 8]) }
#   Datum { i: IntList([6, 6, 4, 4, 6, 6, 6, 4, 6, 4]), o: IntList([6, 8, 4, 4, 6, 6, 6, 4, 6, 4]) }
#   Datum { i: IntList([1, 1, 0, 2]), o: IntList([1, 8, 0, 2]) }
#   Datum { i: IntList([8, 1, 9, 6, 0, 7, 5]), o: IntList([8, 8, 9, 6, 0, 7, 5]) }
#   Datum { i: IntList([9, 1, 8, 7, 2, 1, 0, 5, 7]), o: IntList([9, 8, 8, 7, 2, 1, 0, 5, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c016,0,3,1,1294668,1062657,1241552,1241552,600.001175872,601.758886961
c016,0,3,2,501092,469964,482834,482834,1200.001677169,1202.780552229
c016,0,3,3,280227,260649,271360,271360,1800.0026032340002,1803.379351037
c016,0,3,4,201199,185113,190134,190134,2400.0073149160003,2404.112958731
c016,0,3,5,176283,163224,168806,168806,3000.0073610550003,3004.728641076
c016,0,3,6,124249,114229,118192,118192,3600.0121074020003,3605.311539296
c016,0,3,7,96409,85307,87764,87764,4200.017528039,4205.876907
c016,0,3,8,96306,87202,90474,90474,4800.024074736,4806.428696635
c016,0,3,9,74698,67264,69660,69660,5400.025066368,5407.053874606
c016,0,3,10,72370,65184,67445,67445,6000.0285100149995,6007.611297081
c016,0,3,11,63879,57303,59262,59262,6600.044398149,6608.175336375
# search time: 6600.044s
# total time: 6608.491s
c016,1,3,1,1277460,1099581,1238857,1238857,600.001111394,600.332272021
c016,1,3,2,468655,439565,452196,452196,1200.005353368,1200.730835146
c016,1,3,3,278556,259183,269665,269665,1800.00656592,1800.976606569
c016,1,3,4,200801,184871,189803,189803,2400.007449132,2401.290081386
c016,1,3,5,175016,162294,167666,167666,3000.008917257,3001.574914654
c016,1,3,6,123994,113951,117970,117970,3600.014895263,3601.849551121
c016,1,3,7,96210,85737,88062,88062,4200.01751641,4202.187965238
c016,1,3,8,97041,87931,91080,91080,4800.021376039,4802.455410871
c016,1,3,9,76237,68560,70996,70996,5400.024934237999,5402.754344771
c016,1,3,10,73386,65743,68125,68125,6000.025811751999,6002.97390782
c016,1,3,11,64395,57505,59442,59442,6600.0274990359985,6603.255298596
# search time: 6600.027s
# total time: 13212.240s
c016,2,3,1,1285420,1052523,1232271,1232271,600.000032959,600.22141161
c016,2,3,2,483842,454733,467015,467015,1200.000241094,1200.500388093
c016,2,3,3,277305,257561,268214,268214,1800.00362319,1800.684526822
c016,2,3,4,198538,182799,187671,187671,2400.007116029,2400.91501214
c016,2,3,5,173469,160414,165966,165966,3000.009024516,3001.123039069
c016,2,3,6,121458,111228,115470,115470,3600.00992139,3601.310502325
c016,2,3,7,95007,84312,86615,86615,4200.013398671999,4201.522723091
c016,2,3,8,96652,87624,90767,90767,4800.017197501999,4801.725373026
c016,2,3,9,75648,67946,70386,70386,5400.02380699,5401.875220778
c016,2,3,10,72959,65414,67673,67673,6000.041019828999,6002.11135264
c016,2,3,11,63782,57069,59051,59051,6600.046892390999,6602.296831244
# search time: 6600.047s
# total time: 19815.040s
c016,3,3,1,1283109,1119696,1248026,1248026,600.000045563,600.312052244
c016,3,3,2,484432,454036,466777,466777,1200.00085669,1200.530313594
c016,3,3,3,276108,257271,267566,267566,1800.0018866300002,1800.671630638
c016,3,3,4,198737,182858,187748,187748,2400.002093549,2400.847205216
c016,3,3,5,170661,158065,163472,163472,3000.003397843,3001.021706559
c016,3,3,6,121579,111952,115860,115860,3600.003744529,3601.177731483
c016,3,3,7,94263,83773,86040,86040,4200.003991911,4201.342974254
c016,3,3,8,95267,86419,89542,89542,4800.004513597,4801.483423967
c016,3,3,9,75170,67315,69992,69992,5400.009472032,5401.642869237
c016,3,3,10,72939,65465,67634,67634,6000.0163151570005,6001.743000162
c016,3,3,11,62601,55870,57922,57922,6600.0234183190005,6601.846135525
# search time: 6600.023s
# total time: 26417.369s
c016,4,3,1,1285921,1104326,1246420,1246420,600.001097316,600.26497169
c016,4,3,2,474023,444731,457203,457203,1200.00147092,1200.457941991
c016,4,3,3,282918,263300,273601,273601,1800.001731081,1800.590561114
c016,4,3,4,192463,176653,181223,181223,2400.0054454739998,2400.72970823
c016,4,3,5,171279,158600,164204,164204,3000.0086581839996,3000.869115432
c016,4,3,6,121823,111833,115829,115829,3600.0095617089996,3600.991891544
c016,4,3,7,94612,83861,86219,86219,4200.014835184999,4201.114861612
c016,4,3,8,96090,86909,90014,90014,4800.021453369,4801.234893994
c016,4,3,9,74882,67002,69653,69653,5400.0292826879995,5401.364223271
c016,4,3,10,72945,65347,67693,67693,6000.034946311999,6001.468932745
c016,4,3,11,63809,57016,58857,58857,6600.044790173999,6601.620995313
# search time: 6600.045s
# total time: 33019.676s
