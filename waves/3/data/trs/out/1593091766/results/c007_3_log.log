    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.75s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c007_3.json out/1593091766/results/c007_3_best.csv out/1593091766/results/c007_3_predictions.csv out/1593091766/results/c007_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 3, 1, 9, 8]), o: IntList([3, 3]) }
#   Datum { i: IntList([7]), o: IntList([7]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([2]), o: IntList([2]) }
#   Datum { i: IntList([5, 0, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([7, 8, 5]), o: IntList([7, 8]) }
#   Datum { i: IntList([9, 9, 1, 4, 1, 1, 4, 4, 4, 4]), o: IntList([9, 9]) }
#   Datum { i: IntList([1]), o: IntList([1]) }
#   Datum { i: IntList([8]), o: IntList([8]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([0, 2, 2, 0]), o: IntList([0, 2]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c007,0,3,1,1169723,1022105,1138533,1138533,600.007210504,602.226021203
c007,0,3,2,627030,591207,607669,607669,1200.007802222,1203.380624957
c007,0,3,3,510141,465291,481590,481590,1800.008666965,1804.440406735
c007,0,3,4,485965,454117,469712,469712,2400.011941847,2405.019224252
c007,0,3,5,435698,407483,421333,421333,3000.01238306,3005.490141039
c007,0,3,6,358954,328664,343261,343261,3600.0158947190002,3605.889768637
c007,0,3,7,307066,281059,293378,293378,4200.030286038,4206.296408039
c007,0,3,8,262344,238637,250354,250354,4800.030466722,4806.638951525
c007,0,3,9,245817,223170,234362,234362,5400.032462392,5406.965740167
c007,0,3,10,227083,205216,214672,214672,6000.035875599,6007.272934632
c007,0,3,11,200385,180454,189407,189407,6600.038934238,6607.584119668
# search time: 6600.039s
# total time: 6608.018s
c007,1,3,1,1125332,972462,1092451,1092451,600.000556908,600.266300173
c007,1,3,2,621091,586726,602719,602719,1200.000605038,1200.619220069
c007,1,3,3,510005,465166,481444,481444,1800.00128078,1800.980185053
c007,1,3,4,495444,463403,478959,478959,2400.002092967,2401.238388089
c007,1,3,5,429395,401968,415424,415424,3000.003512784,3001.473046277
c007,1,3,6,361300,331090,345479,345479,3600.0044001180004,3601.693250208
c007,1,3,7,307381,281357,293663,293663,4200.006119772001,4201.902814585
c007,1,3,8,262772,239099,250798,250798,4800.0069421260005,4802.07883134
c007,1,3,9,244664,222376,233396,233396,5400.008038571001,5402.250138193
c007,1,3,10,225415,203345,213051,213051,6000.0095348800005,6002.45013594
c007,1,3,11,198190,178566,187194,187194,6600.018976731,6602.612304718
# search time: 6600.019s
# total time: 13211.275s
c007,2,3,1,1066537,868039,1021753,1021753,600.000678155,600.16140979
c007,2,3,2,628220,592598,608860,608860,1200.000789042,1200.412407906
c007,2,3,3,515425,471630,487502,487502,1800.0013666579998,1800.672459197
c007,2,3,4,483722,452229,467460,467460,2400.008381073,2400.864516632
c007,2,3,5,428179,400809,414247,414247,3000.0091504949996,3001.049251503
c007,2,3,6,363620,332802,347456,347456,3600.0136327109994,3601.222388194
c007,2,3,7,305737,279929,292092,292092,4200.014673868,4201.377946644
c007,2,3,8,261875,238276,249926,249926,4800.016215305,4801.502455327
c007,2,3,9,245536,223284,234177,234177,5400.0183521809995,5401.644256617
c007,2,3,10,225004,202947,212733,212733,6000.020689297,6001.804494978
c007,2,3,11,197576,178088,186722,186722,6600.021148626,6601.927620829
# search time: 6600.021s
# total time: 19813.838s
c007,3,3,1,1146090,992469,1113400,1113400,600.002191568,600.268966673
c007,3,3,2,630259,594365,610701,610701,1200.005467949,1200.490352368
c007,3,3,3,517149,473305,489290,489290,1800.006232131,1800.699625964
c007,3,3,4,483922,452623,467916,467916,2400.009987164,2400.873804137
c007,3,3,5,429376,401431,415262,415262,3000.012738994,3001.02235909
c007,3,3,6,360644,330378,344800,344800,3600.0134610799996,3601.155876393
c007,3,3,7,307924,281821,294136,294136,4200.013569274,4201.271984943
c007,3,3,8,262709,239355,250828,250828,4800.014240121,4801.378576737
c007,3,3,9,245063,222472,233602,233602,5400.017181444,5401.489160362
c007,3,3,10,223902,201962,211532,211532,6000.017915522,6001.612441852
c007,3,3,11,199563,179904,188680,188680,6600.024660507001,6601.725614929
# search time: 6600.025s
# total time: 26416.187s
c007,4,3,1,1068942,904740,1032677,1032677,600.002927621,600.196594796
c007,4,3,2,636631,600635,617022,617022,1200.008426734,1200.3933489
c007,4,3,3,509174,464306,480643,480643,1800.0099618630002,1800.565842551
c007,4,3,4,491091,459206,474624,474624,2400.011522305,2400.725583578
c007,4,3,5,434423,406617,420251,420251,3000.015682843,3000.864899251
c007,4,3,6,360495,330253,344762,344762,3600.015987084,3600.992876364
c007,4,3,7,306655,280999,293155,293155,4200.021465152,4201.11173369
c007,4,3,8,260679,237590,248941,248941,4800.023319868,4801.215242498
c007,4,3,9,245140,222883,233780,233780,5400.025421914,5401.322271215
c007,4,3,10,226059,203887,213639,213639,6000.0357717649995,6001.441933926
c007,4,3,11,199428,179290,188375,188375,6600.036660923999,6601.535910907
# search time: 6600.037s
# total time: 33018.350s
