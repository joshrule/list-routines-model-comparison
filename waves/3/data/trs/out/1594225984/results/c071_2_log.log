    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.70s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c071_2.json out/1594225984/results/c071_2_best.csv out/1594225984/results/c071_2_predictions.csv out/1594225984/results/c071_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 5, 7]), o: IntList([6, 7, 9]) }
#   Datum { i: IntList([6, 0, 6, 6, 0, 2, 6, 2, 0]), o: IntList([8, 2, 8, 8, 2, 4, 8, 4, 2]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([5, 5]), o: IntList([7, 7]) }
#   Datum { i: IntList([6]), o: IntList([8]) }
#   Datum { i: IntList([6, 7, 7, 6, 1, 4, 2, 6, 5]), o: IntList([8, 9, 9, 8, 3, 6, 4, 8, 7]) }
#   Datum { i: IntList([1, 4, 3, 6, 0]), o: IntList([3, 6, 5, 8, 2]) }
#   Datum { i: IntList([0, 0, 7, 0]), o: IntList([2, 2, 9, 2]) }
#   Datum { i: IntList([7, 7, 1, 4, 4, 6, 4, 1, 4, 0]), o: IntList([9, 9, 3, 6, 6, 8, 6, 3, 6, 2]) }
#   Datum { i: IntList([1, 3, 3, 2, 4, 5, 6]), o: IntList([3, 5, 5, 4, 6, 7, 8]) }
#   Datum { i: IntList([0, 7, 5, 7, 6, 3, 4, 2]), o: IntList([2, 9, 7, 9, 8, 5, 6, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c071,0,2,1,1085981,1085982,927700,600.012645535,601.953668291
c071,0,2,2,548221,548401,532682,1200.013474453,1202.986531696
c071,0,2,3,205988,206172,204523,1800.016158114,1803.943347237
c071,0,2,4,143023,143202,142279,2400.019453509,2404.86952849
c071,0,2,5,125683,125870,125014,3000.027169206,3005.773946859
c071,0,2,6,133516,133699,132588,3600.033728636,3606.416735649
c071,0,2,7,87720,87905,87518,4200.035206733,4207.081623062
c071,0,2,8,75138,75321,74625,4800.039200331001,4807.7879487
c071,0,2,9,66187,66366,65688,5400.040764906001,5408.484302736
c071,0,2,10,52138,52312,51804,6000.042303718001,6009.136688175
c071,0,2,11,43867,44047,43607,6600.064976093001,6609.869576517
# search time: 6600.065s
# total time: 6610.259s
c071,1,2,1,1016000,1016001,906448,600.000239896,600.413838993
c071,1,2,2,537819,537989,523633,1200.000407379,1201.003653951
c071,1,2,3,200669,200842,199237,1800.003865907,1801.394814062
c071,1,2,4,140648,140814,139912,2400.009517471,2401.818677258
c071,1,2,5,124149,124321,123469,3000.0102704299998,3002.204622217
c071,1,2,6,127101,127263,126213,3600.017205999,3602.582910813
c071,1,2,7,87265,87438,86996,4200.020348113,4202.868265539
c071,1,2,8,71750,71921,71106,4800.024761115,4803.229110051
c071,1,2,9,84144,84318,83529,5400.025677428,5403.563152126
c071,1,2,10,65668,65839,65216,6000.038817074999,6003.926102017
c071,1,2,11,58242,58415,57850,6600.046582083999,6604.25504736
# search time: 6600.047s
# total time: 13215.213s
c071,2,2,1,1150172,1150173,1025937,600.000187173,600.294266968
c071,2,2,2,530595,530761,517193,1200.0084110120001,1200.603961948
c071,2,2,3,203440,203620,202057,1800.0085342020002,1800.882795235
c071,2,2,4,134712,134880,133591,2400.012767784,2401.157688483
c071,2,2,5,123325,123495,122651,3000.017342515,3001.394725199
c071,2,2,6,128596,128769,127724,3600.01959453,3601.610950913
c071,2,2,7,85260,85435,84995,4200.025992616,4201.863347798
c071,2,2,8,71876,72047,71318,4800.032613212999,4802.11405576
c071,2,2,9,66202,66382,65758,5400.035431402999,5402.365894079
c071,2,2,10,48722,48892,48405,6000.038818873999,6002.622162775
c071,2,2,11,43355,43529,43094,6600.065446044999,6602.876194161
# search time: 6600.065s
# total time: 19818.804s
c071,3,2,1,986383,986384,876249,600.00036088,600.231871078
c071,3,2,2,522839,523010,509072,1200.0005884759998,1200.479379144
c071,3,2,3,189257,189434,187846,1800.0017680849999,1800.688103861
c071,3,2,4,138422,138595,137747,2400.003938457,2400.930039332
c071,3,2,5,120753,120933,120113,3000.004221776,3001.128086351
c071,3,2,6,128005,128180,127092,3600.0046635010003,3601.312078344
c071,3,2,7,84065,84237,83827,4200.006197467001,4201.461766942
c071,3,2,8,73073,73244,72529,4800.013446799001,4801.677037294
c071,3,2,9,63513,63694,63062,5400.014566007001,5401.855713035
c071,3,2,10,49595,49771,49299,6000.022881548001,6002.084549007
c071,3,2,11,42279,42454,42000,6600.023172753002,6602.327836798
# search time: 6600.023s
# total time: 26421.760s
c071,4,2,1,945166,945167,838343,600.001358382,600.205937946
c071,4,2,2,507733,507893,493779,1200.0014110500001,1200.424375628
c071,4,2,3,189307,189468,187971,1800.0036101150001,1800.619180103
c071,4,2,4,135698,135861,135004,2400.004472769,2400.806603489
c071,4,2,5,123734,123893,123051,3000.009193035,3000.971152834
c071,4,2,6,127095,127274,126204,3600.011299048,3601.107272831
c071,4,2,7,82223,82391,82034,4200.013131377,4201.254766463
c071,4,2,8,71697,71855,71172,4800.0157245949995,4801.413507508
c071,4,2,9,65170,65340,64735,5400.023747118,5401.575214947
c071,4,2,10,50143,50306,49810,6000.0297877269995,6001.714626849
c071,4,2,11,42471,42633,42222,6600.043269004,6601.927287927
# search time: 6600.043s
# total time: 33025.247s
