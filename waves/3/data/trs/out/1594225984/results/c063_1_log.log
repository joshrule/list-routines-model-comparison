    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.59s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c063_1.json out/1594225984/results/c063_1_best.csv out/1594225984/results/c063_1_predictions.csv out/1594225984/results/c063_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 2, 2, 2]), o: IntList([2]) }
#   Datum { i: IntList([0, 2, 0]), o: IntList([2, 0]) }
#   Datum { i: IntList([3, 8, 8, 7, 7, 7, 8, 8]), o: IntList([7, 7, 8, 8]) }
#   Datum { i: IntList([3, 8, 4, 4]), o: IntList([]) }
#   Datum { i: IntList([0, 9, 7, 1, 1, 5, 4, 3, 6, 6]), o: IntList([9, 7, 1, 1, 5, 4, 3, 6, 6]) }
#   Datum { i: IntList([4, 1, 1, 4, 1, 1, 3]), o: IntList([1, 3]) }
#   Datum { i: IntList([0, 5, 0, 5, 5, 7]), o: IntList([5, 0, 5, 5, 7]) }
#   Datum { i: IntList([2, 6, 2, 6, 6, 6]), o: IntList([6, 6, 6]) }
#   Datum { i: IntList([0, 3, 9, 4, 6, 6, 7, 8, 2]), o: IntList([3, 9, 4, 6, 6, 7, 8, 2]) }
#   Datum { i: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([1, 7, 9, 9, 8, 4, 1, 7, 8]), o: IntList([9, 9, 8, 4, 1, 7, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c063,0,1,1,1084905,1084906,928502,600.008885469,601.968388733
c063,0,1,2,689475,689661,670634,1200.0145676329998,1203.568240536
c063,0,1,3,578091,578276,569518,1800.0151220429998,1804.359969391
c063,0,1,4,295847,296029,294110,2400.016972053,2405.046977142
c063,0,1,5,304502,304682,297067,3000.017618596,3005.644644092
c063,0,1,6,156902,157078,153663,3600.028566859,3606.174462212
c063,0,1,7,156922,157099,153902,4200.030585669,4206.551375147
c063,0,1,8,102976,103159,100676,4800.031140898001,4807.138752729
c063,0,1,9,112119,112305,109716,5400.032801015001,5407.534822035
c063,0,1,10,71011,71190,69130,6000.033139517001,6008.04267079
c063,0,1,11,57128,57310,55640,6600.043926390001,6608.696772879
# search time: 6600.044s
# total time: 6609.263s
c063,1,1,1,1003359,1003360,856416,600.007475168,600.258648039
c063,1,1,2,701257,701449,681560,1200.0075452820001,1200.682968622
c063,1,1,3,554683,554871,546766,1800.007873038,1801.065187902
c063,1,1,4,290574,290765,289002,2400.010347057,2401.404444018
c063,1,1,5,302558,302747,295443,3000.0105364240003,3001.695318251
c063,1,1,6,155172,155362,151617,3600.01373254,3601.959204417
c063,1,1,7,153403,153592,150611,4200.014319732,4202.189713673
c063,1,1,8,98596,98787,96588,4800.015439888,4802.46123059
c063,1,1,9,138894,139080,136108,5400.023620504,5402.66407706
c063,1,1,10,90503,90692,88477,6000.024958594,6002.941251947
c063,1,1,11,76250,76442,74238,6600.031511958,6603.197293133
# search time: 6600.032s
# total time: 13212.975s
c063,2,1,1,1190731,1190732,1015932,600.000122439,600.222254076
c063,2,1,2,692078,692262,673169,1200.001944759,1200.520274748
c063,2,1,3,558802,558979,550691,1800.002239948,1800.788886867
c063,2,1,4,284237,284421,282590,2400.003406597,2401.038279132
c063,2,1,5,296958,297135,289794,3000.003907416,3001.284455168
c063,2,1,6,151035,151207,147849,3600.003914152,3601.461952996
c063,2,1,7,150079,150254,147315,4200.006750141,4201.604606361
c063,2,1,8,96439,96621,94429,4800.008284051,4801.86624695
c063,2,1,9,107949,108131,105659,5400.012756427001,5402.027293969
c063,2,1,10,68430,68608,66567,6000.020835659001,6002.215025806
c063,2,1,11,56334,56517,54709,6600.024609830001,6602.393031818
# search time: 6600.025s
# total time: 19815.870s
c063,3,1,1,1030324,1030325,880827,600.000103801,600.17835363
c063,3,1,2,666447,666626,647785,1200.000103982,1200.430699443
c063,3,1,3,551883,552070,543177,1800.000755305,1800.656278407
c063,3,1,4,283756,283941,282200,2400.00081625,2400.833710953
c063,3,1,5,293264,293451,286195,3000.002265824,3001.012157925
c063,3,1,6,149630,149808,146570,3600.006446574,3601.161136813
c063,3,1,7,148900,149081,146193,4200.006636466,4201.299127253
c063,3,1,8,98609,98792,96469,4800.011855361,4801.49108195
c063,3,1,9,107409,107594,105211,5400.012481346,5401.607002056
c063,3,1,10,68205,68383,66410,6000.024319321,6001.726068481
c063,3,1,11,54627,54813,53129,6600.026397247,6601.89103438
# search time: 6600.026s
# total time: 26418.247s
c063,4,1,1,943697,943698,849709,600.003732087,600.222108593
c063,4,1,2,650878,651036,633651,1200.0139877010001,1200.452625984
c063,4,1,3,555636,555798,547133,1800.0152182790002,1800.667774412
c063,4,1,4,285073,285243,283535,2400.01671859,2400.840439529
c063,4,1,5,293551,293720,286435,3000.017661821,3000.991444478
c063,4,1,6,149145,149306,146038,3600.018210159,3601.120769232
c063,4,1,7,149188,149349,146486,4200.021033313,4201.243003877
c063,4,1,8,98937,99097,96763,4800.030223731,4801.395336652
c063,4,1,9,108662,108824,106508,5400.0321252349995,5401.500867828
c063,4,1,10,68093,68251,66260,6000.037753072999,6001.612572266
c063,4,1,11,56226,56385,54600,6600.040684432,6601.753105614
# search time: 6600.041s
# total time: 33020.362s
