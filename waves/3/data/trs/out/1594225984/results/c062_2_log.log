    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.64s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c062_2.json out/1594225984/results/c062_2_best.csv out/1594225984/results/c062_2_predictions.csv out/1594225984/results/c062_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 9, 8]), o: IntList([1, 9]) }
#   Datum { i: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6, 3]), o: IntList([6, 8, 3, 7, 7, 3, 7, 7, 6]) }
#   Datum { i: IntList([1, 9, 2, 8, 0, 6]), o: IntList([1, 9, 2, 8, 0]) }
#   Datum { i: IntList([8]), o: IntList([]) }
#   Datum { i: IntList([1, 2, 5, 4, 5, 4, 7]), o: IntList([1, 2, 5, 4, 5, 4]) }
#   Datum { i: IntList([6, 8, 9, 3, 7, 5, 2, 1]), o: IntList([6, 8, 9, 3, 7, 5, 2]) }
#   Datum { i: IntList([2, 5, 2, 7]), o: IntList([2, 5, 2]) }
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([7, 6, 0, 7, 3]), o: IntList([7, 6, 0, 7]) }
#   Datum { i: IntList([4, 2, 0, 3, 4, 0, 0, 3, 4]), o: IntList([4, 2, 0, 3, 4, 0, 0, 3]) }
#   Datum { i: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2, 4]), o: IntList([1, 3, 8, 5, 7, 6, 0, 9, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c062,0,2,1,1061092,1061093,904592,600.000931161,601.94780141
c062,0,2,2,603068,603255,586772,1200.001242862,1203.174723237
c062,0,2,3,211063,211248,209579,1800.002839156,1804.112808811
c062,0,2,4,160679,160865,159739,2400.004713027,2405.102135718
c062,0,2,5,168107,168292,162787,3000.010850674,3005.622173675
c062,0,2,6,123807,123989,119521,3600.0124645019996,3606.211880679
c062,0,2,7,88791,88969,85880,4200.013609752999,4206.877106923
c062,0,2,8,82720,82905,79743,4800.016337128999,4807.472173854
c062,0,2,9,76838,77022,74831,5400.019981270999,5408.06465502
c062,0,2,10,67685,67867,65657,6000.021287603999,6008.729008292
c062,0,2,11,53806,53990,52022,6600.032263295999,6609.308563416
# search time: 6600.032s
# total time: 6609.728s
c062,1,2,1,936472,936473,828569,600.000125256,600.303597315
c062,1,2,2,610263,610429,593874,1200.0005396400002,1200.931124589
c062,1,2,3,207728,207894,206223,1800.0048600040002,1801.346736723
c062,1,2,4,160429,160605,159419,2400.0073488460002,2401.762740767
c062,1,2,5,166251,166430,161224,3000.0083059880003,3002.051276179
c062,1,2,6,119463,119635,115467,3600.0110228420003,3602.351134853
c062,1,2,7,89448,89619,86435,4200.018434223,4202.655576926
c062,1,2,8,80136,80309,77377,4800.0207486360005,4803.028779991
c062,1,2,9,97731,97900,95050,5400.029119811001,5403.342519168
c062,1,2,10,88959,89134,86383,6000.030417860001,6003.722166726
c062,1,2,11,72020,72191,69723,6600.031058272001,6604.00746415
# search time: 6600.031s
# total time: 13214.401s
c062,2,2,1,1193636,1193637,1019774,600.000099817,600.253676877
c062,2,2,2,604150,604341,588575,1200.000144188,1200.5851546
c062,2,2,3,205202,205395,203641,1800.001569907,1800.924431005
c062,2,2,4,160268,160459,159256,2400.004612843,2401.199360953
c062,2,2,5,160780,160973,156103,3000.007068561,3001.406900186
c062,2,2,6,114170,114360,110300,3600.0104141929996,3601.586670027
c062,2,2,7,87545,87731,84620,4200.010560756,4201.772921326
c062,2,2,8,77743,77932,75125,4800.0151723809995,4802.063432149
c062,2,2,9,76525,76715,74316,5400.015402741999,5402.256942478
c062,2,2,10,66880,67068,64778,6000.017781772,6002.456815503
c062,2,2,11,49379,49569,47973,6600.021394201,6602.718378308
# search time: 6600.021s
# total time: 19817.854s
c062,3,2,1,926579,926580,790925,600.000312622,600.16318809
c062,3,2,2,608051,608231,591194,1200.0023632080001,1200.438436243
c062,3,2,3,204443,204625,202906,1800.002865809,1800.626827382
c062,3,2,4,150306,150495,149351,2400.004653682,2400.853940961
c062,3,2,5,161578,161766,156672,3000.00676153,3001.014601073
c062,3,2,6,121178,121363,117090,3600.008017528,3601.142058018
c062,3,2,7,86645,86828,83773,4200.009640753,4201.308443206
c062,3,2,8,79078,79264,76288,4800.026011407,4801.504356348
c062,3,2,9,72819,73005,70984,5400.034224282,5401.701813668
c062,3,2,10,64292,64472,62493,6000.040456997,6001.899664372
c062,3,2,11,52437,52619,50650,6600.043918644999,6602.113396471
# search time: 6600.044s
# total time: 26420.313s
c062,4,2,1,902765,902766,792396,600.003688131,600.213707929
c062,4,2,2,601007,601179,584993,1200.003694885,1200.448236517
c062,4,2,3,199758,199927,198265,1800.0045218,1800.631643241
c062,4,2,4,158082,158256,157141,2400.005727447,2400.804260336
c062,4,2,5,162333,162514,157331,3000.006692194,3000.923282967
c062,4,2,6,120026,120204,115842,3600.010475274,3601.060298385
c062,4,2,7,86467,86643,83414,4200.013816161,4201.191027176
c062,4,2,8,77285,77465,74609,4800.015511784,4801.385726876
c062,4,2,9,69416,69586,67591,5400.021059613,5401.554234791
c062,4,2,10,66975,67151,64750,6000.024588738,6001.708105358
c062,4,2,11,51457,51633,49632,6600.030431728999,6601.855281789
# search time: 6600.030s
# total time: 33022.836s
