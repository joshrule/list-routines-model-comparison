    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.67s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c076_3.json out/1594225984/results/c076_3_best.csv out/1594225984/results/c076_3_predictions.csv out/1594225984/results/c076_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 0, 9, 7, 1, 0]), o: IntList([3, 6, 4]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 9, 9, 7]), o: IntList([6, 6, 4, 4, 4, 6, 6, 4]) }
#   Datum { i: IntList([6, 2, 3]), o: IntList([3]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8, 8, 8, 8]), o: IntList([5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([7, 7, 0, 7, 6, 9, 2, 2, 7, 2]), o: IntList([4, 4, 4, 3, 6, 4]) }
#   Datum { i: IntList([7, 8, 4, 2, 5, 0, 1, 9, 7]), o: IntList([4, 5, 6, 4]) }
#   Datum { i: IntList([4, 1, 4, 4, 1, 4]), o: IntList([]) }
#   Datum { i: IntList([0, 9, 4, 7]), o: IntList([6, 4]) }
#   Datum { i: IntList([0, 9, 5, 7, 3, 8, 6, 7]), o: IntList([6, 4, 5, 3, 4]) }
#   Datum { i: IntList([8, 0]), o: IntList([5]) }
#   Datum { i: IntList([6, 2, 2, 2, 6, 3, 3, 6]), o: IntList([3, 3, 3]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c076,0,3,1,1005777,1005778,900317,600.000566575,602.631280503
c076,0,3,2,472182,472342,459681,1200.000994001,1204.616840742
c076,0,3,3,219139,219304,217394,1800.006403683,1805.742030649
c076,0,3,4,216250,216409,215347,2400.00674579,2406.584463552
c076,0,3,5,116834,116995,116464,3000.022115804,3007.31590173
c076,0,3,6,90320,90479,90062,3600.026884597,3608.123397172
c076,0,3,7,72387,72555,72075,4200.030086607,4209.044286466
c076,0,3,8,67661,67823,65331,4800.033394082,4809.82475401
c076,0,3,9,63008,63172,60474,5400.041289935,5410.549118993
c076,0,3,10,53860,54020,51568,6000.042496450001,6011.476852272
c076,0,3,11,52627,52787,50206,6600.047302911001,6612.335063542
# search time: 6600.047s
# total time: 6612.735s
c076,1,3,1,946050,946051,841348,600.000120345,600.333857295
c076,1,3,2,471860,472027,459287,1200.011700304,1201.016940944
c076,1,3,3,224580,224742,222882,1800.01331203,1801.420368735
c076,1,3,4,215317,215483,214471,2400.020227276,2401.776471738
c076,1,3,5,118461,118633,118050,3000.024614133,3002.13326373
c076,1,3,6,91579,91745,91218,3600.024874789,3602.44709241
c076,1,3,7,72755,72923,72428,4200.025100301,4202.822728408
c076,1,3,8,66833,67001,64506,4800.026685093,4803.14234577
c076,1,3,9,72996,73156,70217,5400.032351287,5403.578149922
c076,1,3,10,61015,61180,58480,6000.036534648,6004.121306737
c076,1,3,11,59281,59440,56540,6600.048427244001,6604.532463353
# search time: 6600.048s
# total time: 13217.970s
c076,2,3,1,1046042,1046043,928069,600.000049725,600.311219927
c076,2,3,2,459429,459597,447345,1200.000635262,1200.76039156
c076,2,3,3,213463,213623,211848,1800.0040186380002,1801.055445775
c076,2,3,4,206130,206303,205474,2400.005022374,2401.329139706
c076,2,3,5,111519,111684,111218,3000.007582575,3001.57558797
c076,2,3,6,86149,86324,85888,3600.008510572,3601.812606115
c076,2,3,7,65147,65318,64765,4200.008767352,4202.147474505
c076,2,3,8,63507,63674,61255,4800.021305078,4802.515815084
c076,2,3,9,59658,59824,57361,5400.03196357,5402.762482166
c076,2,3,10,49739,49906,47491,6000.042960829,6003.076469018
c076,2,3,11,50985,51148,48703,6600.047197516,6603.48790755
# search time: 6600.047s
# total time: 19822.170s
c076,3,3,1,893045,893046,782285,600.009261943,600.22554454
c076,3,3,2,451183,451353,439218,1200.009328704,1200.570278765
c076,3,3,3,219514,219688,217893,1800.012059913,1800.771984913
c076,3,3,4,209217,209401,208479,2400.0135000170003,2400.972821008
c076,3,3,5,113347,113524,113012,3000.0160888440005,3001.184619022
c076,3,3,6,85718,85891,85502,3600.0193762400004,3601.33256349
c076,3,3,7,71256,71430,70971,4200.0223432190005,4201.5582918
c076,3,3,8,64807,64979,62446,4800.0339440220005,4801.826197016
c076,3,3,9,61466,61635,58868,5400.048514123,5402.15456448
c076,3,3,10,52716,52882,50421,6000.064598817,6002.444462755
c076,3,3,11,51466,51635,49153,6600.085674046,6602.653112257
# search time: 6600.086s
# total time: 26425.490s
c076,4,3,1,930840,930841,830649,600.002470406,600.230419198
c076,4,3,2,431078,431252,419578,1200.002496998,1200.496609716
c076,4,3,3,219056,219228,217397,1800.003838011,1800.680107627
c076,4,3,4,208877,209045,208021,2400.006447332,2400.841948257
c076,4,3,5,114607,114777,114203,3000.007144281,3000.990516564
c076,4,3,6,89390,89563,89040,3600.007200654,3601.163402517
c076,4,3,7,69805,69974,69533,4200.008806526,4201.374565994
c076,4,3,8,65159,65330,62849,4800.0213297069995,4801.597062932
c076,4,3,9,61691,61863,59168,5400.026674436999,5401.756593811
c076,4,3,10,52377,52549,49994,6000.041223668999,6001.935896291
c076,4,3,11,51537,51710,49192,6600.053717368999,6602.099874712
# search time: 6600.054s
# total time: 33028.438s
