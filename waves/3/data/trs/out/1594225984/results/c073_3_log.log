    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.70s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c073_3.json out/1594225984/results/c073_3_best.csv out/1594225984/results/c073_3_predictions.csv out/1594225984/results/c073_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([2, 5, 5]), o: IntList([3, 7, 8]) }
#   Datum { i: IntList([6, 7, 6, 4, 4, 0]), o: IntList([7, 9, 9, 8, 9, 6]) }
#   Datum { i: IntList([1, 1, 1, 1, 0, 1, 0, 1, 0]), o: IntList([2, 3, 4, 5, 5, 7, 7, 9, 9]) }
#   Datum { i: IntList([4, 4, 4, 4]), o: IntList([5, 6, 7, 8]) }
#   Datum { i: IntList([3, 3]), o: IntList([4, 5]) }
#   Datum { i: IntList([8, 0, 1, 1, 1, 0, 0, 0]), o: IntList([9, 2, 4, 5, 6, 6, 7, 8]) }
#   Datum { i: IntList([5, 5, 5, 2, 2, 2]), o: IntList([6, 7, 8, 6, 7, 8]) }
#   Datum { i: IntList([1]), o: IntList([2]) }
#   Datum { i: IntList([1, 3, 3, 5, 3, 0, 0, 1, 0]), o: IntList([2, 5, 6, 9, 8, 6, 7, 9, 9]) }
#   Datum { i: IntList([8, 5, 1, 3, 0, 2, 0]), o: IntList([9, 7, 4, 7, 5, 8, 7]) }
#   Datum { i: IntList([2, 2, 1, 3, 1]), o: IntList([3, 4, 4, 7, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c073,0,3,1,1044385,1044386,930313,600.000133501,602.565927061
c073,0,3,2,526659,526826,512458,1200.000249633,1203.626803222
c073,0,3,3,266015,266183,263878,1800.001449029,1804.598831217
c073,0,3,4,137600,137768,137409,2400.001724709,2405.401060919
c073,0,3,5,120689,120865,120462,3000.004097912,3006.163946216
c073,0,3,6,107978,108151,107771,3600.007195061,3606.840718679
c073,0,3,7,86108,86275,85799,4200.008545328,4207.436497565
c073,0,3,8,72963,73130,72686,4800.009667054,4808.023700092
c073,0,3,9,69509,69674,69064,5400.012897535,5408.615550449
c073,0,3,10,55136,55305,54989,6000.022220063,6009.272165282
c073,0,3,11,45877,46045,45704,6600.024147491999,6609.810670919
# search time: 6600.024s
# total time: 6610.234s
c073,1,3,1,971477,971478,829171,600.000180041,600.240126625
c073,1,3,2,527116,527306,513447,1200.000345911,1200.674666405
c073,1,3,3,268680,268867,266538,1800.000361435,1801.064031694
c073,1,3,4,138438,138622,138249,2400.005403787,2401.480470681
c073,1,3,5,119913,120107,119674,3000.008765845,3001.897579944
c073,1,3,6,102814,103006,102769,3600.0090848,3602.256146905
c073,1,3,7,83108,83298,82915,4200.017439433,4202.589921821
c073,1,3,8,69282,69471,69136,4800.020895991,4802.857918025
c073,1,3,9,83361,83549,83007,5400.021732777,5403.198490381
c073,1,3,10,60955,61144,60919,6000.022687474,6003.547599639
c073,1,3,11,53089,53275,52921,6600.02349491,6603.857718963
# search time: 6600.023s
# total time: 13214.825s
c073,2,3,1,1134836,1134837,1023053,600.006297152,600.349289085
c073,2,3,2,517939,518106,504689,1200.008516195,1200.633397342
c073,2,3,3,262353,262518,260334,1800.0092161520001,1800.910146785
c073,2,3,4,133790,133962,133588,2400.012693982,2401.170713993
c073,2,3,5,121155,121320,120896,3000.0147252680003,3001.445338746
c073,2,3,6,104007,104175,103962,3600.015541568,3601.674041207
c073,2,3,7,83123,83285,82915,4200.023782896,4201.935187016
c073,2,3,8,72419,72596,72175,4800.025412026,4802.187590367
c073,2,3,9,72810,72987,72472,5400.034891577,5402.422754955
c073,2,3,10,55057,55236,54924,6000.044076317,6002.660149603
c073,2,3,11,46326,46497,46171,6600.052477528,6602.870284996
# search time: 6600.052s
# total time: 19818.423s
c073,3,3,1,993034,993035,880892,600.000028886,600.316930083
c073,3,3,2,516635,516809,502549,1200.000493104,1200.580274594
c073,3,3,3,260998,261169,258898,1800.0007792800002,1800.842436143
c073,3,3,4,142476,142652,142181,2400.0061983180003,2401.039716672
c073,3,3,5,116256,116423,116165,3000.0072640650005,3001.257481236
c073,3,3,6,106722,106897,106547,3600.0117055890005,3601.442276288
c073,3,3,7,82309,82477,82128,4200.015426305001,4201.63203808
c073,3,3,8,71704,71885,71478,4800.019076333001,4801.826812607
c073,3,3,9,72572,72748,72282,5400.019918896001,5401.977603075
c073,3,3,10,54515,54682,54373,6000.021067035002,6002.128119185
c073,3,3,11,47318,47490,47159,6600.050315015002,6602.356401756
# search time: 6600.050s
# total time: 26421.444s
c073,4,3,1,938495,938496,800719,600.004079912,600.177448393
c073,4,3,2,524281,524469,509955,1200.009073238,1200.409748049
c073,4,3,3,265532,265726,263423,1800.009603172,1800.597576987
c073,4,3,4,136784,136985,136607,2400.010981163,2400.758941165
c073,4,3,5,118627,118824,118392,3000.012631797,3000.92347975
c073,4,3,6,102301,102489,102234,3600.0135659,3601.062614721
c073,4,3,7,80899,81090,80764,4200.014388064,4201.21160826
c073,4,3,8,71285,71472,71029,4800.016999093,4801.366866887
c073,4,3,9,71688,71877,71347,5400.025346687,5401.53051427
c073,4,3,10,53452,53642,53353,6000.027978063,6001.685577166
c073,4,3,11,44228,44416,44133,6600.029847246,6601.856193253
# search time: 6600.030s
# total time: 33023.953s
