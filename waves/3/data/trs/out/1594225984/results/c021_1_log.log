    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.33s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c021_1.json out/1594225984/results/c021_1_best.csv out/1594225984/results/c021_1_predictions.csv out/1594225984/results/c021_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 6, 9, 3]), o: IntList([1, 8, 6, 9, 3]) }
#   Datum { i: IntList([7, 4]), o: IntList([7, 8, 4]) }
#   Datum { i: IntList([0, 2, 3]), o: IntList([0, 8, 2, 3]) }
#   Datum { i: IntList([7, 9, 1, 2, 6, 3, 0, 4, 7, 5]), o: IntList([7, 8, 9, 1, 2, 6, 3, 0, 4, 7, 5]) }
#   Datum { i: IntList([0, 8, 6, 4, 0]), o: IntList([0, 8, 8, 6, 4, 0]) }
#   Datum { i: IntList([4, 9, 5, 1, 7, 3]), o: IntList([4, 8, 9, 5, 1, 7, 3]) }
#   Datum { i: IntList([1, 8, 1, 1, 6, 2, 1, 4, 4, 3]), o: IntList([1, 8, 8, 1, 1, 6, 2, 1, 4, 4, 3]) }
#   Datum { i: IntList([2, 9, 1, 7, 4, 6, 0]), o: IntList([2, 8, 9, 1, 7, 4, 6, 0]) }
#   Datum { i: IntList([9, 2, 1, 9, 3, 3, 1, 8, 9, 2]), o: IntList([9, 8, 2, 1, 9, 3, 3, 1, 8, 9, 2]) }
#   Datum { i: IntList([5, 5, 5, 5, 5, 5, 5, 5]), o: IntList([5, 8, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([6, 6, 0, 5, 2, 6, 0, 3, 2]), o: IntList([6, 8, 6, 0, 5, 2, 6, 0, 3, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c021,0,1,1,1094655,1094656,934509,600.006952469,601.864860212
c021,0,1,2,447281,447461,435338,1200.00786715,1202.940126264
c021,0,1,3,319397,319580,306588,1800.008788446,1803.457983524
c021,0,1,4,256074,256260,246440,2400.01503295,2403.901987868
c021,0,1,5,135131,135310,130385,3000.0178801800002,3004.439873021
c021,0,1,6,115805,115987,112237,3600.018237478,3604.904904565
c021,0,1,7,94052,94231,91088,4200.025032275,4205.45945613
c021,0,1,8,71123,71300,68919,4800.027469422,4805.969834951
c021,0,1,9,60119,60294,58208,5400.031951006,5406.490743163
c021,0,1,10,48223,48398,46838,6000.033131308,6007.044151144
c021,0,1,11,41191,41371,40058,6600.0448725609995,6607.69958066
# search time: 6600.045s
# total time: 6607.952s
c021,1,1,1,1027735,1027736,919668,600.000073909,600.348327405
c021,1,1,2,439186,439356,427620,1200.000094379,1200.753765764
c021,1,1,3,325430,325606,314019,1800.0006850500001,1801.017060414
c021,1,1,4,256102,256284,246942,2400.002315233,2401.22546497
c021,1,1,5,134870,135045,130333,3000.016519036,3001.502602672
c021,1,1,6,114962,115140,111326,3600.018980187,3601.771169204
c021,1,1,7,94110,94285,91137,4200.021000907,4202.00232008
c021,1,1,8,70788,70959,68464,4800.0221099049995,4802.203944646
c021,1,1,9,67978,68149,66008,5400.033505437999,5402.472160371
c021,1,1,10,54429,54607,52742,6000.035330454999,6002.737976874
c021,1,1,11,46951,47126,45343,6600.039921173999,6603.049027493
# search time: 6600.040s
# total time: 13211.454s
c021,2,1,1,985063,985064,863217,600.000098333,600.559965795
c021,2,1,2,423864,424037,412488,1200.000992356,1200.860906577
c021,2,1,3,298070,298242,286969,1800.0071644900002,1801.051227451
c021,2,1,4,237159,237335,228826,2400.008315339,2401.221434738
c021,2,1,5,125616,125782,121519,3000.009279776,3001.404796398
c021,2,1,6,106480,106656,102734,3600.0093749459998,3601.602785264
c021,2,1,7,88618,88793,85789,4200.016397122,4201.76233978
c021,2,1,8,66862,67037,64731,4800.019638779,4801.938473017
c021,2,1,9,56140,56312,54060,5400.027753056,5402.175847448
c021,2,1,10,45917,46093,44498,6000.03997879,6002.401981624
c021,2,1,11,38967,39142,37865,6600.045780869,6602.633853257
# search time: 6600.046s
# total time: 19814.340s
c021,3,1,1,905695,905696,809444,600.000217923,600.233705711
c021,3,1,2,425979,426139,414632,1200.002335848,1200.474411803
c021,3,1,3,317553,317725,307332,1800.0026768120001,1800.632984724
c021,3,1,4,234165,234328,224314,2400.003913122,2400.757895043
c021,3,1,5,127342,127508,123429,3000.006384576,3000.89306281
c021,3,1,6,107860,108022,104489,3600.009016549,3601.018353159
c021,3,1,7,88278,88444,85386,4200.010600107,4201.148369691
c021,3,1,8,67068,67228,64940,4800.018267722,4801.294671972
c021,3,1,9,56737,56901,55132,5400.02434848,5401.465038679
c021,3,1,10,46354,46517,44926,6000.028497570001,6001.645948172
c021,3,1,11,40242,40405,39108,6600.034113112,6601.887080751
# search time: 6600.034s
# total time: 26416.741s
c021,4,1,1,1040657,1040658,888762,600.000028286,600.268137835
c021,4,1,2,423891,424076,412752,1200.000731749,1200.459279502
c021,4,1,3,322451,322636,310101,1800.0048087149999,1800.59781495
c021,4,1,4,240766,240953,231295,2400.005419915,2400.715956425
c021,4,1,5,131460,131641,127066,3000.0090852,3000.822490606
c021,4,1,6,111210,111398,107672,3600.011354094,3600.93718557
c021,4,1,7,91201,91385,87825,4200.015192969,4201.047808547
c021,4,1,8,68820,69001,66598,4800.016300345,4801.165080407
c021,4,1,9,58614,58794,56937,5400.031648683,5401.297499707
c021,4,1,10,46405,46591,45127,6000.03457478,6001.439961123
c021,4,1,11,39614,39797,38292,6600.060652649,6601.632472177
# search time: 6600.061s
# total time: 33018.828s
