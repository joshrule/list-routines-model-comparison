    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.56s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c042_2.json out/1594225984/results/c042_2_best.csv out/1594225984/results/c042_2_predictions.csv out/1594225984/results/c042_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 9, 9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 4, 1, 2]), o: IntList([5, 2]) }
#   Datum { i: IntList([4]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 3, 8, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([6, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([3, 7, 7, 4, 7, 3]), o: IntList([5, 2]) }
#   Datum { i: IntList([4, 4]), o: IntList([5, 2]) }
#   Datum { i: IntList([9, 8]), o: IntList([5, 2]) }
#   Datum { i: IntList([]), o: IntList([5, 2]) }
#   Datum { i: IntList([2, 6, 0, 0, 8, 9, 6, 6, 9, 0]), o: IntList([5, 2]) }
#   Datum { i: IntList([1, 1, 0, 7, 7]), o: IntList([5, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c042,0,2,1,999632,999633,886634,600.001558155,602.623862685
c042,0,2,2,614039,614201,597187,1200.001742147,1203.82886032
c042,0,2,3,401650,401811,392569,1800.0020975369998,1804.651854169
c042,0,2,4,360418,360585,350979,2400.0031427679996,2405.297180162
c042,0,2,5,291057,291230,283763,3000.0038208299998,3005.930075784
c042,0,2,6,256708,256878,245810,3600.0060754769997,3606.38129652
c042,0,2,7,221119,221284,214660,4200.006291748,4206.834784105
c042,0,2,8,200005,200176,193944,4800.008338803,4807.283226304
c042,0,2,9,147582,147752,144086,5400.01124643,5407.810139311
c042,0,2,10,158866,159034,156490,6000.013669529,6008.178698155
c042,0,2,11,145299,145470,142763,6600.0144016350005,6608.544220055
# search time: 6600.014s
# total time: 6608.954s
c042,1,2,1,973375,973376,877148,600.000858753,600.309021785
c042,1,2,2,610578,610737,593776,1200.001136196,1200.691465235
c042,1,2,3,397521,397687,388846,1800.0015976720001,1801.021283001
c042,1,2,4,353841,354010,344002,2400.002219019,2401.280987674
c042,1,2,5,289302,289470,282034,3000.0026009770004,3001.545442246
c042,1,2,6,260961,261129,253038,3600.0028274130004,3601.770361031
c042,1,2,7,225255,225424,219131,4200.003411503,4202.004890089
c042,1,2,8,205132,205307,199439,4800.004696779,4802.210497463
c042,1,2,9,177896,178071,173706,5400.005018912,5402.438556068
c042,1,2,10,175693,175863,172502,6000.008693223001,6002.632878654
c042,1,2,11,166682,166860,164021,6600.012138653001,6602.797199766
# search time: 6600.012s
# total time: 13212.349s
c042,2,2,1,1152099,1152100,985121,600.00948367,600.208884545
c042,2,2,2,591338,591517,575917,1200.0095407210001,1200.468287724
c042,2,2,3,400920,401106,392832,1800.01089839,1800.705043611
c042,2,2,4,345411,345595,335950,2400.011580434,2400.899757763
c042,2,2,5,276617,276803,269193,3000.012604423,3001.133313266
c042,2,2,6,255559,255746,248251,3600.02015948,3601.313219287
c042,2,2,7,198556,198742,191074,4200.022458901,4201.547158853
c042,2,2,8,184620,184810,178768,4800.023284984,4801.683605129
c042,2,2,9,147737,147925,144290,5400.024222578,5401.832282351
c042,2,2,10,148094,148285,145780,6000.024595816,6001.976596385
c042,2,2,11,133248,133440,130648,6600.026740135,6602.16093851
# search time: 6600.027s
# total time: 19815.235s
c042,3,2,1,982308,982309,839752,600.00199666,600.170941924
c042,3,2,2,592595,592781,576607,1200.005377254,1200.411083261
c042,3,2,3,389002,389195,380119,1800.017675822,1800.615196008
c042,3,2,4,339614,339808,330208,2400.01863821,2400.777884353
c042,3,2,5,277460,277652,269808,3000.019098869,3000.936731543
c042,3,2,6,252356,252548,244779,3600.0197353880003,3601.058509722
c042,3,2,7,217548,217739,211417,4200.030150502001,4201.198267847
c042,3,2,8,194349,194540,188676,4800.031985812001,4801.335253786
c042,3,2,9,152936,153132,149402,5400.082874145001,5401.530382543
c042,3,2,10,153559,153754,151347,6000.085686643001,6001.649544699
c042,3,2,11,141220,141419,138965,6600.100962851001,6601.799382216
# search time: 6600.101s
# total time: 26417.661s
c042,4,2,1,1017028,1017029,868108,600.011605517,600.175029999
c042,4,2,2,598601,598781,582221,1200.012673672,1200.379737228
c042,4,2,3,386063,386240,377022,1800.012925255,1800.547433835
c042,4,2,4,336757,336941,327324,2400.022319154,2400.699937638
c042,4,2,5,279023,279201,271619,3000.0283070289997,3000.83991617
c042,4,2,6,254470,254647,247506,3600.030562252,3600.959863026
c042,4,2,7,217097,217278,211111,4200.031205249,4201.071506516
c042,4,2,8,194806,194990,188830,4800.031918002,4801.186053713
c042,4,2,9,146744,146932,143525,5400.032100820999,5401.305667689
c042,4,2,10,153823,154008,151377,6000.035838864,6001.402708483
c042,4,2,11,142686,142873,140202,6600.037093829,6601.502273421
# search time: 6600.037s
# total time: 33019.750s
