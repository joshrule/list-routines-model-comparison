    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.59s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c014_1.json out/1594225984/results/c014_1_best.csv out/1594225984/results/c014_1_predictions.csv out/1594225984/results/c014_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 3, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([9, 9, 1]), o: IntList([1]) }
#   Datum { i: IntList([0, 7, 9, 6, 1, 8, 2, 3]), o: IntList([9, 6, 1, 8, 2]) }
#   Datum { i: IntList([3, 0, 5, 7, 7, 5, 3, 0, 5]), o: IntList([5, 7, 7, 5, 3]) }
#   Datum { i: IntList([9]), o: IntList([]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([2, 3, 0]), o: IntList([0]) }
#   Datum { i: IntList([1, 0, 0, 1, 1]), o: IntList([0, 1, 1]) }
#   Datum { i: IntList([4, 2, 3, 3, 6, 7, 8]), o: IntList([3, 3, 6, 7, 8]) }
#   Datum { i: IntList([5, 4, 5, 8, 6, 2, 8]), o: IntList([5, 8, 6, 2, 8]) }
#   Datum { i: IntList([9, 9, 4, 4, 9, 4]), o: IntList([4, 4, 9, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c014,0,1,1,1110127,1110128,946979,600.003830428,601.867274501
c014,0,1,2,643819,643995,625901,1200.0041102559999,1203.058769604
c014,0,1,3,457477,457664,441291,1800.005991131,1803.626971545
c014,0,1,4,281468,281648,278300,2400.006562126,2404.302543756
c014,0,1,5,174114,174302,173239,3000.00834778,3005.016437694
c014,0,1,6,163620,163805,159117,3600.018414021,3605.757321784
c014,0,1,7,184197,184380,177626,4200.020216231,4206.254459798
c014,0,1,8,149300,149476,144235,4800.022401012,4806.834254725
c014,0,1,9,136062,136238,131549,5400.025047028,5407.373442535
c014,0,1,10,104975,105153,101740,6000.030833535,6007.961951853
c014,0,1,11,90715,90895,87408,6600.032300166,6608.410587225
# search time: 6600.032s
# total time: 6608.831s
c014,1,1,1,922751,922752,808027,600.011074802,600.316787723
c014,1,1,2,635126,635296,617586,1200.011573545,1200.781773542
c014,1,1,3,469738,469913,454523,1800.0118149099999,1801.075130495
c014,1,1,4,283765,283937,280643,2400.013107985,2401.377857786
c014,1,1,5,164347,164518,163747,3000.0145454249996,3001.764993148
c014,1,1,6,162188,162360,157815,3600.01639386,3602.123270668
c014,1,1,7,182415,182587,176722,4200.017181898,4202.441324966
c014,1,1,8,148923,149098,143934,4800.0188897319995,4802.742477072
c014,1,1,9,151510,151684,146543,5400.021216531999,5403.04001404
c014,1,1,10,119127,119308,115073,6000.024807681999,6003.354115007
c014,1,1,11,102295,102471,98641,6600.026375363999,6603.615918064
# search time: 6600.026s
# total time: 13213.133s
c014,2,1,1,1056652,1056653,933081,600.0002574,600.293269888
c014,2,1,2,647346,647517,629030,1200.000555273,1200.597953596
c014,2,1,3,445277,445448,429883,1800.001589169,1800.802216178
c014,2,1,4,279404,279575,276243,2400.002043674,2401.028215262
c014,2,1,5,171162,171334,170312,3000.0029877800002,3001.256972517
c014,2,1,6,159039,159215,154699,3600.0122015,3601.489330126
c014,2,1,7,175444,175617,169642,4200.013054966,4201.682663023
c014,2,1,8,146133,146305,141142,4800.0226894689995,4801.922257057
c014,2,1,9,131090,131261,126749,5400.0235567009995,5402.092793055
c014,2,1,10,103367,103536,99710,6000.024548337,6002.295055219
c014,2,1,11,88743,88909,85601,6600.026720859,6602.476138489
# search time: 6600.027s
# total time: 19816.595s
c014,3,1,1,1060974,1060975,906792,600.002264799,600.182336246
c014,3,1,2,613560,613745,597427,1200.0023738280001,1200.436043105
c014,3,1,3,455854,456046,440931,1800.0063983580003,1800.618109871
c014,3,1,4,273307,273496,270344,2400.0120718750004,2400.802524272
c014,3,1,5,169338,169532,168506,3000.0134577790004,3000.965268278
c014,3,1,6,159003,159205,154712,3600.0165884450003,3601.167608581
c014,3,1,7,175462,175657,169795,4200.016763459,4201.348259916
c014,3,1,8,145656,145850,140626,4800.016875046,4801.513141625
c014,3,1,9,131487,131677,127078,5400.020211159,5401.721182984
c014,3,1,10,102715,102908,99432,6000.0219869289995,6001.879133818
c014,3,1,11,88129,88322,84896,6600.0232931519995,6602.002988865
# search time: 6600.023s
# total time: 26418.998s
c014,4,1,1,981593,981594,870710,600.000073939,600.210024108
c014,4,1,2,631711,631876,614515,1200.000421686,1200.432833435
c014,4,1,3,468704,468870,453755,1800.0073520619999,1800.616260047
c014,4,1,4,278096,278266,275031,2400.007573723,2400.780668419
c014,4,1,5,161469,161635,160896,3000.007750932,3000.918666444
c014,4,1,6,150147,150321,146207,3600.009082234,3601.107728724
c014,4,1,7,173181,173345,167505,4200.0115056019995,4201.230482985
c014,4,1,8,146554,146731,141674,4800.015496086,4801.378588111
c014,4,1,9,132553,132715,128430,5400.018392065,5401.490634177
c014,4,1,10,103464,103633,99898,6000.021687943,6001.628976655
c014,4,1,11,85173,85344,82391,6600.029434694,6601.799715394
# search time: 6600.029s
# total time: 33022.234s
