    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.67s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c076_1.json out/1594225984/results/c076_1_best.csv out/1594225984/results/c076_1_predictions.csv out/1594225984/results/c076_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 9, 4, 7]), o: IntList([6, 4]) }
#   Datum { i: IntList([7, 8, 4, 2, 5, 0, 1, 9, 7]), o: IntList([4, 5, 6, 4]) }
#   Datum { i: IntList([4, 1, 4, 4, 1, 4]), o: IntList([]) }
#   Datum { i: IntList([8, 0]), o: IntList([5]) }
#   Datum { i: IntList([6, 2, 2, 2, 6, 3, 3, 6]), o: IntList([3, 3, 3]) }
#   Datum { i: IntList([8, 8, 8, 8, 8, 8, 8, 8, 8, 8]), o: IntList([5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([6, 2, 3]), o: IntList([3]) }
#   Datum { i: IntList([9, 9, 7, 7, 7, 9, 9, 7]), o: IntList([6, 6, 4, 4, 4, 6, 6, 4]) }
#   Datum { i: IntList([7, 7, 0, 7, 6, 9, 2, 2, 7, 2]), o: IntList([4, 4, 4, 3, 6, 4]) }
#   Datum { i: IntList([6, 0, 9, 7, 1, 0]), o: IntList([3, 6, 4]) }
#   Datum { i: IntList([0, 9, 5, 7, 3, 8, 6, 7]), o: IntList([6, 4, 5, 3, 4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c076,0,1,1,984079,984080,862536,600.004059247,602.415255906
c076,0,1,2,612675,612851,595841,1200.0062564979999,1203.601248266
c076,0,1,3,315680,315862,312792,1800.007674604,1804.756322675
c076,0,1,4,277893,278076,268698,2400.075373953,2405.7098761
c076,0,1,5,247198,247375,238956,3000.0764329880003,3006.466242444
c076,0,1,6,170427,170603,163991,3600.0766242080003,3607.162459824
c076,0,1,7,108385,108560,104389,4200.080950019001,4207.96587687
c076,0,1,8,96933,97108,93138,4800.097894777001,4808.613433195
c076,0,1,9,76193,76367,73080,5400.099830706001,5409.277877575
c076,0,1,10,58280,58455,55719,6000.105793721001,6009.961587535
c076,0,1,11,56780,56955,54094,6600.110644535001,6610.488001409
# search time: 6600.111s
# total time: 6610.871s
c076,1,1,1,1063966,1063967,907782,600.000152201,600.283013119
c076,1,1,2,613489,613672,596050,1200.003284437,1200.812066661
c076,1,1,3,323161,323347,320366,1800.003578927,1801.229426197
c076,1,1,4,278517,278710,268989,2400.0037849190003,2401.579777647
c076,1,1,5,243706,243897,235431,3000.0042850990003,3001.892850039
c076,1,1,6,162499,162686,156973,3600.0052396950005,3602.253334052
c076,1,1,7,106982,107169,103145,4200.006844349,4202.606992033
c076,1,1,8,98409,98598,94672,4800.008386175,4802.969828705
c076,1,1,9,90321,90508,86753,5400.01023985,5403.292579982
c076,1,1,10,74575,74761,71527,6000.012014713,6003.750401027
c076,1,1,11,72474,72661,69164,6600.020598728001,6604.098618019
# search time: 6600.021s
# total time: 13215.725s
c076,2,1,1,1203594,1203595,1031115,600.005737167,600.249164556
c076,2,1,2,603486,603673,586725,1200.006330751,1200.545736116
c076,2,1,3,311943,312126,309112,1800.0065796059998,1800.831050091
c076,2,1,4,272044,272236,262962,2400.008335446,2401.103774222
c076,2,1,5,238124,238317,230090,3000.008783337,3001.336624528
c076,2,1,6,165507,165694,159516,3600.0095848849996,3601.566632064
c076,2,1,7,104133,104324,100458,4200.014754922,4201.812497951
c076,2,1,8,93903,94092,90309,4800.018764474,4802.102656161
c076,2,1,9,74200,74389,71218,5400.029052451,5402.351060187
c076,2,1,10,56383,56565,53975,6000.029503243,6002.568187787
c076,2,1,11,53154,53342,50600,6600.036801741,6602.830274834
# search time: 6600.037s
# total time: 19819.318s
c076,3,1,1,1001113,1001114,855119,600.000956863,600.173948655
c076,3,1,2,584735,584912,568597,1200.002093053,1200.418754577
c076,3,1,3,311835,312009,309143,1800.002194038,1800.642568666
c076,3,1,4,262215,262402,253597,2400.002726367,2400.845762616
c076,3,1,5,230862,231048,223510,3000.004998888,3001.035071584
c076,3,1,6,162697,162879,156713,3600.007323838,3601.206216075
c076,3,1,7,99898,100078,96320,4200.007870965,4201.3742802
c076,3,1,8,95031,95207,91377,4800.010373425999,4801.564471877
c076,3,1,9,72573,72755,69594,5400.010884005999,5401.768937575
c076,3,1,10,57477,57658,55009,6000.014819971999,6001.9479609
c076,3,1,11,52501,52681,49956,6600.036759865999,6602.113094332
# search time: 6600.037s
# total time: 26422.336s
c076,4,1,1,964002,964003,858059,600.00007746,600.204299989
c076,4,1,2,592087,592255,575554,1200.00237558,1200.417985006
c076,4,1,3,311778,311957,309051,1800.00253449,1800.586703109
c076,4,1,4,271389,271566,262171,2400.002658806,2400.765664048
c076,4,1,5,231438,231601,223630,3000.004391101,3000.906172659
c076,4,1,6,156417,156583,151034,3600.0056549439996,3601.077132588
c076,4,1,7,101334,101497,97712,4200.0085386519995,4201.222390591
c076,4,1,8,89760,89926,86423,4800.010638342,4801.383289101
c076,4,1,9,72368,72539,69409,5400.011301203,5401.507972733
c076,4,1,10,55985,56149,53567,6000.016525786999,6001.713237516
c076,4,1,11,52038,52201,49461,6600.0265057629995,6601.83339851
# search time: 6600.027s
# total time: 33024.553s
