    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.37s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c030_4.json out/1594225984/results/c030_4_best.csv out/1594225984/results/c030_4_predictions.csv out/1594225984/results/c030_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 9, 5, 5, 1, 1]), o: IntList([1, 1]) }
#   Datum { i: IntList([6, 3, 8, 4, 5, 8, 7, 9, 8]), o: IntList([5, 8, 7, 9, 8]) }
#   Datum { i: IntList([3, 5, 4, 2]), o: IntList([]) }
#   Datum { i: IntList([8, 1, 9, 3, 6, 6, 9, 0, 4, 2]), o: IntList([6, 6, 9, 0, 4, 2]) }
#   Datum { i: IntList([4, 4, 4, 7, 7, 4, 7, 7]), o: IntList([7, 4, 7, 7]) }
#   Datum { i: IntList([6, 0, 0, 0, 4]), o: IntList([4]) }
#   Datum { i: IntList([5, 8, 5, 1]), o: IntList([]) }
#   Datum { i: IntList([2, 8, 4, 7, 1, 3, 9, 5, 6, 0]), o: IntList([1, 3, 9, 5, 6, 0]) }
#   Datum { i: IntList([1, 4, 8, 6, 0, 2, 0, 5]), o: IntList([0, 2, 0, 5]) }
#   Datum { i: IntList([2, 3, 1, 0, 2, 4, 3, 7, 3]), o: IntList([2, 4, 3, 7, 3]) }
#   Datum { i: IntList([8, 8, 2, 2, 2, 8, 5]), o: IntList([2, 8, 5]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,4,1,1055434,1055435,944689,600.000159886,602.514385593
c030,0,4,2,587959,588118,571431,1200.001968176,1203.780371987
c030,0,4,3,298764,298924,292879,1800.005585555,1804.848484472
c030,0,4,4,299761,299920,290944,2400.0074055329997,2405.740583564
c030,0,4,5,186409,186571,180367,3000.0101763779994,3006.613695149
c030,0,4,6,148315,148482,142889,3600.0112027989994,3607.436982959
c030,0,4,7,135216,135377,130163,4200.011868504999,4208.359366475
c030,0,4,8,122839,122998,117953,4800.0193214559995,4809.293777235
c030,0,4,9,93762,93922,89817,5400.024573389999,5410.238132653
c030,0,4,10,76378,76538,73072,6000.0318910959995,6011.229732983
c030,0,4,11,64348,64509,61452,6600.052593171999,6612.148742949
# search time: 6600.053s
# total time: 6612.412s
c030,1,4,1,1050323,1050324,931617,600.000172681,600.322935539
c030,1,4,2,595067,595238,578601,1200.00059965,1200.767952566
c030,1,4,3,313567,313738,306541,1800.003694203,1801.178273268
c030,1,4,4,292319,292483,282904,2400.0041911179997,2401.558963963
c030,1,4,5,189432,189593,183096,3000.00606971,3001.960509304
c030,1,4,6,147284,147452,142103,3600.008936881,3602.386715456
c030,1,4,7,134093,134267,128959,4200.011023088,4202.813954045
c030,1,4,8,134680,134855,129020,4800.011273079,4803.243017614
c030,1,4,9,102451,102626,98088,5400.017017474,5403.701280107
c030,1,4,10,83431,83585,79815,6000.017768852999,6004.146902286
c030,1,4,11,69274,69437,66214,6600.033196283,6604.681671987
# search time: 6600.033s
# total time: 13217.499s
c030,2,4,1,1150048,1150049,1009420,600.000151779,600.27326115
c030,2,4,2,732221,732389,711828,1200.000710925,1200.599729507
c030,2,4,3,384706,384884,376524,1800.001377945,1800.879767251
c030,2,4,4,376440,376619,365528,2400.001658695,2401.14704293
c030,2,4,5,235393,235570,227588,3000.003657407,3001.418854801
c030,2,4,6,183210,183381,176783,3600.004716606,3601.699489189
c030,2,4,7,165790,165959,159889,4200.004826578,4201.988441548
c030,2,4,8,153958,154130,147533,4800.010265452,4802.266716781
c030,2,4,9,115566,115738,110817,5400.0117605919995,5402.544881593
c030,2,4,10,97100,97275,92797,6000.0142219809995,6002.80810078
c030,2,4,11,79583,79754,76141,6600.020327929,6603.106559454
# search time: 6600.020s
# total time: 19821.025s
c030,3,4,1,1322316,1322317,1190766,600.002122272,600.306447492
c030,3,4,2,743323,743487,722753,1200.0021821619998,1200.584155857
c030,3,4,3,390921,391093,382426,1800.0023912989998,1800.803317669
c030,3,4,4,363587,363751,352497,2400.0029726549997,2401.037629937
c030,3,4,5,239093,239265,231651,3000.0036395489997,3001.235668182
c030,3,4,6,185932,186092,179247,3600.0070181449996,3601.429893724
c030,3,4,7,169426,169597,163301,4200.0072692819995,4201.65952894
c030,3,4,8,155193,155363,149319,4800.007849610999,4801.880873783
c030,3,4,9,112968,113137,108238,5400.008596217999,5402.119532592
c030,3,4,10,93783,93941,89678,6000.016851857999,6002.385147273
c030,3,4,11,80592,80759,77006,6600.017252361,6602.633936426
# search time: 6600.017s
# total time: 26424.099s
c030,4,4,1,1381697,1381698,1181493,600.000118153,600.201839499
c030,4,4,2,703464,703655,683899,1200.000582323,1200.429522088
c030,4,4,3,393348,393533,384881,1800.0008021529998,1800.618278341
c030,4,4,4,368039,368219,357288,2400.002496447,2400.785403952
c030,4,4,5,237221,237405,229409,3000.002931001,3000.952448417
c030,4,4,6,184527,184708,177615,3600.002994728,3601.136520855
c030,4,4,7,168505,168687,162269,4200.0072013770005,4201.313785671
c030,4,4,8,156890,157071,150669,4800.008274250001,4801.477507131
c030,4,4,9,115968,116148,111199,5400.013208917001,5401.663543073
c030,4,4,10,96678,96860,92414,6000.023194526001,6001.849658893
c030,4,4,11,78289,78470,74755,6600.026501085001,6602.034623594
# search time: 6600.027s
# total time: 33026.699s
