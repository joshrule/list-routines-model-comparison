    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.56s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c052_4.json out/1594225984/results/c052_4_best.csv out/1594225984/results/c052_4_predictions.csv out/1594225984/results/c052_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 6, 8, 8, 6]), o: IntList([8, 8, 8, 8, 8, 8, 8, 8, 8, 8]) }
#   Datum { i: IntList([1, 2, 4, 0, 3, 7]), o: IntList([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) }
#   Datum { i: IntList([4, 0, 6, 7, 3, 5, 1, 6, 3]), o: IntList([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) }
#   Datum { i: IntList([5, 5, 1, 1, 5, 1]), o: IntList([5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) }
#   Datum { i: IntList([9, 8, 7, 1]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([2, 5, 5]), o: IntList([2, 2, 2, 2, 2, 2, 2, 2, 2, 2]) }
#   Datum { i: IntList([0]), o: IntList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) }
#   Datum { i: IntList([3, 3, 3, 3]), o: IntList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([9, 4, 4, 0, 4, 0, 2, 2, 4]), o: IntList([9, 9, 9, 9, 9, 9, 9, 9, 9, 9]) }
#   Datum { i: IntList([7, 7]), o: IntList([7, 7, 7, 7, 7, 7, 7, 7, 7, 7]) }
#   Datum { i: IntList([6, 7, 1]), o: IntList([6, 6, 6, 6, 6, 6, 6, 6, 6, 6]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c052,0,4,1,1100896,1100897,976234,600.002816478,602.498362505
c052,0,4,2,252524,252690,245936,1200.003831857,1203.657536
c052,0,4,3,155486,155657,149846,1800.003859084,1804.332563281
c052,0,4,4,111240,111407,107808,2400.00533479,2405.005226383
c052,0,4,5,76208,76370,74186,3000.0152488619997,3006.050387144
c052,0,4,6,58835,59000,57337,3600.0215731599997,3607.034836006
c052,0,4,7,50110,50279,48893,4200.031484565,4208.248929748
c052,0,4,8,45986,46158,44577,4800.0374264170005,4809.041557203
c052,0,4,9,39898,40066,38491,5400.0598844470005,5409.967512342
c052,0,4,10,41185,41356,40242,6000.067652105001,6010.549378869
c052,0,4,11,36808,36976,35933,6600.074012722001,6611.244606104
# search time: 6600.074s
# total time: 6611.506s
c052,1,4,1,1077481,1077482,963225,600.007922703,600.365810964
c052,1,4,2,257064,257235,250359,1200.0091204999999,1200.819323055
c052,1,4,3,155722,155896,148825,1800.0100442459998,1801.132223327
c052,1,4,4,118951,119128,115873,2400.01205029,2401.476354451
c052,1,4,5,76546,76718,74443,3000.020329073,3001.958702424
c052,1,4,6,55876,56056,54494,3600.027631993,3602.509573871
c052,1,4,7,48244,48417,47124,4200.047496804,4202.96586909
c052,1,4,8,52407,52581,51009,4800.055038359,4803.267682381
c052,1,4,9,42121,42294,40949,5400.062928329,5403.768734893
c052,1,4,10,45343,45519,44191,6000.084723314,6004.125026545
c052,1,4,11,40286,40465,39404,6600.088141651,6604.374503621
# search time: 6600.088s
# total time: 13216.257s
c052,2,4,1,1312158,1312159,1123108,600.003444592,600.243079314
c052,2,4,2,322946,323132,313834,1200.006912106,1200.559394943
c052,2,4,3,200819,201007,193489,1800.0098382850001,1800.767250132
c052,2,4,4,144015,144204,138932,2400.01238645,2400.958053136
c052,2,4,5,97633,97819,95129,3000.013005647,3001.221651509
c052,2,4,6,71249,71435,69555,3600.0168607660003,3601.606213301
c052,2,4,7,63940,64122,62265,4200.032710748001,4202.011520647
c052,2,4,8,59296,59487,57613,4800.035786526001,4802.267016835
c052,2,4,9,49164,49353,47829,5400.066939048002,5402.804068198
c052,2,4,10,52339,52524,50967,6000.082952893002,6003.073306296
c052,2,4,11,46685,46872,45559,6600.091209647002,6603.350964405
# search time: 6600.091s
# total time: 19820.109s
c052,3,4,1,1343735,1343736,1205755,600.000124285,600.330714174
c052,3,4,2,314785,314950,305540,1200.00130537,1200.571329288
c052,3,4,3,193572,193738,185773,1800.0060236509999,1800.721224448
c052,3,4,4,141593,141766,137036,2400.008921273,2400.891736334
c052,3,4,5,93213,93392,90745,3000.009445003,3001.113955234
c052,3,4,6,78096,78270,76186,3600.0136419650003,3601.353244808
c052,3,4,7,58287,58454,56795,4200.0179557950005,4201.647353486
c052,3,4,8,60021,60197,58493,4800.018448008001,4801.827371573
c052,3,4,9,48588,48759,47172,5400.028620023,5402.072000468
c052,3,4,10,51463,51633,50242,6000.036483653001,6002.244828639
c052,3,4,11,46711,46881,45515,6600.036722469001,6602.412407874
# search time: 6600.037s
# total time: 26422.793s
c052,4,4,1,1366939,1366940,1166469,600.000170024,600.215252602
c052,4,4,2,306254,306437,297918,1200.001461795,1200.403869614
c052,4,4,3,201930,202104,194850,1800.002710576,1800.533574048
c052,4,4,4,137476,137652,131938,2400.00414779,2400.662693746
c052,4,4,5,96504,96679,93991,3000.008889149,3000.885253877
c052,4,4,6,77281,77457,75136,3600.012010043,3601.041023501
c052,4,4,7,61370,61549,59907,4200.014105028,4201.279636762
c052,4,4,8,58667,58845,55759,4800.014549576,4801.423662935
c052,4,4,9,49661,49842,48046,5400.01658012,5401.605850595
c052,4,4,10,52043,52222,50609,6000.017136592,6001.756266254
c052,4,4,11,45219,45398,43988,6600.020753707,6601.887438343
# search time: 6600.021s
# total time: 33025.117s
