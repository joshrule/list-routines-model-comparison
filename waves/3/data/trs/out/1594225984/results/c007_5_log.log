    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.29s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c007_5.json out/1594225984/results/c007_5_best.csv out/1594225984/results/c007_5_predictions.csv out/1594225984/results/c007_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 0, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([8]), o: IntList([8]) }
#   Datum { i: IntList([1]), o: IntList([1]) }
#   Datum { i: IntList([3, 3, 1, 9, 8]), o: IntList([3, 3]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([2]), o: IntList([2]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([9, 9, 1, 4, 1, 1, 4, 4, 4, 4]), o: IntList([9, 9]) }
#   Datum { i: IntList([0, 2, 2, 0]), o: IntList([0, 2]) }
#   Datum { i: IntList([7, 8, 5]), o: IntList([7, 8]) }
#   Datum { i: IntList([7]), o: IntList([7]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c007,0,5,1,1022174,1022175,895964,600.008008781,602.373722131
c007,0,5,2,652691,652866,634471,1200.008159167,1203.463460511
c007,0,5,3,648188,648364,633740,1800.0082669980002,1804.270766486
c007,0,5,4,520828,521010,503472,2400.0086768130004,2404.876284865
c007,0,5,5,369863,370042,358388,3000.0098752850004,3005.272074902
c007,0,5,6,313502,313679,304003,3600.017616979,3605.625030249
c007,0,5,7,206924,207102,197993,4200.039220819001,4206.098334324
c007,0,5,8,264721,264905,253144,4800.041880015,4806.461929797
c007,0,5,9,230274,230455,219673,5400.042815397,5406.792399234
c007,0,5,10,200961,201140,191259,6000.045978904,6007.141753675
c007,0,5,11,189005,189184,179495,6600.047408283999,6607.471158764
# search time: 6600.047s
# total time: 6607.880s
c007,1,5,1,1078468,1078469,922233,600.001339889,600.228837121
c007,1,5,2,649380,649573,632428,1200.001561423,1200.576774231
c007,1,5,3,643804,643993,629693,1800.001808849,1800.895850648
c007,1,5,4,518920,519113,501464,2400.001904041,2401.167818875
c007,1,5,5,365777,365966,354821,3000.0050397060004,3001.366918899
c007,1,5,6,313279,313471,303932,3600.0086519530005,3601.553825613
c007,1,5,7,199111,199302,190719,4200.009266350001,4201.784912878
c007,1,5,8,267519,267719,256051,4800.010411643001,4801.966914632
c007,1,5,9,254626,254820,243052,5400.012477244001,5402.162836484
c007,1,5,10,223571,223764,213177,6000.0184487450015,6002.355509469
c007,1,5,11,209594,209786,199231,6600.018504008001,6602.521266106
# search time: 6600.019s
# total time: 13211.009s
c007,2,5,1,1148888,1148889,982111,600.001580643,600.184493351
c007,2,5,2,638938,639122,622248,1200.001722593,1200.419209455
c007,2,5,3,638083,638276,624130,1800.002071286,1800.647612028
c007,2,5,4,505512,505697,488616,2400.002991204,2400.855520073
c007,2,5,5,358910,359096,348219,3000.003015133,3000.998977309
c007,2,5,6,306884,307067,297877,3600.003394621,3601.143999433
c007,2,5,7,199744,199926,191175,4200.004467456,4201.340089544
c007,2,5,8,255836,256026,244410,4800.005481471,4801.474773437
c007,2,5,9,221410,221597,211413,5400.0073744890005,5401.637234368
c007,2,5,10,195401,195582,185997,6000.010587006001,6001.783402225
c007,2,5,11,182601,182780,173474,6600.019773093,6601.913102417
# search time: 6600.020s
# total time: 19813.525s
c007,3,5,1,1060763,1060764,952868,600.000152399,600.243575921
c007,3,5,2,636919,637079,619415,1200.001102136,1200.451042173
c007,3,5,3,632260,632432,618429,1800.0014492310002,1800.658009386
c007,3,5,4,507476,507646,491326,2400.001557901,2400.825901367
c007,3,5,5,357511,357680,346601,3000.002746903,3000.967615033
c007,3,5,6,302728,302896,293575,3600.0040879480002,3601.080999525
c007,3,5,7,196419,196587,187995,4200.010342052,4201.206187275
c007,3,5,8,257965,258140,246653,4800.011136738,4801.317361073
c007,3,5,9,221912,222084,211892,5400.017302675,5401.442782156
c007,3,5,10,194256,194424,184871,6000.017919523,6001.562619457
c007,3,5,11,181890,182060,172906,6600.021811683,6601.658343076
# search time: 6600.022s
# total time: 26415.801s
c007,4,5,1,1078114,1078115,921374,600.001886471,600.161799628
c007,4,5,2,613216,613403,597190,1200.002336343,1200.343032923
c007,4,5,3,632238,632433,618522,1800.002952845,1800.53018437
c007,4,5,4,499506,499692,482562,2400.020584454,2400.718171757
c007,4,5,5,356737,356925,345933,3000.031292736,3000.854872398
c007,4,5,6,301972,302161,293163,3600.032821357,3600.977109445
c007,4,5,7,191190,191377,183123,4200.033707959,4201.112871476
c007,4,5,8,255344,255537,244061,4800.034568577,4801.226115757
c007,4,5,9,218972,219160,208676,5400.035628104,5401.331789264
c007,4,5,10,192393,192586,183153,6000.039159557,6001.443478975
c007,4,5,11,182735,182924,173691,6600.042543889,6601.536125417
# search time: 6600.043s
# total time: 33017.897s
