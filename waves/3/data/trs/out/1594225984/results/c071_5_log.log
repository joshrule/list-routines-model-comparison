    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.48s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c071_5.json out/1594225984/results/c071_5_best.csv out/1594225984/results/c071_5_predictions.csv out/1594225984/results/c071_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 5]), o: IntList([7, 7]) }
#   Datum { i: IntList([4, 5, 7]), o: IntList([6, 7, 9]) }
#   Datum { i: IntList([7, 7, 1, 4, 4, 6, 4, 1, 4, 0]), o: IntList([9, 9, 3, 6, 6, 8, 6, 3, 6, 2]) }
#   Datum { i: IntList([1, 3, 3, 2, 4, 5, 6]), o: IntList([3, 5, 5, 4, 6, 7, 8]) }
#   Datum { i: IntList([6, 7, 7, 6, 1, 4, 2, 6, 5]), o: IntList([8, 9, 9, 8, 3, 6, 4, 8, 7]) }
#   Datum { i: IntList([6]), o: IntList([8]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([0, 0, 7, 0]), o: IntList([2, 2, 9, 2]) }
#   Datum { i: IntList([6, 0, 6, 6, 0, 2, 6, 2, 0]), o: IntList([8, 2, 8, 8, 2, 4, 8, 4, 2]) }
#   Datum { i: IntList([0, 7, 5, 7, 6, 3, 4, 2]), o: IntList([2, 9, 7, 9, 8, 5, 6, 4]) }
#   Datum { i: IntList([1, 4, 3, 6, 0]), o: IntList([3, 6, 5, 8, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c071,0,5,1,1060411,1060412,942205,600.005324823,602.57988626
c071,0,5,2,622008,622179,605615,1200.008467756,1203.527999385
c071,0,5,3,441286,441459,435422,1800.008995522,1804.31126678
c071,0,5,4,155366,155533,154939,2400.014762879,2405.050491012
c071,0,5,5,110459,110627,109949,3000.0160799180003,3005.702298432
c071,0,5,6,78969,79132,78521,3600.020953043,3606.424764285
c071,0,5,7,78802,78974,78188,4200.021188185,4206.983403758
c071,0,5,8,67240,67401,66687,4800.026334195,4807.621157663
c071,0,5,9,60219,60387,59775,5400.033965668001,5408.220697729
c071,0,5,10,48595,48769,48267,6000.037143874,6008.799544232
c071,0,5,11,41723,41893,41471,6600.047934012,6609.464969058
# search time: 6600.048s
# total time: 6609.962s
c071,1,5,1,1012931,1012932,907449,600.000238515,600.365511887
c071,1,5,2,620769,620930,604483,1200.00056267,1200.744340026
c071,1,5,3,415179,415346,409697,1800.001585765,1801.182716054
c071,1,5,4,157034,157197,156479,2400.001981364,2401.530403957
c071,1,5,5,106767,106933,106225,3000.0046586400003,3001.867629928
c071,1,5,6,76698,76868,76206,3600.0224650940004,3602.193875752
c071,1,5,7,79368,79535,78750,4200.023198043001,4202.539580941
c071,1,5,8,65670,65842,65185,4800.023216451001,4802.777311642
c071,1,5,9,67627,67801,67118,5400.028254888,5403.093345371
c071,1,5,10,54846,55015,54471,6000.047632361,6003.484891393
c071,1,5,11,45983,46150,45704,6600.0592948230005,6603.86391689
# search time: 6600.059s
# total time: 13214.201s
c071,2,5,1,1154463,1154464,989271,600.000086632,600.255342318
c071,2,5,2,611595,611779,594427,1200.009842974,1200.564202389
c071,2,5,3,418997,419181,413354,1800.010709398,1800.832131143
c071,2,5,4,148021,148200,147656,2400.013466112,2401.056799901
c071,2,5,5,100664,100843,100264,3000.015474785,3001.293429396
c071,2,5,6,74671,74850,74223,3600.020520171,3601.485253936
c071,2,5,7,76886,77076,76318,4200.026558951,4201.703119735
c071,2,5,8,59112,59294,58511,4800.034962119,4801.925405586
c071,2,5,9,56680,56866,56251,5400.039083976,5402.15823336
c071,2,5,10,44630,44811,44363,6000.043350332,6002.43469181
c071,2,5,11,38183,38358,37951,6600.050614083,6602.708368366
# search time: 6600.051s
# total time: 19817.596s
c071,3,5,1,956748,956749,864017,600.010016023,600.278040396
c071,3,5,2,592600,592764,577166,1200.010068219,1200.535054462
c071,3,5,3,416959,417130,411463,1800.010936877,1800.761267784
c071,3,5,4,154928,155101,154418,2400.011687125,2400.993213949
c071,3,5,5,102376,102553,101938,3000.0175025840003,3001.181327385
c071,3,5,6,77674,77840,77199,3600.019412334,3601.364963546
c071,3,5,7,77447,77616,76871,4200.022524985,4201.53004808
c071,3,5,8,63382,63553,62929,4800.022952106,4801.668976167
c071,3,5,9,58588,58758,58167,5400.030546199,5401.87372807
c071,3,5,10,45156,45332,44845,6000.033554785,6002.06609201
c071,3,5,11,39894,40064,39624,6600.045535154,6602.263068918
# search time: 6600.046s
# total time: 26420.496s
c071,4,5,1,873074,873075,765282,600.005913845,600.209812228
c071,4,5,2,603841,604014,587989,1200.007310279,1200.440676686
c071,4,5,3,419833,420012,414258,1800.007899987,1800.644412197
c071,4,5,4,147109,147292,146753,2400.0136242529998,2400.796552847
c071,4,5,5,97662,97837,97245,3000.0150755269997,3000.978490778
c071,4,5,6,77629,77806,77165,3600.019202484,3601.11511985
c071,4,5,7,77922,78102,77384,4200.025995899,4201.271832476
c071,4,5,8,63198,63381,62734,4800.033095376,4801.424998421
c071,4,5,9,58753,58928,58321,5400.037990634,5401.547480707
c071,4,5,10,45163,45346,44881,6000.04555883,6001.728432574
c071,4,5,11,38940,39117,38694,6600.047084088,6601.979896461
# search time: 6600.047s
# total time: 33023.121s
