    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.54s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c036_2.json out/1594225984/results/c036_2_best.csv out/1594225984/results/c036_2_predictions.csv out/1594225984/results/c036_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 4, 3, 5]), o: IntList([8, 3, 4, 5]) }
#   Datum { i: IntList([6, 3, 6, 2, 6, 9, 9]), o: IntList([6, 6, 3, 2, 6, 9, 9]) }
#   Datum { i: IntList([0, 6, 9, 7, 8, 4, 1, 2, 5, 3]), o: IntList([0, 9, 6, 7, 8, 4, 1, 2, 5, 3]) }
#   Datum { i: IntList([2, 7, 2, 5, 1, 8]), o: IntList([5, 7, 2, 2, 1, 8]) }
#   Datum { i: IntList([7, 0, 7, 0, 7, 4, 4, 0]), o: IntList([7, 7, 0, 0, 7, 4, 4, 0]) }
#   Datum { i: IntList([4, 1, 9, 2, 6, 7, 8]), o: IntList([4, 9, 1, 2, 6, 7, 8]) }
#   Datum { i: IntList([6, 5, 6, 5]), o: IntList([6, 6, 5, 5]) }
#   Datum { i: IntList([4, 3, 5, 0, 9]), o: IntList([4, 5, 3, 0, 9]) }
#   Datum { i: IntList([9, 8, 1, 2, 7, 6, 0, 3]), o: IntList([9, 1, 8, 2, 7, 6, 0, 3]) }
#   Datum { i: IntList([5, 7, 2, 3, 9, 1, 2, 0, 8]), o: IntList([3, 7, 2, 5, 9, 1, 2, 0, 8]) }
#   Datum { i: IntList([4, 9, 8, 6, 5, 1, 3, 2, 1, 7]), o: IntList([4, 8, 9, 6, 5, 1, 3, 2, 1, 7]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c036,0,2,1,1100963,1100964,983100,600.000916809,602.457236728
c036,0,2,2,485916,486084,472620,1200.001072172,1203.517781908
c036,0,2,3,256210,256384,246722,1800.00218503,1804.098179769
c036,0,2,4,154477,154656,149170,2400.0026159110002,2404.604813972
c036,0,2,5,105629,105803,105020,3000.002814677,3005.384872573
c036,0,2,6,79045,79221,78619,3600.006289918,3606.217645436
c036,0,2,7,63397,63567,63114,4200.015054799001,4206.940491568
c036,0,2,8,63073,63242,62728,4800.018424785001,4807.687810837
c036,0,2,9,56256,56425,56006,5400.046411814001,5408.418955284
c036,0,2,10,48493,48668,48246,6000.049730711001,6009.187440433
c036,0,2,11,37684,37876,37583,6600.0546119480005,6610.028456838
# search time: 6600.055s
# total time: 6610.383s
c036,1,2,1,1096852,1096853,975910,600.00496803,600.352390966
c036,1,2,2,485275,485440,471358,1200.005742337,1200.785365726
c036,1,2,3,254033,254202,244869,1800.0093891349998,1801.063035351
c036,1,2,4,156269,156435,150994,2400.0131196999996,2401.305862565
c036,1,2,5,101509,101687,101091,3000.013781889,3001.701319848
c036,1,2,6,75308,75488,74955,3600.0173108279996,3602.141450732
c036,1,2,7,62736,62912,62617,4200.024233905,4202.612947775
c036,1,2,8,68645,68824,68303,4800.024421595,4802.91842569
c036,1,2,9,59705,59877,59231,5400.025138966999,5403.328334077
c036,1,2,10,52400,52572,52176,6000.0284080149995,6003.67199396
c036,1,2,11,39730,39902,39590,6600.036054873999,6603.957840321
# search time: 6600.036s
# total time: 13215.022s
c036,2,2,1,1260724,1260725,1130740,600.000182812,600.329853646
c036,2,2,2,625968,626134,609300,1200.000828869,1200.64806623
c036,2,2,3,322627,322808,311315,1800.00111199,1800.842245479
c036,2,2,4,197301,197477,190242,2400.0029813,2401.017990323
c036,2,2,5,133505,133681,132763,3000.015727434,3001.271647744
c036,2,2,6,100022,100200,99463,3600.023697175,3601.541777827
c036,2,2,7,82084,82263,81783,4200.03185806,4201.770334369
c036,2,2,8,80423,80602,79988,4800.034742123,4801.998983529
c036,2,2,9,71183,71363,70889,5400.035603258,5402.186275601
c036,2,2,10,59009,59188,58783,6000.039811949,6002.416949924
c036,2,2,11,47898,48076,47710,6600.048007491,6602.659763078
# search time: 6600.048s
# total time: 19818.429s
c036,3,2,1,1334710,1334711,1191295,600.000986265,600.318938442
c036,3,2,2,604884,605055,587960,1200.0015785720002,1200.569969232
c036,3,2,3,314485,314662,303015,1800.0073451470003,1800.724677804
c036,3,2,4,192410,192577,185064,2400.016940194,2400.87817229
c036,3,2,5,125430,125609,124875,3000.021504926,3001.075178926
c036,3,2,6,95508,95685,95062,3600.029678839,3601.281454472
c036,3,2,7,82318,82489,82015,4200.034310359,4201.432218198
c036,3,2,8,79180,79352,78754,4800.035938994,4801.648898034
c036,3,2,9,70183,70351,69874,5400.037659433,5401.830674045
c036,3,2,10,58188,58361,57957,6000.043123957,6002.035415015
c036,3,2,11,45585,45762,45466,6600.063137636,6602.185934674
# search time: 6600.063s
# total time: 26421.385s
c036,4,2,1,1332653,1332654,1193113,600.000712804,600.280392482
c036,4,2,2,589438,589604,573465,1200.0007646630002,1200.494935192
c036,4,2,3,318747,318919,307043,1800.0007913580002,1800.633054772
c036,4,2,4,195928,196093,188875,2400.0024407090004,2400.740293937
c036,4,2,5,129635,129808,129048,3000.0089674250003,3000.903230354
c036,4,2,6,95209,95375,94771,3600.010257624,3601.095028726
c036,4,2,7,79614,79782,79411,4200.016240212,4201.261611671
c036,4,2,8,79991,80161,79636,4800.022369352,4801.361803287
c036,4,2,9,72299,72465,71918,5400.028253041,5401.477046052
c036,4,2,10,59616,59788,59333,6000.029146731001,6001.664380032
c036,4,2,11,46971,47136,46750,6600.044985913,6601.847216573
# search time: 6600.045s
# total time: 33024.001s
