    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.66s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c075_2.json out/1594225984/results/c075_2_best.csv out/1594225984/results/c075_2_predictions.csv out/1594225984/results/c075_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 4, 4, 4, 9]), o: IntList([9, 4, 9]) }
#   Datum { i: IntList([0, 0, 2]), o: IntList([0, 2]) }
#   Datum { i: IntList([7, 3]), o: IntList([7]) }
#   Datum { i: IntList([1, 7, 0, 8, 8, 3, 1]), o: IntList([1, 0, 8, 1]) }
#   Datum { i: IntList([8, 9, 5, 5, 1, 5, 6, 4, 7]), o: IntList([8, 5, 1, 6, 7]) }
#   Datum { i: IntList([7, 4, 5, 2, 5, 5, 2]), o: IntList([7, 5, 5, 2]) }
#   Datum { i: IntList([8, 6, 3]), o: IntList([8, 3]) }
#   Datum { i: IntList([8, 0, 4, 2, 8]), o: IntList([8, 4, 8]) }
#   Datum { i: IntList([6, 5, 2, 9]), o: IntList([6, 2]) }
#   Datum { i: IntList([9, 9]), o: IntList([9]) }
#   Datum { i: IntList([0, 1, 1, 9, 2, 0, 1, 0, 9, 2]), o: IntList([0, 1, 2, 1, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c075,0,2,1,1088041,1088042,927361,600.001755441,601.898980512
c075,0,2,2,506415,506600,493920,1200.001898208,1203.075646991
c075,0,2,3,405151,405336,401434,1800.0019726360001,1804.110200976
c075,0,2,4,366947,367135,359523,2400.0029154880003,2404.626530636
c075,0,2,5,226297,226476,224668,3000.004982018,3005.358258785
c075,0,2,6,147593,147775,146930,3600.008238669,3606.038002575
c075,0,2,7,126865,127042,126470,4200.008776516001,4206.771002924
c075,0,2,8,119174,119355,118732,4800.012381778,4807.416549178
c075,0,2,9,99736,99915,99319,5400.015148300001,5408.052475732
c075,0,2,10,87650,87827,84800,6000.016411435001,6008.652724136
c075,0,2,11,85886,86068,83178,6600.017065763001,6609.242258785
# search time: 6600.017s
# total time: 6609.699s
c075,1,2,1,1062010,1062011,908201,600.002805,600.258875522
c075,1,2,2,502719,502908,490190,1200.010796196,1200.692093511
c075,1,2,3,409302,409495,405357,1800.017364883,1801.106578367
c075,1,2,4,364795,364980,357258,2400.018031663,2401.362766513
c075,1,2,5,214698,214882,213223,3000.020828398,3001.685770368
c075,1,2,6,145914,146099,145304,3600.02597649,3602.064006831
c075,1,2,7,126470,126663,126070,4200.026126324,4202.415920179
c075,1,2,8,118705,118898,118223,4800.030205204,4802.73138853
c075,1,2,9,108539,108735,108220,5400.035064477999,5403.076281392
c075,1,2,10,102349,102539,99173,6000.040881001999,6003.322274578
c075,1,2,11,95578,95769,92295,6600.044405903999,6603.592477882
# search time: 6600.044s
# total time: 13214.033s
c075,2,2,1,1132723,1132724,966602,600.00011462,600.240509522
c075,2,2,2,503655,503836,490526,1200.000467753,1200.540158395
c075,2,2,3,394503,394683,390829,1800.0017723,1800.832899751
c075,2,2,4,358364,358545,351344,2400.003492229,2401.032496599
c075,2,2,5,222561,222736,221003,3000.0050410880003,3001.271299917
c075,2,2,6,151190,151361,150437,3600.0106967480006,3601.494426196
c075,2,2,7,125564,125745,125022,4200.014301390001,4201.772650483
c075,2,2,8,116027,116207,115536,4800.01749084,4802.007231714
c075,2,2,9,95995,96172,95669,5400.01807404,5402.216143146
c075,2,2,10,89480,89658,86894,6000.02360987,6002.422694837
c075,2,2,11,83752,83929,81137,6600.0247780009995,6602.632286147
# search time: 6600.025s
# total time: 19817.402s
c075,3,2,1,927763,927764,814299,600.006939432,600.224336752
c075,3,2,2,502423,502597,490057,1200.0073512889999,1200.463848801
c075,3,2,3,388070,388245,384492,1800.007958485,1800.715308686
c075,3,2,4,359458,359634,352202,2400.008176027,2400.887882125
c075,3,2,5,222170,222346,220630,3000.0113134929998,3001.083529301
c075,3,2,6,150775,150951,150120,3600.014234327,3601.271494592
c075,3,2,7,124766,124944,124235,4200.015314365,4201.43421868
c075,3,2,8,115533,115709,115222,4800.017821528,4801.596355654
c075,3,2,9,97206,97379,96787,5400.018433683001,5401.738213039
c075,3,2,10,87952,88121,85081,6000.021523333001,6001.905104948
c075,3,2,11,83818,83990,80873,6600.021792489001,6602.048073479
# search time: 6600.022s
# total time: 26420.135s
c075,4,2,1,1042570,1042571,891628,600.001638337,600.183815224
c075,4,2,2,505000,505193,492074,1200.0024738010002,1200.398935732
c075,4,2,3,398361,398555,394598,1800.0031737980003,1800.602638958
c075,4,2,4,353366,353562,346202,2400.0036303770003,2400.755122309
c075,4,2,5,218714,218913,217155,3000.0059723510003,3000.911368034
c075,4,2,6,150709,150908,150124,3600.007180077,3601.06875451
c075,4,2,7,124743,124937,124354,4200.009275269,4201.222588401
c075,4,2,8,116325,116523,115861,4800.013080875,4801.405993046
c075,4,2,9,96328,96522,95925,5400.024340734,5401.573489382
c075,4,2,10,85780,85977,83312,6000.026311951,6001.685002329
c075,4,2,11,83306,83505,80597,6600.027875678,6601.831007398
# search time: 6600.028s
# total time: 33022.683s
