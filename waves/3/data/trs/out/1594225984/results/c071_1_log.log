    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.46s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c071_1.json out/1594225984/results/c071_1_best.csv out/1594225984/results/c071_1_predictions.csv out/1594225984/results/c071_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([0, 0, 7, 0]), o: IntList([2, 2, 9, 2]) }
#   Datum { i: IntList([6, 7, 7, 6, 1, 4, 2, 6, 5]), o: IntList([8, 9, 9, 8, 3, 6, 4, 8, 7]) }
#   Datum { i: IntList([6]), o: IntList([8]) }
#   Datum { i: IntList([5, 5]), o: IntList([7, 7]) }
#   Datum { i: IntList([1, 4, 3, 6, 0]), o: IntList([3, 6, 5, 8, 2]) }
#   Datum { i: IntList([0, 7, 5, 7, 6, 3, 4, 2]), o: IntList([2, 9, 7, 9, 8, 5, 6, 4]) }
#   Datum { i: IntList([6, 0, 6, 6, 0, 2, 6, 2, 0]), o: IntList([8, 2, 8, 8, 2, 4, 8, 4, 2]) }
#   Datum { i: IntList([1, 3, 3, 2, 4, 5, 6]), o: IntList([3, 5, 5, 4, 6, 7, 8]) }
#   Datum { i: IntList([7, 7, 1, 4, 4, 6, 4, 1, 4, 0]), o: IntList([9, 9, 3, 6, 6, 8, 6, 3, 6, 2]) }
#   Datum { i: IntList([1, 1, 1, 1, 1, 1]), o: IntList([3, 3, 3, 3, 3, 3]) }
#   Datum { i: IntList([4, 5, 7]), o: IntList([6, 7, 9]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c071,0,1,1,1060538,1060539,956075,600.003825472,602.591526853
c071,0,1,2,470701,470865,458114,1200.003941704,1203.694324342
c071,0,1,3,188429,188599,186574,1800.005581158,1804.656430967
c071,0,1,4,190315,190495,188828,2400.007725855,2405.542917659
c071,0,1,5,177785,177971,177410,3000.008507512,3006.236098187
c071,0,1,6,130274,130450,129309,3600.010289634,3606.902241558
c071,0,1,7,89863,90044,89174,4200.012333949,4207.570528826
c071,0,1,8,65308,65486,64778,4800.017864105,4808.337374857
c071,0,1,9,54277,54455,53884,5400.020189604999,5409.123746352
c071,0,1,10,43367,43547,43124,6000.036458356999,6009.89438067
c071,0,1,11,40081,40257,39864,6600.0443792999995,6610.623559196
# search time: 6600.044s
# total time: 6611.008s
c071,1,1,1,1059390,1059391,907682,600.002106433,600.284122337
c071,1,1,2,446286,446471,432753,1200.0025096680001,1200.719177736
c071,1,1,3,182226,182411,180362,1800.0055188210001,1801.130191971
c071,1,1,4,189715,189901,188247,2400.008372578,2401.481391226
c071,1,1,5,175169,175361,174805,3000.01007127,3001.804726086
c071,1,1,6,131505,131690,130513,3600.0140869,3602.134086902
c071,1,1,7,91212,91389,90531,4200.015504657,4202.437997963
c071,1,1,8,67469,67661,67042,4800.038696095,4802.770033521
c071,1,1,9,62000,62192,61593,5400.048990544,5403.185571935
c071,1,1,10,48692,48876,48384,6000.078410698,6003.611675887
c071,1,1,11,45425,45610,45162,6600.088084528,6604.043310068
# search time: 6600.088s
# total time: 13215.678s
c071,2,1,1,1131837,1131838,1014523,600.00614327,600.309696152
c071,2,1,2,456717,456887,444751,1200.017686121,1200.610944547
c071,2,1,3,176972,177138,175126,1800.0211906509999,1800.903955356
c071,2,1,4,183825,183999,182411,2400.023014996,2401.151417839
c071,2,1,5,172368,172538,171817,3000.0249320949997,3001.346776851
c071,2,1,6,128534,128711,127524,3600.029170287,3601.6362488
c071,2,1,7,90797,90969,90147,4200.029853018,4201.888914522
c071,2,1,8,67521,67697,67080,4800.035515187,4802.106742694
c071,2,1,9,54896,55068,54507,5400.057138742,5402.381289962
c071,2,1,10,44410,44587,44161,6000.059084852999,6002.599187817
c071,2,1,11,39944,40116,39679,6600.078724832999,6602.816377492
# search time: 6600.079s
# total time: 19819.157s
c071,3,1,1,1045096,1045097,893865,600.003561435,600.237979964
c071,3,1,2,459012,459195,446782,1200.006073508,1200.509170887
c071,3,1,3,179858,180046,177959,1800.0067530370002,1800.76789044
c071,3,1,4,185038,185228,183620,2400.0091851810002,2400.955926175
c071,3,1,5,175433,175624,174948,3000.010500139,3001.133358822
c071,3,1,6,129577,129762,128571,3600.0124703670003,3601.320281347
c071,3,1,7,89303,89484,88648,4200.013731881,4201.514750633
c071,3,1,8,65592,65777,65140,4800.0139073010005,4801.745277642
c071,3,1,9,55314,55501,54942,5400.034287052001,5401.978292599
c071,3,1,10,45067,45258,44791,6000.036682143001,6002.200418638
c071,3,1,11,38733,38923,38518,6600.0484588300005,6602.38045045
# search time: 6600.048s
# total time: 26422.148s
c071,4,1,1,1052498,1052499,900278,600.003339134,600.200809835
c071,4,1,2,451534,451723,439303,1200.003743957,1200.414282522
c071,4,1,3,178911,179106,176995,1800.004792417,1800.633450663
c071,4,1,4,185182,185380,183741,2400.0079958750002,2400.810916195
c071,4,1,5,171666,171862,171324,3000.008562297,3000.950411067
c071,4,1,6,128684,128881,127741,3600.0114169010003,3601.105055593
c071,4,1,7,90028,90221,89389,4200.019700447,4201.252620672
c071,4,1,8,66333,66521,65896,4800.021446812,4801.409663632
c071,4,1,9,54572,54765,54208,5400.031069196,5401.559655107
c071,4,1,10,43058,43255,42813,6000.032313774001,6001.73596046
c071,4,1,11,39973,40168,39738,6600.0402381680005,6601.949917967
# search time: 6600.040s
# total time: 33024.729s
