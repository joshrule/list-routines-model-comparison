    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.63s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c017_2.json out/1594225984/results/c017_2_best.csv out/1594225984/results/c017_2_predictions.csv out/1594225984/results/c017_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 7, 2, 4, 0]), o: IntList([5, 8, 2, 4, 0]) }
#   Datum { i: IntList([9, 1, 7, 7]), o: IntList([9, 8, 7, 7]) }
#   Datum { i: IntList([6]), o: IntList([6]) }
#   Datum { i: IntList([3, 3]), o: IntList([3, 8]) }
#   Datum { i: IntList([0, 2, 2]), o: IntList([0, 8, 2]) }
#   Datum { i: IntList([7]), o: IntList([7]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([9, 2, 1, 6, 4, 0]), o: IntList([9, 8, 1, 6, 4, 0]) }
#   Datum { i: IntList([0]), o: IntList([0]) }
#   Datum { i: IntList([9]), o: IntList([9]) }
#   Datum { i: IntList([1, 4, 2, 5, 3, 9, 7, 2]), o: IntList([1, 8, 2, 5, 3, 9, 7, 2]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c017,0,2,1,1092195,1092196,971160,600.005119371,602.457973641
c017,0,2,2,442017,442182,430686,1200.00640595,1203.595426322
c017,0,2,3,304797,304967,298634,1800.007091038,1804.493924207
c017,0,2,4,287504,287668,281526,2400.007350706,2405.152725941
c017,0,2,5,248744,248912,244127,3000.009296146,3005.75304606
c017,0,2,6,186068,186231,183291,3600.011675411,3606.465806583
c017,0,2,7,177238,177410,171180,4200.012677299,4207.028727364
c017,0,2,8,209174,209348,199518,4800.018453354,4807.377108358
c017,0,2,9,162208,162380,154338,5400.018505837999,5407.684808143
c017,0,2,10,158436,158601,150636,6000.019606611999,6007.981598716
c017,0,2,11,138639,138815,131989,6600.021520968999,6608.313815234
# search time: 6600.022s
# total time: 6608.825s
c017,1,2,1,1079216,1079217,961125,600.010561638,600.315490372
c017,1,2,2,423445,423612,412240,1200.010884723,1200.693833968
c017,1,2,3,309382,309551,303327,1800.0118219249998,1801.022052165
c017,1,2,4,286258,286435,279996,2400.025779182,2401.329932648
c017,1,2,5,247628,247806,243144,3000.028657303,3001.597354651
c017,1,2,6,183858,184037,180995,3600.029989621,3601.931967376
c017,1,2,7,161300,161469,156019,4200.033799193,4202.232754188
c017,1,2,8,227211,227391,216870,4800.035315946,4802.424959508
c017,1,2,9,178562,178735,170269,5400.035603503,5402.607252904
c017,1,2,10,172315,172488,163880,6000.039125881,6002.770708494
c017,1,2,11,152411,152583,145058,6600.040030954,6602.935379732
# search time: 6600.040s
# total time: 13212.125s
c017,2,2,1,1252170,1252171,1123823,600.001380754,600.310069125
c017,2,2,2,556830,557003,541830,1200.001892384,1200.563587446
c017,2,2,3,378348,378522,371526,1800.00214453,1800.804635362
c017,2,2,4,364000,364170,355531,2400.00325225,2401.01467755
c017,2,2,5,312568,312739,306708,3000.0037804520002,3001.216110455
c017,2,2,6,226386,226553,222713,3600.006169405,3601.464381125
c017,2,2,7,221764,221940,214150,4200.008321598,4201.648975062
c017,2,2,8,261529,261706,249530,4800.011876083,4801.791370185
c017,2,2,9,204121,204293,194499,5400.014151664,5401.920060529
c017,2,2,10,199082,199253,189686,6000.014914837,6002.041071732
c017,2,2,11,172012,172188,164271,6600.014926188,6602.172966258
# search time: 6600.015s
# total time: 19814.884s
c017,3,2,1,1339838,1339839,1203954,600.006008289,600.268390811
c017,3,2,2,543866,544039,529372,1200.0062702629998,1200.467564765
c017,3,2,3,387615,387781,380104,1800.0070396699998,1800.66042688
c017,3,2,4,359935,360100,351670,2400.009212891,2400.81304281
c017,3,2,5,307078,307248,301169,3000.010767232,3000.97608611
c017,3,2,6,225309,225479,221580,3600.0111044180003,3601.143679394
c017,3,2,7,223959,224134,216245,4200.011880446,4201.29456007
c017,3,2,8,263553,263731,251827,4800.012116987,4801.412036673
c017,3,2,9,200470,200640,191086,5400.014068564,5401.523971294
c017,3,2,10,194086,194262,184706,6000.014468854,6001.628572192
c017,3,2,11,175375,175549,167144,6600.0181395380005,6601.741319417
# search time: 6600.018s
# total time: 26417.191s
c017,4,2,1,1325651,1325652,1186843,600.001603573,600.288016629
c017,4,2,2,515042,515211,500801,1200.001705867,1200.458257773
c017,4,2,3,376683,376855,370158,1800.0032789840002,1800.618801115
c017,4,2,4,362592,362770,354907,2400.0041767800003,2400.765472727
c017,4,2,5,310869,311042,305048,3000.004451736,3000.895378995
c017,4,2,6,225807,225992,222170,3600.0054666250003,3601.067668251
c017,4,2,7,224063,224235,216342,4200.006918561,4201.198539242
c017,4,2,8,264057,264240,252210,4800.007700334,4801.306321107
c017,4,2,9,205497,205676,195853,5400.008549749,5401.394988533
c017,4,2,10,199386,199561,189703,6000.009407553,6001.494703076
c017,4,2,11,170280,170457,162203,6600.010828359,6601.593669162
# search time: 6600.011s
# total time: 33019.404s
