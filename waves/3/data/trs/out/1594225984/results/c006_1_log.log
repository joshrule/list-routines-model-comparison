    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.16s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c006_1.json out/1594225984/results/c006_1_best.csv out/1594225984/results/c006_1_predictions.csv out/1594225984/results/c006_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 8, 5, 7]), o: IntList([7, 8]) }
#   Datum { i: IntList([3, 1, 1, 1, 3, 1, 1]), o: IntList([3, 1]) }
#   Datum { i: IntList([8, 0, 8, 7, 4, 0, 4]), o: IntList([8, 0]) }
#   Datum { i: IntList([2, 0, 4, 6, 5]), o: IntList([2, 0]) }
#   Datum { i: IntList([9, 9, 9]), o: IntList([9, 9]) }
#   Datum { i: IntList([4, 3, 3, 5, 5]), o: IntList([4, 3]) }
#   Datum { i: IntList([9, 7, 7]), o: IntList([9, 7]) }
#   Datum { i: IntList([2, 2, 2, 2, 2]), o: IntList([2, 2]) }
#   Datum { i: IntList([0, 4, 0, 0, 0, 4]), o: IntList([0, 4]) }
#   Datum { i: IntList([5, 5, 1, 5, 7, 7]), o: IntList([5, 5]) }
#   Datum { i: IntList([6, 8, 5]), o: IntList([6, 8]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c006,0,1,1,1041945,1041946,928492,600.003109705,602.520985962
c006,0,1,2,598777,598939,583272,1200.0037143700001,1203.704215509
c006,0,1,3,413905,414080,399898,1800.0047877660002,1804.377444081
c006,0,1,4,325465,325629,315590,2400.004963539,2405.022262434
c006,0,1,5,261565,261733,249948,3000.006366311,3005.78736571
c006,0,1,6,241186,241352,231242,3600.0090677919998,3606.276706442
c006,0,1,7,220123,220291,210644,4200.01006179,4206.725676657
c006,0,1,8,160885,161046,153854,4800.013862762999,4807.462196487
c006,0,1,9,137017,137182,130750,5400.0177669409995,5408.176710552
c006,0,1,10,119542,119702,113726,6000.017874183,6008.893095087
c006,0,1,11,109804,109968,104340,6600.018362969,6609.568787566
# search time: 6600.018s
# total time: 6609.876s
c006,1,1,1,1001064,1001065,893103,600.001654476,600.322674938
c006,1,1,2,603929,604103,587848,1200.002020411,1200.728325601
c006,1,1,3,393513,393682,379965,1800.002308859,1801.007091016
c006,1,1,4,322606,322777,312688,2400.0035220540003,2401.321053647
c006,1,1,5,264896,265060,253107,3000.0043453350004,3001.633974705
c006,1,1,6,243295,243460,233337,3600.0068497250004,3601.880382253
c006,1,1,7,218527,218695,209152,4200.007728001,4202.095571591
c006,1,1,8,161891,162060,154721,4800.012796881,4802.418025488
c006,1,1,9,168978,169151,161376,5400.018521572,5402.801522752
c006,1,1,10,153539,153705,146624,6000.020779658,6003.191471411
c006,1,1,11,140375,140548,134031,6600.021344211,6603.530213404
# search time: 6600.021s
# total time: 13213.859s
c006,2,1,1,1100921,1100922,973140,600.002344299,600.248545913
c006,2,1,2,587479,587635,572019,1200.002656026,1200.513808476
c006,2,1,3,386574,386737,373687,1800.00268864,1800.699798505
c006,2,1,4,306923,307090,296764,2400.004048065,2400.892724824
c006,2,1,5,248249,248415,237337,3000.004551267,3001.149913295
c006,2,1,6,234145,234310,224576,3600.009524832,3601.334793482
c006,2,1,7,213014,213179,203834,4200.010175798,4201.497206312
c006,2,1,8,156815,156980,149957,4800.0143849920005,4801.765126622
c006,2,1,9,133350,133516,127353,5400.021142634,5401.982268522
c006,2,1,10,116635,116801,111303,6000.023797595,6002.242705772
c006,2,1,11,105179,105345,100389,6600.029134474,6602.497955525
# search time: 6600.029s
# total time: 19816.818s
c006,3,1,1,976131,976132,870865,600.000432933,600.215867016
c006,3,1,2,574939,575096,559475,1200.001207133,1200.447365937
c006,3,1,3,389471,389647,376556,1800.001642566,1800.613104363
c006,3,1,4,306608,306772,296601,2400.002238254,2400.765281551
c006,3,1,5,254714,254880,243536,3000.004452869,3000.915829602
c006,3,1,6,233361,233522,223315,3600.004972303,3601.069629448
c006,3,1,7,210283,210452,201348,4200.006628028,4201.216236779
c006,3,1,8,154162,154329,147396,4800.006863013,4801.407926107
c006,3,1,9,133636,133801,127530,5400.009660331,5401.632464525
c006,3,1,10,115488,115657,110220,6000.0156249090005,6001.834338825
c006,3,1,11,104627,104796,99950,6600.016838697001,6601.989185297
# search time: 6600.017s
# total time: 26419.225s
c006,4,1,1,1022964,1022965,875730,600.004454132,600.163441688
c006,4,1,2,575098,575284,560238,1200.0051725459998,1200.367720482
c006,4,1,3,384332,384526,371603,1800.0053077339999,1800.504404176
c006,4,1,4,306698,306889,296994,2400.008523768,2400.657162086
c006,4,1,5,256097,256285,244482,3000.009652829,3000.816247546
c006,4,1,6,232394,232576,222854,3600.009803505,3600.928395198
c006,4,1,7,207014,207202,197715,4200.013692117,4201.056629823
c006,4,1,8,156406,156594,149494,4800.01555025,4801.221433362
c006,4,1,9,132799,132987,126581,5400.018723879,5401.383187963
c006,4,1,10,115989,116168,110626,6000.023378733001,6001.556946299
c006,4,1,11,107020,107201,102199,6600.0345251670005,6601.688347641
# search time: 6600.035s
# total time: 33021.340s
