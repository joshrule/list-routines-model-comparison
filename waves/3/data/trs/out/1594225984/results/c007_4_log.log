    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.26s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c007_4.json out/1594225984/results/c007_4_best.csv out/1594225984/results/c007_4_predictions.csv out/1594225984/results/c007_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 8, 5]), o: IntList([7, 8]) }
#   Datum { i: IntList([5, 0, 0]), o: IntList([5, 0]) }
#   Datum { i: IntList([9, 9, 1, 4, 1, 1, 4, 4, 4, 4]), o: IntList([9, 9]) }
#   Datum { i: IntList([2]), o: IntList([2]) }
#   Datum { i: IntList([8]), o: IntList([8]) }
#   Datum { i: IntList([3, 3, 1, 9, 8]), o: IntList([3, 3]) }
#   Datum { i: IntList([6, 6, 6, 6]), o: IntList([6, 6]) }
#   Datum { i: IntList([7]), o: IntList([7]) }
#   Datum { i: IntList([]), o: IntList([]) }
#   Datum { i: IntList([0, 2, 2, 0]), o: IntList([0, 2]) }
#   Datum { i: IntList([1]), o: IntList([1]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c007,0,4,1,1141675,1141676,975009,600.005976626,601.886048274
c007,0,4,2,623177,623356,606449,1200.006105129,1203.042964481
c007,0,4,3,476314,476496,464753,1800.0063161019998,1803.957517167
c007,0,4,4,344082,344271,336846,2400.0099007169997,2404.760783349
c007,0,4,5,251696,251882,245587,3000.010208417,3005.606210554
c007,0,4,6,297436,297629,288497,3600.010666965,3606.0011519
c007,0,4,7,253511,253697,245929,4200.012377953,4206.376499537
c007,0,4,8,221415,221597,215122,4800.013522192001,4806.754811556
c007,0,4,9,158041,158223,152107,5400.014862415001,5407.273294813
c007,0,4,10,197255,197445,188545,6000.016017229001,6007.695774403
c007,0,4,11,189693,189881,180296,6600.017644793001,6608.012199987
# search time: 6600.018s
# total time: 6608.435s
c007,1,4,1,972617,972618,877757,600.007554776,600.328560501
c007,1,4,2,617912,618077,601941,1200.014774403,1200.707643022
c007,1,4,3,463254,463431,451962,1800.021594798,1801.063782485
c007,1,4,4,328271,328439,322138,2400.02344204,2401.398851813
c007,1,4,5,235084,235256,228871,3000.0235757560004,3001.762976339
c007,1,4,6,290871,291043,281832,3600.0245438610004,3601.978557073
c007,1,4,7,250268,250441,242719,4200.025610426001,4202.194519075
c007,1,4,8,221271,221439,214860,4800.0359867100005,4802.417049676
c007,1,4,9,173412,173583,167076,5400.037619768001,5402.726706864
c007,1,4,10,223743,223919,213916,6000.037651431001,6002.95175432
c007,1,4,11,213906,214083,203491,6600.039593896001,6603.141432024
# search time: 6600.040s
# total time: 13212.170s
c007,2,4,1,1133349,1133350,967607,600.000968417,600.208167704
c007,2,4,2,623649,623823,607601,1200.002722913,1200.481123673
c007,2,4,3,469646,469825,458378,1800.0030167200002,1800.73789157
c007,2,4,4,339748,339926,332722,2400.0055014550003,2400.968145802
c007,2,4,5,234039,234214,227821,3000.0082056980004,3001.227541906
c007,2,4,6,288005,288181,279310,3600.0091588330006,3601.388911444
c007,2,4,7,246618,246798,239138,4200.0098452130005,4201.528616576
c007,2,4,8,213951,214129,207803,4800.010456547001,4801.677217879
c007,2,4,9,151415,151596,145836,5400.012618370001,5401.873023021
c007,2,4,10,192091,192277,183544,6000.013856756002,6002.019376063
c007,2,4,11,184105,184285,174904,6600.014648731001,6602.142000132
# search time: 6600.015s
# total time: 19814.956s
c007,3,4,1,1033207,1033208,883902,600.000416754,600.17804649
c007,3,4,2,631244,631430,614480,1200.0009805149998,1200.411436182
c007,3,4,3,466497,466684,455212,1800.0017525399999,1800.606180041
c007,3,4,4,337908,338094,331251,2400.009054329,2400.778603422
c007,3,4,5,235360,235547,229254,3000.0101525259997,3000.974391463
c007,3,4,6,289578,289772,280655,3600.0104230839997,3601.108776627
c007,3,4,7,247590,247774,239938,4200.01086829,4201.249004699
c007,3,4,8,214103,214291,207685,4800.014020072,4801.388180637
c007,3,4,9,152618,152811,147086,5400.014382849,5401.547301173
c007,3,4,10,193869,194057,185139,6000.01513199,6001.688548284
c007,3,4,11,186847,187034,177618,6600.016935195999,6601.828552845
# search time: 6600.017s
# total time: 26417.314s
c007,4,4,1,940815,940816,825374,600.004110785,600.200262834
c007,4,4,2,625182,625349,609374,1200.0043782389998,1200.404055585
c007,4,4,3,471824,471998,460075,1800.004496053,1800.579958078
c007,4,4,4,338341,338510,331373,2400.005174995,2400.736575348
c007,4,4,5,234369,234537,228280,3000.006316483,3000.920151435
c007,4,4,6,288285,288452,279442,3600.007073267,3601.037424232
c007,4,4,7,246945,247117,239427,4200.007947692,4201.155881662
c007,4,4,8,214899,215065,208569,4800.009362116,4801.270510718
c007,4,4,9,156840,157010,151026,5400.009624265001,5401.390052537
c007,4,4,10,195207,195379,186512,6000.013059121001,6001.500992224
c007,4,4,11,187366,187539,178092,6600.014180655001,6601.67283411
# search time: 6600.014s
# total time: 33020.279s
