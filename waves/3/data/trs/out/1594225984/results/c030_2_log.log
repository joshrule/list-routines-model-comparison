    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.65s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation small_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c030_2.json out/1594225984/results/c030_2_best.csv out/1594225984/results/c030_2_predictions.csv out/1594225984/results/c030_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 8, 5, 1]), o: IntList([]) }
#   Datum { i: IntList([2, 3, 1, 0, 2, 4, 3, 7, 3]), o: IntList([2, 4, 3, 7, 3]) }
#   Datum { i: IntList([8, 1, 9, 3, 6, 6, 9, 0, 4, 2]), o: IntList([6, 6, 9, 0, 4, 2]) }
#   Datum { i: IntList([1, 4, 8, 6, 0, 2, 0, 5]), o: IntList([0, 2, 0, 5]) }
#   Datum { i: IntList([3, 9, 5, 5, 1, 1]), o: IntList([1, 1]) }
#   Datum { i: IntList([4, 4, 4, 7, 7, 4, 7, 7]), o: IntList([7, 4, 7, 7]) }
#   Datum { i: IntList([3, 5, 4, 2]), o: IntList([]) }
#   Datum { i: IntList([2, 8, 4, 7, 1, 3, 9, 5, 6, 0]), o: IntList([1, 3, 9, 5, 6, 0]) }
#   Datum { i: IntList([8, 8, 2, 2, 2, 8, 5]), o: IntList([2, 8, 5]) }
#   Datum { i: IntList([6, 3, 8, 4, 5, 8, 7, 9, 8]), o: IntList([5, 8, 7, 9, 8]) }
#   Datum { i: IntList([6, 0, 0, 0, 4]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,tree,hypotheses,search_time,total_time
c030,0,2,1,1058084,1058085,958356,600.000136006,602.733632164
c030,0,2,2,850911,851073,804955,1200.0004658470002,1203.926442792
c030,0,2,3,399035,399204,386531,1800.000989265,1804.520289399
c030,0,2,4,186279,186444,180727,2400.0014306820003,2405.347730761
c030,0,2,5,138543,138709,133921,3000.0034398270004,3006.252055118
c030,0,2,6,122791,122956,118547,3600.0083464630006,3607.095789878
c030,0,2,7,104500,104667,100753,4200.0104335940005,4207.940106647
c030,0,2,8,109121,109283,104636,4800.012290214,4808.783930136
c030,0,2,9,82553,82720,78913,5400.015004347,5409.612081515
c030,0,2,10,70648,70818,67489,6000.024417403,6010.512411372
c030,0,2,11,59875,60042,57209,6600.029605938001,6611.322576033
# search time: 6600.030s
# total time: 6611.707s
c030,1,2,1,1093789,1093790,936232,600.000107733,600.242803481
c030,1,2,2,816483,816669,773372,1200.000401195,1200.70703824
c030,1,2,3,413245,413438,402051,1800.00116399,1801.003224523
c030,1,2,4,183836,184024,178188,2400.00219375,2401.405671174
c030,1,2,5,137377,137565,132880,3000.00263237,3001.836023672
c030,1,2,6,119319,119507,115187,3600.004035594,3602.199314991
c030,1,2,7,101095,101285,97433,4200.01102963,4202.635052469
c030,1,2,8,106718,106907,102284,4800.015168759,4803.032054756
c030,1,2,9,90701,90886,87062,5400.018518135999,5403.572597736
c030,1,2,10,77387,77578,74103,6000.0195741669995,6003.98485708
c030,1,2,11,66265,66452,63286,6600.022513651,6604.573503642
# search time: 6600.023s
# total time: 13216.549s
c030,2,2,1,1116062,1116063,1002818,600.000483256,600.304221924
c030,2,2,2,816807,816981,772008,1200.002027865,1200.633676502
c030,2,2,3,388204,388380,375875,1800.007865986,1800.85257775
c030,2,2,4,182538,182712,176880,2400.011404153,2401.080240407
c030,2,2,5,135807,135977,131593,3000.014142749,3001.310724556
c030,2,2,6,118524,118703,114494,3600.014659743,3601.569935091
c030,2,2,7,100173,100347,96484,4200.015204713,4201.878636493
c030,2,2,8,104357,104532,100032,4800.017665345999,4802.187847883
c030,2,2,9,79189,79362,75800,5400.020644586999,5402.506869787
c030,2,2,10,68126,68314,65159,6000.027042239999,6002.918030078
c030,2,2,11,56050,56221,53553,6600.038118996999,6603.240588295
# search time: 6600.038s
# total time: 19820.196s
c030,3,2,1,959277,959278,840676,600.003177014,600.207485819
c030,3,2,2,828612,828776,782851,1200.003273348,1200.510188648
c030,3,2,3,383463,383635,371642,1800.003424087,1800.693455001
c030,3,2,4,181676,181848,176086,2400.004008414,2400.869392266
c030,3,2,5,135490,135666,130891,3000.007780771,3001.09111818
c030,3,2,6,116093,116268,111659,3600.014354472,3601.358011493
c030,3,2,7,100956,101131,97215,4200.0187402169995,4201.649676903
c030,3,2,8,104728,104904,100388,4800.021046700999,4801.850379112
c030,3,2,9,78448,78622,75287,5400.024885696999,5402.074830807
c030,3,2,10,68591,68766,65603,6000.028192689999,6002.266962573
c030,3,2,11,58017,58187,55344,6600.0321809299985,6602.499568719
# search time: 6600.032s
# total time: 26423.047s
c030,4,2,1,964678,964679,845258,600.001140494,600.197039943
c030,4,2,2,838212,838383,792691,1200.0013294619998,1200.469738344
c030,4,2,3,388710,388884,376284,1800.0033772529998,1800.639095446
c030,4,2,4,181149,181326,175603,2400.007378231,2400.806245818
c030,4,2,5,135062,135230,130655,3000.008522548,3000.998860282
c030,4,2,6,117292,117466,113021,3600.010691715,3601.158797326
c030,4,2,7,98635,98807,94928,4200.018958598001,4201.333993741
c030,4,2,8,104248,104418,99855,4800.021157575001,4801.516248505
c030,4,2,9,78777,78950,75312,5400.0309550090005,5401.63486058
c030,4,2,10,68881,69055,65801,6000.032071318001,6001.808249135
c030,4,2,11,57337,57507,54904,6600.036027405001,6602.073156814
# search time: 6600.036s
# total time: 33026.158s
