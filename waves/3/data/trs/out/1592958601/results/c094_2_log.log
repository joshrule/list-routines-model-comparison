    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c094_2.json out/1592958601/results/c094_2_best.csv out/1592958601/results/c094_2_predictions.csv out/1592958601/results/c094_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([80, 94, 67, 6, 59]), o: IntList([67, 6, 80, 94, 59]) }
#   Datum { i: IntList([6, 4, 5, 7, 7, 33, 93, 93]), o: IntList([5, 7, 6, 4, 7, 33, 93, 93]) }
#   Datum { i: IntList([5, 5, 5, 65, 65, 65]), o: IntList([5, 65, 5, 5, 65, 65]) }
#   Datum { i: IntList([96, 35, 63, 96, 63, 52, 96, 95, 37, 95]), o: IntList([63, 96, 96, 35, 63, 52, 96, 95, 37, 95]) }
#   Datum { i: IntList([82, 82, 27, 0, 2, 80, 7, 0, 8]), o: IntList([27, 0, 82, 82, 2, 80, 7, 0, 8]) }
#   Datum { i: IntList([73, 73, 5, 5, 73, 5, 5, 5, 5]), o: IntList([5, 5, 73, 73, 73, 5, 5, 5, 5]) }
#   Datum { i: IntList([68, 90, 68, 31, 68, 58, 90]), o: IntList([68, 31, 68, 90, 68, 58, 90]) }
#   Datum { i: IntList([4, 1, 99, 66, 4]), o: IntList([99, 66, 4, 1, 4]) }
#   Datum { i: IntList([36, 17, 5, 40, 3, 40, 3, 9, 55, 33]), o: IntList([5, 40, 36, 17, 3, 40, 3, 9, 55, 33]) }
#   Datum { i: IntList([88, 46, 88, 88]), o: IntList([88, 88, 88, 46]) }
#   Datum { i: IntList([6, 35, 46, 67, 7, 7]), o: IntList([46, 67, 6, 35, 7, 7]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c094,0,2,1,1027069,886380,996574,996574,600.001833472,602.148192502
c094,0,2,2,298553,278547,286291,286291,1200.0024992130002,1203.444696756
c094,0,2,3,164764,151420,154880,154880,1800.005064935,1804.465479323
c094,0,2,4,105581,98397,101222,101222,2400.005222517,2405.630055986
c094,0,2,5,65212,60323,62242,62242,3000.0110229130005,3006.841438813
c094,0,2,6,50697,46817,48062,48062,3600.0132049410004,3608.132120027
c094,0,2,7,39602,36410,37364,37364,4200.019097779001,4209.524889403
c094,0,2,8,33125,30111,30822,30822,4800.022337729,4811.456694743
c094,0,2,9,30492,27859,28620,28620,5400.030661843,5413.16906822
c094,0,2,10,31267,28332,29362,29362,6000.039171226001,6014.058558559
c094,0,2,11,22545,20623,21165,21165,6600.051075469,6615.520338744
# search time: 6600.051s
# total time: 6615.729s
c094,1,2,1,991326,850344,960565,960565,600.008637971,600.338954158
c094,1,2,2,299158,278686,286591,286591,1200.009597391,1200.855305916
c094,1,2,3,164315,151240,154514,154514,1800.0117706709998,1801.230032264
c094,1,2,4,103973,96797,99756,99756,2400.016203711,2401.693446489
c094,1,2,5,65628,60844,62685,62685,3000.02104088,3002.26169598
c094,1,2,6,51182,47206,48415,48415,3600.0233803789997,3602.868183338
c094,1,2,7,40127,36889,37798,37798,4200.032319919,4203.581821076
c094,1,2,8,33173,30286,30958,30958,4800.040887087,4804.29413988
c094,1,2,9,30026,27398,28100,28100,5400.044787002999,5404.946589783
c094,1,2,10,30349,27723,28573,28573,6000.053484187999,6005.432263518
c094,1,2,11,22870,20898,21432,21432,6600.063316405999,6606.266887966
# search time: 6600.063s
# total time: 13222.221s
c094,2,2,1,989829,855221,960647,960647,600.004330219,600.260661379
c094,2,2,2,290956,271406,279032,279032,1200.005643932,1200.612796123
c094,2,2,3,156060,143076,145907,145907,1800.006725878,1800.931420269
c094,2,2,4,106155,99152,101735,101735,2400.012010322,2401.281231587
c094,2,2,5,65511,60537,62349,62349,3000.019181987,3001.671451278
c094,2,2,6,50781,46635,47977,47977,3600.0273993560004,3602.012106419
c094,2,2,7,39260,36189,36944,36944,4200.032840851,4202.509879592
c094,2,2,8,33131,30196,30951,30951,4800.035204208,4802.976254358
c094,2,2,9,30304,27587,28303,28303,5400.0434675940005,5403.498885963
c094,2,2,10,30377,27693,28639,28639,6000.059392639,6003.778976567
c094,2,2,11,22852,20800,21351,21351,6600.067779242,6604.31275657
# search time: 6600.068s
# total time: 19826.847s
c094,3,2,1,975891,847849,948496,948496,600.000105957,600.218407486
c094,3,2,2,300770,280437,288064,288064,1200.000336515,1200.497914339
c094,3,2,3,162119,149225,152464,152464,1800.0029376030002,1800.7284837
c094,3,2,4,104348,97051,99924,99924,2400.005792579,2401.016413576
c094,3,2,5,66003,60889,62704,62704,3000.0069652250004,3001.300998892
c094,3,2,6,50241,46365,47571,47571,3600.014916557,3601.609010604
c094,3,2,7,39378,36091,37013,37013,4200.023081748001,4201.960016894
c094,3,2,8,33246,30283,31003,31003,4800.029107524,4802.320053502
c094,3,2,9,29735,27075,27791,27791,5400.037725148,5402.754923218
c094,3,2,10,32599,29837,30855,30855,6000.0538011710005,6003.026660291
c094,3,2,11,23011,21000,21575,21575,6600.0630002670005,6603.458754665
# search time: 6600.063s
# total time: 26430.515s
c094,4,2,1,1008372,880499,981241,981241,600.000163398,600.228351721
c094,4,2,2,300326,280037,287750,287750,1200.001194054,1200.448176128
c094,4,2,3,156335,143276,146261,146261,1800.004220847,1800.629516888
c094,4,2,4,104829,97520,100379,100379,2400.013368249,2400.852862404
c094,4,2,5,65278,60336,62169,62169,3000.017175184,3001.083335812
c094,4,2,6,50875,47091,48222,48222,3600.018677708,3601.355757364
c094,4,2,7,40568,37179,38196,38196,4200.028246308,4201.599112379
c094,4,2,8,35096,32058,32899,32899,4800.067186767,4801.944134848
c094,4,2,9,31830,28948,29742,29742,5400.071073063,5402.30047569
c094,4,2,10,34448,31362,32464,32464,6000.085372216,6002.422563876
c094,4,2,11,26178,23792,24466,24466,6600.086848891,6602.733956703
# search time: 6600.087s
# total time: 33033.491s
