    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c096_1.json out/1592958601/results/c096_1_best.csv out/1592958601/results/c096_1_predictions.csv out/1592958601/results/c096_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([20, 70, 38, 80]), o: IntList([98, 20, 70, 38, 80, 37]) }
#   Datum { i: IntList([3, 3]), o: IntList([98, 3, 3, 37]) }
#   Datum { i: IntList([]), o: IntList([98, 37]) }
#   Datum { i: IntList([8, 8, 1, 89, 85, 7, 49]), o: IntList([98, 8, 8, 1, 89, 85, 7, 49, 37]) }
#   Datum { i: IntList([6]), o: IntList([98, 6, 37]) }
#   Datum { i: IntList([53, 53, 53, 53, 0, 53, 53, 0]), o: IntList([98, 53, 53, 53, 53, 0, 53, 53, 0, 37]) }
#   Datum { i: IntList([92, 12, 92, 12, 12]), o: IntList([98, 92, 12, 92, 12, 12, 37]) }
#   Datum { i: IntList([84, 59, 68, 5, 4, 83, 6, 9, 75]), o: IntList([98, 84, 59, 68, 5, 4, 83, 6, 9, 75, 37]) }
#   Datum { i: IntList([51, 55, 8, 93, 55, 6, 86, 86, 0, 32]), o: IntList([98, 51, 55, 8, 93, 55, 6, 86, 86, 0, 32, 37]) }
#   Datum { i: IntList([62, 62, 62]), o: IntList([98, 62, 62, 62, 37]) }
#   Datum { i: IntList([22, 2, 70, 70, 70, 2]), o: IntList([98, 22, 2, 70, 70, 70, 2, 37]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c096,0,1,1,948817,780713,910766,910766,600.0005455,601.87249706
c096,0,1,2,259085,241353,248510,248510,1200.000896984,1203.255145214
c096,0,1,3,189676,172035,174276,174276,1800.0030041270002,1804.525001584
c096,0,1,4,176365,157269,158231,158231,2400.0050318850003,2405.374207778
c096,0,1,5,109628,94717,95127,95127,3000.0052692760005,3006.288157476
c096,0,1,6,107316,93936,94468,94468,3600.0066083220004,3606.832038792
c096,0,1,7,64252,54049,54356,54356,4200.013494234,4207.691013549
c096,0,1,8,60737,50220,50680,50680,4800.035147655,4808.36172196
c096,0,1,9,46025,38326,38736,38736,5400.043393927001,5408.92061925
c096,0,1,10,35611,29997,30315,30315,6000.069584227001,6009.487617967
c096,0,1,11,32722,27836,28172,28172,6600.078177052001,6609.966257569
# search time: 6600.078s
# total time: 6610.291s
c096,1,1,1,966799,791211,927345,927345,600.000013582,600.231523762
c096,1,1,2,257837,240018,247190,247190,1200.000898308,1200.718664252
c096,1,1,3,190219,172729,174959,174959,1800.0014966019999,1801.248239588
c096,1,1,4,176568,157522,158531,158531,2400.0022686449997,2401.629579328
c096,1,1,5,107735,92843,93186,93186,3000.017572685,3002.046435999
c096,1,1,6,106134,92933,93426,93426,3600.0214106329995,3602.303266115
c096,1,1,7,63698,53655,53967,53967,4200.024460045,4202.619171498
c096,1,1,8,60976,50728,51202,51202,4800.042233126,4802.902774106
c096,1,1,9,45016,36422,36812,36812,5400.048027748,5403.207976393
c096,1,1,10,35406,29674,30037,30037,6000.0611344280005,6003.469579788
c096,1,1,11,32934,27920,28250,28250,6600.071530191,6603.751063581
# search time: 6600.072s
# total time: 13214.745s
c096,2,1,1,982479,806918,942222,942222,600.010231071,600.222255745
c096,2,1,2,253436,236480,243260,243260,1200.010299838,1200.542913188
c096,2,1,3,185288,167244,169577,169577,1800.0125678250001,1800.865704834
c096,2,1,4,175988,157230,158209,158209,2400.015368696,2401.125137237
c096,2,1,5,109073,94547,94981,94981,3000.019735314,3001.37443183
c096,2,1,6,106427,93203,93756,93756,3600.020506926,3601.544202876
c096,2,1,7,63426,53263,53564,53564,4200.022864597,4201.790600707
c096,2,1,8,60554,49949,50405,50405,4800.023229815,4801.964760836
c096,2,1,9,45606,37016,37382,37382,5400.030004883,5402.199570651
c096,2,1,10,35757,29914,30256,30256,6000.035038784001,6002.363359931
c096,2,1,11,33265,28083,28429,28429,6600.042285679001,6602.58753798
# search time: 6600.042s
# total time: 19817.753s
c096,3,1,1,996360,860199,966780,966780,600.001049223,600.238633643
c096,3,1,2,252037,234842,241873,241873,1200.0015280940002,1200.490499867
c096,3,1,3,188898,171421,173682,173682,1800.0018714060002,1800.741152831
c096,3,1,4,172234,154049,154976,154976,2400.005636489,2400.966250412
c096,3,1,5,108140,93718,94150,94150,3000.007027967,3001.12785444
c096,3,1,6,106002,92692,93146,93146,3600.009063226,3601.264403373
c096,3,1,7,68407,57226,57556,57556,4200.0239849829995,4201.497375719
c096,3,1,8,65448,54224,54731,54731,4800.030254801999,4801.682630631
c096,3,1,9,49575,39774,40170,40170,5400.033076814999,5401.879296826
c096,3,1,10,38855,32506,32845,32845,6000.071143847998,6002.054076024
c096,3,1,11,35871,29486,29896,29896,6600.077414739999,6602.229266213
# search time: 6600.077s
# total time: 26420.563s
c096,4,1,1,1059564,869323,1016200,1016200,600.000248915,600.183589392
c096,4,1,2,283047,263537,271369,271369,1200.004772362,1200.378194266
c096,4,1,3,205801,186569,189075,189075,1800.006961297,1800.581914725
c096,4,1,4,187956,167800,168814,168814,2400.007713582,2400.767464868
c096,4,1,5,115572,99801,100178,100178,3000.009384246,3000.943613648
c096,4,1,6,116389,101471,102036,102036,3600.012570297,3601.060126282
c096,4,1,7,71381,60032,60450,60450,4200.018684437,4201.203938266
c096,4,1,8,62035,52163,52828,52828,4800.026337999,4801.313381511
c096,4,1,9,50256,41407,41845,41845,5400.041179808,5401.450616904
c096,4,1,10,39029,32773,33131,33131,6000.043866297,6001.578627166
c096,4,1,11,34859,29315,29640,29640,6600.046748642,6601.665310842
# search time: 6600.047s
# total time: 33022.796s
