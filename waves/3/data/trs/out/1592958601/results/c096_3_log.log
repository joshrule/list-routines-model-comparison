    Finished release [optimized] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c096_3.json out/1592958601/results/c096_3_best.csv out/1592958601/results/c096_3_predictions.csv out/1592958601/results/c096_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([62, 62, 62]), o: IntList([98, 62, 62, 62, 37]) }
#   Datum { i: IntList([92, 12, 92, 12, 12]), o: IntList([98, 92, 12, 92, 12, 12, 37]) }
#   Datum { i: IntList([51, 55, 8, 93, 55, 6, 86, 86, 0, 32]), o: IntList([98, 51, 55, 8, 93, 55, 6, 86, 86, 0, 32, 37]) }
#   Datum { i: IntList([]), o: IntList([98, 37]) }
#   Datum { i: IntList([20, 70, 38, 80]), o: IntList([98, 20, 70, 38, 80, 37]) }
#   Datum { i: IntList([22, 2, 70, 70, 70, 2]), o: IntList([98, 22, 2, 70, 70, 70, 2, 37]) }
#   Datum { i: IntList([3, 3]), o: IntList([98, 3, 3, 37]) }
#   Datum { i: IntList([8, 8, 1, 89, 85, 7, 49]), o: IntList([98, 8, 8, 1, 89, 85, 7, 49, 37]) }
#   Datum { i: IntList([53, 53, 53, 53, 0, 53, 53, 0]), o: IntList([98, 53, 53, 53, 53, 0, 53, 53, 0, 37]) }
#   Datum { i: IntList([6]), o: IntList([98, 6, 37]) }
#   Datum { i: IntList([84, 59, 68, 5, 4, 83, 6, 9, 75]), o: IntList([98, 84, 59, 68, 5, 4, 83, 6, 9, 75, 37]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c096,0,3,1,1068235,936173,1040508,1040508,600.00151534,602.261013025
c096,0,3,2,290902,271402,279385,279385,1200.002829519,1203.400671431
c096,0,3,3,165025,153646,155179,155179,1800.003094014,1804.301581429
c096,0,3,4,83991,76569,76976,76976,2400.008296786,2405.254853585
c096,0,3,5,92239,79815,80243,80243,3000.010435995,3005.884713197
c096,0,3,6,76894,65035,65393,65393,3600.014788572,3606.461667551
c096,0,3,7,50898,42978,43166,43166,4200.017414813,4207.394126686
c096,0,3,8,47887,40703,40848,40848,4800.017607494,4808.296378545
c096,0,3,9,49000,40753,41066,41066,5400.023990475,5408.920679911
c096,0,3,10,30927,25793,26102,26102,6000.052639449999,6010.168369816
c096,0,3,11,38272,32368,32692,32692,6600.074153793999,6610.633924192
# search time: 6600.074s
# total time: 6610.993s
c096,1,3,1,1108919,908319,1063127,1063127,600.000920055,600.262679289
c096,1,3,2,330634,308817,317300,317300,1200.002355991,1200.697268279
c096,1,3,3,180641,168701,170288,170288,1800.00310803,1801.058721363
c096,1,3,4,82697,74636,75002,75002,2400.003545979,2401.552916984
c096,1,3,5,90533,77872,78186,78186,3000.0050946700003,3001.852938139
c096,1,3,6,76857,64888,65267,65267,3600.0051474800002,3602.119175003
c096,1,3,7,52571,45365,45626,45626,4200.014892801,4202.568991614
c096,1,3,8,48879,42419,42655,42655,4800.020808525001,4802.957072073
c096,1,3,9,48284,41402,41743,41743,5400.029972452001,5403.239577702
c096,1,3,10,30937,25856,26153,26153,6000.038481285001,6003.80493054
c096,1,3,11,38141,32304,32569,32569,6600.045105329001,6604.077266328
# search time: 6600.045s
# total time: 13215.721s
c096,2,3,1,1055883,892974,1020007,1020007,600.008853141,600.279301671
c096,2,3,2,317256,296921,304967,304967,1200.009531809,1200.591095568
c096,2,3,3,179454,167729,169379,169379,1800.0106724329999,1800.835946078
c096,2,3,4,84455,76790,77227,77227,2400.0151841469997,2401.099361737
c096,2,3,5,91003,78788,79222,79222,3000.0176839869996,3001.321202023
c096,2,3,6,74390,62811,63105,63105,3600.0317972139997,3601.576918111
c096,2,3,7,50860,42885,43103,43103,4200.034599926,4201.846466428
c096,2,3,8,47871,41406,41631,41631,4800.039062783,4802.147027988
c096,2,3,9,47479,40638,40993,40993,5400.048891484,5402.286537395
c096,2,3,10,30905,25891,26187,26187,6000.063809159,6002.743589215
c096,2,3,11,37946,32285,32619,32619,6600.072219728,6602.938842337
# search time: 6600.072s
# total time: 19819.297s
c096,3,3,1,1105027,908954,1060445,1060445,600.007684378,600.196044614
c096,3,3,2,310135,290096,298329,298329,1200.0089610280002,1200.444157519
c096,3,3,3,179951,168220,169786,169786,1800.0109480830001,1800.626434699
c096,3,3,4,82122,74170,74555,74555,2400.015551408,2400.862223658
c096,3,3,5,89583,77081,77393,77393,3000.020041258,3001.019183036
c096,3,3,6,75928,64224,64620,64620,3600.020591034,3601.182087354
c096,3,3,7,50435,42548,42731,42731,4200.027807638,4201.434745239
c096,3,3,8,46450,39796,40020,40020,4800.035270427,4801.739914557
c096,3,3,9,47579,40932,41235,41235,5400.035662705,5401.922855841
c096,3,3,10,32133,26829,27143,27143,6000.036532389,6002.369516072
c096,3,3,11,37905,32316,32621,32621,6600.040513656,6602.49227843
# search time: 6600.041s
# total time: 26422.369s
c096,4,3,1,1120180,976782,1089246,1089246,600.005256089,600.235172904
c096,4,3,2,304653,285012,292889,292889,1200.0057707629999,1200.439042445
c096,4,3,3,175342,163658,165166,165166,1800.0094201719999,1800.601168204
c096,4,3,4,81725,74259,74647,74647,2400.010026271,2400.756041871
c096,4,3,5,88953,76799,77195,77195,3000.011275724,3000.868968669
c096,4,3,6,74568,62637,63007,63007,3600.016056055,3600.999571713
c096,4,3,7,50583,43675,43934,43934,4200.0169100759995,4201.206179876
c096,4,3,8,47067,41030,41273,41273,4800.020871643999,4801.327704186
c096,4,3,9,46095,39718,40027,40027,5400.040672380999,5401.448577607
c096,4,3,10,31291,26172,26487,26487,6000.1043233069995,6001.725554299
c096,4,3,11,35751,30310,30565,30565,6600.106853638999,6601.852785621
# search time: 6600.107s
# total time: 33024.885s
