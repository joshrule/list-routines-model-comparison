    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c100_4.json out/1592958601/results/c100_4_best.csv out/1592958601/results/c100_4_predictions.csv out/1592958601/results/c100_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([75, 4, 7, 5, 33]), o: IntList([33, 5, 7, 4, 75]) }
#   Datum { i: IntList([42, 6, 9, 0, 5, 8]), o: IntList([8, 5, 0, 9, 6, 42]) }
#   Datum { i: IntList([95, 38, 95, 38]), o: IntList([38, 95, 38, 95]) }
#   Datum { i: IntList([5, 2]), o: IntList([2, 5]) }
#   Datum { i: IntList([58, 58, 58, 45, 1, 99, 58, 1]), o: IntList([1, 58, 99, 1, 45, 58, 58, 58]) }
#   Datum { i: IntList([79, 67, 13, 79]), o: IntList([79, 13, 67, 79]) }
#   Datum { i: IntList([83, 9, 63, 44, 44, 83, 1]), o: IntList([1, 83, 44, 44, 63, 9, 83]) }
#   Datum { i: IntList([64, 64, 97]), o: IntList([97, 64, 64]) }
#   Datum { i: IntList([31, 0, 51, 90]), o: IntList([90, 51, 0, 31]) }
#   Datum { i: IntList([5, 98, 5, 98, 0, 82, 11, 4, 82, 9]), o: IntList([9, 82, 4, 11, 82, 0, 98, 5, 98, 5]) }
#   Datum { i: IntList([6, 1, 9, 13, 70, 66, 8, 40, 7]), o: IntList([7, 40, 8, 66, 70, 13, 9, 1, 6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c100,0,4,1,978362,831293,945858,945858,600.000362823,602.028649009
c100,0,4,2,351914,329011,337636,337636,1200.002586642,1203.341344457
c100,0,4,3,203715,194750,196196,196196,1800.0057425510001,1804.374573548
c100,0,4,4,163682,154994,155945,155945,2400.0075611370003,2405.256614454
c100,0,4,5,164678,154598,155720,155720,3000.00938076,3005.915071891
c100,0,4,6,97909,89364,89720,89720,3600.0106781,3606.728340621
c100,0,4,7,93944,86572,87129,87129,4200.014110229,4207.261680671
c100,0,4,8,62122,57312,57670,57670,4800.022773957,4808.039582407
c100,0,4,9,56757,52712,53032,53032,5400.025360035,5408.751989538
c100,0,4,10,60366,56419,56803,56803,6000.032392067999,6009.315569476
c100,0,4,11,48545,44937,45213,45213,6600.035698033999,6609.83899238
# search time: 6600.036s
# total time: 6610.229s
c100,1,4,1,1069612,871406,1024710,1024710,600.000916895,600.238966693
c100,1,4,2,371160,346625,356311,356311,1200.002250407,1200.692424457
c100,1,4,3,217423,207146,208538,208538,1800.002866587,1801.119283496
c100,1,4,4,160292,151618,152371,152371,2400.007087016,2401.534518958
c100,1,4,5,161436,151553,152416,152416,3000.01100439,3001.886097227
c100,1,4,6,96681,88381,88735,88735,3600.0162030789998,3602.29480537
c100,1,4,7,93252,85974,86479,86479,4200.022924864,4202.542343469
c100,1,4,8,61504,56797,57140,57140,4800.02685649,4802.934137178
c100,1,4,9,53460,49484,49669,49669,5400.033498365,5403.394151717
c100,1,4,10,59742,55883,56222,56222,6000.041228017,6003.644171986
c100,1,4,11,47871,44521,44827,44827,6600.057986527,6603.959582607
# search time: 6600.058s
# total time: 13214.915s
c100,2,4,1,1085566,889914,1040574,1040574,600.000155724,600.199762264
c100,2,4,2,366169,342687,352159,352159,1200.00097568,1200.512005312
c100,2,4,3,221601,211809,213308,213308,1800.002116077,1800.796737692
c100,2,4,4,163974,155416,156327,156327,2400.002186857,2401.065325518
c100,2,4,5,161204,151160,152285,152285,3000.00361086,3001.257421506
c100,2,4,6,97365,88918,89282,89282,3600.008215059,3601.429956575
c100,2,4,7,90734,83732,84072,84072,4200.019042934,4201.628025451
c100,2,4,8,59263,54009,54286,54286,4800.053176411,4802.004543998
c100,2,4,9,53304,49347,49560,49560,5400.0601503220005,5402.29961961
c100,2,4,10,58602,53937,54170,54170,6000.063235607,6002.454254731
c100,2,4,11,45933,42611,42795,42795,6600.077018304,6602.716382156
# search time: 6600.077s
# total time: 19818.364s
c100,3,4,1,1064634,905465,1029346,1029346,600.000287226,600.264895817
c100,3,4,2,368758,344941,354372,354372,1200.004310936,1200.525838832
c100,3,4,3,217870,207568,208895,208895,1800.004403106,1800.731729819
c100,3,4,4,160032,151338,152099,152099,2400.0057180169997,2400.932542105
c100,3,4,5,162249,152283,153379,153379,3000.005756495,3001.083483019
c100,3,4,6,93437,85326,85528,85528,3600.0085272439997,3601.272170784
c100,3,4,7,90471,83469,83781,83781,4200.010334928999,4201.421595579
c100,3,4,8,60387,55540,55907,55907,4800.014552473,4801.637231331
c100,3,4,9,55480,51684,51942,51942,5400.015082602999,5401.812265495
c100,3,4,10,59868,55950,56306,56306,6000.023042739,6001.926664273
c100,3,4,11,48051,44566,44841,44841,6600.046083634,6602.10364782
# search time: 6600.046s
# total time: 26421.200s
c100,4,4,1,1060647,869895,1017042,1017042,600.000075395,600.166382849
c100,4,4,2,361307,337050,346539,346539,1200.000666765,1200.37771535
c100,4,4,3,215391,205955,207411,207411,1800.002107539,1800.548053963
c100,4,4,4,155101,146594,147314,147314,2400.004437813,2400.70046954
c100,4,4,5,157483,147003,147814,147814,3000.0050241530002,3000.838228604
c100,4,4,6,90157,82350,82537,82537,3600.0054256430003,3600.975331608
c100,4,4,7,90373,83242,83753,83753,4200.009758913,4201.116959738
c100,4,4,8,58736,53716,54028,54028,4800.010938743,4801.248665699
c100,4,4,9,54222,50425,50731,50731,5400.02860578,5401.430188864
c100,4,4,10,57890,53329,53601,53601,6000.0318285700005,6001.563185687
c100,4,4,11,44903,41330,41517,41517,6600.035600217,6601.766993042
# search time: 6600.036s
# total time: 33024.702s
