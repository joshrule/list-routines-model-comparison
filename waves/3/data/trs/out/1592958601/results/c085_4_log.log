    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.78s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c085_4.json out/1592958601/results/c085_4_best.csv out/1592958601/results/c085_4_predictions.csv out/1592958601/results/c085_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 4, 4]), o: IntList([4]) }
#   Datum { i: IntList([2, 67, 52, 72, 93, 9, 67, 5, 68]), o: IntList([52]) }
#   Datum { i: IntList([3, 98, 94, 94, 3]), o: IntList([94]) }
#   Datum { i: IntList([8, 63, 70, 25, 0, 2, 19, 34, 60]), o: IntList([60]) }
#   Datum { i: IntList([1, 76, 9, 76]), o: IntList([76]) }
#   Datum { i: IntList([2, 53, 38, 49, 78, 69, 6, 1, 3, 11]), o: IntList([38]) }
#   Datum { i: IntList([4, 39, 4, 48, 46, 48]), o: IntList([46]) }
#   Datum { i: IntList([4, 28, 5, 26, 29, 6, 94, 3]), o: IntList([29]) }
#   Datum { i: IntList([1, 8, 27, 27, 8, 1, 8]), o: IntList([8]) }
#   Datum { i: IntList([5, 4, 3, 80, 36, 66, 75]), o: IntList([66]) }
#   Datum { i: IntList([2, 7, 3, 9]), o: IntList([3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c085,0,4,1,1054699,866328,1012006,1012006,600.00001654,601.814882021
c085,0,4,2,719240,681853,700636,700636,1200.000360569,1202.800538787
c085,0,4,3,452327,425544,438804,438804,1800.000848704,1803.581444226
c085,0,4,4,307255,289061,298664,298664,2400.00156459,2404.40306723
c085,0,4,5,214838,201766,209495,209495,3000.002186547,3005.32097942
c085,0,4,6,177036,166502,170888,170888,3600.0057501329998,3606.207547289
c085,0,4,7,121959,114710,117699,117699,4200.01043268,4207.17281254
c085,0,4,8,92931,86909,89382,89382,4800.013944925,4808.178942681
c085,0,4,9,78134,72861,75595,75595,5400.014038701,5408.996760032
c085,0,4,10,63751,59390,61602,61602,6000.024872919999,6010.034429216
c085,0,4,11,54103,49986,52349,52349,6600.028091142999,6611.008430853
# search time: 6600.028s
# total time: 6611.464s
c085,1,4,1,1029599,883731,998180,998180,600.00001152,600.317254906
c085,1,4,2,675382,638668,656744,656744,1200.000513133,1200.694701878
c085,1,4,3,429150,404465,416193,416193,1800.000564171,1801.041309024
c085,1,4,4,283243,266168,275050,275050,2400.002517986,2401.418260499
c085,1,4,5,194128,181912,189220,189220,3000.005510805,3001.867341706
c085,1,4,6,159611,149942,154294,154294,3600.0083417200003,3602.345778414
c085,1,4,7,119840,112705,115742,115742,4200.013941837,4202.776058899
c085,1,4,8,90399,84329,86946,86946,4800.01745365,4803.252280457
c085,1,4,9,77179,71834,74570,74570,5400.019981361,5403.730279759
c085,1,4,10,59834,55640,57411,57411,6000.029202431,6004.331122711
c085,1,4,11,50995,46726,49062,49062,6600.046936028,6604.8066184
# search time: 6600.047s
# total time: 13216.959s
c085,2,4,1,967063,792857,927198,927198,600.002102474,600.186242654
c085,2,4,2,625583,593111,609871,609871,1200.0111780749999,1200.47282251
c085,2,4,3,414396,388925,401109,401109,1800.011298429,1800.720432392
c085,2,4,4,282057,264922,273915,273915,2400.0167893919997,2400.995022859
c085,2,4,5,189054,177147,183610,183610,3000.017840484,3001.327803181
c085,2,4,6,158166,148790,152980,152980,3600.019033537,3601.594552894
c085,2,4,7,116630,109419,112673,112673,4200.020578779,4201.914438028
c085,2,4,8,91090,85272,87591,87591,4800.038869689,4802.200288465
c085,2,4,9,71510,66756,68865,68865,5400.038920045001,5402.58098419
c085,2,4,10,59998,55857,57686,57686,6000.039772214001,6002.928517157
c085,2,4,11,51448,47060,49444,49444,6600.069558813,6603.244542883
# search time: 6600.070s
# total time: 19821.245s
c085,3,4,1,940023,796433,908823,908823,600.000460944,600.21008028
c085,3,4,2,652571,618461,635598,635598,1200.000783897,1200.453719936
c085,3,4,3,423289,398032,410088,410088,1800.000855676,1800.660344776
c085,3,4,4,289679,272374,281145,281145,2400.0019053369997,2400.890861009
c085,3,4,5,194597,182526,189764,189764,3000.0023409849996,3001.1239223
c085,3,4,6,158556,149021,153037,153037,3600.0053121089995,3601.361708748
c085,3,4,7,116550,109477,112770,112770,4200.006506086,4201.618634514
c085,3,4,8,90554,84733,87097,87097,4800.009459958999,4801.887725901
c085,3,4,9,68938,64322,66277,66277,5400.024047284,5402.094492174
c085,3,4,10,62555,58123,60317,60317,6000.026480593,6002.415510862
c085,3,4,11,49598,45305,47637,47637,6600.037581208,6602.736450657
# search time: 6600.038s
# total time: 26424.678s
c085,4,4,1,991004,850097,960697,960697,600.010004165,600.221613217
c085,4,4,2,661995,626029,644084,644084,1200.011753968,1200.448162314
c085,4,4,3,420798,395339,407447,407447,1800.0121315269998,1800.630901536
c085,4,4,4,288402,271995,280208,280208,2400.0123807359996,2400.818399961
c085,4,4,5,194177,182252,189302,189302,3000.0297079479997,3001.042919234
c085,4,4,6,158745,149329,153246,153246,3600.0349247579998,3601.220810624
c085,4,4,7,119453,112436,115367,115367,4200.036314835,4201.457133948
c085,4,4,8,93432,87380,89879,89879,4800.039210505,4801.688099196
c085,4,4,9,76328,71197,73794,73794,5400.047907212999,5401.957745131
c085,4,4,10,63129,58683,60848,60848,6000.050924912,6002.099434988
c085,4,4,11,53098,48970,51292,51292,6600.054890455,6602.300272051
# search time: 6600.055s
# total time: 33027.336s
