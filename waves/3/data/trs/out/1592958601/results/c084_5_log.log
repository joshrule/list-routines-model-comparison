    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.49s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c084_5.json out/1592958601/results/c084_5_best.csv out/1592958601/results/c084_5_predictions.csv out/1592958601/results/c084_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 5]), o: IntList([]) }
#   Datum { i: IntList([57, 97, 57, 83, 92, 3, 14]), o: IntList([14]) }
#   Datum { i: IntList([21, 24, 41, 38, 8, 6, 4, 96]), o: IntList([4]) }
#   Datum { i: IntList([85, 18, 85, 91, 91, 18, 91]), o: IntList([91]) }
#   Datum { i: IntList([27, 27, 27, 27]), o: IntList([]) }
#   Datum { i: IntList([2, 42]), o: IntList([]) }
#   Datum { i: IntList([94, 0, 58, 62, 7, 3, 1, 55, 88]), o: IntList([1]) }
#   Datum { i: IntList([90, 8, 5, 34, 79, 65, 8, 48, 79, 9]), o: IntList([8]) }
#   Datum { i: IntList([6, 61, 3, 19, 80]), o: IntList([]) }
#   Datum { i: IntList([37, 5, 82, 82, 5, 5, 37, 5, 82]), o: IntList([37]) }
#   Datum { i: IntList([99, 1, 1, 99, 85]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c084,0,5,1,1116672,966162,1084678,1084678,600.006389502,602.039745487
c084,0,5,2,836863,778210,818637,818637,1200.007226938,1202.808692695
c084,0,5,3,545787,513319,533141,533141,1800.007236747,1803.662597998
c084,0,5,4,368295,340304,356109,356109,2400.007295715,2404.427435339
c084,0,5,5,235054,218004,228034,228034,3000.009607794,3005.272482213
c084,0,5,6,217465,202862,211487,211487,3600.009709327,3606.102220826
c084,0,5,7,165670,155771,162056,162056,4200.011976058,4206.96287375
c084,0,5,8,121233,114314,119010,119010,4800.017181381,4807.836245036
c084,0,5,9,78117,73479,76512,76512,5400.037364099,5408.94074307
c084,0,5,10,84600,79457,82998,82998,6000.050500527001,6009.93254767
c084,0,5,11,58221,54584,57057,57057,6600.0539375200005,6610.986167009
# search time: 6600.054s
# total time: 6611.400s
c084,1,5,1,974138,798033,934052,934052,600.002218277,600.204583061
c084,1,5,2,763517,713830,748248,748248,1200.0025386769998,1200.547864056
c084,1,5,3,499606,469409,486783,486783,1800.0026457189997,1800.976154782
c084,1,5,4,324627,300212,314511,314511,2400.0044060709997,2401.341767723
c084,1,5,5,212394,196700,205991,205991,3000.005106443,3001.712658754
c084,1,5,6,194791,181852,189520,189520,3600.005665064,3602.182019124
c084,1,5,7,168756,158989,165323,165323,4200.007671957,4202.588865108
c084,1,5,8,118242,111457,116082,116082,4800.016676399,4802.977783986
c084,1,5,9,90465,84863,88740,88740,5400.033282683,5403.599978242
c084,1,5,10,79167,74073,77374,77374,6000.038185321,6004.280931357
c084,1,5,11,60301,56622,59142,59142,6600.040791766,6604.877845212
# search time: 6600.041s
# total time: 13216.948s
c084,2,5,1,973642,799215,933904,933904,600.000150565,600.173004028
c084,2,5,2,757087,706363,741378,741378,1200.000787349,1200.428860257
c084,2,5,3,495383,465695,483229,483229,1800.001166162,1800.722014084
c084,2,5,4,316754,293242,307234,307234,2400.013768332,2400.98881344
c084,2,5,5,199347,184858,193029,193029,3000.014305193,3001.279559851
c084,2,5,6,183727,170958,178127,178127,3600.017241107,3601.628034403
c084,2,5,7,156299,147113,152813,152813,4200.019759606999,4201.892914541
c084,2,5,8,120810,113847,118559,118559,4800.026333067999,4802.213257987
c084,2,5,9,77163,72581,75524,75524,5400.030263277999,5402.627791908
c084,2,5,10,78927,73784,77056,77056,6000.0354131839995,6002.960611166
c084,2,5,11,67124,63255,66096,66096,6600.049333411,6603.332665612
# search time: 6600.049s
# total time: 19820.968s
c084,3,5,1,1030645,890880,1000831,1000831,600.008420539,600.237477046
c084,3,5,2,770249,715615,753024,753024,1200.012970108,1200.459456482
c084,3,5,3,497607,467686,484934,484934,1800.013410901,1800.720382237
c084,3,5,4,315286,291563,305535,305535,2400.0148172110003,2400.951978083
c084,3,5,5,200945,186178,194592,194592,3000.0159521650003,3001.19870145
c084,3,5,6,194253,181035,188956,188956,3600.0177248470004,3601.406231862
c084,3,5,7,156180,146903,152582,152582,4200.022751593,4201.652270662
c084,3,5,8,119255,112456,117074,117074,4800.023139878,4801.95463051
c084,3,5,9,89216,83736,87582,87582,5400.042199072,5402.237996826
c084,3,5,10,84290,79082,82632,82632,6000.043705892,6002.487001041
c084,3,5,11,65828,61987,64777,64777,6600.046471324999,6602.766768674
# search time: 6600.046s
# total time: 26424.758s
c084,4,5,1,1003609,861017,972837,972837,600.000086932,600.193650032
c084,4,5,2,758914,705053,741974,741974,1200.004524721,1200.39746501
c084,4,5,3,491955,462658,480060,480060,1800.0048580020002,1800.613157525
c084,4,5,4,315750,292427,306387,306387,2400.005016653,2400.783790982
c084,4,5,5,212197,196760,205929,205929,3000.0076744440003,3000.997347941
c084,4,5,6,184566,171736,179006,179006,3600.0089853120003,3601.179968679
c084,4,5,7,164521,154851,161049,161049,4200.024443581,4201.365569898
c084,4,5,8,121377,114402,119123,119123,4800.041326528,4801.602368347
c084,4,5,9,81154,76319,79506,79506,5400.042339082001,5401.757828591
c084,4,5,10,81626,76504,79892,79892,6000.044907013001,6001.922155795
c084,4,5,11,65398,61664,64426,64426,6600.050574482,6602.13038485
# search time: 6600.051s
# total time: 33027.301s
