    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.37s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c082_3.json out/1592958601/results/c082_3_best.csv out/1592958601/results/c082_3_predictions.csv out/1592958601/results/c082_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([10, 6, 2, 99, 0]), o: IntList([2]) }
#   Datum { i: IntList([15]), o: IntList([]) }
#   Datum { i: IntList([18, 79, 7, 5, 3, 7, 3, 5, 79]), o: IntList([7]) }
#   Datum { i: IntList([96, 40]), o: IntList([]) }
#   Datum { i: IntList([91, 75, 3, 6, 8, 42, 11, 4, 1, 60]), o: IntList([3]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([22]), o: IntList([]) }
#   Datum { i: IntList([90, 90, 90, 90, 90]), o: IntList([90]) }
#   Datum { i: IntList([83, 58]), o: IntList([]) }
#   Datum { i: IntList([78, 8, 74, 9, 70, 78]), o: IntList([74]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c082,0,3,1,969879,791207,929069,929069,600.004004356,602.028567177
c082,0,3,2,639519,601738,619652,619652,1200.004292645,1203.596705564
c082,0,3,3,655686,618547,640927,640927,1800.0046671320001,1804.509081869
c082,0,3,4,426177,395973,414661,414661,2400.005002776,2405.351314277
c082,0,3,5,375601,350849,364991,364991,3000.0071467609996,3005.898762682
c082,0,3,6,261204,241498,254312,254312,3600.007406678,3606.677146414
c082,0,3,7,297321,276359,288284,288284,4200.0087976019995,4207.277620825
c082,0,3,8,274118,253840,264869,264869,4800.009278312,4807.763545642
c082,0,3,9,252670,233125,243757,243757,5400.009669207,5408.25403227
c082,0,3,10,228344,211160,220184,220184,6000.010603582,6008.709734108
c082,0,3,11,215546,199546,207883,207883,6600.014322331,6609.16568689
# search time: 6600.014s
# total time: 6609.900s
c082,1,3,1,962924,790299,923578,923578,600.000016726,600.201336315
c082,1,3,2,640316,603775,621311,621311,1200.000280944,1200.616860456
c082,1,3,3,679857,640705,664812,664812,1800.00090897,1800.996228156
c082,1,3,4,427946,397052,416036,416036,2400.010590438,2401.368953379
c082,1,3,5,383939,358508,373097,373097,3000.0108368419997,3001.630932184
c082,1,3,6,268883,248647,261722,261722,3600.0152529509996,3601.976225301
c082,1,3,7,294565,273731,285709,285709,4200.016654186999,4202.232452686
c082,1,3,8,273745,253601,264506,264506,4800.022394989999,4802.48519657
c082,1,3,9,252466,232752,243417,243417,5400.023205056999,5402.784962872
c082,1,3,10,228772,211326,220560,220560,6000.024983058999,6003.026861268
c082,1,3,11,213720,197452,206039,206039,6600.026251439999,6603.313690843
# search time: 6600.026s
# total time: 13213.788s
c082,2,3,1,966096,820252,933917,933917,600.000106801,600.203774122
c082,2,3,2,643039,604955,623340,623340,1200.002198809,1200.59750062
c082,2,3,3,673807,635499,659165,659165,1800.0042014649998,1800.888509027
c082,2,3,4,440180,408729,427938,427938,2400.004474733,2401.122530153
c082,2,3,5,383796,358402,372918,372918,3000.0053822229997,3001.330687433
c082,2,3,6,267417,247309,260358,260358,3600.0065489549997,3601.558292248
c082,2,3,7,295205,274943,286504,286504,4200.006682415,4201.735381025
c082,2,3,8,275628,255371,266320,266320,4800.00889743,4801.915522955
c082,2,3,9,250287,230615,241529,241529,5400.015203659999,5402.100847099
c082,2,3,10,226180,209239,218157,218157,6000.015362777,6002.299292909
c082,2,3,11,213557,197601,206011,206011,6600.016257122,6602.467708256
# search time: 6600.016s
# total time: 19817.021s
c082,3,3,1,1016109,898642,992590,992590,600.005994691,600.261442295
c082,3,3,2,634018,597569,615196,615196,1200.006223709,1200.50856699
c082,3,3,3,674767,635791,659822,659822,1800.021087344,1800.754090964
c082,3,3,4,439723,408440,427785,427785,2400.0219189970003,2400.948290771
c082,3,3,5,389351,364179,378417,378417,3000.0242593210005,3001.121244615
c082,3,3,6,258079,238490,250836,250836,3600.0281872830005,3601.286409142
c082,3,3,7,300126,279611,291207,291207,4200.035557006,4201.440747076
c082,3,3,8,276902,256270,267491,267491,4800.035725543,4801.586786661
c082,3,3,9,252235,232408,243310,243310,5400.03881834,5401.740757885
c082,3,3,10,229788,212610,221579,221579,6000.039800312,6001.877916864
c082,3,3,11,210640,194770,203147,203147,6600.040738475,6602.00816462
# search time: 6600.041s
# total time: 26419.797s
c082,4,3,1,1039510,892419,1007518,1007518,600.005773411,600.205011014
c082,4,3,2,667224,628297,646593,646593,1200.006443494,1200.414844855
c082,4,3,3,672634,634381,657373,657373,1800.0069541809999,1800.616358443
c082,4,3,4,428737,398244,416921,416921,2400.0077498829996,2400.78271266
c082,4,3,5,384949,359652,374081,374081,3000.0111761849994,3000.932605058
c082,4,3,6,257563,237952,250246,250246,3600.0151251489992,3601.071582349
c082,4,3,7,298888,278588,290173,290173,4200.019848831999,4201.204712213
c082,4,3,8,274329,253466,264862,264862,4800.020667483,4801.320625203
c082,4,3,9,251891,232311,243077,243077,5400.02263109,5401.471976831
c082,4,3,10,227858,210494,219736,219736,6000.023976959999,6001.602434316
c082,4,3,11,216767,200255,208959,208959,6600.025184106999,6601.716561833
# search time: 6600.025s
# total time: 33022.393s
