    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c092_5.json out/1592958601/results/c092_5_best.csv out/1592958601/results/c092_5_predictions.csv out/1592958601/results/c092_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([7, 87, 87, 87, 5, 11]), o: IntList([92, 63, 34, 18, 55, 7, 87, 87, 87, 5, 11]) }
#   Datum { i: IntList([14, 9, 14]), o: IntList([92, 63, 34, 18, 55, 14, 9, 14]) }
#   Datum { i: IntList([80, 1, 10, 35, 5]), o: IntList([92, 63, 34, 18, 55, 80, 1, 10, 35, 5]) }
#   Datum { i: IntList([97, 45, 97, 8]), o: IntList([92, 63, 34, 18, 55, 97, 45, 97, 8]) }
#   Datum { i: IntList([78, 37, 7, 71, 37, 73, 48, 78, 7, 9]), o: IntList([92, 63, 34, 18, 55, 78, 37, 7, 71, 37, 73, 48, 78, 7, 9]) }
#   Datum { i: IntList([1]), o: IntList([92, 63, 34, 18, 55, 1]) }
#   Datum { i: IntList([8, 54, 84, 7, 9, 94, 3, 40, 6]), o: IntList([92, 63, 34, 18, 55, 8, 54, 84, 7, 9, 94, 3, 40, 6]) }
#   Datum { i: IntList([25, 51, 51, 50, 0, 50, 50, 51]), o: IntList([92, 63, 34, 18, 55, 25, 51, 51, 50, 0, 50, 50, 51]) }
#   Datum { i: IntList([8, 22, 72, 7, 31, 94, 4, 49, 69, 47]), o: IntList([92, 63, 34, 18, 55, 8, 22, 72, 7, 31, 94, 4, 49, 69, 47]) }
#   Datum { i: IntList([]), o: IntList([92, 63, 34, 18, 55]) }
#   Datum { i: IntList([66, 66]), o: IntList([92, 63, 34, 18, 55, 66, 66]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c092,0,5,1,967527,792899,927573,927573,600.00009058,601.891671057
c092,0,5,2,162520,145726,150152,150152,1200.002535227,1203.312353609
c092,0,5,3,116690,108430,112313,112313,1800.0064119869999,1804.000261497
c092,0,5,4,85414,79316,82106,82106,2400.0087419359998,2404.692351132
c092,0,5,5,66268,60502,62294,62294,3000.014021557,3005.30377162
c092,0,5,6,47516,43039,44357,44357,3600.020418092,3605.826892615
c092,0,5,7,37317,34199,35111,35111,4200.026951384,4206.770546865
c092,0,5,8,28263,25977,26685,26685,4800.052832031,4808.017777052
c092,0,5,9,22833,20986,21462,21462,5400.092981947,5409.202488994
c092,0,5,10,24159,21765,22260,22260,6000.146888837,6009.726192667
c092,0,5,11,25280,21837,22338,22338,6600.164896441,6610.253796455
# search time: 6600.165s
# total time: 6610.501s
c092,1,5,1,952048,780727,912817,912817,600.000187934,600.291551722
c092,1,5,2,163201,146606,151084,151084,1200.000301357,1200.836429761
c092,1,5,3,117549,109305,113218,113218,1800.00894358,1801.150720086
c092,1,5,4,83218,77182,80115,80115,2400.010735829,2401.446662204
c092,1,5,5,65846,60223,62097,62097,3000.013661735,3001.747744868
c092,1,5,6,46456,42399,43723,43723,3600.020757081,3602.010555515
c092,1,5,7,36092,33177,34041,34041,4200.024921409,4202.632972514
c092,1,5,8,29112,26611,27367,27367,4800.025345456,4803.119163255
c092,1,5,9,22986,21000,21567,21567,5400.046371549,5403.632813445
c092,1,5,10,23398,21078,21568,21568,6000.063739869,6003.926464641
c092,1,5,11,24917,21441,21933,21933,6600.0791136319995,6604.188009289
# search time: 6600.079s
# total time: 13215.043s
c092,2,5,1,940089,771472,901832,901832,600.000703323,600.206409505
c092,2,5,2,164543,147743,152159,152159,1200.0022436,1200.574828049
c092,2,5,3,115821,107747,111580,111580,1800.007314202,1800.783250964
c092,2,5,4,81089,71306,78071,78071,2400.009007731,2400.970753091
c092,2,5,5,65503,60297,62357,62357,3000.020273377,3001.164577507
c092,2,5,6,46157,42181,43466,43466,3600.023311043,3601.32329877
c092,2,5,7,36471,33543,34421,34421,4200.024197423,4201.753911912
c092,2,5,8,28081,25791,26455,26455,4800.0570941510005,4802.176926093
c092,2,5,9,22554,20737,21234,21234,5400.0785934840005,5402.718932704
c092,2,5,10,23142,20804,21243,21243,6000.095784538001,6002.926166857
c092,2,5,11,24917,21303,22031,22031,6600.117941371001,6603.131542932
# search time: 6600.118s
# total time: 19818.485s
c092,3,5,1,939662,795218,907638,907638,600.001858586,600.228716819
c092,3,5,2,164428,147909,152468,152468,1200.007979091,1200.507848499
c092,3,5,3,115887,107433,111516,111516,1800.011879856,1800.665671226
c092,3,5,4,83007,77070,79917,79917,2400.013261747,2400.825119755
c092,3,5,5,64732,59248,60977,60977,3000.017419895,3000.981147907
c092,3,5,6,45743,41494,42520,42520,3600.026807507,3601.128389559
c092,3,5,7,36453,33508,34358,34358,4200.035653971,4201.407187644
c092,3,5,8,28371,26079,26683,26683,4800.059147348,4801.799395424
c092,3,5,9,22521,20701,21198,21198,5400.072104638,5402.150471528
c092,3,5,10,23185,20792,21191,21191,6000.076042321,6002.317975196
c092,3,5,11,24967,21453,22096,22096,6600.093955056001,6602.425960433
# search time: 6600.094s
# total time: 26421.202s
c092,4,5,1,986621,807512,945376,945376,600.000214424,600.171476711
c092,4,5,2,164379,147578,152153,152153,1200.001532357,1200.387807461
c092,4,5,3,116452,108087,112128,112128,1800.0018348540002,1800.498787495
c092,4,5,4,85879,80116,82552,82552,2400.0021529060004,2400.605843259
c092,4,5,5,65633,59876,61568,61568,3000.0025556080004,3000.727963913
c092,4,5,6,46462,42349,43497,43497,3600.0052058960005,3600.83053015
c092,4,5,7,35504,32690,33644,33644,4200.015512172001,4201.077033113
c092,4,5,8,28160,25913,26504,26504,4800.046550647001,4801.392285472
c092,4,5,9,22492,20748,21207,21207,5400.061476732001,5401.767253911
c092,4,5,10,23639,21345,21737,21737,6000.073427546001,6001.899925705
c092,4,5,11,24877,21620,22107,22107,6600.090919994001,6601.991167032
# search time: 6600.091s
# total time: 33023.490s
