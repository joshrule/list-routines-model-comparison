    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.33s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c081_4.json out/1592958601/results/c081_4_best.csv out/1592958601/results/c081_4_predictions.csv out/1592958601/results/c081_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([40, 50, 76, 47, 39]), o: IntList([76]) }
#   Datum { i: IntList([9, 81, 6, 81, 6]), o: IntList([6]) }
#   Datum { i: IntList([9, 91, 70, 48, 59, 83, 43]), o: IntList([70]) }
#   Datum { i: IntList([27, 4, 38, 83, 5, 3, 15, 4, 5, 83]), o: IntList([38]) }
#   Datum { i: IntList([45, 45, 45]), o: IntList([45]) }
#   Datum { i: IntList([3, 84, 2, 42, 12, 12]), o: IntList([2]) }
#   Datum { i: IntList([68, 68, 56, 46, 71]), o: IntList([56]) }
#   Datum { i: IntList([5, 83, 64, 87, 57, 1, 95, 1, 95]), o: IntList([64]) }
#   Datum { i: IntList([70, 1, 7, 18, 2, 8, 21, 6, 4, 19]), o: IntList([7]) }
#   Datum { i: IntList([55, 74, 69]), o: IntList([69]) }
#   Datum { i: IntList([9, 56, 9, 9]), o: IntList([9]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c081,0,4,1,1082507,944337,1052860,1052860,600.000014692,602.043336785
c081,0,4,2,601942,567965,584116,584116,1200.463382765,1203.924498241
c081,0,4,3,486693,452245,469684,469684,1800.466757783,1804.920396256
c081,0,4,4,312908,287795,300921,300921,2400.467908561,2405.782022503
c081,0,4,5,236223,216495,227211,227211,3000.468176392,3006.595023468
c081,0,4,6,193405,180028,187235,187235,3600.471009081,3607.532148206
c081,0,4,7,144198,132663,138806,138806,4200.471123878,4208.530100279
c081,0,4,8,116749,107333,112389,112389,4800.475806743,4809.45621511
c081,0,4,9,92000,84312,88363,88363,5400.482373101,5410.393471561
c081,0,4,10,74479,68173,71394,71394,6000.485786753,6011.328199152
c081,0,4,11,72221,65923,69140,69140,6600.494310844,6612.460436429
# search time: 6600.494s
# total time: 6612.763s
c081,1,4,1,975611,848415,948285,948285,600.004048288,600.264103674
c081,1,4,2,567238,533820,549475,549475,1200.004877837,1200.721722482
c081,1,4,3,443019,411706,427652,427652,1800.005545473,1801.141369874
c081,1,4,4,283969,260768,272944,272944,2400.005899216,2401.532302207
c081,1,4,5,212805,194700,204400,204400,3000.007082805,3001.932227591
c081,1,4,6,173320,160952,167783,167783,3600.00899814,3602.362117986
c081,1,4,7,142243,131049,137008,137008,4200.011940352,4202.827842066
c081,1,4,8,117944,108332,113429,113429,4800.0160765030005,4803.382936731
c081,1,4,9,90967,83383,87301,87301,5400.018040704001,5403.846718185
c081,1,4,10,75048,68637,71951,71951,6000.025693947001,6004.538703146
c081,1,4,11,70134,64044,67184,67184,6600.032112924001,6605.233113231
# search time: 6600.032s
# total time: 13218.425s
c081,2,4,1,992049,853369,961769,961769,600.002174135,600.221674732
c081,2,4,2,567788,534516,550053,550053,1200.004470245,1200.543705144
c081,2,4,3,437720,406135,422025,422025,1800.004538723,1800.823586758
c081,2,4,4,283584,260573,272711,272711,2400.008520073,2401.091152676
c081,2,4,5,213259,195262,204964,204964,3000.011726694,3001.433835431
c081,2,4,6,172302,159557,166526,166526,3600.012692008,3601.738514269
c081,2,4,7,143697,132565,138361,138361,4200.013855662,4202.038264118
c081,2,4,8,117085,107886,112684,112684,4800.019133091,4802.351791074
c081,2,4,9,91245,83977,87732,87732,5400.02837178,5402.641232779
c081,2,4,10,74682,68309,71476,71476,6000.0452661730005,6003.101320077
c081,2,4,11,70016,63988,67076,67076,6600.045297373001,6603.470501282
# search time: 6600.045s
# total time: 19822.307s
c081,3,4,1,959049,784942,919304,919304,600.000448551,600.148954823
c081,3,4,2,570521,536811,552512,552512,1200.000634008,1200.4373606
c081,3,4,3,440176,409193,425117,425117,1800.001708201,1800.667591643
c081,3,4,4,277943,255183,267058,267058,2400.00263571,2400.871196677
c081,3,4,5,210791,193121,202516,202516,3000.005133547,3001.081046032
c081,3,4,6,174353,161981,168675,168675,3600.00831966,3601.347050706
c081,3,4,7,141982,130798,136722,136722,4200.017792891,4201.583748267
c081,3,4,8,117070,107563,112582,112582,4800.019671162,4801.847752329
c081,3,4,9,92185,84562,88510,88510,5400.020150191,5402.165637768
c081,3,4,10,75017,68568,71916,71916,6000.023583192,6002.355076253
c081,3,4,11,70358,64250,67430,67430,6600.029912026,6602.632879642
# search time: 6600.030s
# total time: 26425.360s
c081,4,4,1,945465,773305,906011,906011,600.005609312,600.149288466
c081,4,4,2,552969,521483,536247,536247,1200.00738504,1200.383803183
c081,4,4,3,437853,406812,422620,422620,1800.0076322599998,1800.58222
c081,4,4,4,283607,260252,272742,272742,2400.0087406449998,2400.760682605
c081,4,4,5,210176,192592,201873,201873,3000.0121907899997,3000.964837283
c081,4,4,6,172218,159661,166582,166582,3600.0155157769996,3601.177886851
c081,4,4,7,139901,128659,134656,134656,4200.017532856999,4201.380206459
c081,4,4,8,116629,107072,112060,112060,4800.030433487,4801.635262242
c081,4,4,9,91219,83509,87612,87612,5400.031153723,5401.857793108
c081,4,4,10,74626,68198,71546,71546,6000.0370881300005,6002.06082957
c081,4,4,11,70566,64414,67590,67590,6600.050139501001,6602.235845758
# search time: 6600.050s
# total time: 33028.153s
