    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.16s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c081_1.json out/1592958601/results/c081_1_best.csv out/1592958601/results/c081_1_predictions.csv out/1592958601/results/c081_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 56, 9, 9]), o: IntList([9]) }
#   Datum { i: IntList([40, 50, 76, 47, 39]), o: IntList([76]) }
#   Datum { i: IntList([27, 4, 38, 83, 5, 3, 15, 4, 5, 83]), o: IntList([38]) }
#   Datum { i: IntList([70, 1, 7, 18, 2, 8, 21, 6, 4, 19]), o: IntList([7]) }
#   Datum { i: IntList([55, 74, 69]), o: IntList([69]) }
#   Datum { i: IntList([9, 81, 6, 81, 6]), o: IntList([6]) }
#   Datum { i: IntList([3, 84, 2, 42, 12, 12]), o: IntList([2]) }
#   Datum { i: IntList([45, 45, 45]), o: IntList([45]) }
#   Datum { i: IntList([9, 91, 70, 48, 59, 83, 43]), o: IntList([70]) }
#   Datum { i: IntList([5, 83, 64, 87, 57, 1, 95, 1, 95]), o: IntList([64]) }
#   Datum { i: IntList([68, 68, 56, 46, 71]), o: IntList([56]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c081,0,1,1,969882,822017,937136,937136,600.004329859,602.064800742
c081,0,1,2,651768,611729,630569,630569,1200.004367994,1203.307047172
c081,0,1,3,410059,376685,392827,392827,1800.0058028439998,1804.354090582
c081,0,1,4,260471,245814,253288,253288,2400.006753579,2405.406848982
c081,0,1,5,214482,196487,206242,206242,3000.006971136,3006.444742605
c081,0,1,6,161607,150648,156528,156528,3600.012797195,3607.600133584
c081,0,1,7,155144,144257,150490,150490,4200.014071727001,4208.735044737
c081,0,1,8,128850,119382,124488,124488,4800.018390428,4809.780786461
c081,0,1,9,115850,106898,111745,111745,5400.019140563,5410.930313992
c081,0,1,10,94963,87167,91179,91179,6000.021501405,6012.045283491
c081,0,1,11,74598,67956,71370,71370,6600.033008998,6613.215071037
# search time: 6600.033s
# total time: 6613.527s
c081,1,1,1,995894,844070,962249,962249,600.011637677,600.273918953
c081,1,1,2,643756,607165,625091,625091,1200.013284344,1200.709265983
c081,1,1,3,425699,390880,407817,407817,1800.014089318,1801.088734907
c081,1,1,4,267843,252792,260493,260493,2400.015010772,2401.548235841
c081,1,1,5,225269,207587,217569,217569,3000.0162819800003,3001.912504384
c081,1,1,6,169752,158887,164614,164614,3600.0169812330005,3602.408300602
c081,1,1,7,153465,142724,148838,148838,4200.023691595001,4202.933973199
c081,1,1,8,127459,117632,123086,123086,4800.025060645001,4803.415254057
c081,1,1,9,114867,105969,110873,110873,5400.030538429,5403.861988451
c081,1,1,10,94397,86401,90573,90573,6000.031911363,6004.330440388
c081,1,1,11,75632,68947,72403,72403,6600.038747317,6604.956840703
# search time: 6600.039s
# total time: 13218.938s
c081,2,1,1,1071049,940513,1044097,1044097,600.000123016,600.279059545
c081,2,1,2,649326,611419,629534,629534,1200.001379046,1200.568906769
c081,2,1,3,412620,378891,394650,394650,1800.0014427410001,1800.85348412
c081,2,1,4,273613,258528,265984,265984,2400.00193032,2401.140277059
c081,2,1,5,219261,201334,211178,211178,3000.012060886,3001.479394424
c081,2,1,6,166396,155160,161273,161273,3600.012065886,3601.768491041
c081,2,1,7,155303,144309,150538,150538,4200.014036091,4202.149901233
c081,2,1,8,126784,117520,122508,122508,4800.019615891,4802.519208942
c081,2,1,9,115561,106518,111462,111462,5400.022113272,5402.936026518
c081,2,1,10,93457,85561,89754,89754,6000.030047243999,6003.270350308
c081,2,1,11,75607,69025,72315,72315,6600.046014240999,6603.594112087
# search time: 6600.046s
# total time: 19822.989s
c081,3,1,1,1058117,933889,1032345,1032345,600.000757224,600.231012169
c081,3,1,2,651975,613353,631836,631836,1200.001000182,1200.473986157
c081,3,1,3,421035,386288,403128,403128,1800.004846752,1800.679977387
c081,3,1,4,266239,251292,258881,258881,2400.006917835,2400.928407062
c081,3,1,5,218783,200780,210670,210670,3000.007214494,3001.151878425
c081,3,1,6,167220,156283,162163,162163,3600.008778133,3601.430657585
c081,3,1,7,155297,144333,150546,150546,4200.019578998999,4201.660033192
c081,3,1,8,126908,117863,122753,122753,4800.024163798,4801.88385052
c081,3,1,9,114968,105972,110973,110973,5400.029639169,5402.176573643
c081,3,1,10,92391,84583,88702,88702,6000.0331632,6002.466117238
c081,3,1,11,75369,68686,71996,71996,6600.052938366,6602.72487037
# search time: 6600.053s
# total time: 26426.201s
c081,4,1,1,1041921,896232,1010040,1010040,600.000091684,600.204101677
c081,4,1,2,640047,603474,621248,621248,1200.0008165220002,1200.421616624
c081,4,1,3,414306,380401,396384,396384,1800.0058269550002,1800.618026862
c081,4,1,4,273241,258446,265795,265795,2400.006785601,2400.801041911
c081,4,1,5,221170,203041,212853,212853,3000.010816813,3000.986757678
c081,4,1,6,169372,158256,164146,164146,3600.011417561,3601.190129227
c081,4,1,7,152909,142150,148385,148385,4200.011432905,4201.461850782
c081,4,1,8,125115,115942,121041,121041,4800.012217195001,4801.6824545
c081,4,1,9,112983,104329,109205,109205,5400.019076865001,5401.888648494
c081,4,1,10,92645,84937,88950,88950,6000.020801961001,6002.157482256
c081,4,1,11,75463,68855,72225,72225,6600.0217075400005,6602.371136298
# search time: 6600.022s
# total time: 33028.967s
