    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.38s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c090_1.json out/1592958601/results/c090_1_best.csv out/1592958601/results/c090_1_predictions.csv out/1592958601/results/c090_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([79, 85, 85, 85]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([33, 33]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([92, 2, 2, 7, 9, 84, 52, 5, 6, 41]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([2, 34, 96, 49, 83, 41, 35, 4, 39, 97]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([89, 68, 4, 3, 68, 76, 80, 6]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([1, 1, 31, 31, 1, 31, 1, 87, 1, 1]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([50, 5, 34, 3, 34, 5, 3, 0, 3, 0]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([25, 25, 2, 27, 25, 2, 27]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([7, 16, 38, 68, 38, 93, 84, 28, 6, 93]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([]), o: IntList([18, 42, 77, 20, 36]) }
#   Datum { i: IntList([51, 21, 8, 40, 51, 51, 40, 21]), o: IntList([18, 42, 77, 20, 36]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c090,0,1,1,1106685,963060,1075866,1075866,600.006473367,602.036470883
c090,0,1,2,310750,290810,299564,299564,1200.007381368,1203.211170624
c090,0,1,3,196866,187176,192560,192560,1800.0084985530002,1803.966124667
c090,0,1,4,140823,133522,137749,137749,2400.0105038300003,2404.694889336
c090,0,1,5,98638,94060,96599,96599,3000.012284579,3005.643172723
c090,0,1,6,71766,68214,70418,70418,3600.023788783,3606.863848626
c090,0,1,7,51399,49386,50471,50471,4200.03077985,4208.103572999
c090,0,1,8,40298,38564,39581,39581,4800.033253670999,4809.798454038
c090,0,1,9,34272,32821,33613,33613,5400.041038982999,5411.499045619
c090,0,1,10,22992,22089,22539,22539,6000.069707078999,6013.365758211
c090,0,1,11,27412,25647,26081,26081,6600.071482453999,6614.709824225
# search time: 6600.071s
# total time: 6614.916s
c090,1,1,1,1045052,908472,1015707,1015707,600.005178819,600.378324299
c090,1,1,2,291702,272747,280669,280669,1200.00605886,1200.835066947
c090,1,1,3,178270,169064,174293,174293,1800.008175938,1801.188378988
c090,1,1,4,129427,123492,126551,126551,2400.015854036,2401.542137408
c090,1,1,5,89063,85039,87280,87280,3000.0204299829998,3002.054988551
c090,1,1,6,66244,63198,64954,64954,3600.031388566,3602.645880186
c090,1,1,7,50278,47905,49325,49325,4200.037048784,4203.362100298
c090,1,1,8,40303,38580,39532,39532,4800.059429297,4804.168760669
c090,1,1,9,33993,32530,33334,33334,5400.059455934,5404.878610993
c090,1,1,10,22795,21907,22319,22319,6000.075220989,6005.891837521
c090,1,1,11,26947,25167,25609,25609,6600.0971325929995,6606.807952474
# search time: 6600.097s
# total time: 13221.977s
c090,2,1,1,962798,813505,929998,929998,600.000216256,600.228895608
c090,2,1,2,287527,268811,276626,276626,1200.002481613,1200.585561423
c090,2,1,3,178151,168975,174239,174239,1800.0050358,1800.810230749
c090,2,1,4,126667,119659,123932,123932,2400.014307129,2401.102784125
c090,2,1,5,89629,85509,87810,87810,3000.017262694,3001.487658782
c090,2,1,6,66455,63523,65261,65261,3600.0230462259997,3601.962375427
c090,2,1,7,50732,48528,49779,49779,4200.033217515,4202.4037128
c090,2,1,8,39949,38370,39248,39248,4800.054144876,4802.931295217
c090,2,1,9,33187,31817,32631,32631,5400.056316955999,5403.521814413
c090,2,1,10,22899,21945,22364,22364,6000.068861614999,6004.287905665
c090,2,1,11,27073,25368,25791,25791,6600.082047134999,6604.877554555
# search time: 6600.082s
# total time: 19827.100s
c090,3,1,1,1040837,898206,1010062,1010062,600.000068221,600.267954323
c090,3,1,2,279665,262074,269678,269678,1200.0001111020001,1200.52240442
c090,3,1,3,181415,172590,177140,177140,1800.001282913,1800.693786289
c090,3,1,4,128571,122591,125750,125750,2400.0048171010003,2400.876457666
c090,3,1,5,88171,83309,86369,86369,3000.0074054550005,3001.142751929
c090,3,1,6,66875,64159,65643,65643,3600.0203495090004,3601.471348134
c090,3,1,7,50870,48780,49951,49951,4200.024559686,4201.832468376
c090,3,1,8,39851,38135,39129,39129,4800.026041411001,4802.181777639
c090,3,1,9,34137,32593,33521,33521,5400.0367574090005,5402.681594937
c090,3,1,10,23336,22386,22868,22868,6000.055961374001,6003.160812263
c090,3,1,11,27226,25484,25928,25928,6600.072970261001,6603.719859935
# search time: 6600.073s
# total time: 26431.076s
c090,4,1,1,976285,802866,936716,936716,600.000060236,600.157895661
c090,4,1,2,279580,261560,269403,269403,1200.002121462,1200.367012213
c090,4,1,3,177205,167428,173210,173210,1800.004309026,1800.531480236
c090,4,1,4,129336,123564,126476,126476,2400.005599108,2400.691814516
c090,4,1,5,88907,84705,87134,87134,3000.01052489,3000.898459455
c090,4,1,6,66510,63804,65302,65302,3600.019618462,3601.170713934
c090,4,1,7,50067,47817,49141,49141,4200.024438705,4201.445284766
c090,4,1,8,40365,38712,39628,39628,4800.027813187,4801.81023112
c090,4,1,9,33881,32265,33231,33231,5400.055269299,5402.147227557
c090,4,1,10,22752,21831,22297,22297,6000.056369496,6002.634527899
c090,4,1,11,27085,25280,25729,25729,6600.079430556,6602.975638655
# search time: 6600.079s
# total time: 33034.301s
