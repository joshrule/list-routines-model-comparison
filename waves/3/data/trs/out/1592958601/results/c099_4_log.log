    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c099_4.json out/1592958601/results/c099_4_best.csv out/1592958601/results/c099_4_predictions.csv out/1592958601/results/c099_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([95, 7]), o: IntList([95]) }
#   Datum { i: IntList([94, 91, 2, 94, 8, 24, 1]), o: IntList([94, 91, 94]) }
#   Datum { i: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56, 8]), o: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56]) }
#   Datum { i: IntList([1, 7, 8, 25, 0, 40, 53, 94]), o: IntList([53, 94]) }
#   Datum { i: IntList([78, 18, 92, 42, 95, 3, 98]), o: IntList([78, 92, 95, 98]) }
#   Datum { i: IntList([86, 5, 86, 86, 11, 99, 99, 99, 5]), o: IntList([86, 86, 86, 99, 99, 99]) }
#   Datum { i: IntList([8, 87, 2, 64, 48, 79]), o: IntList([87, 64, 79]) }
#   Datum { i: IntList([7, 28, 13, 8, 0, 28, 8, 28]), o: IntList([]) }
#   Datum { i: IntList([99, 4, 74, 99, 83, 5, 2, 83]), o: IntList([99, 74, 99, 83, 83]) }
#   Datum { i: IntList([9, 97, 91, 97, 61]), o: IntList([97, 91, 97, 61]) }
#   Datum { i: IntList([9, 9, 72, 72]), o: IntList([72, 72]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c099,0,4,1,1069187,947681,1045002,1045002,600.001301793,602.338307096
c099,0,4,2,659849,621549,640133,640133,1200.001642145,1203.384916579
c099,0,4,3,330531,307486,311477,311477,1800.004467105,1804.216947202
c099,0,4,4,136376,120417,120773,120773,2400.004855677,2404.865461552
c099,0,4,5,116619,103721,104049,104049,3000.0189078199996,3005.41325195
c099,0,4,6,92891,82576,82860,82860,3600.019411081,3605.982755561
c099,0,4,7,70488,61416,61795,61795,4200.031153133999,4206.499382598
c099,0,4,8,65591,57350,57640,57640,4800.031745771999,4807.055145086
c099,0,4,9,55986,52606,55213,55213,5400.036936424999,5407.533370046
c099,0,4,10,45058,41893,44171,44171,6000.039375766999,6007.964609857
c099,0,4,11,43275,40741,42776,42776,6600.047751529999,6608.502948942
# search time: 6600.048s
# total time: 6609.212s
c099,1,4,1,991125,872243,967289,967289,600.003938818,600.334609447
c099,1,4,2,659429,620855,639499,639499,1200.004347649,1200.759257565
c099,1,4,3,330513,308825,312866,312866,1800.0082396,1801.155688185
c099,1,4,4,136419,120661,121004,121004,2400.012535967,2401.438120271
c099,1,4,5,115651,102610,102902,102902,3000.012696661,3001.733837378
c099,1,4,6,92427,82022,82319,82319,3600.024571413,3601.997169377
c099,1,4,7,71089,63032,63536,63536,4200.029537354,4202.226844289
c099,1,4,8,64615,57755,58180,58180,4800.031959635,4802.446121616
c099,1,4,9,55588,52018,54650,54650,5400.0373318,5402.669464627
c099,1,4,10,47162,44265,46431,46431,6000.058666446001,6002.899449013
c099,1,4,11,43624,41163,43125,43125,6600.061729023,6603.140321558
# search time: 6600.062s
# total time: 13212.720s
c099,2,4,1,1040197,900651,1010781,1010781,600.00029146,600.296711252
c099,2,4,2,659561,620578,639622,639622,1200.000550529,1200.593339529
c099,2,4,3,328426,307000,311059,311059,1800.002086746,1800.860465246
c099,2,4,4,135186,119303,119644,119644,2400.006871427,2401.069349773
c099,2,4,5,115473,102550,102841,102841,3000.010786716,3001.260039476
c099,2,4,6,92160,81848,82111,82111,3600.0140628159998,3601.423202487
c099,2,4,7,72371,63978,64522,64522,4200.024905024,4201.583542792
c099,2,4,8,64259,57778,58209,58209,4800.029951823,4801.781425679
c099,2,4,9,54380,50761,53306,53306,5400.039949329001,5401.937050454
c099,2,4,10,44411,41217,43480,43480,6000.063334828001,6002.169720956
c099,2,4,11,43410,40877,42861,42861,6600.070043449001,6602.364038975
# search time: 6600.070s
# total time: 19815.899s
c099,3,4,1,1058076,933452,1033152,1033152,600.000957587,600.256236033
c099,3,4,2,667834,627977,647201,647201,1200.001703987,1200.510335559
c099,3,4,3,329627,308058,312070,312070,1800.003367528,1800.708834301
c099,3,4,4,134484,118750,119092,119092,2400.003390277,2400.858630376
c099,3,4,5,117530,104293,104827,104827,3000.00569433,3000.998578319
c099,3,4,6,94415,83077,83546,83546,3600.0069477770003,3601.130623069
c099,3,4,7,71135,63147,63719,63719,4200.009628066,4201.273536522
c099,3,4,8,64225,57949,58392,58392,4800.016428211,4801.430274162
c099,3,4,9,55854,52545,55129,55129,5400.0216182429995,5401.511400293
c099,3,4,10,46724,43782,45975,45975,6000.035252952999,6001.614435605
c099,3,4,11,44015,41590,43539,43539,6600.038136596999,6601.715020413
# search time: 6600.038s
# total time: 26418.508s
c099,4,4,1,987815,848917,958118,958118,600.003994796,600.199798295
c099,4,4,2,660108,622047,640474,640474,1200.004070005,1200.419720067
c099,4,4,3,329810,306991,310998,310998,1800.0055121789999,1800.602496753
c099,4,4,4,136237,121608,122219,122219,2400.014676984,2400.726939936
c099,4,4,5,115566,102835,103110,103110,3000.022385797,3000.901764813
c099,4,4,6,91994,81512,81784,81784,3600.023357707,3601.015777645
c099,4,4,7,69155,60307,60723,60723,4200.034330468,4201.158463905
c099,4,4,8,64063,57843,58258,58258,4800.040413302,4801.268404145
c099,4,4,9,55858,52440,55065,55065,5400.046356874,5401.366787581
c099,4,4,10,47537,44653,46783,46783,6000.053282758,6001.459782872
c099,4,4,11,43929,41508,43455,43455,6600.057955851,6601.534814586
# search time: 6600.058s
# total time: 33020.674s
