    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c100_5.json out/1592958601/results/c100_5_best.csv out/1592958601/results/c100_5_predictions.csv out/1592958601/results/c100_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([5, 2]), o: IntList([2, 5]) }
#   Datum { i: IntList([83, 9, 63, 44, 44, 83, 1]), o: IntList([1, 83, 44, 44, 63, 9, 83]) }
#   Datum { i: IntList([79, 67, 13, 79]), o: IntList([79, 13, 67, 79]) }
#   Datum { i: IntList([6, 1, 9, 13, 70, 66, 8, 40, 7]), o: IntList([7, 40, 8, 66, 70, 13, 9, 1, 6]) }
#   Datum { i: IntList([5, 98, 5, 98, 0, 82, 11, 4, 82, 9]), o: IntList([9, 82, 4, 11, 82, 0, 98, 5, 98, 5]) }
#   Datum { i: IntList([31, 0, 51, 90]), o: IntList([90, 51, 0, 31]) }
#   Datum { i: IntList([95, 38, 95, 38]), o: IntList([38, 95, 38, 95]) }
#   Datum { i: IntList([58, 58, 58, 45, 1, 99, 58, 1]), o: IntList([1, 58, 99, 1, 45, 58, 58, 58]) }
#   Datum { i: IntList([64, 64, 97]), o: IntList([97, 64, 64]) }
#   Datum { i: IntList([42, 6, 9, 0, 5, 8]), o: IntList([8, 5, 0, 9, 6, 42]) }
#   Datum { i: IntList([75, 4, 7, 5, 33]), o: IntList([33, 5, 7, 4, 75]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c100,0,5,1,1060019,920333,1030504,1030504,600.000848733,602.169977204
c100,0,5,2,598888,565249,581842,581842,1200.005942817,1203.017030614
c100,0,5,3,231628,211345,213384,213384,1800.007466276,1803.834790985
c100,0,5,4,180981,167919,168387,168387,2400.0083424960003,2404.437900095
c100,0,5,5,117689,107872,108195,108195,3000.01222868,3004.965735211
c100,0,5,6,80069,71290,71656,71656,3600.013906983,3605.50502191
c100,0,5,7,75527,70886,71524,71524,4200.019856416,4205.929465377
c100,0,5,8,65904,59227,59565,59565,4800.028312102,4806.364635946
c100,0,5,9,52789,48856,49218,49218,5400.054370688,5406.839884173
c100,0,5,10,49183,45167,45373,45373,6000.0587235,6007.320786108
c100,0,5,11,45122,41763,42128,42128,6600.072019463,6607.711915457
# search time: 6600.072s
# total time: 6608.088s
c100,1,5,1,1061549,874337,1019097,1019097,600.012260372,600.253369155
c100,1,5,2,633591,598035,615849,615849,1200.012469031,1200.608702421
c100,1,5,3,248718,226910,229169,229169,1800.01502629,1800.943757817
c100,1,5,4,182226,169234,169680,169680,2400.015689146,2401.22797883
c100,1,5,5,117097,107428,107942,107942,3000.0201329680003,3001.519843642
c100,1,5,6,78193,69666,69991,69991,3600.0281478550005,3601.779297062
c100,1,5,7,74713,70275,70935,70935,4200.034257089001,4202.00650528
c100,1,5,8,65135,59490,59909,59909,4800.042051209,4802.231134661
c100,1,5,9,51937,46974,47269,47269,5400.0679522850005,5402.486260762
c100,1,5,10,49703,45878,46194,46194,6000.071210713,6002.67434766
c100,1,5,11,42377,39216,39499,39499,6600.077900946,6602.885079639
# search time: 6600.078s
# total time: 13211.711s
c100,2,5,1,1123582,984162,1095122,1095122,600.001162699,600.285317942
c100,2,5,2,643181,608069,625552,625552,1200.0012477310001,1200.547848644
c100,2,5,3,245149,222700,225052,225052,1800.0017362070002,1800.799953743
c100,2,5,4,181153,168002,168464,168464,2400.0066638220005,2401.018560383
c100,2,5,5,116264,106250,106533,106533,3000.0126894130008,3001.202084403
c100,2,5,6,81081,72205,72713,72713,3600.0146529130006,3601.364722461
c100,2,5,7,74595,70088,70751,70751,4200.0158144530005,4201.525634676
c100,2,5,8,64414,58993,59401,59401,4800.020411963001,4801.718280038
c100,2,5,9,51929,47073,47339,47339,5400.024338508001,5401.911091217
c100,2,5,10,49488,45904,46191,46191,6000.030203069001,6002.097552245
c100,2,5,11,44736,41493,41840,41840,6600.034451875001,6602.33074966
# search time: 6600.034s
# total time: 19814.942s
c100,3,5,1,1040775,879143,1005469,1005469,600.003040338,600.206661999
c100,3,5,2,637230,601111,619137,619137,1200.003175823,1200.4211225
c100,3,5,3,248616,227134,229446,229446,1800.004452335,1800.619708742
c100,3,5,4,181257,168177,168655,168655,2400.005130838,2400.793270911
c100,3,5,5,116236,106687,107205,107205,3000.0058697389995,3000.921856843
c100,3,5,6,81169,72248,72756,72756,3600.0101355109996,3601.041211842
c100,3,5,7,74843,70291,70925,70925,4200.015499773999,4201.162537625
c100,3,5,8,64341,57860,58186,58186,4800.023794237999,4801.278705802
c100,3,5,9,51694,47301,47618,47618,5400.029543795999,5401.41631853
c100,3,5,10,49466,45818,46115,46115,6000.033348088999,6001.544520695
c100,3,5,11,42354,39070,39369,39369,6600.0421013059995,6601.698199789
# search time: 6600.042s
# total time: 26417.215s
c100,4,5,1,1093729,940277,1060855,1060855,600.007648722,600.219077225
c100,4,5,2,615308,581630,598618,598618,1200.0078076,1200.416519326
c100,4,5,3,238130,216335,218624,218624,1800.0124189160001,1800.593935265
c100,4,5,4,176866,164736,165465,165465,2400.01352934,2400.721863982
c100,4,5,5,112940,103680,104170,104170,3000.0161970589998,3000.836198152
c100,4,5,6,75525,67374,67695,67695,3600.017992188,3600.962072785
c100,4,5,7,73062,68530,69061,69061,4200.019603088,4201.039971192
c100,4,5,8,63009,56459,56791,56791,4800.032256308,4801.166670038
c100,4,5,9,50667,46798,47138,47138,5400.035512499,5401.251904755
c100,4,5,10,48034,44681,44976,44976,6000.041527478,6001.33148193
c100,4,5,11,41301,38365,38667,38667,6600.063906474999,6601.545137221
# search time: 6600.064s
# total time: 33020.800s
