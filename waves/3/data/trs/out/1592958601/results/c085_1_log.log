    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.74s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c085_1.json out/1592958601/results/c085_1_best.csv out/1592958601/results/c085_1_predictions.csv out/1592958601/results/c085_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 76, 9, 76]), o: IntList([76]) }
#   Datum { i: IntList([8, 63, 70, 25, 0, 2, 19, 34, 60]), o: IntList([60]) }
#   Datum { i: IntList([4, 39, 4, 48, 46, 48]), o: IntList([46]) }
#   Datum { i: IntList([2, 7, 3, 9]), o: IntList([3]) }
#   Datum { i: IntList([4, 28, 5, 26, 29, 6, 94, 3]), o: IntList([29]) }
#   Datum { i: IntList([3, 98, 94, 94, 3]), o: IntList([94]) }
#   Datum { i: IntList([1, 4, 4]), o: IntList([4]) }
#   Datum { i: IntList([5, 4, 3, 80, 36, 66, 75]), o: IntList([66]) }
#   Datum { i: IntList([2, 53, 38, 49, 78, 69, 6, 1, 3, 11]), o: IntList([38]) }
#   Datum { i: IntList([1, 8, 27, 27, 8, 1, 8]), o: IntList([8]) }
#   Datum { i: IntList([2, 67, 52, 72, 93, 9, 67, 5, 68]), o: IntList([52]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c085,0,1,1,1011997,867811,980433,980433,600.000812804,602.257271829
c085,0,1,2,572076,538110,553700,553700,1200.000833324,1203.594227576
c085,0,1,3,234160,220323,228186,228186,1800.001399623,1805.306631313
c085,0,1,4,142668,134160,138898,138898,2400.003255023,2406.441375758
c085,0,1,5,159077,144794,150375,150375,3000.004942143,3007.237109635
c085,0,1,6,144126,134074,138781,138781,3600.008308817,3608.339357331
c085,0,1,7,117792,111137,115485,115485,4200.008648339,4209.623670214
c085,0,1,8,125013,114461,118688,118688,4800.010082033,4810.726732646
c085,0,1,9,98460,89574,93222,93222,5400.012158773,5411.836331692
c085,0,1,10,81223,74253,77412,77412,6000.01273123,6012.806546805
c085,0,1,11,63834,58792,61570,61570,6600.02608466,6613.784237459
# search time: 6600.026s
# total time: 6614.244s
c085,1,1,1,995670,814802,954260,954260,600.000013264,600.25287356
c085,1,1,2,571241,538362,553982,553982,1200.000733121,1200.760000321
c085,1,1,3,325388,306822,317794,317794,1800.001540822,1801.277681917
c085,1,1,4,249374,234218,242622,242622,2400.001672601,2401.76235469
c085,1,1,5,266752,244023,253321,253321,3000.0030171559997,3002.077567937
c085,1,1,6,158774,147755,152969,152969,3600.0049051099995,3602.666280325
c085,1,1,7,120628,114029,118358,118358,4200.004919507999,4203.27044148
c085,1,1,8,124571,113915,118157,118157,4800.006720270999,4803.835261481
c085,1,1,9,98493,89572,93291,93291,5400.006759382999,5404.346634467
c085,1,1,10,81325,74365,77480,77480,6000.017227910999,6004.886086747
c085,1,1,11,64417,59200,62057,62057,6600.019559117999,6605.378205164
# search time: 6600.020s
# total time: 13220.283s
c085,2,1,1,998100,820042,957281,957281,600.00450167,600.203696523
c085,2,1,2,576994,543763,559270,559270,1200.019925205,1200.553634299
c085,2,1,3,324669,306024,317212,317212,1800.025612747,1800.909939049
c085,2,1,4,249973,234961,243400,243400,2400.027871097,2401.235493963
c085,2,1,5,269602,246730,255978,255978,3000.028555152,3001.432424843
c085,2,1,6,153689,143830,149074,149074,3600.031397325,3601.754388652
c085,2,1,7,119086,112517,116849,116849,4200.032597144,4202.131111384
c085,2,1,8,124330,113539,117864,117864,4800.034069990999,4802.455965478
c085,2,1,9,97690,88781,92473,92473,5400.040477858,5402.829541164
c085,2,1,10,79930,73109,76184,76184,6000.0442309459995,6003.167992928
c085,2,1,11,63445,58473,61242,61242,6600.047124273,6603.516691527
# search time: 6600.047s
# total time: 19824.526s
c085,3,1,1,1028840,892400,999812,999812,600.002718437,600.256121522
c085,3,1,2,592446,556979,573156,573156,1200.003315847,1200.525547713
c085,3,1,3,322915,303395,314616,314616,1800.003924236,1800.764461996
c085,3,1,4,248097,233019,241321,241321,2400.00477807,2400.984772091
c085,3,1,5,269147,246429,255686,255686,3000.0137810280003,3001.169621947
c085,3,1,6,149727,140104,145167,145167,3600.0181063120003,3601.448123134
c085,3,1,7,118567,111914,116305,116305,4200.020344552,4201.711105261
c085,3,1,8,124169,113594,117856,117856,4800.036140088,4801.898525304
c085,3,1,9,97570,88769,92437,92437,5400.038803064001,5402.120871949
c085,3,1,10,80687,73811,76915,76915,6000.05805485,6002.426798559
c085,3,1,11,63936,58851,61667,61667,6600.059565644,6602.796288207
# search time: 6600.060s
# total time: 26427.981s
c085,4,1,1,964528,788396,924590,924590,600.000008278,600.150728226
c085,4,1,2,587535,553104,568864,568864,1200.0002444309998,1200.377903552
c085,4,1,3,325684,306986,317977,317977,1800.0017925379998,1800.588987264
c085,4,1,4,260506,244729,253456,253456,2400.0050853109997,2400.765666595
c085,4,1,5,270396,247436,256724,256724,3000.005850062,3000.91419206
c085,4,1,6,153269,143430,148642,148642,3600.006160484,3601.155846561
c085,4,1,7,120817,114199,118569,118569,4200.009787076,4201.388389891
c085,4,1,8,126559,115953,120252,120252,4800.018727661,4801.583596298
c085,4,1,9,97038,88058,91686,91686,5400.021137772001,5401.754787223
c085,4,1,10,79807,72926,75934,75934,6000.029209398001,6001.960276176
c085,4,1,11,64669,59561,62353,62353,6600.029711756,6602.173594041
# search time: 6600.030s
# total time: 33030.856s
