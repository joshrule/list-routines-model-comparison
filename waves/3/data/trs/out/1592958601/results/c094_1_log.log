    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c094_1.json out/1592958601/results/c094_1_best.csv out/1592958601/results/c094_1_predictions.csv out/1592958601/results/c094_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([88, 46, 88, 88]), o: IntList([88, 88, 88, 46]) }
#   Datum { i: IntList([36, 17, 5, 40, 3, 40, 3, 9, 55, 33]), o: IntList([5, 40, 36, 17, 3, 40, 3, 9, 55, 33]) }
#   Datum { i: IntList([6, 35, 46, 67, 7, 7]), o: IntList([46, 67, 6, 35, 7, 7]) }
#   Datum { i: IntList([82, 82, 27, 0, 2, 80, 7, 0, 8]), o: IntList([27, 0, 82, 82, 2, 80, 7, 0, 8]) }
#   Datum { i: IntList([4, 1, 99, 66, 4]), o: IntList([99, 66, 4, 1, 4]) }
#   Datum { i: IntList([73, 73, 5, 5, 73, 5, 5, 5, 5]), o: IntList([5, 5, 73, 73, 73, 5, 5, 5, 5]) }
#   Datum { i: IntList([5, 5, 5, 65, 65, 65]), o: IntList([5, 65, 5, 5, 65, 65]) }
#   Datum { i: IntList([6, 4, 5, 7, 7, 33, 93, 93]), o: IntList([5, 7, 6, 4, 7, 33, 93, 93]) }
#   Datum { i: IntList([68, 90, 68, 31, 68, 58, 90]), o: IntList([68, 31, 68, 90, 68, 58, 90]) }
#   Datum { i: IntList([96, 35, 63, 96, 63, 52, 96, 95, 37, 95]), o: IntList([63, 96, 96, 35, 63, 52, 96, 95, 37, 95]) }
#   Datum { i: IntList([80, 94, 67, 6, 59]), o: IntList([67, 6, 80, 94, 59]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c094,0,1,1,1053195,925866,1026314,1026314,600.000088433,602.186717593
c094,0,1,2,336736,313116,322647,322647,1200.001412846,1203.297590284
c094,0,1,3,150910,135393,139739,139739,1800.0073386479999,1804.16174083
c094,0,1,4,119074,107048,110134,110134,2400.0096029399997,2404.836877759
c094,0,1,5,88092,78140,80638,80638,3000.0126401649995,3005.452793341
c094,0,1,6,80148,73190,76034,76034,3600.0187130879995,3605.939875355
c094,0,1,7,48974,44807,46026,46026,4200.039061574,4206.979131472
c094,0,1,8,42543,38923,39996,39996,4800.045938518,4808.248195628
c094,0,1,9,40240,36197,37155,37155,5400.05646375,5409.229092275
c094,0,1,10,34159,30835,31614,31614,6000.064424358,6010.270189101
c094,0,1,11,26948,24492,25118,25118,6600.09993643,6611.381985642
# search time: 6600.100s
# total time: 6611.595s
c094,1,1,1,1031875,901405,1004549,1004549,600.000024185,600.376535222
c094,1,1,2,327954,306288,315016,315016,1200.001988144,1200.897194908
c094,1,1,3,153367,138080,142238,142238,1800.0116842940001,1801.203242594
c094,1,1,4,118114,106188,109249,109249,2400.014611298,2401.533950462
c094,1,1,5,88121,78533,81155,81155,3000.016604766,3001.830336709
c094,1,1,6,79332,72368,75224,75224,3600.019371621,3602.067549871
c094,1,1,7,48802,44545,45802,45802,4200.038936389,4202.704703961
c094,1,1,8,42876,39197,40302,40302,4800.04634433,4803.140101135
c094,1,1,9,40766,36535,37638,37638,5400.047747875999,5403.672270112
c094,1,1,10,34117,30645,31567,31567,6000.051847414999,6004.1166846
c094,1,1,11,27022,24276,25004,25004,6600.061713554,6604.771245967
# search time: 6600.062s
# total time: 13216.690s
c094,2,1,1,967372,794393,927836,927836,600.000114713,600.190469657
c094,2,1,2,328042,306101,314874,314874,1200.00102323,1200.511596702
c094,2,1,3,152428,137222,141554,141554,1800.001138819,1800.732758515
c094,2,1,4,119148,107198,110482,110482,2400.004981395,2400.936759674
c094,2,1,5,87818,78362,81034,81034,3000.006511359,3001.136892935
c094,2,1,6,78582,71695,74556,74556,3600.010937899,3601.303072348
c094,2,1,7,48594,44312,45580,45580,4200.023287287,4201.762421359
c094,2,1,8,42083,38574,39608,39608,4800.035840823,4802.167608108
c094,2,1,9,39658,35536,36527,36527,5400.040087828001,5402.555551605
c094,2,1,10,33918,30423,31326,31326,6000.043903497,6002.813692732
c094,2,1,11,27441,24575,25370,25370,6600.0557559280005,6603.096944201
# search time: 6600.056s
# total time: 19820.093s
c094,3,1,1,1022473,876956,990557,990557,600.000091611,600.223996933
c094,3,1,2,322974,301656,310190,310190,1200.0003608299999,1200.478748525
c094,3,1,3,152925,137451,141771,141771,1800.0140343469998,1800.651004089
c094,3,1,4,117913,105956,109085,109085,2400.016638774,2400.819573139
c094,3,1,5,87886,78518,81026,81026,3000.018351341,3000.969522642
c094,3,1,6,78609,71809,74682,74682,3600.022113079,3601.101540319
c094,3,1,7,48146,44151,45313,45313,4200.024522278,4201.500719787
c094,3,1,8,43056,39244,40333,40333,4800.033978083,4801.861968617
c094,3,1,9,40195,36093,37126,37126,5400.038520948,5402.066781194
c094,3,1,10,34390,30817,31744,31744,6000.043993207,6002.357391025
c094,3,1,11,26871,24068,24797,24797,6600.085268661001,6602.684360615
# search time: 6600.085s
# total time: 26423.085s
c094,4,1,1,1027200,897894,1000009,1000009,600.000044587,600.233772977
c094,4,1,2,330618,308451,317291,317291,1200.0018051860002,1200.450647112
c094,4,1,3,152521,137209,141491,141491,1800.0023612090001,1800.603220239
c094,4,1,4,117519,105713,108703,108703,2400.0084622150002,2400.745135801
c094,4,1,5,87710,78176,80804,80804,3000.008718296,3000.853643958
c094,4,1,6,79079,72102,74954,74954,3600.0095768680003,3600.939574725
c094,4,1,7,47236,43262,44353,44353,4200.028606637,4201.245783606
c094,4,1,8,41981,38542,39511,39511,4800.031797443,4801.50841498
c094,4,1,9,40180,36041,37058,37058,5400.034983383,5401.822691223
c094,4,1,10,34001,30428,31305,31305,6000.043222212,6002.067667078
c094,4,1,11,26858,24078,24697,24697,6600.061170524,6602.25879645
# search time: 6600.061s
# total time: 33025.671s
