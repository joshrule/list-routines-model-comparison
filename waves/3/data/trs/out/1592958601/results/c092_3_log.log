    Finished release [optimized] target(s) in 0.04s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c092_3.json out/1592958601/results/c092_3_best.csv out/1592958601/results/c092_3_predictions.csv out/1592958601/results/c092_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([80, 1, 10, 35, 5]), o: IntList([92, 63, 34, 18, 55, 80, 1, 10, 35, 5]) }
#   Datum { i: IntList([8, 22, 72, 7, 31, 94, 4, 49, 69, 47]), o: IntList([92, 63, 34, 18, 55, 8, 22, 72, 7, 31, 94, 4, 49, 69, 47]) }
#   Datum { i: IntList([66, 66]), o: IntList([92, 63, 34, 18, 55, 66, 66]) }
#   Datum { i: IntList([]), o: IntList([92, 63, 34, 18, 55]) }
#   Datum { i: IntList([78, 37, 7, 71, 37, 73, 48, 78, 7, 9]), o: IntList([92, 63, 34, 18, 55, 78, 37, 7, 71, 37, 73, 48, 78, 7, 9]) }
#   Datum { i: IntList([7, 87, 87, 87, 5, 11]), o: IntList([92, 63, 34, 18, 55, 7, 87, 87, 87, 5, 11]) }
#   Datum { i: IntList([97, 45, 97, 8]), o: IntList([92, 63, 34, 18, 55, 97, 45, 97, 8]) }
#   Datum { i: IntList([8, 54, 84, 7, 9, 94, 3, 40, 6]), o: IntList([92, 63, 34, 18, 55, 8, 54, 84, 7, 9, 94, 3, 40, 6]) }
#   Datum { i: IntList([14, 9, 14]), o: IntList([92, 63, 34, 18, 55, 14, 9, 14]) }
#   Datum { i: IntList([25, 51, 51, 50, 0, 50, 50, 51]), o: IntList([92, 63, 34, 18, 55, 25, 51, 51, 50, 0, 50, 50, 51]) }
#   Datum { i: IntList([1]), o: IntList([92, 63, 34, 18, 55, 1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c092,0,3,1,1034133,891684,1003067,1003067,600.003854942,602.135767183
c092,0,3,2,183080,164564,169952,169952,1200.004072337,1203.252638469
c092,0,3,3,85682,78414,80700,80700,1800.004681324,1803.948521226
c092,0,3,4,71310,63493,65061,65061,2400.009976501,2404.760659386
c092,0,3,5,67837,60631,62057,62057,3000.01042011,3005.234083241
c092,0,3,6,48225,43224,44262,44262,3600.011659969,3605.62599097
c092,0,3,7,40730,35484,36934,36934,4200.0191686729995,4205.973048333
c092,0,3,8,36319,31668,32739,32739,4800.071794551,4806.401079126
c092,0,3,9,30824,27002,27584,27584,5400.076235021,5406.777740567
c092,0,3,10,28712,25071,25566,25566,6000.085210438,6007.122157545
c092,0,3,11,24854,21271,21863,21863,6600.143052159,6607.55806075
# search time: 6600.143s
# total time: 6607.787s
c092,1,3,1,976456,800610,936125,936125,600.001679028,600.290119328
c092,1,3,2,181772,163389,168709,168709,1200.002180514,1200.816014006
c092,1,3,3,84800,77497,79846,79846,1800.006801225,1801.128473913
c092,1,3,4,71295,64058,65684,65684,2400.008330517,2401.450690648
c092,1,3,5,67190,59345,61526,61526,3000.012342518,3001.692861905
c092,1,3,6,48251,43144,44141,44141,3600.040386405,3601.92664112
c092,1,3,7,40964,35073,37037,37037,4200.046437315,4202.15726879
c092,1,3,8,36278,31693,32595,32595,4800.05661338,4802.332162006
c092,1,3,9,30971,27025,27642,27642,5400.0606061240005,5402.519976417
c092,1,3,10,28359,24674,25212,25212,6000.082289953,6002.714884715
c092,1,3,11,24643,21231,21728,21728,6600.122753361,6602.938057392
# search time: 6600.123s
# total time: 13211.054s
c092,2,3,1,1030972,894303,1001741,1001741,600.000355064,600.319363069
c092,2,3,2,180762,162889,168032,168032,1200.001182872,1200.638734521
c092,2,3,3,85195,77878,80234,80234,1800.0059985080002,1800.859341354
c092,2,3,4,69299,61468,63055,63055,2400.007850882,2401.119202265
c092,2,3,5,67706,58440,62106,62106,3000.016524864,3001.294935523
c092,2,3,6,48106,42997,43984,43984,3600.025374359,3601.475357311
c092,2,3,7,40540,35843,36741,36741,4200.027864203,4201.671240778
c092,2,3,8,36109,31719,32384,32384,4800.040561313,4801.784832739
c092,2,3,9,30315,26657,27255,27255,5400.041102884,5401.915215519
c092,2,3,10,28337,24661,25226,25226,6000.066161724,6002.054747068
c092,2,3,11,24323,21039,21494,21494,6600.085585000001,6602.26007114
# search time: 6600.086s
# total time: 19813.647s
c092,3,3,1,1019836,876589,988604,988604,600.003039651,600.297518818
c092,3,3,2,181581,163227,168694,168694,1200.0032339929999,1200.577555955
c092,3,3,3,84378,76541,78649,78649,1800.003779961,1800.772762126
c092,3,3,4,70681,62900,64376,64376,2400.007650903,2400.965868428
c092,3,3,5,67126,60071,61569,61569,3000.0115078090002,3001.060372097
c092,3,3,6,48036,41971,43923,43923,3600.018638711,3601.172905883
c092,3,3,7,40085,35706,36564,36564,4200.024789353,4201.327541128
c092,3,3,8,35668,31418,32133,32133,4800.037963526001,4801.463532645
c092,3,3,9,30968,26984,27634,27634,5400.045550586001,5401.592960249
c092,3,3,10,28115,24246,25215,25215,6000.062054105001,6001.728384886
c092,3,3,11,24651,21193,21653,21653,6600.094159890001,6601.899699496
# search time: 6600.094s
# total time: 26415.909s
c092,4,3,1,1058930,939861,1034817,1034817,600.000248215,600.264279478
c092,4,3,2,179170,160126,165526,165526,1200.0030446760002,1200.470611726
c092,4,3,3,85257,77860,80299,80299,1800.008289757,1800.589168712
c092,4,3,4,70828,63644,65125,65125,2400.033316268,2400.74417055
c092,4,3,5,67105,59559,61586,61586,3000.03707643,3000.844046978
c092,4,3,6,47948,42762,43831,43831,3600.0453028760003,3600.94530299
c092,4,3,7,40268,35553,36567,36567,4200.055127406,4201.076586495
c092,4,3,8,35726,31291,32116,32116,4800.107886363,4801.232368259
c092,4,3,9,30838,27021,27587,27587,5400.111245186,5401.315751328
c092,4,3,10,28279,24729,25280,25280,6000.115738099,6001.411064476
c092,4,3,11,24544,21193,21695,21695,6600.134673996,6601.493116137
# search time: 6600.135s
# total time: 33017.676s
