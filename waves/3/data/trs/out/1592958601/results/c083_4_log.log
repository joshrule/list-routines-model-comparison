    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.45s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c083_4.json out/1592958601/results/c083_4_best.csv out/1592958601/results/c083_4_predictions.csv out/1592958601/results/c083_4_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([73, 73, 73, 73, 73, 73, 73, 73]), o: IntList([73]) }
#   Datum { i: IntList([41, 22, 30, 71, 84, 50, 95, 3, 7, 61]), o: IntList([95]) }
#   Datum { i: IntList([77, 75, 75, 33, 33, 6, 40, 40, 40, 6]), o: IntList([40]) }
#   Datum { i: IntList([78, 8, 9, 54, 7, 0, 5, 6, 24]), o: IntList([5]) }
#   Datum { i: IntList([72, 55, 11, 6, 19, 1, 17, 70, 19]), o: IntList([17]) }
#   Datum { i: IntList([47, 27, 63, 1, 28, 26, 82, 1]), o: IntList([82]) }
#   Datum { i: IntList([0, 6, 89, 5, 13, 89, 21, 21, 3, 30]), o: IntList([21]) }
#   Datum { i: IntList([67, 3, 20, 9, 50, 72, 29, 9, 35, 82]), o: IntList([29]) }
#   Datum { i: IntList([27, 25, 31, 27, 94, 5, 2]), o: IntList([2]) }
#   Datum { i: IntList([3, 4, 23, 57, 46, 60, 70, 7]), o: IntList([70]) }
#   Datum { i: IntList([6, 4, 54, 54, 5, 5, 4, 68]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c083,0,4,1,899164,778725,872945,872945,600.002061939,602.168249689
c083,0,4,2,437720,412674,424511,424511,1200.002650901,1204.093427476
c083,0,4,3,185896,172052,179028,179028,1800.006950593,1806.290428924
c083,0,4,4,89858,82322,86357,86357,2400.007062551,2408.024855656
c083,0,4,5,68443,62248,65716,65716,3000.0086372700002,3009.98820609
c083,0,4,6,69820,65041,67295,67295,3600.013095908,3612.165469452
c083,0,4,7,72482,65617,69829,69829,4200.023335899,4214.074491716
c083,0,4,8,49735,46180,47832,47832,4800.045479239,4816.398763502
c083,0,4,9,54484,49715,52911,52911,5400.049984307,5418.071780157
c083,0,4,10,40603,37701,39157,39157,6000.0623214980005,6020.962473525
c083,0,4,11,35331,32571,33961,33961,6600.08364958,6623.519522152
# search time: 6600.084s
# total time: 6623.748s
c083,1,4,1,876328,743195,846966,846966,600.00157068,600.281708463
c083,1,4,2,463802,436020,448878,448878,1200.011807413,1200.992899008
c083,1,4,3,259954,240517,250186,250186,1800.013566786,1801.682867883
c083,1,4,4,172604,158432,166398,166398,2400.016953941,2402.376241045
c083,1,4,5,121373,110419,116200,116200,3000.021192788,3003.329641821
c083,1,4,6,77359,72392,74640,74640,3600.031239695,3604.41860003
c083,1,4,7,80173,72981,77535,77535,4200.034102253,4205.247126193
c083,1,4,8,49432,45870,47586,47586,4800.036217651,4806.259777019
c083,1,4,9,54986,50046,53300,53300,5400.066734342,5407.199870352
c083,1,4,10,41907,38959,40489,40489,6000.068301555,6008.298556791
c083,1,4,11,33714,31269,32494,32494,6600.0866294140005,6609.113372391
# search time: 6600.087s
# total time: 13233.351s
c083,2,4,1,871898,739931,842726,842726,600.001951289,600.212217715
c083,2,4,2,455417,428101,440844,440844,1200.002032662,1200.776840346
c083,2,4,3,265971,245743,256287,256287,1800.002378008,1801.251591498
c083,2,4,4,161466,148399,154987,154987,2400.005332572,2401.809723186
c083,2,4,5,120736,110094,115696,115696,3000.00827684,3002.341803548
c083,2,4,6,76310,71126,73634,73634,3600.01312973,3603.050083254
c083,2,4,7,70553,63892,67984,67984,4200.023479408,4203.649478
c083,2,4,8,48161,44766,46390,46390,4800.030592501,4804.317240964
c083,2,4,9,54015,49066,52341,52341,5400.037820353999,5405.175020702
c083,2,4,10,41306,38402,39915,39915,6000.040967866999,6005.836564919
c083,2,4,11,34973,32213,33644,33644,6600.07480281,6606.382883034
# search time: 6600.075s
# total time: 19840.074s
c083,3,4,1,887074,726660,850458,850458,600.000171382,600.16466123
c083,3,4,2,451259,425234,437421,437421,1200.000193266,1200.53583134
c083,3,4,3,266629,246315,256917,256917,1800.000790714,1800.851159645
c083,3,4,4,169832,155786,163510,163510,2400.004893415,2401.246145091
c083,3,4,5,130379,119198,125626,125626,3000.007849142,3001.672510785
c083,3,4,6,75258,70416,72643,72643,3600.009838681,3602.229701542
c083,3,4,7,71461,64742,68884,68884,4200.022308024,4202.593218319
c083,3,4,8,48079,44687,46264,46264,4800.024284236,4803.219978547
c083,3,4,9,52739,47978,51167,51167,5400.031977582001,5403.678182562
c083,3,4,10,40235,37399,38858,38858,6000.038635080001,6004.316693439
c083,3,4,11,36136,33319,34763,34763,6600.041719767001,6604.961939203
# search time: 6600.042s
# total time: 26445.424s
c083,4,4,1,965172,847766,942867,942867,600.001135521,600.222677994
c083,4,4,2,456261,428936,441593,441593,1200.002068498,1200.525913569
c083,4,4,3,252542,233908,243060,243060,1800.002169376,1800.812087488
c083,4,4,4,170054,156077,163872,163872,2400.003430866,2401.066936314
c083,4,4,5,129144,118143,124286,124286,3000.038588545,3001.456138743
c083,4,4,6,74065,69261,71503,71503,3600.044839177,3602.004422514
c083,4,4,7,70981,64295,68353,68353,4200.046552625,4202.397013711
c083,4,4,8,48625,45118,46763,46763,4800.050453645,4802.822761267
c083,4,4,9,54294,49458,52692,52692,5400.051267375,5403.180699969
c083,4,4,10,41236,38298,39796,39796,6000.077208888,6003.557915741
c083,4,4,11,34684,31923,33313,33313,6600.102570744,6604.112892545
# search time: 6600.103s
# total time: 33049.781s
