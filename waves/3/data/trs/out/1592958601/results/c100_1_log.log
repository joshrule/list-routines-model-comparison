    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c100_1.json out/1592958601/results/c100_1_best.csv out/1592958601/results/c100_1_predictions.csv out/1592958601/results/c100_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([31, 0, 51, 90]), o: IntList([90, 51, 0, 31]) }
#   Datum { i: IntList([6, 1, 9, 13, 70, 66, 8, 40, 7]), o: IntList([7, 40, 8, 66, 70, 13, 9, 1, 6]) }
#   Datum { i: IntList([5, 2]), o: IntList([2, 5]) }
#   Datum { i: IntList([64, 64, 97]), o: IntList([97, 64, 64]) }
#   Datum { i: IntList([75, 4, 7, 5, 33]), o: IntList([33, 5, 7, 4, 75]) }
#   Datum { i: IntList([79, 67, 13, 79]), o: IntList([79, 13, 67, 79]) }
#   Datum { i: IntList([95, 38, 95, 38]), o: IntList([38, 95, 38, 95]) }
#   Datum { i: IntList([5, 98, 5, 98, 0, 82, 11, 4, 82, 9]), o: IntList([9, 82, 4, 11, 82, 0, 98, 5, 98, 5]) }
#   Datum { i: IntList([42, 6, 9, 0, 5, 8]), o: IntList([8, 5, 0, 9, 6, 42]) }
#   Datum { i: IntList([83, 9, 63, 44, 44, 83, 1]), o: IntList([1, 83, 44, 44, 63, 9, 83]) }
#   Datum { i: IntList([58, 58, 58, 45, 1, 99, 58, 1]), o: IntList([1, 58, 99, 1, 45, 58, 58, 58]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c100,0,1,1,1005028,824062,963420,963420,600.000655069,601.901662889
c100,0,1,2,359554,335184,344887,344887,1200.000735016,1203.18896697
c100,0,1,3,172378,160461,161537,161537,1800.001022106,1804.041123401
c100,0,1,4,160807,147512,148155,148155,2400.00284056,2404.783506148
c100,0,1,5,123009,112836,113231,113231,3000.006146658,3005.562304943
c100,0,1,6,98846,89622,90047,90047,3600.0082133260003,3606.375207936
c100,0,1,7,72149,68743,69081,69081,4200.0083947250005,4207.435059173
c100,0,1,8,82110,75848,76223,76223,4800.015753641001,4807.888009292
c100,0,1,9,61231,56034,56301,56301,5400.021517192001,5408.336627328
c100,0,1,10,52616,48751,49067,49067,6000.032224052001,6008.836982647
c100,0,1,11,43586,40537,40861,40861,6600.035708120001,6609.334646561
# search time: 6600.036s
# total time: 6609.774s
c100,1,1,1,999159,819470,957954,957954,600.000378872,600.253638501
c100,1,1,2,359384,334996,344631,344631,1200.002243812,1200.711230559
c100,1,1,3,171335,159698,160723,160723,1800.004745312,1801.10240765
c100,1,1,4,159822,146537,147209,147209,2400.006746399,2401.441093537
c100,1,1,5,121394,111237,111621,111621,3000.007450326,3001.788341498
c100,1,1,6,95674,86654,86959,86959,3600.0089270109997,3602.208445451
c100,1,1,7,71242,67763,68090,68090,4200.008975138,4202.703206333
c100,1,1,8,81337,75277,75625,75625,4800.012607278,4802.94471408
c100,1,1,9,60537,54519,54724,54724,5400.015991252,5403.161414822
c100,1,1,10,51301,47027,47231,47231,6000.0385553490005,6003.423863429
c100,1,1,11,41746,38646,38916,38916,6600.040973033,6603.757484766
# search time: 6600.041s
# total time: 13214.311s
c100,2,1,1,1046013,916046,1018675,1018675,600.000183612,600.30989596
c100,2,1,2,356248,332620,342006,342006,1200.001925535,1200.617966313
c100,2,1,3,170549,158653,159662,159662,1800.006446034,1800.873438247
c100,2,1,4,161161,147964,148589,148589,2400.007805124,2401.111093989
c100,2,1,5,121642,111506,111893,111893,3000.0091095029998,3001.343133405
c100,2,1,6,98229,89158,89577,89577,3600.017020509,3601.562603374
c100,2,1,7,71747,68324,68648,68648,4200.021522716,4201.908697934
c100,2,1,8,80527,74156,74408,74408,4800.022683831,4802.075858974
c100,2,1,9,60504,54496,54672,54672,5400.030132362,5402.21242905
c100,2,1,10,52356,48539,48831,48831,6000.0377845289995,6002.397464402
c100,2,1,11,43549,40457,40802,40802,6600.055754935999,6602.586461934
# search time: 6600.056s
# total time: 19817.573s
c100,3,1,1,986762,806805,945696,945696,600.000042222,600.167037959
c100,3,1,2,351970,327967,337863,337863,1200.000982854,1200.41099412
c100,3,1,3,166589,154028,155212,155212,1800.004151496,1800.618320629
c100,3,1,4,159430,145375,145817,145817,2400.009592141,2400.797186204
c100,3,1,5,120040,109854,110123,110123,3000.0163319830003,3000.962169981
c100,3,1,6,94978,85964,86208,86208,3600.0202657500004,3601.143902325
c100,3,1,7,76483,72854,73218,73218,4200.021937997,4201.419125237
c100,3,1,8,87431,80792,81140,81140,4800.02782707,4801.569725726
c100,3,1,9,65428,58828,59029,59029,5400.036625461,5401.716831405
c100,3,1,10,56766,52464,52811,52811,6000.041402981,6001.860711706
c100,3,1,11,45391,41951,42248,42248,6600.042911766,6602.076894659
# search time: 6600.043s
# total time: 26420.378s
c100,4,1,1,1021048,831628,978239,978239,600.000134038,600.166186139
c100,4,1,2,371377,346358,356592,356592,1200.0030039520002,1200.386101078
c100,4,1,3,181264,168720,169774,169774,1800.004381311,1800.550723039
c100,4,1,4,170093,156037,156713,156713,2400.006627652,2400.71226435
c100,4,1,5,123948,113367,113606,113606,3000.0103224430004,3000.893802261
c100,4,1,6,99158,89801,90072,90072,3600.0144524600005,3601.083590426
c100,4,1,7,74743,71268,71588,71588,4200.021619382001,4201.283078325
c100,4,1,8,85402,79020,79342,79342,4800.025075612,4801.394351453
c100,4,1,9,63366,58064,58350,58350,5400.031479001001,5401.498482496
c100,4,1,10,54700,50604,50931,50931,6000.038849737,6001.590061717
c100,4,1,11,45940,42722,43059,43059,6600.046699451001,6601.733164887
# search time: 6600.047s
# total time: 33024.673s
