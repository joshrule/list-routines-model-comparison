    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c098_2.json out/1592958601/results/c098_2_best.csv out/1592958601/results/c098_2_predictions.csv out/1592958601/results/c098_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 9, 82]), o: IntList([10, 11, 85]) }
#   Datum { i: IntList([1, 0]), o: IntList([2, 2]) }
#   Datum { i: IntList([59, 52, 0, 30, 8, 29, 5, 3, 7]), o: IntList([60, 54, 3, 34, 13, 35, 12, 11, 16]) }
#   Datum { i: IntList([14, 14, 21, 14, 3, 21]), o: IntList([15, 16, 24, 18, 8, 27]) }
#   Datum { i: IntList([4, 4, 72, 72, 72]), o: IntList([5, 6, 75, 76, 77]) }
#   Datum { i: IntList([40, 52, 40, 50]), o: IntList([41, 54, 43, 54]) }
#   Datum { i: IntList([18, 5, 79, 21, 0, 47, 91]), o: IntList([19, 7, 82, 25, 5, 53, 98]) }
#   Datum { i: IntList([62, 4, 8, 85, 68, 9, 62, 85]), o: IntList([63, 6, 11, 89, 73, 15, 69, 93]) }
#   Datum { i: IntList([5]), o: IntList([6]) }
#   Datum { i: IntList([87, 56, 7, 56, 72, 33, 36, 57, 87, 7]), o: IntList([88, 58, 10, 60, 77, 39, 43, 65, 96, 17]) }
#   Datum { i: IntList([0, 0, 8, 8, 8, 8]), o: IntList([1, 2, 11, 12, 13, 14]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c098,0,2,1,1052036,904839,1019782,1019782,600.000076224,602.144318331
c098,0,2,2,415998,390395,401155,401155,1200.0041930460002,1203.28492981
c098,0,2,3,384801,363677,368353,368353,1800.0047707570002,1804.031452924
c098,0,2,4,149004,137066,137777,137777,2400.006064349,2404.674200323
c098,0,2,5,99385,90668,90968,90968,3000.011098309,3005.306732859
c098,0,2,6,82161,74347,74671,74671,3600.013159357,3606.002845209
c098,0,2,7,78626,72044,72241,72241,4200.018611519,4206.51021683
c098,0,2,8,63395,57770,58216,58216,4800.026102778,4806.968705001
c098,0,2,9,50742,46649,46977,46977,5400.05953432,5407.4964389
c098,0,2,10,47675,42942,43299,43299,6000.062042547001,6007.955427799
c098,0,2,11,38973,35043,35301,35301,6600.069509005,6608.325993048
# search time: 6600.070s
# total time: 6608.687s
c098,1,2,1,1026804,840738,984172,984172,600.0096084,600.253343645
c098,1,2,2,422874,396724,407664,407664,1200.009873098,1200.674223917
c098,1,2,3,377475,356379,361148,361148,1800.0112958240002,1801.011380348
c098,1,2,4,145384,133331,133876,133876,2400.019393541,2401.312277583
c098,1,2,5,98555,90021,90334,90334,3000.023530929,3001.631994361
c098,1,2,6,79071,71600,71779,71779,3600.0276263670003,3601.995186131
c098,1,2,7,79724,72410,72796,72796,4200.031102036,4202.196686951
c098,1,2,8,61673,55367,55651,55651,4800.032453044,4802.491720715
c098,1,2,9,50790,46192,46410,46410,5400.038029723,5402.77900512
c098,1,2,10,45406,40909,41228,41228,6000.050804858,6002.989738933
c098,1,2,11,38440,34327,34608,34608,6600.051302159,6603.262182261
# search time: 6600.051s
# total time: 13212.584s
c098,2,2,1,1019964,838422,978443,978443,600.001666656,600.197441579
c098,2,2,2,408497,383101,394025,394025,1200.004437225,1200.490530392
c098,2,2,3,377864,356640,361410,361410,1800.00463527,1800.74711798
c098,2,2,4,145808,133931,134486,134486,2400.004723292,2400.958444513
c098,2,2,5,94631,86566,86715,86715,3000.004759748,3001.174192614
c098,2,2,6,81902,74081,74345,74345,3600.018656219,3601.387127609
c098,2,2,7,77965,71495,71716,71716,4200.023830963,4201.591120585
c098,2,2,8,62885,57191,57595,57595,4800.032584223,4801.770209627
c098,2,2,9,49983,46045,46354,46354,5400.041007183,5401.935151595
c098,2,2,10,47488,42790,43184,43184,6000.046540672,6002.148217788
c098,2,2,11,38212,34127,34455,34455,6600.05712809,6602.297412381
# search time: 6600.057s
# total time: 19815.544s
c098,3,2,1,1088272,957154,1061041,1061041,600.000058042,600.279841651
c098,3,2,2,423481,397083,408137,408137,1200.0011325780001,1200.522734455
c098,3,2,3,380973,359910,364687,364687,1800.001625892,1800.728270028
c098,3,2,4,149413,137473,138122,138122,2400.005317519,2400.874330815
c098,3,2,5,98597,89865,90199,90199,3000.011742611,3001.045144538
c098,3,2,6,78621,71321,71506,71506,3600.016075496,3601.284104995
c098,3,2,7,80427,73052,73397,73397,4200.0213423390005,4201.41560836
c098,3,2,8,63168,56861,57175,57175,4800.036641556,4801.563246339
c098,3,2,9,50474,45696,45935,45935,5400.043299301,5401.678311818
c098,3,2,10,47489,42716,43132,43132,6000.052049382,6001.812451212
c098,3,2,11,36125,32684,32987,32987,6600.0590502390005,6601.932687051
# search time: 6600.059s
# total time: 26418.193s
c098,4,2,1,1068384,929084,1038606,1038606,600.000074326,600.262176739
c098,4,2,2,416743,391207,401938,401938,1200.000199247,1200.461417385
c098,4,2,3,378047,356904,361640,361640,1800.002751686,1800.628138646
c098,4,2,4,145922,134066,134584,134584,2400.004190925,2400.773953207
c098,4,2,5,98804,90123,90481,90481,3000.009119319,3000.909462739
c098,4,2,6,78033,70916,71082,71082,3600.013452976,3601.077623865
c098,4,2,7,77884,71507,71712,71712,4200.020398177,4201.191479748
c098,4,2,8,63207,57371,57781,57781,4800.022568538,4801.30141597
c098,4,2,9,50263,45931,46228,46228,5400.052873453,5401.425432399
c098,4,2,10,46043,41404,41755,41755,6000.0597770019995,6001.612957394
c098,4,2,11,38579,34448,34749,34749,6600.063393212,6601.733251363
# search time: 6600.063s
# total time: 33020.449s
