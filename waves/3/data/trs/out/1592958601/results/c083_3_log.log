    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.41s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c083_3.json out/1592958601/results/c083_3_best.csv out/1592958601/results/c083_3_predictions.csv out/1592958601/results/c083_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([47, 27, 63, 1, 28, 26, 82, 1]), o: IntList([82]) }
#   Datum { i: IntList([67, 3, 20, 9, 50, 72, 29, 9, 35, 82]), o: IntList([29]) }
#   Datum { i: IntList([3, 4, 23, 57, 46, 60, 70, 7]), o: IntList([70]) }
#   Datum { i: IntList([6, 4, 54, 54, 5, 5, 4, 68]), o: IntList([4]) }
#   Datum { i: IntList([0, 6, 89, 5, 13, 89, 21, 21, 3, 30]), o: IntList([21]) }
#   Datum { i: IntList([77, 75, 75, 33, 33, 6, 40, 40, 40, 6]), o: IntList([40]) }
#   Datum { i: IntList([72, 55, 11, 6, 19, 1, 17, 70, 19]), o: IntList([17]) }
#   Datum { i: IntList([27, 25, 31, 27, 94, 5, 2]), o: IntList([2]) }
#   Datum { i: IntList([73, 73, 73, 73, 73, 73, 73, 73]), o: IntList([73]) }
#   Datum { i: IntList([41, 22, 30, 71, 84, 50, 95, 3, 7, 61]), o: IntList([95]) }
#   Datum { i: IntList([78, 8, 9, 54, 7, 0, 5, 6, 24]), o: IntList([5]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c083,0,3,1,896048,733024,858614,858614,600.004143434,601.94907759
c083,0,3,2,461781,430880,445372,445372,1200.0048990770001,1203.968256683
c083,0,3,3,240786,222718,231653,231653,1800.0072725080001,1805.785590728
c083,0,3,4,176161,161889,169182,169182,2400.007917454,2407.425605003
c083,0,3,5,119571,112463,115746,115746,3000.0155782340003,3009.453137941
c083,0,3,6,86146,81177,83277,83277,3600.035374377,3611.746469093
c083,0,3,7,63475,59274,61159,61159,4200.039005956,4214.167626321
c083,0,3,8,66865,60779,64805,64805,4800.077151927,4815.890212032
c083,0,3,9,45866,42504,44116,44116,5400.086842206,5417.718991262
c083,0,3,10,38319,35383,36798,36798,6000.112388167,6019.772859347
c083,0,3,11,34479,31228,33249,33249,6600.120922455,6622.03223707
# search time: 6600.121s
# total time: 6622.465s
c083,1,3,1,912498,746286,874202,874202,600.000061355,600.248428667
c083,1,3,2,496300,462654,478074,478074,1200.01325297,1200.919483056
c083,1,3,3,269124,248991,259502,259502,1800.0140573519998,1801.599952702
c083,1,3,4,187941,172792,180590,180590,2400.044239607,2402.293247785
c083,1,3,5,124234,116903,120248,120248,3000.0524913599997,3003.221929572
c083,1,3,6,90787,85314,87824,87824,3600.058599489,3604.245558215
c083,1,3,7,62898,58902,60766,60766,4200.065919042,4205.040788472
c083,1,3,8,57924,51852,55621,55621,4800.079089719,4805.845577608
c083,1,3,9,46089,42698,44364,44364,5400.082950304,5406.989394814
c083,1,3,10,37835,34948,36363,36363,6000.088005601,6007.975826985
c083,1,3,11,38752,35490,37644,37644,6600.094749876,6608.888588288
# search time: 6600.095s
# total time: 13232.072s
c083,2,3,1,900635,737030,863090,863090,600.0009925,600.181676128
c083,2,3,2,476732,444942,459801,459801,1200.0012092010002,1200.629414297
c083,2,3,3,271266,250892,261581,261581,1800.0012803170002,1801.037524681
c083,2,3,4,197021,180805,189864,189864,2400.004333665,2401.450103718
c083,2,3,5,124106,116629,120007,120007,3000.0057107800003,3002.043245642
c083,2,3,6,91233,85863,88184,88184,3600.022615186,3602.832346046
c083,2,3,7,65423,60949,63086,63086,4200.02426115,4203.566296585
c083,2,3,8,59934,53883,57760,57760,4800.04467065,4804.202524146
c083,2,3,9,44113,41018,42439,42439,5400.063600048999,5404.842407324
c083,2,3,10,37673,34843,36208,36208,6000.081731572,6005.553638072
c083,2,3,11,39109,35777,37930,37930,6600.104437075999,6605.986025827
# search time: 6600.104s
# total time: 19838.574s
c083,3,3,1,888601,725352,851229,851229,600.000150336,600.166192987
c083,3,3,2,473438,442444,457010,457010,1200.000709087,1200.521883128
c083,3,3,3,254498,235384,244861,244861,1800.0093636049999,1800.892277036
c083,3,3,4,198550,182367,191287,191287,2400.01299132,2401.224401524
c083,3,3,5,122625,115459,118727,118727,3000.0202831799998,3001.710938793
c083,3,3,6,90108,84640,87017,87017,3600.0220692999997,3602.250728819
c083,3,3,7,63967,59617,61654,61654,4200.030984511,4202.772898304
c083,3,3,8,60007,53938,57801,57801,4800.035755868999,4803.075843358
c083,3,3,9,46033,42614,44336,44336,5400.054338536,5403.562978335
c083,3,3,10,38056,35184,36621,36621,6000.080797215,6003.903810967
c083,3,3,11,35888,32628,34695,34695,6600.083211739,6604.196684136
# search time: 6600.083s
# total time: 26443.254s
c083,4,3,1,893427,766623,865648,865648,600.000771894,600.187964981
c083,4,3,2,463070,432971,447183,447183,1200.0023198019999,1200.492863696
c083,4,3,3,266683,246878,257026,257026,1800.00373726,1800.736886958
c083,4,3,4,195645,179525,188423,188423,2400.0052503790002,2401.065056148
c083,4,3,5,120668,113588,116896,116896,3000.0098024430004,3001.415352247
c083,4,3,6,90004,84649,86976,86976,3600.0169665820004,3601.749644798
c083,4,3,7,62756,58640,60503,60503,4200.0251847320005,4202.101384406
c083,4,3,8,66515,60362,64327,64327,4800.026445344,4802.392275501
c083,4,3,9,45477,42120,43729,43729,5400.027141864,5402.822634106
c083,4,3,10,37883,34945,36418,36418,6000.0626160070005,6003.210204321
c083,4,3,11,39234,35928,38089,38089,6600.081062321001,6603.596298761
# search time: 6600.081s
# total time: 33047.360s
