    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c100_2.json out/1592958601/results/c100_2_best.csv out/1592958601/results/c100_2_predictions.csv out/1592958601/results/c100_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([79, 67, 13, 79]), o: IntList([79, 13, 67, 79]) }
#   Datum { i: IntList([75, 4, 7, 5, 33]), o: IntList([33, 5, 7, 4, 75]) }
#   Datum { i: IntList([83, 9, 63, 44, 44, 83, 1]), o: IntList([1, 83, 44, 44, 63, 9, 83]) }
#   Datum { i: IntList([42, 6, 9, 0, 5, 8]), o: IntList([8, 5, 0, 9, 6, 42]) }
#   Datum { i: IntList([64, 64, 97]), o: IntList([97, 64, 64]) }
#   Datum { i: IntList([95, 38, 95, 38]), o: IntList([38, 95, 38, 95]) }
#   Datum { i: IntList([6, 1, 9, 13, 70, 66, 8, 40, 7]), o: IntList([7, 40, 8, 66, 70, 13, 9, 1, 6]) }
#   Datum { i: IntList([31, 0, 51, 90]), o: IntList([90, 51, 0, 31]) }
#   Datum { i: IntList([5, 2]), o: IntList([2, 5]) }
#   Datum { i: IntList([5, 98, 5, 98, 0, 82, 11, 4, 82, 9]), o: IntList([9, 82, 4, 11, 82, 0, 98, 5, 98, 5]) }
#   Datum { i: IntList([58, 58, 58, 45, 1, 99, 58, 1]), o: IntList([1, 58, 99, 1, 45, 58, 58, 58]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c100,0,2,1,975529,797220,934941,934941,600.004076944,601.926934777
c100,0,2,2,336835,314985,323987,323987,1200.004608045,1203.221371614
c100,0,2,3,205623,196784,198488,198488,1800.00501162,1804.324492292
c100,0,2,4,130436,123273,123943,123943,2400.013818808,2405.340489499
c100,0,2,5,102168,95621,96088,96088,3000.01572666,3006.338855405
c100,0,2,6,92001,85505,86025,86025,3600.0160244219996,3607.136598633
c100,0,2,7,92196,87260,87772,87772,4200.018246522,4207.727225976
c100,0,2,8,58730,55327,55602,55602,4800.023553794999,4808.576505144
c100,0,2,9,48253,45727,45873,45873,5400.029521129999,5409.702657519
c100,0,2,10,60512,56571,56876,56876,6000.034668224999,6010.255334406
c100,0,2,11,47986,44423,44735,44735,6600.034824021999,6610.802014955
# search time: 6600.035s
# total time: 6611.237s
c100,1,2,1,1038429,846297,995198,995198,600.000049825,600.240599315
c100,1,2,2,368479,344400,354414,354414,1200.001807504,1200.732272819
c100,1,2,3,222212,212555,214398,214398,1800.0020842650001,1801.189742016
c100,1,2,4,130679,123447,124098,124098,2400.003882479,2401.630385361
c100,1,2,5,105291,98725,99424,99424,3000.0047546299998,3002.004905864
c100,1,2,6,89184,82803,83194,83194,3600.0082688879997,3602.446227487
c100,1,2,7,90595,85859,86226,86226,4200.009706629,4202.754383887
c100,1,2,8,58443,55137,55403,55403,4800.009759342,4803.166077477
c100,1,2,9,48780,46130,46295,46295,5400.009867127,5403.589906358
c100,1,2,10,59914,56107,56449,56449,6000.015405927,6003.827894788
c100,1,2,11,45445,41904,42194,42194,6600.015683037,6604.071125869
# search time: 6600.016s
# total time: 13216.027s
c100,2,2,1,1033172,842909,990279,990279,600.000104631,600.185586317
c100,2,2,2,359358,336394,346061,346061,1200.0004195850001,1200.503172212
c100,2,2,3,215574,205299,207226,207226,1800.00728554,1800.822226632
c100,2,2,4,130844,123565,124209,124209,2400.0084524090003,2401.083296964
c100,2,2,5,105064,98479,99084,99084,3000.0126078430003,3001.349245752
c100,2,2,6,88904,82414,82813,82813,3600.017662772,3601.65069941
c100,2,2,7,91161,86199,86709,86709,4200.020106971,4201.829556997
c100,2,2,8,57507,54317,54570,54570,4800.026731205,4802.150508641
c100,2,2,9,50937,48463,48728,48728,5400.032079834,5402.453130661
c100,2,2,10,60095,56155,56517,56517,6000.038630727,6002.639821493
c100,2,2,11,45305,41891,42209,42209,6600.062107723,6602.853173928
# search time: 6600.062s
# total time: 19819.651s
c100,3,2,1,1118096,974602,1087556,1087556,600.001846116,600.267251866
c100,3,2,2,375199,350415,360528,360528,1200.002417977,1200.508828063
c100,3,2,3,222456,212859,214783,214783,1800.003864247,1800.743005728
c100,3,2,4,126973,119895,120380,120380,2400.01071731,2400.957101324
c100,3,2,5,104318,97731,98336,98336,3000.0142315479998,3001.130787024
c100,3,2,6,90169,84131,84654,84654,3600.019173421,3601.308919794
c100,3,2,7,90135,85603,85947,85947,4200.021258987,4201.461612313
c100,3,2,8,57112,53861,54127,54127,4800.027527137,4801.63562519
c100,3,2,9,47962,45450,45608,45608,5400.038025147,5401.799908565
c100,3,2,10,59848,54996,55195,55195,6000.047673577999,6001.942691331
c100,3,2,11,45349,41866,42147,42147,6600.053051931999,6602.11446122
# search time: 6600.053s
# total time: 26422.593s
c100,4,2,1,1037322,880330,1002770,1002770,600.00386916,600.205936415
c100,4,2,2,346683,324247,333680,333680,1200.0051354490001,1200.413981363
c100,4,2,3,216802,207434,209266,209266,1800.005640028,1800.607207518
c100,4,2,4,127458,120342,121014,121014,2400.008996528,2400.754018273
c100,4,2,5,101684,95282,95869,95869,3000.012329518,3000.933070619
c100,4,2,6,85892,79630,80043,80043,3600.0146196230003,3601.095927905
c100,4,2,7,88299,83615,84128,84128,4200.018809989,4201.197094011
c100,4,2,8,55743,52630,52898,52898,4800.0200634230005,4801.327871134
c100,4,2,9,49527,46975,47239,47239,5400.024536794001,5401.504990675
c100,4,2,10,57828,54143,54516,54516,6000.032448922,6001.615052168
c100,4,2,11,43969,40688,40990,40990,6600.03409587,6601.746916402
# search time: 6600.034s
# total time: 33025.085s
