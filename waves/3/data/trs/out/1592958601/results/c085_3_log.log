    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.80s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c085_3.json out/1592958601/results/c085_3_best.csv out/1592958601/results/c085_3_predictions.csv out/1592958601/results/c085_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([3, 98, 94, 94, 3]), o: IntList([94]) }
#   Datum { i: IntList([4, 39, 4, 48, 46, 48]), o: IntList([46]) }
#   Datum { i: IntList([2, 53, 38, 49, 78, 69, 6, 1, 3, 11]), o: IntList([38]) }
#   Datum { i: IntList([2, 67, 52, 72, 93, 9, 67, 5, 68]), o: IntList([52]) }
#   Datum { i: IntList([1, 8, 27, 27, 8, 1, 8]), o: IntList([8]) }
#   Datum { i: IntList([8, 63, 70, 25, 0, 2, 19, 34, 60]), o: IntList([60]) }
#   Datum { i: IntList([1, 76, 9, 76]), o: IntList([76]) }
#   Datum { i: IntList([5, 4, 3, 80, 36, 66, 75]), o: IntList([66]) }
#   Datum { i: IntList([1, 4, 4]), o: IntList([4]) }
#   Datum { i: IntList([4, 28, 5, 26, 29, 6, 94, 3]), o: IntList([29]) }
#   Datum { i: IntList([2, 7, 3, 9]), o: IntList([3]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c085,0,3,1,1159814,1039099,1136052,1136052,600.00002761,602.367654275
c085,0,3,2,604471,570057,586310,586310,1200.000581353,1203.628685153
c085,0,3,3,389924,365662,378900,378900,1800.000634543,1804.616454743
c085,0,3,4,312872,295312,303353,303353,2400.0013690759997,2405.376307936
c085,0,3,5,174047,163379,168846,168846,3000.0022776749997,3006.500622944
c085,0,3,6,196536,181942,188943,188943,3600.0025353849996,3607.261340809
c085,0,3,7,87328,81726,85085,85085,4200.010270396,4208.457732554
c085,0,3,8,84849,79514,82069,82069,4800.020605706,4809.74705559
c085,0,3,9,67312,62504,64820,64820,5400.020948875001,5410.899502416
c085,0,3,10,63668,58956,61419,61419,6000.029037304001,6011.944316232
c085,0,3,11,53113,49062,51386,51386,6600.031906290001,6613.0748569
# search time: 6600.032s
# total time: 6613.466s
c085,1,3,1,1027331,883174,995765,995765,600.003887272,600.296622242
c085,1,3,2,553353,521425,536470,536470,1200.029527309,1200.809256077
c085,1,3,3,352128,329822,341817,341817,1800.031009067,1801.284522898
c085,1,3,4,281858,265958,273184,273184,2400.032429191,2401.640336691
c085,1,3,5,159248,149451,154239,154239,3000.034989664,3002.122546002
c085,1,3,6,177772,164276,170697,170697,3600.036358338,3602.525293818
c085,1,3,7,88303,82608,86069,86069,4200.05099034,4203.252158447
c085,1,3,8,84322,78886,81361,81361,4800.055415745,4803.789061206
c085,1,3,9,75078,69669,72592,72592,5400.057324488,5404.258154503
c085,1,3,10,64156,59328,61907,61907,6000.0614816239995,6004.699637309
c085,1,3,11,53859,49759,52099,52099,6600.06917137,6605.212413458
# search time: 6600.069s
# total time: 13219.343s
c085,2,3,1,981369,801326,940195,940195,600.000318424,600.189119485
c085,2,3,2,587535,551194,567731,567731,1200.000370803,1200.533376347
c085,2,3,3,353126,331121,343455,343455,1800.0016050589998,1800.850436092
c085,2,3,4,282180,266563,273687,273687,2400.002152746,2401.104995672
c085,2,3,5,160657,150971,156208,156208,3000.004484628,3001.411533225
c085,2,3,6,180015,166525,172850,172850,3600.005895968,3601.682284701
c085,2,3,7,85949,80348,83570,83570,4200.012051236,4202.137336774
c085,2,3,8,83628,78555,80612,80612,4800.013219394,4802.48798895
c085,2,3,9,75135,69829,72725,72725,5400.01465566,5402.822145235
c085,2,3,10,63614,58791,61363,61363,6000.020890398,6003.196195294
c085,2,3,11,53441,49535,51781,51781,6600.021110525,6603.678582777
# search time: 6600.021s
# total time: 19823.671s
c085,3,3,1,1002724,866244,973071,973071,600.000074801,600.234090559
c085,3,3,2,556042,524224,539042,539042,1200.001827027,1200.511369547
c085,3,3,3,351325,329104,340932,340932,1800.0026691120001,1800.759241466
c085,3,3,4,285262,269254,276455,276455,2400.002807637,2400.95532802
c085,3,3,5,157509,147958,152863,152863,3000.007926791,3001.267425803
c085,3,3,6,179914,166485,172799,172799,3600.008706818,3601.467822157
c085,3,3,7,87906,82305,85682,85682,4200.010811842,4201.686025013
c085,3,3,8,82844,77513,79994,79994,4800.011340738,4801.979096709
c085,3,3,9,75033,69648,72592,72592,5400.011496784,5402.198095649
c085,3,3,10,65216,60357,62977,62977,6000.011629833,6002.451946718
c085,3,3,11,53858,49889,52219,52219,6600.022268527,6602.667449435
# search time: 6600.022s
# total time: 26427.021s
c085,4,3,1,945245,770409,905754,905754,600.000014962,600.144423184
c085,4,3,2,558834,525720,541223,541223,1200.000344854,1200.383693226
c085,4,3,3,347344,325499,337166,337166,1800.001079069,1800.58344771
c085,4,3,4,280660,264863,272080,272080,2400.0022745690003,2400.765141175
c085,4,3,5,156290,146719,151605,151605,3000.0242955390004,3000.990180989
c085,4,3,6,178872,165577,171847,171847,3600.0253886570003,3601.211432836
c085,4,3,7,87560,81994,85130,85130,4200.030495694,4201.545553418
c085,4,3,8,82559,77612,79678,79678,4800.043019346,4801.823072166
c085,4,3,9,74346,69003,71909,71909,5400.0467103539995,5402.040032165
c085,4,3,10,65950,61101,63724,63724,6000.056226455,6002.291523408
c085,4,3,11,53843,49682,52092,52092,6600.062270326,6602.531908
# search time: 6600.062s
# total time: 33030.431s
