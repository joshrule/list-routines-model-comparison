    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.32s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c081_3.json out/1592958601/results/c081_3_best.csv out/1592958601/results/c081_3_predictions.csv out/1592958601/results/c081_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([45, 45, 45]), o: IntList([45]) }
#   Datum { i: IntList([70, 1, 7, 18, 2, 8, 21, 6, 4, 19]), o: IntList([7]) }
#   Datum { i: IntList([68, 68, 56, 46, 71]), o: IntList([56]) }
#   Datum { i: IntList([55, 74, 69]), o: IntList([69]) }
#   Datum { i: IntList([9, 91, 70, 48, 59, 83, 43]), o: IntList([70]) }
#   Datum { i: IntList([3, 84, 2, 42, 12, 12]), o: IntList([2]) }
#   Datum { i: IntList([9, 56, 9, 9]), o: IntList([9]) }
#   Datum { i: IntList([5, 83, 64, 87, 57, 1, 95, 1, 95]), o: IntList([64]) }
#   Datum { i: IntList([40, 50, 76, 47, 39]), o: IntList([76]) }
#   Datum { i: IntList([27, 4, 38, 83, 5, 3, 15, 4, 5, 83]), o: IntList([38]) }
#   Datum { i: IntList([9, 81, 6, 81, 6]), o: IntList([6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c081,0,3,1,1032133,897264,1003125,1003125,600.000020128,602.322976894
c081,0,3,2,395158,371775,382842,382842,1200.033327314,1203.753845687
c081,0,3,3,344504,314850,328677,328677,1800.036479533,1804.761450958
c081,0,3,4,275335,260109,267790,267790,2400.037301839,2405.900247557
c081,0,3,5,248336,229088,239654,239654,3000.046273374,3006.802363655
c081,0,3,6,175216,164265,169784,169784,3600.047235349,3607.99186302
c081,0,3,7,152154,142343,147332,147332,4200.048353334,4209.091784045
c081,0,3,8,138097,126795,132679,132679,4800.048643149,4810.133638731
c081,0,3,9,105301,96269,100903,100903,5400.050007853,5411.196440917
c081,0,3,10,91931,83991,88167,88167,6000.054577446001,6012.226078133
c081,0,3,11,73879,67284,70722,70722,6600.062369041,6613.454518267
# search time: 6600.062s
# total time: 6613.753s
c081,1,3,1,1004973,822714,963098,963098,600.000141847,600.230849998
c081,1,3,2,581018,548887,564251,564251,1200.012824352,1200.664782813
c081,1,3,3,413730,377958,394717,394717,1800.013546671,1801.127732981
c081,1,3,4,283337,267551,275489,275489,2400.015828883,2401.590566763
c081,1,3,5,255730,235981,246633,246633,3000.0162266119996,3001.965099199
c081,1,3,6,182025,170820,176486,176486,3600.0171780019996,3602.450794349
c081,1,3,7,152165,142953,147633,147633,4200.019148173,4202.956308568
c081,1,3,8,136755,125468,131344,131344,4800.022360258,4803.424459808
c081,1,3,9,105163,96429,100833,100833,5400.031761305,5403.970978039
c081,1,3,10,90798,83094,87085,87085,6000.038553621,6004.67589196
c081,1,3,11,71759,65540,68605,68605,6600.047089647,6605.257517603
# search time: 6600.047s
# total time: 13219.466s
c081,2,3,1,1037461,906488,1009607,1009607,600.003511752,600.290218537
c081,2,3,2,580173,548969,563850,563850,1200.00376977,1200.57912041
c081,2,3,3,427255,390982,408254,408254,1800.0043646059999,1800.846570277
c081,2,3,4,284670,268422,276569,276569,2400.005308113,2401.13820491
c081,2,3,5,252855,232905,243372,243372,3000.007223733,3001.402269625
c081,2,3,6,179019,168138,173554,173554,3600.0132633000003,3601.73607363
c081,2,3,7,151589,142242,146968,146968,4200.014178877001,4202.03949451
c081,2,3,8,137304,126070,131979,131979,4800.014683200001,4802.347619528
c081,2,3,9,106360,97350,101989,101989,5400.021206149001,5402.771983528
c081,2,3,10,91239,83276,87475,87475,6000.029599574001,6003.095973315
c081,2,3,11,74094,67588,70929,70929,6600.030449330001,6603.426489282
# search time: 6600.030s
# total time: 19823.434s
c081,3,3,1,990233,840620,957195,957195,600.000258083,600.215192864
c081,3,3,2,595079,560797,577077,577077,1200.011545538,1200.463841732
c081,3,3,3,414114,377901,394851,394851,1800.011786403,1800.695357988
c081,3,3,4,281929,265948,274054,274054,2400.020268571,2400.920171574
c081,3,3,5,258173,237771,248868,248868,3000.0218455450004,3001.11605452
c081,3,3,6,182338,171471,176936,176936,3600.0239153380003,3601.398314044
c081,3,3,7,151158,141584,146516,146516,4200.026636986,4201.618112727
c081,3,3,8,136082,124755,130728,130728,4800.031717328,4801.869978252
c081,3,3,9,106125,97424,101832,101832,5400.034170956,5402.133630034
c081,3,3,10,90739,82999,86981,86981,6000.036538365,6002.44750253
c081,3,3,11,73228,66660,70003,70003,6600.044080088,6602.757183028
# search time: 6600.044s
# total time: 26426.548s
c081,4,3,1,1056112,929064,1029589,1029589,600.006052096,600.253608358
c081,4,3,2,593454,559072,575313,575313,1200.006262499,1200.445299834
c081,4,3,3,416435,380058,397082,397082,1800.008162343,1800.639516884
c081,4,3,4,288577,272247,280229,280229,2400.008200358,2400.832560908
c081,4,3,5,257628,237369,248225,248225,3000.009194483,3000.999654122
c081,4,3,6,180475,169246,175039,175039,3600.0126527820003,3601.26201235
c081,4,3,7,152070,142109,147185,147185,4200.01338627,4201.489161202
c081,4,3,8,136631,125621,131271,131271,4800.015895861001,4801.674120838
c081,4,3,9,105505,96561,101163,101163,5400.021148990001,5401.92709131
c081,4,3,10,89830,82377,86082,86082,6000.026124785001,6002.124307557
c081,4,3,11,72437,66012,69298,69298,6600.0272382600015,6602.477678633
# search time: 6600.027s
# total time: 33029.463s
