    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c098_5.json out/1592958601/results/c098_5_best.csv out/1592958601/results/c098_5_predictions.csv out/1592958601/results/c098_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 0]), o: IntList([2, 2]) }
#   Datum { i: IntList([5]), o: IntList([6]) }
#   Datum { i: IntList([18, 5, 79, 21, 0, 47, 91]), o: IntList([19, 7, 82, 25, 5, 53, 98]) }
#   Datum { i: IntList([59, 52, 0, 30, 8, 29, 5, 3, 7]), o: IntList([60, 54, 3, 34, 13, 35, 12, 11, 16]) }
#   Datum { i: IntList([0, 0, 8, 8, 8, 8]), o: IntList([1, 2, 11, 12, 13, 14]) }
#   Datum { i: IntList([4, 4, 72, 72, 72]), o: IntList([5, 6, 75, 76, 77]) }
#   Datum { i: IntList([62, 4, 8, 85, 68, 9, 62, 85]), o: IntList([63, 6, 11, 89, 73, 15, 69, 93]) }
#   Datum { i: IntList([87, 56, 7, 56, 72, 33, 36, 57, 87, 7]), o: IntList([88, 58, 10, 60, 77, 39, 43, 65, 96, 17]) }
#   Datum { i: IntList([40, 52, 40, 50]), o: IntList([41, 54, 43, 54]) }
#   Datum { i: IntList([9, 9, 82]), o: IntList([10, 11, 85]) }
#   Datum { i: IntList([14, 14, 21, 14, 3, 21]), o: IntList([15, 16, 24, 18, 8, 27]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c098,0,5,1,1025753,888460,996472,996472,600.000390727,602.150675645
c098,0,5,2,589177,556047,573117,573117,1200.000558359,1203.095732206
c098,0,5,3,572470,537908,546540,546540,1800.001191417,1803.900485364
c098,0,5,4,230656,209122,210451,210451,2400.005474788,2404.453474748
c098,0,5,5,121147,109275,109777,109777,3000.011590109,3005.046298455
c098,0,5,6,89961,78587,78977,78977,3600.012647441,3605.57825709
c098,0,5,7,73496,63904,64150,64150,4200.018159235,4206.167116716
c098,0,5,8,60349,52544,52841,52841,4800.022727677,4806.721844277
c098,0,5,9,45238,40331,40701,40701,5400.032129839,5407.181985225
c098,0,5,10,45139,40308,40584,40584,6000.0594167809995,6007.53901454
c098,0,5,11,41029,36848,37161,37161,6600.064491309,6607.84590809
# search time: 6600.064s
# total time: 6608.226s
c098,1,5,1,1093254,942258,1061229,1061229,600.000865206,600.288057078
c098,1,5,2,661867,625148,643600,643600,1200.0015833389998,1200.663108332
c098,1,5,3,620554,583269,592898,592898,1800.0024294409998,1801.031992048
c098,1,5,4,228637,206840,207972,207972,2400.0024579929996,2401.29128312
c098,1,5,5,122110,110578,111280,111280,3000.0043166839996,3001.528812104
c098,1,5,6,90186,78752,79153,79153,3600.0095022519995,3601.828438956
c098,1,5,7,72472,62941,63162,63162,4200.032850940999,4202.156328117
c098,1,5,8,59821,51653,52007,52007,4800.0331441769995,4802.453315616
c098,1,5,9,45451,40536,40868,40868,5400.037456999,5402.621583206
c098,1,5,10,44941,40157,40463,40463,6000.045437102,6002.822545014
c098,1,5,11,39850,35659,35944,35944,6600.055804918,6603.010010114
# search time: 6600.056s
# total time: 13212.012s
c098,2,5,1,1117796,975125,1087536,1087536,600.001136671,600.2866458
c098,2,5,2,659762,623056,641473,641473,1200.003041344,1200.55747426
c098,2,5,3,618348,581134,590512,590512,1800.0036363929999,1800.841896263
c098,2,5,4,231293,209569,211008,211008,2400.0109204699997,2401.030939049
c098,2,5,5,120759,108132,108618,108618,3000.024775895,3001.216172156
c098,2,5,6,90402,78781,79195,79195,3600.030900582,3601.427602246
c098,2,5,7,71771,62465,62658,62658,4200.031819658,4201.681943518
c098,2,5,8,60034,52044,52377,52377,4800.034709549,4801.84910159
c098,2,5,9,42754,37729,38040,38040,5400.036743672,5401.974970725
c098,2,5,10,43262,38270,38471,38471,6000.046008421999,6002.111272811
c098,2,5,11,42603,38206,38497,38497,6600.053972774999,6602.347246309
# search time: 6600.054s
# total time: 19815.086s
c098,3,5,1,1119699,972994,1088738,1088738,600.009739118,600.22835341
c098,3,5,2,652865,616400,634835,634835,1200.009799245,1200.45582471
c098,3,5,3,616296,578866,588279,588279,1800.010244835,1800.672014578
c098,3,5,4,225181,203473,204512,204512,2400.012523917,2400.816447941
c098,3,5,5,119618,108199,108892,108892,3000.0147090150003,3000.927769596
c098,3,5,6,88695,77508,77924,77924,3600.016875532,3601.074930713
c098,3,5,7,71366,62058,62252,62252,4200.019960898,4201.244527077
c098,3,5,8,60592,53331,53809,53809,4800.021718708,4801.345850567
c098,3,5,9,44848,39878,40201,40201,5400.027581898999,5401.420166497
c098,3,5,10,43475,38773,38980,38980,6000.046645234,6001.538904601
c098,3,5,11,41897,37303,37606,37606,6600.054106850999,6601.677497354
# search time: 6600.054s
# total time: 26417.372s
c098,4,5,1,1032025,847266,990172,990172,600.000165422,600.151629777
c098,4,5,2,641765,605060,623629,623629,1200.0006154110001,1200.348537997
c098,4,5,3,604830,568852,578089,578089,1800.0007690280001,1800.548406939
c098,4,5,4,224435,203816,205078,205078,2400.004185044,2400.654239245
c098,4,5,5,118266,107246,107951,107951,3000.0049878440004,3000.751778058
c098,4,5,6,86938,75757,76156,76156,3600.008538936,3600.894525059
c098,4,5,7,73148,63812,64157,64157,4200.012350753001,4201.00101684
c098,4,5,8,57993,50418,50736,50736,4800.017084508001,4801.12838036
c098,4,5,9,43120,38426,38694,38694,5400.036456416001,5401.261257575
c098,4,5,10,41898,37344,37533,37533,6000.039170940001,6001.363837082
c098,4,5,11,40802,36439,36763,36763,6600.046443848001,6601.457044039
# search time: 6600.046s
# total time: 33019.445s
