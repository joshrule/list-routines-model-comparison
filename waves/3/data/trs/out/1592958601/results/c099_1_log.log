    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c099_1.json out/1592958601/results/c099_1_best.csv out/1592958601/results/c099_1_predictions.csv out/1592958601/results/c099_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 9, 72, 72]), o: IntList([72, 72]) }
#   Datum { i: IntList([99, 4, 74, 99, 83, 5, 2, 83]), o: IntList([99, 74, 99, 83, 83]) }
#   Datum { i: IntList([94, 91, 2, 94, 8, 24, 1]), o: IntList([94, 91, 94]) }
#   Datum { i: IntList([78, 18, 92, 42, 95, 3, 98]), o: IntList([78, 92, 95, 98]) }
#   Datum { i: IntList([7, 28, 13, 8, 0, 28, 8, 28]), o: IntList([]) }
#   Datum { i: IntList([1, 7, 8, 25, 0, 40, 53, 94]), o: IntList([53, 94]) }
#   Datum { i: IntList([9, 97, 91, 97, 61]), o: IntList([97, 91, 97, 61]) }
#   Datum { i: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56, 8]), o: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56]) }
#   Datum { i: IntList([95, 7]), o: IntList([95]) }
#   Datum { i: IntList([8, 87, 2, 64, 48, 79]), o: IntList([87, 64, 79]) }
#   Datum { i: IntList([86, 5, 86, 86, 11, 99, 99, 99, 5]), o: IntList([86, 86, 86, 99, 99, 99]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c099,0,1,1,1004351,826407,963704,963704,600.000506337,601.944277154
c099,0,1,2,470569,443986,456158,456158,1200.0011121880002,1203.285408418
c099,0,1,3,236154,222184,224121,224121,1800.0019832430003,1804.184582925
c099,0,1,4,187947,179343,180164,180164,2400.0063059090003,2404.942973996
c099,0,1,5,134001,127969,128617,128617,3000.0100937820002,3005.715080089
c099,0,1,6,121771,116000,120316,120316,3600.0131777120005,3606.292340743
c099,0,1,7,102806,97635,101338,101338,4200.032643868,4206.861201419
c099,0,1,8,66009,61480,64320,64320,4800.0375955320005,4807.683080474
c099,0,1,9,46036,43032,44998,44998,5400.045093574001,5408.550679961
c099,0,1,10,43386,40161,42274,42274,6000.076116375001,6009.53898559
c099,0,1,11,40165,37667,39366,39366,6600.076223686001,6610.334497134
# search time: 6600.076s
# total time: 6610.668s
c099,1,1,1,1161531,1018743,1131562,1131562,600.006616989,600.386931159
c099,1,1,2,518351,487989,501850,501850,1200.007138398,1200.843351316
c099,1,1,3,253270,238114,240241,240241,1800.008466172,1801.202581021
c099,1,1,4,187196,178579,179518,179518,2400.010065645,2401.513125487
c099,1,1,5,133010,127047,127959,127959,3000.010860888,3001.798244708
c099,1,1,6,118666,112762,117151,117151,3600.0144255610003,3602.058651111
c099,1,1,7,102768,97660,101379,101379,4200.018587869,4202.357074062
c099,1,1,8,65390,60936,63765,63765,4800.027859696,4802.851547361
c099,1,1,9,46290,43269,45253,45253,5400.031760811999,5403.233328331
c099,1,1,10,45048,42180,44183,44183,6000.03519608,6003.694536303
c099,1,1,11,40133,37675,39384,39384,6600.0382973099995,6604.090311889
# search time: 6600.038s
# total time: 13215.387s
c099,2,1,1,1096968,896978,1051048,1051048,600.002462447,600.205330381
c099,2,1,2,512194,481928,495871,495871,1200.002618567,1200.525053921
c099,2,1,3,252309,237123,239348,239348,1800.003432255,1800.763092776
c099,2,1,4,187329,178773,179707,179707,2400.006356074,2400.977737351
c099,2,1,5,132683,126511,127449,127449,3000.00650348,3001.164397438
c099,2,1,6,120069,114401,118671,118671,3600.007473624,3601.338516386
c099,2,1,7,101706,96501,100508,100508,4200.009873491,4201.490758121
c099,2,1,8,64073,59703,62457,62457,4800.021213384,4801.711897633
c099,2,1,9,45729,42805,44735,44735,5400.0268208689995,5401.932421692
c099,2,1,10,44249,41348,43301,43301,6000.052451072999,6002.406081496
c099,2,1,11,39973,37584,39289,39289,6600.067702803999,6602.684358238
# search time: 6600.068s
# total time: 19818.968s
c099,3,1,1,1058886,862928,1014638,1014638,600.008694918,600.17848755
c099,3,1,2,510420,480451,494196,494196,1200.009078329,1200.452610114
c099,3,1,3,253434,238405,240510,240510,1800.009880059,1800.668193284
c099,3,1,4,187422,178929,179792,179792,2400.0106628519998,2400.842471626
c099,3,1,5,132866,126857,127788,127788,3000.0124356389997,3001.004002182
c099,3,1,6,119351,113495,117894,117894,3600.0143415619996,3601.138482413
c099,3,1,7,102146,96954,100699,100699,4200.0341782079995,4201.351426697
c099,3,1,8,63427,59008,61745,61745,4800.042326170999,4801.625789651
c099,3,1,9,45427,42379,44407,44407,5400.049579913999,5401.769388154
c099,3,1,10,42630,39427,41548,41548,6000.0667717709985,6001.98581396
c099,3,1,11,40110,37601,39380,39380,6600.072290413998,6602.241427932
# search time: 6600.072s
# total time: 26421.812s
c099,4,1,1,1027105,843045,985601,985601,600.00134911,600.146939307
c099,4,1,2,509453,478512,492357,492357,1200.0019285849999,1200.357331786
c099,4,1,3,245419,231085,233055,233055,1800.0045718669999,1800.524775807
c099,4,1,4,181213,172874,173359,173359,2400.005714183,2400.694750453
c099,4,1,5,129683,123720,124597,124597,3000.0113066659997,3000.820711255
c099,4,1,6,116612,111002,115252,115252,3600.012991918,3600.945348782
c099,4,1,7,100144,95335,99092,99092,4200.013271344,4201.08535446
c099,4,1,8,61527,57166,59824,59824,4800.01428996,4801.259895532
c099,4,1,9,42185,39094,41147,41147,5400.029668646999,5401.510209945
c099,4,1,10,42032,39009,41032,41032,6000.050440571999,6001.702455106
c099,4,1,11,36196,33546,35275,35275,6600.050578134,6601.931342098
# search time: 6600.051s
# total time: 33024.791s
