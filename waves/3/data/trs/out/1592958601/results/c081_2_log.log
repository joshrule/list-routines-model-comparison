    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.24s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c081_2.json out/1592958601/results/c081_2_best.csv out/1592958601/results/c081_2_predictions.csv out/1592958601/results/c081_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([68, 68, 56, 46, 71]), o: IntList([56]) }
#   Datum { i: IntList([5, 83, 64, 87, 57, 1, 95, 1, 95]), o: IntList([64]) }
#   Datum { i: IntList([9, 81, 6, 81, 6]), o: IntList([6]) }
#   Datum { i: IntList([9, 91, 70, 48, 59, 83, 43]), o: IntList([70]) }
#   Datum { i: IntList([3, 84, 2, 42, 12, 12]), o: IntList([2]) }
#   Datum { i: IntList([70, 1, 7, 18, 2, 8, 21, 6, 4, 19]), o: IntList([7]) }
#   Datum { i: IntList([45, 45, 45]), o: IntList([45]) }
#   Datum { i: IntList([40, 50, 76, 47, 39]), o: IntList([76]) }
#   Datum { i: IntList([27, 4, 38, 83, 5, 3, 15, 4, 5, 83]), o: IntList([38]) }
#   Datum { i: IntList([9, 56, 9, 9]), o: IntList([9]) }
#   Datum { i: IntList([55, 74, 69]), o: IntList([69]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c081,0,2,1,944193,830634,920794,920794,600.000014102,602.305656014
c081,0,2,2,522342,491297,505812,505812,1200.0000519330001,1203.861464785
c081,0,2,3,334345,309962,323291,323291,1800.0014500450002,1805.06570772
c081,0,2,4,223165,209924,217220,217220,2400.001773331,2406.519049259
c081,0,2,5,169771,158615,164868,164868,3000.0022308300004,3007.964321661
c081,0,2,6,149384,135789,143141,143141,3600.002791528,3609.076021084
c081,0,2,7,130601,118435,125138,125138,4200.003448274,4210.291597272
c081,0,2,8,110856,101890,106548,106548,4800.005076535001,4811.592702177
c081,0,2,9,93644,85964,89956,89956,5400.016402300001,5412.870547989
c081,0,2,10,74803,68393,71731,71731,6000.028839421,6014.178239187
c081,0,2,11,69957,63692,66926,66926,6600.0397302,6615.466462295
# search time: 6600.040s
# total time: 6615.743s
c081,1,2,1,995492,862042,966830,966830,600.000053479,600.287882077
c081,1,2,2,544273,512269,527076,527076,1200.000345724,1200.801691862
c081,1,2,3,340676,315974,329410,329410,1800.001214771,1801.278451535
c081,1,2,4,231596,218269,225593,225593,2400.001290807,2401.842347092
c081,1,2,5,172545,160574,167446,167446,3000.002375872,3002.421443713
c081,1,2,6,154460,140173,147728,147728,3600.003661148,3602.877906398
c081,1,2,7,131164,119287,126058,126058,4200.006299814,4203.40879491
c081,1,2,8,110955,101886,106655,106655,4800.014655104,4803.983068668
c081,1,2,9,95095,87226,91389,91389,5400.029401776999,5404.70098942
c081,1,2,10,75042,68654,71988,71988,6000.037139274999,6005.386532127
c081,1,2,11,70429,64231,67399,67399,6600.039233666,6606.07226202
# search time: 6600.039s
# total time: 13222.275s
c081,2,2,1,929185,786520,897775,897775,600.001290493,600.204712196
c081,2,2,2,551479,518416,533481,533481,1200.001565145,1200.542814107
c081,2,2,3,339352,314509,328016,328016,1800.002826292,1800.846125091
c081,2,2,4,229763,216556,223862,223862,2400.019998601,2401.265304542
c081,2,2,5,170931,159195,165970,165970,3000.023768632,3001.613061036
c081,2,2,6,153684,139738,147308,147308,3600.030606108,3601.997294353
c081,2,2,7,131894,119772,126769,126769,4200.039937884,4202.34139623
c081,2,2,8,110007,101073,105742,105742,4800.0405650150005,4802.668980575
c081,2,2,9,94254,86775,90620,90620,5400.044895002001,5403.05659958
c081,2,2,10,74440,68111,71440,71440,6000.045011516001,6003.512383384
c081,2,2,11,69027,62992,66066,66066,6600.055004723001,6603.875622306
# search time: 6600.055s
# total time: 19826.750s
c081,3,2,1,955106,783391,915727,915727,600.004334315,600.159446841
c081,3,2,2,530997,500931,515014,515014,1200.012338219,1200.452044245
c081,3,2,3,342832,317902,331619,331619,1800.0164782349998,1800.709541846
c081,3,2,4,231884,218175,225667,225667,2400.017433304,2401.016946263
c081,3,2,5,173484,161717,168453,168453,3000.018398065,3001.348433395
c081,3,2,6,154342,140236,147721,147721,3600.01996195,3601.618032263
c081,3,2,7,131768,119597,126324,126324,4200.025664261,4201.879913865
c081,3,2,8,109877,100813,105618,105618,4800.026890496,4802.180922373
c081,3,2,9,94244,86596,90672,90672,5400.0341908,5402.495527392
c081,3,2,10,74613,68460,71660,71660,6000.039968739,6002.878677896
c081,3,2,11,70230,64111,67208,67208,6600.0497885019995,6603.1570797
# search time: 6600.050s
# total time: 26430.327s
c081,4,2,1,953798,783730,915006,915006,600.004065808,600.150171362
c081,4,2,2,555161,521495,537137,537137,1200.004622599,1200.380935826
c081,4,2,3,339637,315119,328406,328406,1800.0080258419998,1800.594025373
c081,4,2,4,230969,217259,224885,224885,2400.009660336,2400.825536189
c081,4,2,5,171929,160231,166936,166936,3000.011019403,3001.107145272
c081,4,2,6,153156,138779,146221,146221,3600.0169199989996,3601.329751007
c081,4,2,7,129966,118017,124828,124828,4200.022527290999,4201.476079514
c081,4,2,8,110584,101583,106269,106269,4800.029415955999,4801.811440993
c081,4,2,9,95420,87563,91677,91677,5400.030593926999,5402.086003796
c081,4,2,10,75311,68900,72231,72231,6000.032772749999,6002.329488833
c081,4,2,11,70588,64277,67497,67497,6600.041476319999,6602.574287559
# search time: 6600.041s
# total time: 33033.337s
