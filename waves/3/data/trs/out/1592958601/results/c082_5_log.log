    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.44s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c082_5.json out/1592958601/results/c082_5_best.csv out/1592958601/results/c082_5_predictions.csv out/1592958601/results/c082_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([96, 40]), o: IntList([]) }
#   Datum { i: IntList([91, 75, 3, 6, 8, 42, 11, 4, 1, 60]), o: IntList([3]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([90, 90, 90, 90, 90]), o: IntList([90]) }
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([18, 79, 7, 5, 3, 7, 3, 5, 79]), o: IntList([7]) }
#   Datum { i: IntList([83, 58]), o: IntList([]) }
#   Datum { i: IntList([78, 8, 74, 9, 70, 78]), o: IntList([74]) }
#   Datum { i: IntList([15]), o: IntList([]) }
#   Datum { i: IntList([10, 6, 2, 99, 0]), o: IntList([2]) }
#   Datum { i: IntList([22]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c082,0,5,1,648424,567568,631254,631254,600.00000664,603.741322492
c082,0,5,2,705416,645718,685753,685753,1200.0004443789999,1205.181935349
c082,0,5,3,473229,448292,464296,464296,1800.001163023,1806.608955228
c082,0,5,4,420315,399420,412636,412636,2400.001779958,2407.713670992
c082,0,5,5,295088,272747,284480,284480,3000.002326333,3008.580552968
c082,0,5,6,204621,191252,197328,197328,3600.022040198,3609.376177963
c082,0,5,7,243811,228359,235351,235351,4200.025860021,4210.068274879
c082,0,5,8,182718,168367,174945,174945,4800.026962027,4810.945763799
c082,0,5,9,153127,143047,148460,148460,5400.0290457,5411.789637093
c082,0,5,10,155382,144225,150945,150945,6000.029958247,6012.469263826
c082,0,5,11,134809,125385,131332,131332,6600.031158488,6613.160069131
# search time: 6600.031s
# total time: 6613.723s
c082,1,5,1,1022865,870175,989149,989149,600.000425702,600.263592226
c082,1,5,2,791777,727098,770448,770448,1200.00047698,1200.636707211
c082,1,5,3,499447,472984,490344,490344,1800.000721426,1801.082749147
c082,1,5,4,453901,432507,446017,446017,2400.003203971,2401.536823056
c082,1,5,5,306200,282761,294951,294951,3000.0044826949998,3001.875502386
c082,1,5,6,318299,298885,307966,307966,3600.0051718899995,3602.156114193
c082,1,5,7,253722,237790,245024,245024,4200.006946848,4202.458704846
c082,1,5,8,183132,168695,175256,175256,4800.00792717,4802.811891431
c082,1,5,9,151825,141853,147223,147223,5400.0092826869995,5403.184311715
c082,1,5,10,153247,141961,148513,148513,6000.014464735,6003.547738873
c082,1,5,11,132402,122821,128670,128670,6600.014502029,6603.882493675
# search time: 6600.015s
# total time: 13218.491s
c082,2,5,1,1104477,971184,1076265,1076265,600.000294924,600.271487413
c082,2,5,2,795889,731103,774643,774643,1200.000974092,1200.539140073
c082,2,5,3,499051,472001,489346,489346,1800.001903894,1800.83878773
c082,2,5,4,446070,424798,437887,437887,2400.004821783,2401.115064256
c082,2,5,5,309136,285664,297932,297932,3000.004858301,3001.343690896
c082,2,5,6,311252,291925,301076,301076,3600.006734601,3601.53634381
c082,2,5,7,252117,236125,243481,243481,4200.009575351,4201.741979674
c082,2,5,8,191471,176871,184104,184104,4800.009857252,4801.998147305
c082,2,5,9,161377,150697,156745,156745,5400.015785226,5402.227895109
c082,2,5,10,151982,141043,147372,147372,6000.027640202,6002.49625758
c082,2,5,11,132136,122825,128576,128576,6600.031362078,6602.704607054
# search time: 6600.031s
# total time: 19822.099s
c082,3,5,1,999781,817451,958277,958277,600.001726371,600.142353925
c082,3,5,2,754751,699123,736716,736716,1200.002018656,1200.365736838
c082,3,5,3,495979,470125,486810,486810,1800.002198047,1800.590335869
c082,3,5,4,438286,416778,430144,430144,2400.002384501,2400.816599978
c082,3,5,5,322724,299049,311751,311751,3000.003605152,3000.986495533
c082,3,5,6,316876,297025,306247,306247,3600.005214672,3601.163598669
c082,3,5,7,252544,236830,243990,243990,4200.006952207,4201.343324065
c082,3,5,8,188617,173914,181116,181116,4800.0110247289995,4801.512423015
c082,3,5,9,161329,150880,156903,156903,5400.012474462,5401.685564451
c082,3,5,10,152854,141877,148301,148301,6000.020384124,6001.861642048
c082,3,5,11,135187,125608,131741,131741,6600.040204906,6602.025935167
# search time: 6600.040s
# total time: 26425.017s
c082,4,5,1,1073413,935326,1043745,1043745,600.004085982,600.229884743
c082,4,5,2,777641,716495,757709,757709,1200.0050791630001,1200.439597461
c082,4,5,3,495045,468548,485465,485465,1800.0053922780003,1800.658043083
c082,4,5,4,452158,430839,444286,444286,2400.0064526240003,2400.854731893
c082,4,5,5,322533,298900,311680,311680,3000.006738892,3000.998769478
c082,4,5,6,312633,292924,302232,302232,3600.009162683,3601.1293194
c082,4,5,7,254441,238498,245733,245733,4200.01441077,4201.26863054
c082,4,5,8,191631,176943,184234,184234,4800.017684302,4801.409009039
c082,4,5,9,151870,142036,147268,147268,5400.018236301,5401.605108041
c082,4,5,10,152511,141577,148016,148016,6000.018376121,6001.736554517
c082,4,5,11,134108,124710,130745,130745,6600.018482505,6601.876404475
# search time: 6600.018s
# total time: 33027.818s
