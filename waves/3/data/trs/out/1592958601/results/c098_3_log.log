    Finished release [optimized] target(s) in 0.05s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c098_3.json out/1592958601/results/c098_3_best.csv out/1592958601/results/c098_3_predictions.csv out/1592958601/results/c098_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([4, 4, 72, 72, 72]), o: IntList([5, 6, 75, 76, 77]) }
#   Datum { i: IntList([0, 0, 8, 8, 8, 8]), o: IntList([1, 2, 11, 12, 13, 14]) }
#   Datum { i: IntList([9, 9, 82]), o: IntList([10, 11, 85]) }
#   Datum { i: IntList([40, 52, 40, 50]), o: IntList([41, 54, 43, 54]) }
#   Datum { i: IntList([5]), o: IntList([6]) }
#   Datum { i: IntList([18, 5, 79, 21, 0, 47, 91]), o: IntList([19, 7, 82, 25, 5, 53, 98]) }
#   Datum { i: IntList([87, 56, 7, 56, 72, 33, 36, 57, 87, 7]), o: IntList([88, 58, 10, 60, 77, 39, 43, 65, 96, 17]) }
#   Datum { i: IntList([14, 14, 21, 14, 3, 21]), o: IntList([15, 16, 24, 18, 8, 27]) }
#   Datum { i: IntList([62, 4, 8, 85, 68, 9, 62, 85]), o: IntList([63, 6, 11, 89, 73, 15, 69, 93]) }
#   Datum { i: IntList([1, 0]), o: IntList([2, 2]) }
#   Datum { i: IntList([59, 52, 0, 30, 8, 29, 5, 3, 7]), o: IntList([60, 54, 3, 34, 13, 35, 12, 11, 16]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c098,0,3,1,1026297,892763,997819,997819,600.00027678,602.227049205
c098,0,3,2,311036,292059,300209,300209,1200.0062109780001,1203.601503979
c098,0,3,3,176625,166838,168368,168368,1800.009513771,1804.768536057
c098,0,3,4,140068,131946,132728,132728,2400.0103677790003,2405.72890709
c098,0,3,5,114098,107592,108043,108043,3000.0137259440003,3006.596585155
c098,0,3,6,125090,113844,114494,114494,3600.017152795,3607.127291862
c098,0,3,7,89802,81679,82151,82151,4200.019695687,4207.620302995
c098,0,3,8,62546,54923,55293,55293,4800.020684236,4808.238247342
c098,0,3,9,52201,46585,46918,46918,5400.041188911,5408.704412689
c098,0,3,10,40392,36251,36545,36545,6000.050165264,6009.271082877
c098,0,3,11,38500,34633,34916,34916,6600.0627402519995,6610.01244172
# search time: 6600.063s
# total time: 6610.647s
c098,1,3,1,1076569,957921,1053395,1053395,600.000861753,600.366074564
c098,1,3,2,314310,294876,303252,303252,1200.001129717,1200.86784922
c098,1,3,3,171672,161529,163062,163062,1800.0051531949998,1801.338771606
c098,1,3,4,148711,140202,140853,140853,2400.0060241949996,2401.721297276
c098,1,3,5,114584,107980,108527,108527,3000.0074860679997,3002.115001215
c098,1,3,6,125249,114002,114607,114607,3600.0090426939996,3602.353706612
c098,1,3,7,89801,81671,82097,82097,4200.010238631,4202.611004122
c098,1,3,8,61882,54128,54516,54516,4800.021085254,4802.851760715
c098,1,3,9,51773,46502,46872,46872,5400.027565761,5403.135801539
c098,1,3,10,40338,35869,36155,36155,6000.029988297,6003.393065971
c098,1,3,11,39783,35680,35961,35961,6600.045996758,6603.704283356
# search time: 6600.046s
# total time: 13214.826s
c098,2,3,1,1010089,886406,984073,984073,600.001560879,600.286020577
c098,2,3,2,316455,296708,304970,304970,1200.004418994,1200.615556333
c098,2,3,3,174763,165114,166676,166676,1800.005225256,1800.934489524
c098,2,3,4,146023,137421,137864,137864,2400.011011742,2401.186978136
c098,2,3,5,110367,103771,104051,104051,3000.013016619,3001.473604506
c098,2,3,6,124420,113231,113871,113871,3600.014352302,3601.657412392
c098,2,3,7,89531,81341,81778,81778,4200.0156602980005,4201.851626415
c098,2,3,8,59760,51935,52200,52200,4800.018438211,4802.065005933
c098,2,3,9,51823,46368,46694,46694,5400.026309909,5402.247188493
c098,2,3,10,39735,35509,35804,35804,6000.027478685,6002.409461925
c098,2,3,11,36492,32776,33072,33072,6600.0378174689995,6602.6360017
# search time: 6600.038s
# total time: 19818.299s
c098,3,3,1,965003,792788,925615,925615,600.000581351,600.180355678
c098,3,3,2,322700,302975,311048,311048,1200.001608738,1200.437865616
c098,3,3,3,170455,160489,161999,161999,1800.003868819,1800.687062608
c098,3,3,4,148649,140225,140860,140860,2400.009041014,2400.880689422
c098,3,3,5,113895,107250,107757,107757,3000.012555243,3001.106188676
c098,3,3,6,124314,113072,113665,113665,3600.016700508,3601.273515592
c098,3,3,7,87269,79045,79350,79350,4200.016862556,4201.389944854
c098,3,3,8,60174,52281,52576,52576,4800.022781298,4801.511567598
c098,3,3,9,51343,44863,45159,45159,5400.029294365,5401.665735069
c098,3,3,10,37640,34211,34470,34470,6000.031148439,6001.773055663
c098,3,3,11,39324,35108,35388,35388,6600.031275636,6601.932813241
# search time: 6600.031s
# total time: 26420.844s
c098,4,3,1,981061,803862,940372,940372,600.003937659,600.165795514
c098,4,3,2,319929,300072,308274,308274,1200.004052613,1200.371520532
c098,4,3,3,174836,165104,166659,166659,1800.0071832980002,1800.570380542
c098,4,3,4,147666,139375,139966,139966,2400.0073591090004,2400.721738716
c098,4,3,5,113925,107094,107578,107578,3000.0092832380005,3000.893957406
c098,4,3,6,125002,112988,113361,113361,3600.0100070880007,3601.035478458
c098,4,3,7,89097,80891,81366,81366,4200.019552252001,4201.167054568
c098,4,3,8,60556,52428,52717,52717,4800.021851489,4801.297708701
c098,4,3,9,51296,45085,45357,45357,5400.023153764,5401.438572733
c098,4,3,10,37360,33627,33929,33929,6000.028735214,6001.631268201
c098,4,3,11,38510,34636,34922,34922,6600.050704200001,6601.918230021
# search time: 6600.051s
# total time: 33024.378s
