    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c099_5.json out/1592958601/results/c099_5_best.csv out/1592958601/results/c099_5_predictions.csv out/1592958601/results/c099_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([94, 91, 2, 94, 8, 24, 1]), o: IntList([94, 91, 94]) }
#   Datum { i: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56, 8]), o: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56]) }
#   Datum { i: IntList([9, 97, 91, 97, 61]), o: IntList([97, 91, 97, 61]) }
#   Datum { i: IntList([9, 9, 72, 72]), o: IntList([72, 72]) }
#   Datum { i: IntList([86, 5, 86, 86, 11, 99, 99, 99, 5]), o: IntList([86, 86, 86, 99, 99, 99]) }
#   Datum { i: IntList([95, 7]), o: IntList([95]) }
#   Datum { i: IntList([1, 7, 8, 25, 0, 40, 53, 94]), o: IntList([53, 94]) }
#   Datum { i: IntList([78, 18, 92, 42, 95, 3, 98]), o: IntList([78, 92, 95, 98]) }
#   Datum { i: IntList([8, 87, 2, 64, 48, 79]), o: IntList([87, 64, 79]) }
#   Datum { i: IntList([7, 28, 13, 8, 0, 28, 8, 28]), o: IntList([]) }
#   Datum { i: IntList([99, 4, 74, 99, 83, 5, 2, 83]), o: IntList([99, 74, 99, 83, 83]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c099,0,5,1,921756,779021,890266,890266,600.000153481,601.976870031
c099,0,5,2,355650,333149,343134,343134,1200.000247592,1203.589444752
c099,0,5,3,140806,130087,130849,130849,1800.001860947,1804.696602887
c099,0,5,4,125442,117809,118310,118310,2400.002434943,2405.544317099
c099,0,5,5,101981,93749,94078,94078,3000.021675451,3006.566844083
c099,0,5,6,74397,68037,68329,68329,3600.022471656,3607.719126999
c099,0,5,7,71151,63494,63850,63850,4200.032887443,4208.851222952
c099,0,5,8,60041,53434,53721,53721,4800.035514798999,4810.091572456
c099,0,5,9,48002,43830,44182,44182,5400.047473250999,5411.243620904
c099,0,5,10,42843,38538,38773,38773,6000.063089656,6012.484545717
c099,0,5,11,37990,35276,37048,37048,6600.080137055999,6613.77494936
# search time: 6600.080s
# total time: 6614.118s
c099,1,5,1,1039719,895467,1008114,1008114,600.000426892,600.353868003
c099,1,5,2,392550,368433,378920,378920,1200.0006378469998,1200.916074411
c099,1,5,3,152186,140481,141366,141366,1800.000979599,1801.406259829
c099,1,5,4,124193,116161,116487,116487,2400.003959533,2401.796869733
c099,1,5,5,103666,94920,95300,95300,3000.011025057,3002.220168894
c099,1,5,6,74636,68168,68438,68438,3600.014864143,3602.67823267
c099,1,5,7,70006,62670,63060,63060,4200.018478555,4203.081978598
c099,1,5,8,59298,52963,53194,53194,4800.021506101,4803.511125714
c099,1,5,9,48800,44394,44712,44712,5400.031406475,5404.075314536
c099,1,5,10,45773,41232,41497,41497,6000.038537357,6004.700834103
c099,1,5,11,37063,34498,36156,36156,6600.038644484,6605.456638129
# search time: 6600.039s
# total time: 13220.213s
c099,2,5,1,1054163,916801,1024497,1024497,600.002563598,600.297266178
c099,2,5,2,398246,373807,384161,384161,1200.0032745150002,1200.650551455
c099,2,5,3,153448,141919,142777,142777,1800.0048088950002,1800.936612954
c099,2,5,4,126713,119010,119524,119524,2400.0111193310004,2401.171173583
c099,2,5,5,101375,93083,93488,93488,3000.0140184310003,3001.465502967
c099,2,5,6,73440,66610,66815,66815,3600.019471895,3601.795811449
c099,2,5,7,69230,61182,61524,61524,4200.028598213,4202.120146373
c099,2,5,8,59646,53866,54149,54149,4800.029920483,4802.478591219
c099,2,5,9,49980,45135,45446,45446,5400.031197094,5402.754854872
c099,2,5,10,42364,38537,38746,38746,6000.0370594860005,6003.202083516
c099,2,5,11,38919,36540,38166,38166,6600.047362564001,6603.551963199
# search time: 6600.047s
# total time: 19824.630s
c099,3,5,1,1092411,962439,1066476,1066476,600.000067966,600.274611548
c099,3,5,2,385636,361827,372311,372311,1200.001007411,1200.53105789
c099,3,5,3,155508,144217,144993,144993,1800.003159666,1800.72320356
c099,3,5,4,123558,115557,115883,115883,2400.006280207,2400.926489596
c099,3,5,5,99743,91652,91934,91934,3000.014218362,3001.136078681
c099,3,5,6,74285,68045,68308,68308,3600.0182415500003,3601.423314027
c099,3,5,7,69683,61519,61864,61864,4200.029515585,4201.666298199
c099,3,5,8,59244,53477,53765,53765,4800.05418678,4801.939969603
c099,3,5,9,47534,43210,43501,43501,5400.061336601,5402.261673558
c099,3,5,10,44916,40455,40712,40712,6000.068316596,6002.526951992
c099,3,5,11,38764,36403,37987,37987,6600.087097816,6602.744667744
# search time: 6600.087s
# total time: 26427.815s
c099,4,5,1,997475,816838,956615,956615,600.029106437,600.176957993
c099,4,5,2,377418,354536,364490,364490,1200.0296344409999,1200.403939419
c099,4,5,3,152380,141435,142316,142316,1800.030945854,1800.564490149
c099,4,5,4,121210,113470,113880,113880,2400.03174135,2400.732214044
c099,4,5,5,100600,92219,92547,92547,3000.0344681680003,3000.888347128
c099,4,5,6,71535,65126,65336,65336,3600.039154162,3601.062970407
c099,4,5,7,69176,61659,62052,62052,4200.03976153,4201.235007289
c099,4,5,8,58595,52978,53297,53297,4800.043732237,4801.504415664
c099,4,5,9,48570,43869,44199,44199,5400.074221702,5401.726350639
c099,4,5,10,42752,38474,38709,38709,6000.075513727,6001.94607554
c099,4,5,11,38149,35820,37419,37419,6600.081407566,6602.19608035
# search time: 6600.081s
# total time: 33030.743s
