    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
    Finished release [optimized] target(s) in 0.48s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c084_3.json out/1592958601/results/c084_3_best.csv out/1592958601/results/c084_3_predictions.csv out/1592958601/results/c084_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([6, 61, 3, 19, 80]), o: IntList([]) }
#   Datum { i: IntList([90, 8, 5, 34, 79, 65, 8, 48, 79, 9]), o: IntList([8]) }
#   Datum { i: IntList([99, 1, 1, 99, 85]), o: IntList([]) }
#   Datum { i: IntList([57, 97, 57, 83, 92, 3, 14]), o: IntList([14]) }
#   Datum { i: IntList([5, 5]), o: IntList([]) }
#   Datum { i: IntList([2, 42]), o: IntList([]) }
#   Datum { i: IntList([37, 5, 82, 82, 5, 5, 37, 5, 82]), o: IntList([37]) }
#   Datum { i: IntList([27, 27, 27, 27]), o: IntList([]) }
#   Datum { i: IntList([85, 18, 85, 91, 91, 18, 91]), o: IntList([91]) }
#   Datum { i: IntList([21, 24, 41, 38, 8, 6, 4, 96]), o: IntList([4]) }
#   Datum { i: IntList([94, 0, 58, 62, 7, 3, 1, 55, 88]), o: IntList([1]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c084,0,3,1,1041442,881667,1006124,1006124,600.000218057,601.916184264
c084,0,3,2,751197,686957,727538,727538,1200.007210526,1203.453360062
c084,0,3,3,446823,422151,436305,436305,1800.007794495,1804.803079645
c084,0,3,4,382706,366289,376767,376767,2400.007967697,2405.836829342
c084,0,3,5,254417,235008,244993,244993,3000.009599737,3006.812483462
c084,0,3,6,259834,239264,250417,250417,3600.015253279,3607.63450008
c084,0,3,7,232090,213538,224010,224010,4200.015406189,4208.311881205
c084,0,3,8,154949,143390,150582,150582,4800.015456221,4809.201349574
c084,0,3,9,137804,127536,133902,133902,5400.017252443,5410.086158832
c084,0,3,10,102198,94761,99427,99427,6000.022025907,6010.934029412
c084,0,3,11,86647,80890,84617,84617,6600.024354561,6611.863453969
# search time: 6600.024s
# total time: 6612.899s
c084,1,3,1,952822,779596,913126,913126,600.014089413,600.40833376
c084,1,3,2,651659,597322,631759,631759,1200.014595828,1200.939656621
c084,1,3,3,413532,391553,404877,404877,1800.015069255,1801.428718615
c084,1,3,4,345845,331342,340781,340781,2400.019260495,2401.889206255
c084,1,3,5,228166,210803,219712,219712,3000.0197716169996,3002.370998288
c084,1,3,6,232405,213969,223992,223992,3600.0202365359996,3602.852598287
c084,1,3,7,229253,211136,221297,221297,4200.021914547,4203.231160284
c084,1,3,8,144494,134721,140860,140860,4800.022600462,4803.683539813
c084,1,3,9,125474,116937,122058,122058,5400.025085966,5404.206699111
c084,1,3,10,98399,91905,96229,96229,6000.026886616,6004.613725309
c084,1,3,11,75296,70282,73536,73536,6600.0310908480005,6605.108867193
# search time: 6600.031s
# total time: 13219.021s
c084,2,3,1,957066,785458,917672,917672,600.013955446,600.18477983
c084,2,3,2,655363,601499,635551,635551,1200.014628806,1200.552624081
c084,2,3,3,411975,390247,403350,403350,1800.0172844019999,1800.898463897
c084,2,3,4,342868,328286,337622,337622,2400.019226902,2401.196555688
c084,2,3,5,229269,211616,220737,220737,3000.021888524,3001.486827484
c084,2,3,6,227015,208247,217783,217783,3600.0277358020003,3601.789216298
c084,2,3,7,227557,208974,218996,218996,4200.028637896,4202.082652336
c084,2,3,8,153646,142311,149299,149299,4800.0291013139995,4802.427529568
c084,2,3,9,135511,125444,131498,131498,5400.029820778999,5402.728387186
c084,2,3,10,104527,97263,101972,101972,6000.037321693999,6003.066180401
c084,2,3,11,85091,79372,83106,83106,6600.0460813969985,6603.376334595
# search time: 6600.046s
# total time: 19822.808s
c084,3,3,1,949615,804029,917362,917362,600.001607671,600.209007133
c084,3,3,2,679906,621247,658214,658214,1200.0016787929999,1200.500178081
c084,3,3,3,409428,387933,400738,400738,1800.0027563559997,1800.770403966
c084,3,3,4,331180,316379,325557,325557,2400.0036492239997,2401.046911487
c084,3,3,5,230030,212587,221665,221665,3000.0068208649996,3001.291211003
c084,3,3,6,226848,208428,217927,217927,3600.0084630899996,3601.558650974
c084,3,3,7,228884,210639,220904,220904,4200.0093019139995,4201.734611354
c084,3,3,8,154299,142938,150108,150108,4800.012857100999,4801.950327362
c084,3,3,9,137305,127143,133397,133397,5400.016750929999,5402.184599745
c084,3,3,10,101787,94419,99026,99026,6000.034436793999,6002.488791004
c084,3,3,11,86447,80745,84456,84456,6600.040779541999,6602.778976679
# search time: 6600.041s
# total time: 26426.621s
c084,4,3,1,1007359,867391,976851,976851,600.005800663,600.218167072
c084,4,3,2,686040,624778,663297,663297,1200.0058467009999,1200.481182634
c084,4,3,3,415307,393462,406561,406561,1800.008522353,1800.716675405
c084,4,3,4,343569,328991,338367,338367,2400.0097877489998,2400.921693953
c084,4,3,5,214922,198494,206585,206585,3000.012154641,3001.147942353
c084,4,3,6,226892,208320,217970,217970,3600.012989209,3601.350518105
c084,4,3,7,228610,210381,220781,220781,4200.016837071,4201.507478295
c084,4,3,8,143286,133562,139556,139556,4800.021008137,4801.71736222
c084,4,3,9,129259,120454,125991,125991,5400.022718661,5401.926998408
c084,4,3,10,95365,89106,93275,93275,6000.023503954,6002.122654112
c084,4,3,11,79089,74252,77549,77549,6600.023806197,6602.267988037
# search time: 6600.024s
# total time: 33029.287s
