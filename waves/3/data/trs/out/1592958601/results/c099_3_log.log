    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c099_3.json out/1592958601/results/c099_3_best.csv out/1592958601/results/c099_3_predictions.csv out/1592958601/results/c099_3_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([8, 87, 2, 64, 48, 79]), o: IntList([87, 64, 79]) }
#   Datum { i: IntList([1, 7, 8, 25, 0, 40, 53, 94]), o: IntList([53, 94]) }
#   Datum { i: IntList([78, 18, 92, 42, 95, 3, 98]), o: IntList([78, 92, 95, 98]) }
#   Datum { i: IntList([7, 28, 13, 8, 0, 28, 8, 28]), o: IntList([]) }
#   Datum { i: IntList([86, 5, 86, 86, 11, 99, 99, 99, 5]), o: IntList([86, 86, 86, 99, 99, 99]) }
#   Datum { i: IntList([9, 97, 91, 97, 61]), o: IntList([97, 91, 97, 61]) }
#   Datum { i: IntList([9, 9, 72, 72]), o: IntList([72, 72]) }
#   Datum { i: IntList([99, 4, 74, 99, 83, 5, 2, 83]), o: IntList([99, 74, 99, 83, 83]) }
#   Datum { i: IntList([94, 91, 2, 94, 8, 24, 1]), o: IntList([94, 91, 94]) }
#   Datum { i: IntList([95, 7]), o: IntList([95]) }
#   Datum { i: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56, 8]), o: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c099,0,3,1,979444,857733,953556,953556,600.002012153,602.172159016
c099,0,3,2,371439,347523,357419,357419,1200.00236563,1203.617093537
c099,0,3,3,277022,267253,269576,269576,1800.003909381,1804.564193913
c099,0,3,4,177759,171356,171902,171902,2400.0060889330002,2405.451318281
c099,0,3,5,146019,138033,143051,143051,3000.0134306850005,3006.195459554
c099,0,3,6,99788,94352,98170,98170,3600.0143007460006,3606.781092695
c099,0,3,7,83910,79252,82593,82593,4200.018285120001,4207.327253398
c099,0,3,8,58812,54867,57404,57404,4800.031328107,4808.278625949
c099,0,3,9,47533,44468,46514,46514,5400.0478450830005,5409.14102388
c099,0,3,10,40868,38392,40105,40105,6000.04941578,6010.295727894
c099,0,3,11,40020,37466,39091,39091,6600.052033402,6611.381824647
# search time: 6600.052s
# total time: 6611.690s
c099,1,3,1,985590,853212,957113,957113,600.005633146,600.306597947
c099,1,3,2,371684,347137,357283,357283,1200.007688745,1200.820905787
c099,1,3,3,272544,262896,265356,265356,1800.009150138,1801.239448496
c099,1,3,4,177088,170694,171295,171295,2400.014887644,2401.6342105
c099,1,3,5,144970,137121,142008,142008,3000.015891993,3001.990696494
c099,1,3,6,99998,94563,98360,98360,3600.0200080249997,3602.268117831
c099,1,3,7,83502,78815,82175,82175,4200.024641432,4202.537170127
c099,1,3,8,57856,53910,56478,56478,4800.04503571,4802.989422798
c099,1,3,9,46587,43490,45466,45466,5400.060710805,5403.352669572
c099,1,3,10,41211,38635,40366,40366,6000.071004304,6003.992593377
c099,1,3,11,40273,37698,39348,39348,6600.076335711,6604.514125702
# search time: 6600.076s
# total time: 13216.758s
c099,2,3,1,950236,822839,922874,922874,600.000036929,600.223613931
c099,2,3,2,371129,346322,356671,356671,1200.000344821,1200.565253492
c099,2,3,3,273673,264095,266396,266396,1800.0003800949999,1800.862882337
c099,2,3,4,175301,169030,169673,169673,2400.0026458149996,2401.132757341
c099,2,3,5,144355,136226,141262,141262,3000.0040045459996,3001.379370955
c099,2,3,6,98437,93171,96681,96681,3600.0096717419997,3601.556537602
c099,2,3,7,83629,78940,82225,82225,4200.011238388,4201.712151701
c099,2,3,8,57614,53648,56202,56202,4800.0200106699995,4801.987644793
c099,2,3,9,44075,40806,42904,42904,5400.02493711,5402.299171301
c099,2,3,10,38108,35327,37151,37151,6000.042488569,6002.672511834
c099,2,3,11,37717,34800,36528,36528,6600.050288928,6602.929780157
# search time: 6600.050s
# total time: 19820.264s
c099,3,3,1,910829,771764,880164,880164,600.000588347,600.201166843
c099,3,3,2,367944,343974,353974,353974,1200.0009184219998,1200.453805481
c099,3,3,3,272936,263312,265627,265627,1800.0014413739998,1800.698190853
c099,3,3,4,174872,168499,169101,169101,2400.0067117959998,2400.924616345
c099,3,3,5,143497,135538,140460,140460,3000.0076521129995,3001.110380902
c099,3,3,6,98704,93390,96964,96964,3600.0089955079993,3601.298734825
c099,3,3,7,82160,77587,80701,80701,4200.010926798999,4201.465719529
c099,3,3,8,57355,53364,55903,55903,4800.017957892999,4801.718265537
c099,3,3,9,46563,43402,45477,45477,5400.024887975999,5401.935234215
c099,3,3,10,40305,37797,39563,39563,6000.036369303999,6002.304195446
c099,3,3,11,37735,34914,36613,36613,6600.051485464999,6602.634020892
# search time: 6600.051s
# total time: 26423.767s
c099,4,3,1,962071,837276,935280,935280,600.000335595,600.191987659
c099,4,3,2,380083,355065,365408,365408,1200.0011763920002,1200.418168411
c099,4,3,3,273846,263283,265616,265616,1800.0020560810003,1800.6122825
c099,4,3,4,175121,168648,169727,169727,2400.0040760630004,2400.778480107
c099,4,3,5,145174,137229,142209,142209,3000.0104416670006,3000.933600065
c099,4,3,6,99886,94558,98324,98324,3600.0144828920006,3601.042722251
c099,4,3,7,84764,80267,83429,83429,4200.0173328070005,4201.163774821
c099,4,3,8,58196,54247,56812,56812,4800.032620424001,4801.374805688
c099,4,3,9,46641,43535,45545,45545,5400.048613432001,5401.610568114
c099,4,3,10,40904,38317,40087,40087,6000.057383920001,6001.89308963
c099,4,3,11,40552,37898,39596,39596,6600.061928148,6602.049448921
# search time: 6600.062s
# total time: 33026.110s
