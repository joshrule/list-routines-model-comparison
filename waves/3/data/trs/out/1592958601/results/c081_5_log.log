    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.35s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c081_5.json out/1592958601/results/c081_5_best.csv out/1592958601/results/c081_5_predictions.csv out/1592958601/results/c081_5_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([55, 74, 69]), o: IntList([69]) }
#   Datum { i: IntList([45, 45, 45]), o: IntList([45]) }
#   Datum { i: IntList([5, 83, 64, 87, 57, 1, 95, 1, 95]), o: IntList([64]) }
#   Datum { i: IntList([3, 84, 2, 42, 12, 12]), o: IntList([2]) }
#   Datum { i: IntList([9, 56, 9, 9]), o: IntList([9]) }
#   Datum { i: IntList([68, 68, 56, 46, 71]), o: IntList([56]) }
#   Datum { i: IntList([9, 91, 70, 48, 59, 83, 43]), o: IntList([70]) }
#   Datum { i: IntList([40, 50, 76, 47, 39]), o: IntList([76]) }
#   Datum { i: IntList([27, 4, 38, 83, 5, 3, 15, 4, 5, 83]), o: IntList([38]) }
#   Datum { i: IntList([70, 1, 7, 18, 2, 8, 21, 6, 4, 19]), o: IntList([7]) }
#   Datum { i: IntList([9, 81, 6, 81, 6]), o: IntList([6]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c081,0,5,1,1005039,890773,981345,981345,600.003289205,602.370281845
c081,0,5,2,606585,569079,586605,586605,1200.0040733820001,1203.733285633
c081,0,5,3,426873,395201,410531,410531,1800.004623211,1804.613356231
c081,0,5,4,287590,264412,276257,276257,2400.0075705090003,2405.519837189
c081,0,5,5,219533,206351,213168,213168,3000.0079721210004,3006.451707916
c081,0,5,6,191078,179129,185780,185780,3600.0114116100003,3607.38587938
c081,0,5,7,155293,144654,150265,150265,4200.014499375,4208.42113559
c081,0,5,8,128015,117558,123089,123089,4800.016721267,4809.478713154
c081,0,5,9,115657,104229,110714,110714,5400.01793258,5410.258546409
c081,0,5,10,89332,81623,85581,85581,6000.023891609,6011.205447566
c081,0,5,11,75081,68301,71796,71796,6600.030228061,6612.09362674
# search time: 6600.030s
# total time: 6612.420s
c081,1,5,1,1002521,821133,961059,961059,600.007557207,600.276944603
c081,1,5,2,603373,567359,584417,584417,1200.009856225,1200.754667626
c081,1,5,3,439866,407515,423432,423432,1800.010504912,1801.152158324
c081,1,5,4,305779,281395,294665,294665,2400.015387438,2401.512568743
c081,1,5,5,226405,213302,219966,219966,3000.0174877229997,3001.998344936
c081,1,5,6,195058,182904,189600,189600,3600.0182627629997,3602.433010736
c081,1,5,7,154674,144271,149768,149768,4200.019893262,4202.955128935
c081,1,5,8,127263,116957,122404,122404,4800.021183299,4803.470713435
c081,1,5,9,116755,105309,111426,111426,5400.024760919,5403.88729252
c081,1,5,10,88172,80673,84570,84570,6000.033918152,6004.516727369
c081,1,5,11,72133,65634,68951,68951,6600.035373022,6604.968964688
# search time: 6600.035s
# total time: 13217.858s
c081,2,5,1,1052420,932754,1027979,1027979,600.000188987,600.328105852
c081,2,5,2,649284,608160,627003,627003,1200.0021080709998,1200.658269731
c081,2,5,3,440044,406892,423250,423250,1800.0064515149998,1800.922208089
c081,2,5,4,305150,280450,293748,293748,2400.0077987019995,2401.132936728
c081,2,5,5,229152,215954,222574,222574,3000.0223564819994,3001.453519972
c081,2,5,6,197596,185037,191919,191919,3600.0244094069994,3601.74684263
c081,2,5,7,151093,140947,146284,146284,4200.026823927999,4202.097399295
c081,2,5,8,125793,115542,120857,120857,4800.030990924999,4802.43136263
c081,2,5,9,114874,103421,109791,109791,5400.033183242999,5402.668888816
c081,2,5,10,87935,80342,84303,84303,6000.0333137239995,6003.008465853
c081,2,5,11,72577,65983,69362,69362,6600.035897944999,6603.466655176
# search time: 6600.036s
# total time: 19821.774s
c081,3,5,1,1043858,901312,1012938,1012938,600.000948705,600.254522443
c081,3,5,2,641674,600760,619607,619607,1200.001207722,1200.518325295
c081,3,5,3,435796,403603,419383,419383,1800.0017828329999,1800.738975793
c081,3,5,4,296375,272497,284432,284432,2400.00398646,2400.959935071
c081,3,5,5,222508,209296,216184,216184,3000.009289859,3001.204081598
c081,3,5,6,194436,182128,188940,188940,3600.010380455,3601.436724331
c081,3,5,7,155192,144464,150154,150154,4200.010681394,4201.679094722
c081,3,5,8,124825,114847,120152,120152,4800.018285003,4801.924075059
c081,3,5,9,114884,103605,109839,109839,5400.022528488999,5402.202453616
c081,3,5,10,87843,80310,84208,84208,6000.030029018999,6002.533182543
c081,3,5,11,71619,65349,68524,68524,6600.042667230999,6602.852121347
# search time: 6600.043s
# total time: 26425.232s
c081,4,5,1,1034166,901655,1005700,1005700,600.010301708,600.282062157
c081,4,5,2,640113,599932,618444,618444,1200.013716123,1200.53025893
c081,4,5,3,437398,405190,420992,420992,1800.0145927869999,1800.721384459
c081,4,5,4,305382,280977,294122,294122,2400.016064353,2400.87509633
c081,4,5,5,224429,211116,217943,217943,3000.022392341,3001.092867683
c081,4,5,6,194939,182299,189347,189347,3600.022728494,3601.275360061
c081,4,5,7,155582,144897,150535,150535,4200.025587685001,4201.501691829
c081,4,5,8,127351,117174,122538,122538,4800.026889422001,4801.649466992
c081,4,5,9,115662,104041,110216,110216,5400.0310927830005,5401.823494007
c081,4,5,10,88277,80621,84646,84646,6000.0315398640005,6002.051957735
c081,4,5,11,73645,66947,70399,70399,6600.0415722590005,6602.209091426
# search time: 6600.042s
# total time: 33027.749s
