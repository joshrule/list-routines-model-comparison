    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.40s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c083_1.json out/1592958601/results/c083_1_best.csv out/1592958601/results/c083_1_predictions.csv out/1592958601/results/c083_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([27, 25, 31, 27, 94, 5, 2]), o: IntList([2]) }
#   Datum { i: IntList([47, 27, 63, 1, 28, 26, 82, 1]), o: IntList([82]) }
#   Datum { i: IntList([3, 4, 23, 57, 46, 60, 70, 7]), o: IntList([70]) }
#   Datum { i: IntList([78, 8, 9, 54, 7, 0, 5, 6, 24]), o: IntList([5]) }
#   Datum { i: IntList([41, 22, 30, 71, 84, 50, 95, 3, 7, 61]), o: IntList([95]) }
#   Datum { i: IntList([73, 73, 73, 73, 73, 73, 73, 73]), o: IntList([73]) }
#   Datum { i: IntList([67, 3, 20, 9, 50, 72, 29, 9, 35, 82]), o: IntList([29]) }
#   Datum { i: IntList([72, 55, 11, 6, 19, 1, 17, 70, 19]), o: IntList([17]) }
#   Datum { i: IntList([77, 75, 75, 33, 33, 6, 40, 40, 40, 6]), o: IntList([40]) }
#   Datum { i: IntList([0, 6, 89, 5, 13, 89, 21, 21, 3, 30]), o: IntList([21]) }
#   Datum { i: IntList([6, 4, 54, 54, 5, 5, 4, 68]), o: IntList([4]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c083,0,1,1,902141,739921,864899,864899,600.003394175,601.981807333
c083,0,1,2,557539,521164,538006,538006,1200.003541643,1203.807295409
c083,0,1,3,330639,306331,318702,318702,1800.004608851,1805.295008902
c083,0,1,4,202815,187317,195830,195830,2400.007008119,2406.723802054
c083,0,1,5,140395,130978,135915,135915,3000.007769295,3008.331139584
c083,0,1,6,63693,59304,61474,61474,3600.018004523,3610.321911666
c083,0,1,7,73300,68110,70519,70519,4200.021424329,4212.119335865
c083,0,1,8,61257,56982,59038,59038,4800.031579488,4814.264938964
c083,0,1,9,46219,42731,44405,44405,5400.055761026,5416.58370079
c083,0,1,10,37045,34161,35563,35563,6000.060899456001,6018.264657741
c083,0,1,11,34728,32019,33404,33404,6600.073052765001,6620.639524684
# search time: 6600.073s
# total time: 6620.870s
c083,1,1,1,970948,837398,941808,941808,600.002175749,600.301669434
c083,1,1,2,538482,505567,521297,521297,1200.006333982,1200.99504398
c083,1,1,3,340781,315736,328387,328387,1800.006616916,1801.588513976
c083,1,1,4,217432,200620,210151,210151,2400.0074683519997,2402.170007141
c083,1,1,5,142683,133361,138325,138325,3000.0214903049996,3002.937526841
c083,1,1,6,101045,94533,97756,97756,3600.0219322669996,3603.81805925
c083,1,1,7,74600,69332,71745,71745,4200.021989129999,4204.732119057
c083,1,1,8,60952,56640,58761,58761,4800.027664486999,4805.679391629
c083,1,1,9,45092,41806,43311,43311,5400.030221474999,5406.556464722
c083,1,1,10,36320,33462,34858,34858,6000.050217843999,6007.50883974
c083,1,1,11,33280,30824,32071,32071,6600.0724729309995,6608.555030318
# search time: 6600.072s
# total time: 13229.915s
c083,2,1,1,915445,785603,887156,887156,600.000131832,600.233715873
c083,2,1,2,572738,535633,552922,552922,1200.000313972,1200.65402504
c083,2,1,3,355382,327887,342405,342405,1800.0006099500001,1800.99610495
c083,2,1,4,208646,192699,201342,201342,2400.0019062720003,2401.443237614
c083,2,1,5,141758,132402,137415,137415,3000.0033995370004,3001.964159766
c083,2,1,6,100778,93814,97408,97408,3600.0057728010006,3602.447254745
c083,2,1,7,74465,69167,71597,71597,4200.0095236120005,4203.093043639
c083,2,1,8,61195,56791,58878,58878,4800.010183968001,4803.686274992
c083,2,1,9,45330,41991,43545,43545,5400.019788440001,5404.146665673
c083,2,1,10,37420,34421,35914,35914,6000.049872955002,6005.043453982
c083,2,1,11,34544,31776,33174,33174,6600.086303479002,6606.026727986
# search time: 6600.086s
# total time: 19836.310s
c083,3,1,1,951263,823056,923425,923425,600.001355058,600.211595138
c083,3,1,2,552799,518109,534369,534369,1200.00199596,1200.548666893
c083,3,1,3,339393,314336,326801,326801,1800.0029842879999,1800.852010432
c083,3,1,4,210171,193851,202617,202617,2400.017963774,2401.13128561
c083,3,1,5,142098,132599,137639,137639,3000.019540235,3001.536692267
c083,3,1,6,101562,94834,98301,98301,3600.019658088,3601.872365005
c083,3,1,7,74335,68757,71351,71351,4200.019697968,4202.267628205
c083,3,1,8,60149,55921,57916,57916,4800.024878237,4802.798265194
c083,3,1,9,45701,42198,43897,43897,5400.044589964,5403.084740739
c083,3,1,10,36647,33681,35146,35146,6000.046951856,6003.460370249
c083,3,1,11,34876,32133,33551,33551,6600.048158388,6603.748622708
# search time: 6600.048s
# total time: 26440.287s
c083,4,1,1,946910,826525,921437,921437,600.000069694,600.19760342
c083,4,1,2,571667,534367,551876,551876,1200.0018874369998,1200.485943769
c083,4,1,3,337524,313055,325334,325334,1800.0029115889997,1800.726938103
c083,4,1,4,222812,205546,215410,215410,2400.0058186039996,2400.955291597
c083,4,1,5,143978,134214,139392,139392,3000.0110951989996,3001.303706778
c083,4,1,6,99849,93211,96615,96615,3600.0174731179995,3601.766512409
c083,4,1,7,75366,69842,72383,72383,4200.019696898,4202.140118576
c083,4,1,8,59104,55078,57055,57055,4800.02575213,4802.469573
c083,4,1,9,45284,41939,43492,43492,5400.028789141,5402.748279376
c083,4,1,10,36777,33880,35283,35283,6000.0289730449995,6003.239094117
c083,4,1,11,33879,31393,32626,32626,6600.0292029619995,6603.520645575
# search time: 6600.029s
# total time: 33044.180s
