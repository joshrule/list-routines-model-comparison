    Finished release [optimized] target(s) in 0.03s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c099_2.json out/1592958601/results/c099_2_best.csv out/1592958601/results/c099_2_predictions.csv out/1592958601/results/c099_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([9, 97, 91, 97, 61]), o: IntList([97, 91, 97, 61]) }
#   Datum { i: IntList([95, 7]), o: IntList([95]) }
#   Datum { i: IntList([1, 7, 8, 25, 0, 40, 53, 94]), o: IntList([53, 94]) }
#   Datum { i: IntList([8, 87, 2, 64, 48, 79]), o: IntList([87, 64, 79]) }
#   Datum { i: IntList([99, 4, 74, 99, 83, 5, 2, 83]), o: IntList([99, 74, 99, 83, 83]) }
#   Datum { i: IntList([94, 91, 2, 94, 8, 24, 1]), o: IntList([94, 91, 94]) }
#   Datum { i: IntList([78, 18, 92, 42, 95, 3, 98]), o: IntList([78, 92, 95, 98]) }
#   Datum { i: IntList([7, 28, 13, 8, 0, 28, 8, 28]), o: IntList([]) }
#   Datum { i: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56, 8]), o: IntList([69, 56, 56, 58, 99, 56, 58, 64, 56]) }
#   Datum { i: IntList([9, 9, 72, 72]), o: IntList([72, 72]) }
#   Datum { i: IntList([86, 5, 86, 86, 11, 99, 99, 99, 5]), o: IntList([86, 86, 86, 99, 99, 99]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c099,0,2,1,998737,861404,969008,969008,600.000176214,602.159694508
c099,0,2,2,361690,336077,347443,347443,1200.0003410680001,1203.29866714
c099,0,2,3,310585,287629,291559,291559,1800.0004372120002,1804.22199251
c099,0,2,4,221428,208104,209384,209384,2400.000975842,2405.057122113
c099,0,2,5,163522,153069,154306,154306,3000.002275116,3005.812945442
c099,0,2,6,112134,103933,104631,104631,3600.004552736,3606.496977985
c099,0,2,7,94598,87244,88032,88032,4200.0161667699995,4207.160054216
c099,0,2,8,75592,69790,70135,70135,4800.019974317999,4807.848618866
c099,0,2,9,67666,63791,66417,66417,5400.025556108999,5408.473773727
c099,0,2,10,49543,46343,48809,48809,6000.030383557999,6008.892541459
c099,0,2,11,35497,33066,34715,34715,6600.032215193999,6609.814746066
# search time: 6600.032s
# total time: 6610.151s
c099,1,2,1,990518,858294,961809,961809,600.000568264,600.311316238
c099,1,2,2,363686,338342,349241,349241,1200.001736742,1200.725101516
c099,1,2,3,308103,284749,288503,288503,1800.003846364,1801.116502137
c099,1,2,4,217946,204314,205261,205261,2400.004742037,2401.51187104
c099,1,2,5,162857,152497,153841,153841,3000.0063181630003,3001.829701773
c099,1,2,6,116681,108270,109175,109175,3600.0070720870003,3602.135306993
c099,1,2,7,94766,87234,88070,88070,4200.008549196,4202.445702189
c099,1,2,8,77187,71582,72077,72077,4800.010572413,4802.809137848
c099,1,2,9,67631,63536,66211,66211,5400.016063614999,5403.144980931
c099,1,2,10,51242,48212,50655,50655,6000.0276089359995,6003.350808471
c099,1,2,11,37221,34955,36548,36548,6600.042824278999,6603.859166513
# search time: 6600.043s
# total time: 13214.613s
c099,2,2,1,1018605,897794,993882,993882,600.000011607,600.278079024
c099,2,2,2,363001,337496,348639,348639,1200.000292877,1200.544248368
c099,2,2,3,306739,283338,287208,287208,1800.00153781,1800.783742758
c099,2,2,4,214489,201038,201981,201981,2400.001967061,2401.040588908
c099,2,2,5,162365,151947,153296,153296,3000.0044058559997,3001.258796285
c099,2,2,6,116231,107817,108722,108722,3600.0152802149996,3601.47924023
c099,2,2,7,93901,86336,87161,87161,4200.026827256999,4201.698138106
c099,2,2,8,75570,69680,70024,70024,4800.039079343,4802.002448063
c099,2,2,9,68995,65023,67957,67957,5400.040968249999,5402.15426317
c099,2,2,10,51334,48474,50814,50814,6000.056614083,6002.301928344
c099,2,2,11,37284,35071,36637,36637,6600.062908442999,6602.686229379
# search time: 6600.063s
# total time: 19817.877s
c099,3,2,1,994588,854695,963967,963967,600.002333953,600.219958483
c099,3,2,2,363261,337741,348854,348854,1200.002766226,1200.433078899
c099,3,2,3,308296,285157,288745,288745,1800.0037956,1800.663046914
c099,3,2,4,218544,205478,206719,206719,2400.008562726,2400.876551201
c099,3,2,5,161906,150758,151794,151794,3000.009947204,3001.057172921
c099,3,2,6,116158,107655,108543,108543,3600.011669858,3601.229138395
c099,3,2,7,90910,83701,84360,84360,4200.016771962,4201.405307035
c099,3,2,8,77812,72383,72864,72864,4800.020531679001,4801.542241824
c099,3,2,9,68682,64685,67665,67665,5400.022928529001,5401.695999146
c099,3,2,10,48918,45652,48111,48111,6000.040525238001,6001.859323342
c099,3,2,11,36592,34333,35910,35910,6600.049467885001,6602.054827528
# search time: 6600.049s
# total time: 26420.497s
c099,4,2,1,961062,787453,921324,921324,600.001293534,600.167041199
c099,4,2,2,327877,307619,316323,316323,1200.001349057,1200.371686863
c099,4,2,3,297273,273493,276410,276410,1800.0044621040001,1800.565816614
c099,4,2,4,217295,204216,205518,205518,2400.0072295620002,2400.740511314
c099,4,2,5,161101,149625,150644,150644,3000.0082508410005,3000.911796304
c099,4,2,6,115486,106859,107766,107766,3600.0086855680006,3601.052696483
c099,4,2,7,93609,86252,87049,87049,4200.009644331,4201.1918845
c099,4,2,8,75227,69376,69749,69749,4800.009969948001,4801.321734439
c099,4,2,9,67297,63315,65964,65964,5400.012294447,5401.445590345
c099,4,2,10,50872,47922,50318,50318,6000.031290213001,6001.552958376
c099,4,2,11,37228,34944,36548,36548,6600.038621091001,6601.664736015
# search time: 6600.039s
# total time: 33022.804s
