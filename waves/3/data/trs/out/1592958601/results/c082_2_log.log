    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.39s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c082_2.json out/1592958601/results/c082_2_best.csv out/1592958601/results/c082_2_predictions.csv out/1592958601/results/c082_2_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([90, 90, 90, 90, 90]), o: IntList([90]) }
#   Datum { i: IntList([15]), o: IntList([]) }
#   Datum { i: IntList([91, 75, 3, 6, 8, 42, 11, 4, 1, 60]), o: IntList([3]) }
#   Datum { i: IntList([83, 58]), o: IntList([]) }
#   Datum { i: IntList([78, 8, 74, 9, 70, 78]), o: IntList([74]) }
#   Datum { i: IntList([96, 40]), o: IntList([]) }
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([10, 6, 2, 99, 0]), o: IntList([2]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([18, 79, 7, 5, 3, 7, 3, 5, 79]), o: IntList([7]) }
#   Datum { i: IntList([22]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c082,0,2,1,1054041,864634,1010881,1010881,600.00227843,601.828401126
c082,0,2,2,593760,560652,576214,576214,1200.0025776900002,1203.248308097
c082,0,2,3,625897,586588,606874,606874,1800.0030417810003,1804.206708727
c082,0,2,4,356004,326718,342161,342161,2400.003672951,2405.180198403
c082,0,2,5,386459,361604,375644,375644,3000.0062386510003,3005.776488822
c082,0,2,6,325499,304884,316223,316223,3600.0094797790002,3606.322283529
c082,0,2,7,218351,201470,211676,211676,4200.00991573,4207.116116384
c082,0,2,8,208866,195611,203203,203203,4800.023115394,4807.815458384
c082,0,2,9,176032,162825,171242,171242,5400.023983066,5408.431112055
c082,0,2,10,218539,202231,210834,210834,6000.02453726,6008.913225974
c082,0,2,11,192597,177530,185453,185453,6600.028766916001,6609.36976225
# search time: 6600.029s
# total time: 6609.853s
c082,1,2,1,974051,801012,934453,934453,600.000039899,600.203226464
c082,1,2,2,535226,505199,519279,519279,1200.000322322,1200.618787992
c082,1,2,3,569252,533288,552058,552058,1800.000682343,1800.997750786
c082,1,2,4,323396,296986,310939,310939,2400.000704373,2401.360645878
c082,1,2,5,354587,331781,344574,344574,3000.0020072410002,3001.646406043
c082,1,2,6,291734,272737,283308,283308,3600.004483311,3601.910251528
c082,1,2,7,227556,210434,221146,221146,4200.00873842,4202.261819957
c082,1,2,8,208382,195252,202784,202784,4800.010103952,4802.568926749
c082,1,2,9,166743,154007,161765,161765,5400.011322806,5402.923733896
c082,1,2,10,221163,204586,213314,213314,6000.012235852,6003.177982266
c082,1,2,11,193178,178086,186000,186000,6600.018539822,6603.427239819
# search time: 6600.019s
# total time: 13214.050s
c082,2,2,1,953239,778846,913424,913424,600.000094183,600.161792469
c082,2,2,2,536499,506022,520311,520311,1200.001909133,1200.428033443
c082,2,2,3,559948,524486,542989,542989,1800.002446907,1800.695039783
c082,2,2,4,320416,294120,307865,307865,2400.002503202,2400.941788573
c082,2,2,5,354718,332488,344822,344822,3000.017448365,3001.149273464
c082,2,2,6,292008,273173,283587,283587,3600.018913093,3601.345451914
c082,2,2,7,225856,208877,219637,219637,4200.028812963999,4201.602621641
c082,2,2,8,209951,196691,204224,204224,4800.044773301999,4801.855241509
c082,2,2,9,167825,154972,162662,162662,5400.045211403999,5402.063855673
c082,2,2,10,221004,204475,213169,213169,6000.046293989999,6002.260298763
c082,2,2,11,191240,177027,184470,184470,6600.046893331999,6602.467012729
# search time: 6600.047s
# total time: 19817.480s
c082,3,2,1,973856,798114,933643,933643,600.000134824,600.139662111
c082,3,2,2,547425,516157,530693,530693,1200.00023301,1200.353984897
c082,3,2,3,566228,530469,549133,549133,1800.000999194,1800.567701366
c082,3,2,4,337906,311165,325572,325572,2400.002045237,2400.781479777
c082,3,2,5,352735,330289,342756,342756,3000.003146068,3000.946577478
c082,3,2,6,289688,270632,281251,281251,3600.003548818,3601.113660846
c082,3,2,7,225839,208738,219514,219514,4200.004372288,4201.290226338
c082,3,2,8,211420,197700,205638,205638,4800.014453007,4801.495355527
c082,3,2,9,175497,162378,170617,170617,5400.015053672,5401.630186496
c082,3,2,10,221524,204882,213625,213625,6000.01549592,6001.8024676429995
c082,3,2,11,191710,176765,184612,184612,6600.016469113,6601.954698713
# search time: 6600.016s
# total time: 26419.919s
c082,4,2,1,1009114,890769,984212,984212,600.003551355,600.208085749
c082,4,2,2,539147,508816,523011,523011,1200.0038507630002,1200.400550564
c082,4,2,3,561586,526137,544104,544104,1800.004301247,1800.596621329
c082,4,2,4,338358,311683,326070,326070,2400.0054053020003,2400.771528217
c082,4,2,5,356283,333733,346305,346305,3000.010758229,3000.92024926
c082,4,2,6,289216,271090,281096,281096,3600.0108311330005,3601.047551051
c082,4,2,7,224769,207801,218533,218533,4200.011587784001,4201.175323171
c082,4,2,8,210579,197033,204854,204854,4800.012875196001,4801.325312958
c082,4,2,9,175627,162616,171018,171018,5400.016497509001,5401.46742413
c082,4,2,10,220297,203400,212367,212367,6000.016877694001,6001.592073673
c082,4,2,11,190020,174802,182957,182957,6600.018981186001,6601.721094105
# search time: 6600.019s
# total time: 33022.343s
