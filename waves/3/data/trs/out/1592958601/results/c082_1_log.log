    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Finished release [optimized] target(s) in 0.35s
     Running `/home/rule/library/list-routine-learning-rs/target/release/simulation big_simulation.toml 5 /home/rule/library/list-routines-model-comparison/waves/3/json/c082_1.json out/1592958601/results/c082_1_best.csv out/1592958601/results/c082_1_predictions.csv out/1592958601/results/c082_1_all.csv /dev/null`
# loaded parameters
# loaded lexicon
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   NAN/0: nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   +/0: nat → nat → nat
#   -/0: nat → nat → nat
#   >/0: nat → nat → bool
# loaded background
# loaded data
#   Datum { i: IntList([1, 1, 1, 1]), o: IntList([1]) }
#   Datum { i: IntList([22]), o: IntList([]) }
#   Datum { i: IntList([78, 8, 74, 9, 70, 78]), o: IntList([74]) }
#   Datum { i: IntList([18, 79, 7, 5, 3, 7, 3, 5, 79]), o: IntList([7]) }
#   Datum { i: IntList([96, 40]), o: IntList([]) }
#   Datum { i: IntList([83, 58]), o: IntList([]) }
#   Datum { i: IntList([91, 75, 3, 6, 8, 42, 11, 4, 1, 60]), o: IntList([3]) }
#   Datum { i: IntList([9, 9]), o: IntList([]) }
#   Datum { i: IntList([90, 90, 90, 90, 90]), o: IntList([90]) }
#   Datum { i: IntList([10, 6, 2, 99, 0]), o: IntList([2]) }
#   Datum { i: IntList([15]), o: IntList([]) }
# searching
problem,run,order,trial,steps,hypotheses,tree,dag,search_time,total_time
c082,0,1,1,985141,849945,956405,956405,600.000045947,602.206078293
c082,0,1,2,627827,593788,610698,610698,1200.000252478,1203.272438348
c082,0,1,3,719298,671447,697406,697406,1800.000320314,1804.054265066
c082,0,1,4,399517,365445,382308,382308,2400.002453381,2404.815447852
c082,0,1,5,305166,280542,293889,293889,3000.003237407,3005.422595992
c082,0,1,6,319324,297821,309467,309467,3600.004308892,3605.936103294
c082,0,1,7,319269,297179,309017,309017,4200.004369102,4206.384142714
c082,0,1,8,194079,177433,186890,186890,4800.005704715,4806.95932284
c082,0,1,9,249481,230562,240651,240651,5400.006477921001,5407.438555029
c082,0,1,10,209453,193411,201799,201799,6000.011591698,6007.881923413
c082,0,1,11,191777,176619,184487,184487,6600.015934062,6608.349448223
# search time: 6600.016s
# total time: 6608.821s
c082,1,1,1,996027,853904,965415,965415,600.000209608,600.241401076
c082,1,1,2,645124,610240,627851,627851,1200.001140894,1200.563662564
c082,1,1,3,752292,702310,729765,729765,1800.001482013,1800.90848353
c082,1,1,4,417250,381467,399277,399277,2400.0015466610002,2401.234749711
c082,1,1,5,318657,292548,306451,306451,3000.009431581,3001.519326835
c082,1,1,6,332018,309480,321754,321754,3600.016794299,3601.776388219
c082,1,1,7,316847,294637,306646,306646,4200.0170196340005,4202.012468219
c082,1,1,8,183530,167253,176110,176110,4800.017778589001,4802.341919033
c082,1,1,9,251023,232059,242135,242135,5400.018395647001,5402.590454466
c082,1,1,10,209828,193714,202052,202052,6000.020109608001,6002.801782588
c082,1,1,11,190681,175477,183408,183408,6600.082490613001,6603.099835642
# search time: 6600.082s
# total time: 13212.627s
c082,2,1,1,936964,794156,905723,905723,600.000173666,600.179548858
c082,2,1,2,636302,601519,618996,618996,1200.000362732,1200.411553986
c082,2,1,3,750840,701014,727955,727955,1800.014747135,1800.668361565
c082,2,1,4,419493,383582,401286,401286,2400.01682736,2400.897237941
c082,2,1,5,306883,281132,294649,294649,3000.0177963640003,3001.107340962
c082,2,1,6,333725,311280,323383,323383,3600.0179474450006,3601.306294839
c082,2,1,7,313590,291577,303545,303545,4200.034098633,4201.48895769
c082,2,1,8,194181,177653,187060,187060,4800.034186404,4801.639104892
c082,2,1,9,251324,232341,242329,242329,5400.039460758,5401.826396723
c082,2,1,10,205926,190127,198391,198391,6000.040229767,6001.975495312
c082,2,1,11,190264,175352,183141,183141,6600.041834112,6602.17896966
# search time: 6600.042s
# total time: 19815.792s
c082,3,1,1,953804,784866,915333,915333,600.000740264,600.141231408
c082,3,1,2,670088,632559,651301,651301,1200.0011312430001,1200.345165217
c082,3,1,3,741314,693136,718450,718450,1800.0016233200001,1800.567403201
c082,3,1,4,415323,379682,397512,397512,2400.0030707610003,2400.753709592
c082,3,1,5,316676,290468,304439,304439,3000.0041208320004,3000.90644981
c082,3,1,6,333123,310921,322949,322949,3600.0055942860004,3601.066809779
c082,3,1,7,318985,297120,308794,308794,4200.011300956,4201.228481061
c082,3,1,8,182685,166462,175312,175312,4800.01478149,4801.401396181
c082,3,1,9,249772,230812,240789,240789,5400.016087109,5401.543145563
c082,3,1,10,206417,190309,198910,198910,6000.021025542001,6001.684528503
c082,3,1,11,190992,176178,183909,183909,6600.025186878001,6601.820180573
# search time: 6600.025s
# total time: 26418.306s
c082,4,1,1,930120,759928,891369,891369,600.000131223,600.126860138
c082,4,1,2,628492,595382,612306,612306,1200.000933971,1200.30358978
c082,4,1,3,718912,672932,696277,696277,1800.013285282,1800.515214278
c082,4,1,4,411561,376557,393825,393825,2400.013755215,2400.679146137
c082,4,1,5,316275,290241,304101,304101,3000.0139517509997,3000.81400028
c082,4,1,6,334896,312553,324617,324617,3600.0139944499997,3600.945074211
c082,4,1,7,315528,294169,305599,305599,4200.014990735,4201.083231016
c082,4,1,8,195072,178655,187915,187915,4800.0218221489995,4801.246429326
c082,4,1,9,249638,230759,240870,240870,5400.022057644,5401.370095967
c082,4,1,10,209955,194280,202418,202418,6000.027885136999,6001.490610666
c082,4,1,11,190973,176321,183939,183939,6600.028293734,6601.601100372
# search time: 6600.028s
# total time: 33020.631s
